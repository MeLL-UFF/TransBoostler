Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 0.988
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22178529873587471;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.21449369619371916;  // std dev = 4.434, 83.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | | | else return 0.14895152751902035;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.07967535319475835;  // std dev = 4.155, 86.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=24 */
%   | | | else return 0.0850838057901023;  // std dev = 4.788, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1467740125482815;  // std dev = 3.191, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.16351155067857537;  // std dev = 4.999, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.096934158204856;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330963407631234;  // std dev = 6.069, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7257521463498325;  // std dev = 0.022, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.27457043467129477;  // std dev = 0.031, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09015768112679656;  // std dev = 3.170, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | | else return -0.0021913944977008863;  // std dev = 3.425, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.049951734450062235;  // std dev = 3.104, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.004238120282289505;  // std dev = 4.772, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038269870811541;  // std dev = 5.608, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038437951604840176;  // std dev = 5.547, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.658', 'seconds']
Parameter learned model CLL:-0.331856 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.97, 98, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.434, 51, 32], 'false,false,false,false': [4.04, 51, 24]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.155, 62, 24], 'false,false,false,false': [4.788, 81, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.191, 28, 16], 'false,false,false,false': [4.999, 67, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.092, 110, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.069, 108, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 24], 'true,false': [0.031, 50, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.17, 27, 16], 'false,false,false,false': [3.425, 44, 16]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.104, 45, 24], 'false,false,false,false': [4.772, 79, 32]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.608, 110, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.547, 108, 56]}]
{'': [nan, 0.23140495867768615], 'false': [nan, 0.23140495867768726], 'false,false': [nan, 0.23140495867768615], 'false,false,false': [nan, 0.23140495867768726]}
{'': [nan, 0.22880948565934947], 'false': [nan, 0.2288094856593486], 'false,false': [nan, 0.22880948565934947], 'false,false,false': [0.23689940484830804, 0.2175999999999991]}
{'': [nan, 0.20195786473610158], 'false': [nan, 0.20195786473610158], 'false,false': [nan, 0.2019578647361019], 'false,false,false': [0.2007876434559677, 0.20283583433083782]}
{'': [nan, 0.23300357630722363], 'false': [nan, 0.23300357630722363], 'false,false': [nan, 0.23300357630722163], 'false,false,false': [0.23140495867768618, 0.23357932007219465]}
{'': [nan, 0.22353573385250036], 'false': [nan, 0.22353573385250036], 'false,false': [nan, 0.22353573385250072], 'false,false,false': [nan, 0.22353573385250072]}
{'': [nan, 0.22458225328395343], 'false': [nan, 0.22458225328395343], 'false,false': [nan, 0.22458225328395295], 'false,false,false': [nan, 0.22458225328395318]}
{'': [0.21929949763060502, 0.21352881313705385], 'true': [2.081170303795214e-05, 1.9667059371286655e-05], 'false': [nan, 0.21352881313705385], 'false,false': [nan, 0.21352881313705385], 'false,false,false': [0.23363980530016187, 0.19555555555555534], 'true,true': [nan, 2.081170303795214e-05], 'true,true,false': [nan, 2.081170303795214e-05]}
{'': [nan, 0.18054609663230445], 'false': [nan, 0.18054609663230445], 'false,false': [nan, 0.1805460966323046], 'false,false,false': [0.13962002115680597, 0.2051855651365522]}
{'': [nan, 0.18947442154162114], 'false': [nan, 0.1894744215416209], 'false,false': [nan, 0.1894744215416209], 'false,false,false': [nan, 0.1894744215416209]}
{'': [nan, 0.18763006934355445], 'false': [nan, 0.18763006934355445], 'false,false': [nan, 0.18763006934355447], 'false,false,false': [nan, 0.18763006934355447]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 24.691
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( phenotype(A, D), enzyme(C, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13446472457319636;  // std dev = 3.898, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11621345122854454;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7281524291441371;  // std dev = 0.117, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( enzyme(F, G), interaction(F, F) )
%   | | | then return 0.14500280765269316;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.13678398560999022;  // std dev = 0.106, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.1743197748950524;  // std dev = 2.988, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.1683373263055524;  // std dev = 0.117, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8243688225787297;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17880392062455722;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.06563800755398957;  // std dev = 0.956, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.24167565351943204;  // std dev = 3.290, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.35322227066985923;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.5697571137579219;  // std dev = 0.157, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.7304228930535656;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13921944405988362;  // std dev = 0.208, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.6913496324829534;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05960857607931533;  // std dev = 2.376, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then return 0.4779410960477651;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.42670406758215984;  // std dev = 0.929, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14891333126405137;  // std dev = 3.758, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.36368671490951077;  // std dev = 0.263, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.020635882381815;  // std dev = 0.340, 90.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=15 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( phenotype(A, H), interaction(I, F) )
%   | | then if ( interaction(J, I), enzyme(I, K) )
%   | | | then return 0.3057091358989888;  // std dev = 1.176, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.03809542493918454;  // std dev = 1.043, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.42375440968122774;  // std dev = 1.541, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.11492162875579211;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.42256633809474053;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(N, A), interaction(A, P) )
%   | | | then return -0.06175934447210742;  // std dev = 1.134, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.09682749432115216;  // std dev = 2.449, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), phenotype(F, D) )
%   | | then return 0.42269759611405955;  // std dev = 0.191, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.658003768466386;  // std dev = 0.195, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.16619696284753158;  // std dev = 0.192, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.276323743244325;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.3498930274463355;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return -0.11327806384610926;  // std dev = 1.031, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.08669350599199457;  // std dev = 1.703, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.12499044993874517;  // std dev = 0.932, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.07209393033690538;  // std dev = 4.068, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.29792869474360734;  // std dev = 0.279, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( enzyme(A, F), interaction(C, C) )
%   | | then return 0.15080204368012762;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return -0.05406572195348421;  // std dev = 0.289, 68.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=11 */
%   else if ( complex(A, G), phenotype(A, H) )
%   | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.6508781028619871;  // std dev = 0.293, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1939398033113703;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.09554231750677301;  // std dev = 2.119, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.1547353026140711;  // std dev = 0.119, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, M) )
%   | | | then return 0.14746369806196052;  // std dev = 2.333, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.35992721588085214;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.23795531267007933;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.3887708976194413;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6066312610210585;  // std dev = 0.308, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.15806287432595947;  // std dev = 0.061, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4344623395290494;  // std dev = 0.419, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.48289301637692855;  // std dev = 0.342, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18738168469233177;  // std dev = 0.251, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.06421412325155586;  // std dev = 2.763, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.18312765508321366;  // std dev = 1.929, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), complex(F, G) )
%   | | | then return 0.19415382439999776;  // std dev = 1.000, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.5462225914768548;  // std dev = 0.935, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.18757483091848565;  // std dev = 0.476, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.3034422117745673;  // std dev = 1.069, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( complex(J, K), interaction(J, I) )
%   | | | then return -0.08846314506504703;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.15352770328322304;  // std dev = 0.173, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.16484696286588638;  // std dev = 0.174, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.2597618123902289;  // std dev = 0.430, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else return 0.267267840849546;  // std dev = 0.993, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1438297699064564;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2508721736955694;  // std dev = 0.226, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4315535862888568;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1307645500242688;  // std dev = 0.043, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, I), interaction(J, A) )
%   | | | then return 0.37899462299356623;  // std dev = 1.177, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.06859243741747112;  // std dev = 1.488, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.11056658974507183;  // std dev = 0.190, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.22575806462628772;  // std dev = 0.296, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return 0.3752696656001462;  // std dev = 0.657, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( interaction(A, D), location(D, C) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.12822394805342724;  // std dev = 0.140, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( interaction(D, F), interaction(G, A) )
%   | | | then return -0.0677763479272439;  // std dev = 0.891, 42.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=5 */
%   | | | else return 0.09586175489700219;  // std dev = 1.293, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( location(H, C), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.31912018298467215;  // std dev = 1.086, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.18191700583032086;  // std dev = 1.264, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else return -0.1661118801955973;  // std dev = 0.067, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then return -0.35750229818644536;  // std dev = 0.505, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, L) )
%   | | then return -0.1633194813074839;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.02010679840698998;  // std dev = 0.952, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.913', 'seconds']
Refined model CLL: -0.173523


******************************************
Best model found
******************************************
Results 

CLL : -0.176437 

AUC ROC : 0.98702 

AUC PR : 0.458419 

Precision : 0.301802 

Recall : 0.770115 

F1 : 0.433657 

Total Learning Time : 24.691 

Total Inference Time : 18.49582076072693 

Total revision time: 45.69556842231751
Best scored revision CLL: -0.173523


Results 

CLL : -0.176437 

AUC ROC : 0.98702 

AUC PR : 0.458419 

Precision : 0.301802 

Recall : 0.770115 

F1 : 0.433657 

Total Learning Time : 56.41635308647156 

Total Inference Time : 18.49582076072693 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.339
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19448527143584982;  // std dev = 8.622, 333.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18572891035946595;  // std dev = 6.535, 187.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=66 */
%   | | | else return 0.15446605556719772;  // std dev = 5.586, 143.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18003332372795858;  // std dev = 5.597, 134.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=50 */
%   | | | else return 0.10465016062141205;  // std dev = 6.601, 209.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=62 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15595571202071645;  // std dev = 4.657, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
%   | | | else return 0.09166020998470008;  // std dev = 7.324, 255.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13188684395961978;  // std dev = 8.420, 306.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=112 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.059874890788429745;  // std dev = 8.735, 351.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=112 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7151006632751283;  // std dev = 0.063, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return -0.28373221750544475;  // std dev = 0.086, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.041169568524625805;  // std dev = 4.645, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.010500339522803753;  // std dev = 4.766, 116.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04394107165862714;  // std dev = 4.449, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
%   | | | else return 0.04371045184571307;  // std dev = 6.548, 201.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=62 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03270665600684211;  // std dev = 7.926, 346.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=112 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06121293338113283;  // std dev = 7.690, 309.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.602', 'seconds']
Parameter learned model CLL:-0.330144 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.622, 221, 112]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.535, 121, 66], 'false,false,false,false': [5.586, 97, 46]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.597, 84, 50], 'false,false,false,false': [6.601, 147, 62]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.657, 57, 35], 'false,false,false,false': [7.324, 178, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.42, 194, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.735, 239, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.063, 0, 50], 'true,false': [0.086, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.645, 71, 31], 'false,false,false,false': [4.766, 85, 31]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.449, 93, 50], 'false,false,false,false': [6.548, 139, 62]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.926, 234, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.69, 197, 112]}]
{'': [nan, 0.22321420519618967], 'false': [nan, 0.2232142051961875], 'false,false': [nan, 0.22321420519618967], 'false,false,false': [nan, 0.2232142051961875]}
{'': [nan, 0.22420569329660459], 'false': [nan, 0.22420569329660017], 'false,false': [nan, 0.22420569329660459], 'false,false,false': [0.22837370242214303, 0.21820137904053793]}
{'': [nan, 0.21973745289290186], 'false': [nan, 0.21973745289290186], 'false,false': [nan, 0.21973745289290236], 'false,false,false': [0.23380755530749817, 0.2084963974889117]}
{'': [nan, 0.21789676546170744], 'false': [nan, 0.21789676546170744], 'false,false': [nan, 0.21789676546170866], 'false,false,false': [0.23570415879016968, 0.21037611461316846]}
{'': [nan, 0.23169020879182423], 'false': [nan, 0.23169020879182423], 'false,false': [nan, 0.23169020879182334], 'false,false,false': [nan, 0.23169020879182334]}
{'': [nan, 0.2173871113423316], 'false': [nan, 0.2173871113423316], 'false,false': [nan, 0.21738711134233155], 'false,false,false': [nan, 0.2173871113423312]}
{'': [0.23202342451802924, 0.20341743110969418], 'true': [7.824200150601257e-05, 8.589109465132239e-05], 'false': [nan, 0.20341743110969418], 'false,false': [nan, 0.20341743110969418], 'false,false,false': [0.21155324875048093, 0.19582342449464907], 'true,true': [nan, 7.824200150601257e-05], 'true,true,false': [nan, 7.824200150601257e-05]}
{'': [nan, 0.18219056711590229], 'false': [nan, 0.18219056711590229], 'false,false': [nan, 0.1821905671159029], 'false,false,false': [0.13842199407068007, 0.21332938055640138]}
{'': [nan, 0.18157196484503457], 'false': [nan, 0.18157196484503432], 'false,false': [nan, 0.18157196484503432], 'false,false,false': [nan, 0.18157196484503432]}
{'': [nan, 0.19139272011518166], 'false': [nan, 0.19139272011518166], 'false,false': [nan, 0.19139272011518169], 'false,false,false': [nan, 0.19139272011518169]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 27.593
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), complex(E, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(I, H), interaction(J, I) )
%   | | | then return -0.04349040916278279;  // std dev = 2.326, 61.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=6 */
%   | | | else return 0.2010060779566552;  // std dev = 2.808, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.14582016797622432;  // std dev = 3.868, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.2418698653320705;  // std dev = 4.510, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7214566851286945;  // std dev = 0.047, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(A, A) )
%   | then return -0.13663901075509122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, D), interaction(E, A) )
%   | | then if ( phenotype(A, F), enzyme(E, G) )
%   | | | then return 0.27799661899943773;  // std dev = 2.281, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.04660254924441003;  // std dev = 3.194, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.8305416394034933;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1674328890771222;  // std dev = 6.217, 181.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=61 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4877766767923247;  // std dev = 0.970, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.7304411028338035;  // std dev = 1.670, 56.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=53 */
%   | | else return -0.1642612736802508;  // std dev = 0.182, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else return -0.17243341897306314;  // std dev = 0.242, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5548766445036275;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return -0.14851889300770693;  // std dev = 0.096, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.013863461065027567;  // std dev = 1.284, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.06722007519471968;  // std dev = 1.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.11137122756556288;  // std dev = 4.515, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(A, D) )
%   | then return 0.26996531007671115;  // std dev = 0.367, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | else if ( interaction(E, A), location(E, F) )
%   | | then return -0.06041937408241144;  // std dev = 0.295, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( enzyme(C, G) )
%   | | | then return 0.4255012317163651;  // std dev = 0.735, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09436024491928971;  // std dev = 1.508, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   else if ( enzyme(A, H), location(A, I) )
%   | then return 0.051362873277752435;  // std dev = 0.352, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6316734289312491;  // std dev = 0.484, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.18013201584543032;  // std dev = 0.369, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.07771403331741487;  // std dev = 2.251, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.14382599269203475;  // std dev = 4.024, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.37861500882177673;  // std dev = 0.205, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.12640640957431828;  // std dev = 0.392, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.5759641255625609;  // std dev = 0.261, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(H, A), complex(H, F) )
%   | | | then return -0.10904015022106733;  // std dev = 1.042, 44.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
%   | | | else return 0.06279954046104987;  // std dev = 2.930, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(A, K), location(J, L) )
%   | | | then return 0.16078365865676625;  // std dev = 4.494, 113.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=47 */
%   | | | else return -0.208849677982144;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return -0.03884781343017491;  // std dev = 1.810, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.15761081915359798;  // std dev = 1.709, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3462626351420657;  // std dev = 0.081, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.4821701908368002;  // std dev = 0.542, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.12205781419446056;  // std dev = 0.447, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.16660182754048583;  // std dev = 0.445, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.016446685373220606;  // std dev = 2.660, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( complex(A, G), enzyme(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5088887532915858;  // std dev = 0.239, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1812389425734694;  // std dev = 0.173, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return -0.024037907929422207;  // std dev = 2.050, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.06924226955494836;  // std dev = 4.866, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.38834617072173544;  // std dev = 0.140, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | else return -0.1598604029033911;  // std dev = 0.077, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.270390405496831;  // std dev = 0.254, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.09171024380535918;  // std dev = 1.714, 48.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   | | | else return 0.05406409785925765;  // std dev = 4.305, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5125515922094009;  // std dev = 0.383, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.31821247386308876;  // std dev = 0.362, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.17879866936108627;  // std dev = 1.063, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.35986547814323033;  // std dev = 1.279, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1743697292256709;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.12317589310669604;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2892138381246368;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then return -0.035001921797816436;  // std dev = 0.437, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22918260772134025;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( enzyme(A, J), interaction(H, H) )
%   | | | then return 0.24687644448934792;  // std dev = 1.013, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.031037281054593423;  // std dev = 2.367, 94.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=17 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return -0.01404811319988172;  // std dev = 1.766, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.04388406797932907;  // std dev = 4.812, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), recursion_proteinclass(C, B) )
%   | then return 0.24005393018678628;  // std dev = 0.251, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(C, F) )
%   | | then return -0.06500049601097102;  // std dev = 0.245, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | else return -0.002105500378569146;  // std dev = 0.332, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   else if ( location(A, G), interaction(A, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.2896745905061642;  // std dev = 0.158, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return 0.23246558701044823;  // std dev = 0.530, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.03584228813568912;  // std dev = 2.669, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( interaction(M, K), location(M, L) )
%   | | | then return 0.16591817535316353;  // std dev = 2.070, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.027535674303416285;  // std dev = 1.845, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else return 0.4925254303429279;  // std dev = 0.417, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then return -0.018191335100701412;  // std dev = 0.277, 181.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=55 */
%   else if ( interaction(A, E) )
%   | then if ( location(A, F), location(E, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.1934089800222195;  // std dev = 0.272, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.016896825382842602;  // std dev = 3.084, 100.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | | else if ( phenotype(E, I) )
%   | | | then return -0.21734798747066053;  // std dev = 0.867, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.0434243082963751;  // std dev = 0.744, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.665687457376275;  // std dev = 0.365, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.225483788553278;  // std dev = 0.284, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.2749845171515554;  // std dev = 1.513, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return -9.49560543506536E-4;  // std dev = 1.469, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.046', 'seconds']
Refined model CLL: -0.225558


******************************************
Best model found
******************************************
Results 

CLL : -0.230539 

AUC ROC : 0.928689 

AUC PR : 0.30382 

Precision : 0.494118 

Recall : 0.482759 

F1 : 0.488372 

Total Learning Time : 27.593 

Total Inference Time : 29.841636419296265 

Total revision time: 60.99518211555481
Best scored revision CLL: -0.225558


Results 

CLL : -0.230539 

AUC ROC : 0.928689 

AUC PR : 0.30382 

Precision : 0.494118 

Recall : 0.482759 

F1 : 0.488372 

Total Learning Time : 71.71596677970886 

Total Inference Time : 29.841636419296265 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.517
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19750636481838674;  // std dev = 10.566, 498.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=169 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20686860858184458;  // std dev = 7.668, 251.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=94 */
%   | | | else return 0.19468545712967947;  // std dev = 6.916, 207.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=75 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10219406443380614;  // std dev = 6.949, 230.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=69 */
%   | | | else return 0.11792701114907927;  // std dev = 8.274, 317.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=100 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15682037220984985;  // std dev = 5.490, 129.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
%   | | | else return 0.08868406873979982;  // std dev = 9.171, 397.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=121 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09457687849688569;  // std dev = 10.647, 513.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=169 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08900159411886023;  // std dev = 10.553, 495.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=169 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7265456043418894;  // std dev = 0.061, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return -0.27302887969023465;  // std dev = 0.093, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.051570359035543176;  // std dev = 5.595, 144.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=46 */
%   | | | else return 0.0521555359309483;  // std dev = 6.070, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03947515943529866;  // std dev = 5.321, 207.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=69 */
%   | | | else return 0.053235513851786764;  // std dev = 8.184, 303.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04098502121029944;  // std dev = 9.730, 505.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=169 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045236146725925575;  // std dev = 9.623, 484.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.524', 'seconds']
Parameter learned model CLL:-0.336202 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.566, 329, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.668, 157, 94], 'false,false,false,false': [6.916, 132, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.949, 161, 69], 'false,false,false,false': [8.274, 217, 100]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.49, 81, 48], 'false,false,false,false': [9.171, 276, 121]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.647, 344, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.553, 326, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.061, 0, 69], 'true,false': [0.093, 157, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.595, 98, 46], 'false,false,false,false': [6.07, 116, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.321, 138, 69], 'false,false,false,false': [8.184, 203, 100]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.73, 336, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.623, 315, 169]}]
{'': [nan, 0.22419396461347715], 'false': [nan, 0.2241939646134751], 'false,false': [nan, 0.22419396461347715], 'false,false,false': [nan, 0.2241939646134751]}
{'': [nan, 0.2328378558761235], 'false': [nan, 0.2328378558761248], 'false,false': [nan, 0.2328378558761235], 'false,false,false': [0.23425024999602698, 0.23104389834068556]}
{'': [nan, 0.21349895290445275], 'false': [nan, 0.21349895290445275], 'false,false': [nan, 0.21349895290445434], 'false,false,false': [0.2099303310998375, 0.21598409536111624]}
{'': [nan, 0.2180416772002444], 'false': [nan, 0.2180416772002444], 'false,false': [nan, 0.21804167720024453], 'false,false,false': [0.23363980530016307, 0.21183469423452797]}
{'': [nan, 0.22095748842451096], 'false': [nan, 0.22095748842451096], 'false,false': [nan, 0.22095748842450955], 'false,false,false': [nan, 0.22095748842450955]}
{'': [nan, 0.22499988825763848], 'false': [nan, 0.22499988825763848], 'false,false': [nan, 0.22499988825763748], 'false,false,false': [nan, 0.2249998882576388]}
{'': [0.211970071028366, 0.21704662762959925], 'false': [nan, 0.21704662762959925], 'false,false': [nan, 0.21704662762959925], 'false,false,false': [0.21739969135802586, 0.21674740484429023], 'true': [5.3125812235560694e-05, 5.558230720632042e-05], 'true,true': [nan, 5.3125812235560694e-05], 'true,true,false': [nan, 5.3125812235560694e-05]}
{'': [nan, 0.18690419133844094], 'false': [nan, 0.18690419133844094], 'false,false': [nan, 0.18690419133844005], 'false,false,false': [0.136773251474052, 0.22107520839735464]}
{'': [nan, 0.18746401179481187], 'false': [nan, 0.18746401179481342], 'false,false': [nan, 0.18746401179481342], 'false,false,false': [nan, 0.18746401179481342]}
{'': [nan, 0.19133699150075428], 'false': [nan, 0.19133699150075428], 'false,false': [nan, 0.19133699150075462], 'false,false,false': [nan, 0.19133699150075462]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.171
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( location(A, G), enzyme(A, H) )
%   | | | then return 0.08936280793188119;  // std dev = 5.545, 173.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=40 */
%   | | | else return 0.187819264769842;  // std dev = 7.767, 273.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=90 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then if ( phenotype(A, E), enzyme(A, D) )
%   | | then return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.02089010718632056;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( complex(A, F), complex(C, F) )
%   | | then return 0.7194734122109542;  // std dev = 7.30e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return 0.6194734122109543;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(I, G) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.2096699258674233;  // std dev = 4.050, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.1229868028619014;  // std dev = 8.616, 365.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), complex(C, D) )
%   | | then return 0.5589510276107812;  // std dev = 0.038, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.08179862472205712;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5787664008608805;  // std dev = 0.161, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360635;  // std dev = 1.67e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( interaction(A, I), interaction(G, I) )
%   | | | then return 0.038855004104708143;  // std dev = 3.584, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.19355017713131317;  // std dev = 5.728, 144.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=55 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.20636549209296096;  // std dev = 1.739, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.06040549917211208;  // std dev = 6.713, 247.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=60 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( enzyme(A, E), location(C, F) )
%   | then if ( interaction(A, G), interaction(G, C) )
%   | | then return -0.02125149600970124;  // std dev = 0.292, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else return 0.10841176056893342;  // std dev = 0.457, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | then return 0.5540102740202825;  // std dev = 0.317, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else if ( interaction(I, C), phenotype(I, D) )
%   | | | then return -0.02220121945944436;  // std dev = 3.035, 68.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | | else return 0.20590029743602445;  // std dev = 3.743, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.32691847759170267;  // std dev = 0.331, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then return 0.027974017507589363;  // std dev = 0.410, 137.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=30 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.16300622604424236;  // std dev = 3.204, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.09902016173770108;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.35365346944674564;  // std dev = 0.074, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09959432562123921;  // std dev = 8.19e-05, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | | then return 0.6167036437946496;  // std dev = 3.259, 95.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=83 */
%   | | | else return -0.22185763119919116;  // std dev = 0.325, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.29609976789462383;  // std dev = 0.221, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( phenotype(G, I) )
%   | | | then return 0.04828805485700744;  // std dev = 2.880, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return -0.12053120566864886;  // std dev = 0.961, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.14739300765080093;  // std dev = 2.943, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.04284984221544175;  // std dev = 4.576, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.40188080139751414;  // std dev = 0.265, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.1505843906442107;  // std dev = 0.099, 53.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=2 */
%   | | else if ( location(A, G), location(C, G) )
%   | | | then return 0.0042770047847042175;  // std dev = 4.978, 167.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=41 */
%   | | | else return 0.13289825708014322;  // std dev = 2.719, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3053797149734202;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), complex(K, L) )
%   | | | then return 0.3139526604577133;  // std dev = 2.087, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.03686027715119775;  // std dev = 1.903, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.01856348385776438;  // std dev = 3.255, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | | else return 0.07191270045599112;  // std dev = 4.153, 98.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.47648560318420174;  // std dev = 0.275, 71.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=69 */
%   | else return -0.19287526104180897;  // std dev = 0.066, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.3738799021238415;  // std dev = 0.337, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( interaction(A, H), interaction(H, F) )
%   | | | then return -0.13681650205169177;  // std dev = 0.280, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.042441571682680604;  // std dev = 5.852, 209.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=63 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return -0.24074818924245867;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.051103778601709025;  // std dev = 1.496, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.10462975845276845;  // std dev = 1.232, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.22433825993612977;  // std dev = 2.324, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( complex(C, D), location(A, E) )
%   | then return 0.03956892588702316;  // std dev = 0.322, 184.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=69 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.26944224154088553;  // std dev = 0.637, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.04455914830200329;  // std dev = 0.321, 95.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=20 */
%   else if ( phenotype(A, G), location(A, H) )
%   | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.4725609787998726;  // std dev = 0.278, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | else return -0.20550662640075915;  // std dev = 0.274, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.7099795834187401;  // std dev = 0.510, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.23948785651540652;  // std dev = 0.152, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.1969536656364911;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02601326846353522;  // std dev = 2.293, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, D), enzyme(A, E) )
%   | then return 0.13113472852797306;  // std dev = 0.350, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else return -0.00659106718890304;  // std dev = 0.260, 163.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=50 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.19286760564481392;  // std dev = 0.157, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(F, I), interaction(A, J) )
%   | | | then return -0.15306119768705378;  // std dev = 0.098, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.02487726304820626;  // std dev = 2.793, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(M, K), enzyme(M, N) )
%   | | | then return 0.17629925860753476;  // std dev = 2.537, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.04541392827381938;  // std dev = 2.698, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else if ( location(A, P) )
%   | | | then return 0.04443837068839456;  // std dev = 3.780, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | | else return 0.21748123856964158;  // std dev = 1.437, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.16696199072659015;  // std dev = 0.305, 49.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=43 */
%   | else if ( interaction(A, C) )
%   | | then return -0.12315378327032932;  // std dev = 0.057, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return 0.006514013258597407;  // std dev = 0.346, 325.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=101 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.41474819911870314;  // std dev = 0.317, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return -0.18424674925176146;  // std dev = 0.097, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.568554784937762;  // std dev = 0.484, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19460620057189001;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.0906588124804879;  // std dev = 1.153, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.38144253282070906;  // std dev = 1.131, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.977', 'seconds']
Refined model CLL: -0.232083


******************************************
Best model found
******************************************
Results 

CLL : -0.229712 

AUC ROC : 0.951768 

AUC PR : 0.239231 

Precision : 0.246988 

Recall : 0.471264 

F1 : 0.324111 

Total Learning Time : 12.171 

Total Inference Time : 6.122475862503052 

Total revision time: 22.39204291152954
Best scored revision CLL: -0.232083


Results 

CLL : -0.229712 

AUC ROC : 0.951768 

AUC PR : 0.239231 

Precision : 0.246988 

Recall : 0.471264 

F1 : 0.324111 

Total Learning Time : 33.112827575683596 

Total Inference Time : 6.122475862503052 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.714
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1909891717858997;  // std dev = 12.252, 676.000 (wgt'ed) examples reached here.  /* #neg=451 #pos=225 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1703213613962112;  // std dev = 8.956, 359.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=121 */
%   | | | else return 0.1634327377944957;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16796786720669496;  // std dev = 7.677, 256.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=92 */
%   | | | else return 0.1654340598017057;  // std dev = 9.251, 373.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=133 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11957592626072489;  // std dev = 6.455, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
%   | | | else return 0.10149039048016271;  // std dev = 10.500, 507.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=162 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0972940071136945;  // std dev = 12.238, 673.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=225 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056547999334649914;  // std dev = 12.445, 722.000 (wgt'ed) examples reached here.  /* #neg=497 #pos=225 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7212996246498783;  // std dev = 0.996, 93.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=92 */
%   | else return -0.26771024028520796;  // std dev = 0.033, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06790116294660699;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
%   | | | else return 0.09305164426113377;  // std dev = 6.944, 210.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=75 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05643424299509332;  // std dev = 6.109, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
%   | | | else return 0.04043395753021281;  // std dev = 9.499, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030784538783524742;  // std dev = 11.335, 694.000 (wgt'ed) examples reached here.  /* #neg=469 #pos=225 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04353592819476641;  // std dev = 11.144, 653.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=225 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.625', 'seconds']
Parameter learned model CLL:-0.33374 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.252, 451, 225]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.956, 238, 121], 'false,false,false,false': [8.346, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.677, 164, 92], 'false,false,false,false': [9.251, 240, 133]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.455, 123, 63], 'false,false,false,false': [10.5, 345, 162]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.238, 448, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.445, 497, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.996, 1, 92], 'true,false': [0.033, 197, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.218, 116, 58], 'false,false,false,false': [6.944, 135, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.109, 172, 92], 'false,false,false,false': [9.499, 281, 133]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.335, 469, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.144, 428, 225]}]
{'': [nan, 0.2220576135289404], 'false': [nan, 0.22205761352894024], 'false,false': [nan, 0.2220576135289404], 'false,false,false': [nan, 0.22205761352894024]}
{'': [nan, 0.22238683091336303], 'false': [nan, 0.22238683091336303], 'false,false': [nan, 0.22238683091336303], 'false,false,false': [0.2234464350835244, 0.22115394305870237]}
{'': [nan, 0.22974643625199853], 'false': [nan, 0.22974643625199853], 'false,false': [nan, 0.22974643625200278], 'false,false,false': [0.23022095507932056, 0.22941814814928824]}
{'': [nan, 0.21925935733087912], 'false': [nan, 0.21925935733087912], 'false,false': [nan, 0.21925935733087695], 'false,false,false': [0.22398543184182967, 0.21743774170067445]}
{'': [nan, 0.22252933708387024], 'false': [nan, 0.22252933708387024], 'false,false': [nan, 0.22252933708386924], 'false,false,false': [nan, 0.22252933708386924]}
{'': [nan, 0.21450601453016943], 'false': [nan, 0.21450601453016943], 'false,false': [nan, 0.21450601453016463], 'false,false,false': [nan, 0.21450601453017074]}
{'': [0.21651285380788546, 0.2264092269631762], 'false': [nan, 0.2264092269631762], 'false,false': [nan, 0.2264092269631762], 'false,false,false': [0.22222222222222032, 0.22959183673469602], 'true': [0.010674973270369037, 5.507414448407825e-06], 'true,true': [nan, 0.010674973270369037], 'true,true,false': [nan, 0.010674973270369037]}
{'': [nan, 0.18819478954717758], 'false': [nan, 0.18819478954717758], 'false,false': [nan, 0.18819478954717783], 'false,false,false': [0.14135254470037686, 0.21796552157803106]}
{'': [nan, 0.18513223584084149], 'false': [nan, 0.18513223584084254], 'false,false': [nan, 0.18513223584084254], 'false,false,false': [nan, 0.18513223584084254]}
{'': [nan, 0.19019365830713525], 'false': [nan, 0.19019365830713525], 'false,false': [nan, 0.1901936583071351], 'false,false,false': [nan, 0.1901936583071351]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 60.37
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.8119950889456631;  // std dev = 0.210, 195.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=186 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return 0.471785298735875;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
%   | else return -0.1418510649004875;  // std dev = 2.51e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( interaction(I, A), complex(I, J) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, G) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.3025933795439567;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.7321767851102821;  // std dev = 0.086, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return 0.4786936748664757;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then return 0.4645980694814659;  // std dev = 1.024, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.741947567132155;  // std dev = 0.095, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( phenotype(G, I), location(H, J) )
%   | | | then return 0.05337104322423136;  // std dev = 5.133, 215.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=45 */
%   | | | else return -0.07117070995233427;  // std dev = 1.434, 46.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=3 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.08248961914201174;  // std dev = 3.036, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | | else return 0.15023579832190836;  // std dev = 7.483, 326.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=106 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5703950485703413;  // std dev = 0.113, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return -0.03417924440426223;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.29915408892907114;  // std dev = 0.648, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.580256255985926;  // std dev = 0.090, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.13243177259641184;  // std dev = 0.156, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I), interaction(A, J) )
%   | | | then return -0.06887633165970915;  // std dev = 1.183, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.09487536492396634;  // std dev = 4.720, 147.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=42 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.09828993748527032;  // std dev = 5.406, 202.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=58 */
%   | | | else return 0.13838508949401193;  // std dev = 6.589, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, C), phenotype(C, E) )
%   | then if ( enzyme(C, F), phenotype(A, E) )
%   | | then return 0.02175991744466274;  // std dev = 0.340, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.2695255990367793;  // std dev = 0.415, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | else return 0.024004899582936154;  // std dev = 0.347, 108.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=25 */
%   else if ( phenotype(A, G), location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, G) )
%   | | | then return 0.5631146124811871;  // std dev = 2.815, 114.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=103 */
%   | | | else return -0.1769872652119527;  // std dev = 0.394, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.14760793431124428;  // std dev = 0.126, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.402784177845352;  // std dev = 0.296, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.43338559193228055;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05570649747935676;  // std dev = 5.981, 251.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=65 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then return 0.03545305877954883;  // std dev = 0.308, 180.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=52 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.4512216645741072;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(C, G), phenotype(A, H) )
%   | | | then return 0.1528804017250546;  // std dev = 1.823, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.06643353758056865;  // std dev = 2.268, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   else if ( phenotype(A, I), location(A, J) )
%   | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | then return 0.43889865222353497;  // std dev = 0.302, 87.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=74 */
%   | | else return -0.1478575968944636;  // std dev = 0.053, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.4358606558031339;  // std dev = 0.087, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.06563077094854602;  // std dev = 3.082, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.1759057703453307;  // std dev = 4.225, 101.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then return 0.44192340240934613;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, F), enzyme(A, G) )
%   | | then return 0.027829385461899024;  // std dev = 0.525, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3055628373688569;  // std dev = 0.135, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(I, H), enzyme(I, J) )
%   | | then return 0.10286883284699473;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.30209280669382566;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( interaction(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.48988898645603784;  // std dev = 1.229, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return -0.04683550686373391;  // std dev = 3.642, 192.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=25 */
%   | | else if ( complex(A, N), phenotype(A, P) )
%   | | | then return 0.10140105091549569;  // std dev = 2.703, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.042313314531917015;  // std dev = 6.396, 332.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=98 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.45373675935136587;  // std dev = 0.200, 93.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=92 */
%   | else return -0.16006125830200602;  // std dev = 0.058, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, F), phenotype(G, E) )
%   | | | then return 0.34419404489853467;  // std dev = 0.301, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.21178505979590687;  // std dev = 0.957, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.0020021678970844345;  // std dev = 0.254, 172.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=44 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3184851870630627;  // std dev = 3.598, 95.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=65 */
%   | | | else return -0.17580385501703957;  // std dev = 0.281, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.03480228631871441;  // std dev = 0.844, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3198039211651049;  // std dev = 1.533, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4486771547761763;  // std dev = 0.143, 75.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=74 */
%   | else return -0.16456882655846594;  // std dev = 0.078, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), phenotype(A, G) )
%   | | then if ( interaction(A, F), phenotype(E, G) )
%   | | | then return 0.17908234702544043;  // std dev = 0.115, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.42595735076905017;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.2067868857217185;  // std dev = 0.211, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B), interaction(I, J) )
%   | | | then return 0.13199138256347992;  // std dev = 1.601, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return -0.058710762211789426;  // std dev = 3.395, 192.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=28 */
%   | | else if ( location(A, K) )
%   | | | then return 0.053687706117872866;  // std dev = 4.138, 194.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=68 */
%   | | | else return -0.06402412360001922;  // std dev = 1.785, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14792009688539864;  // std dev = 0.150, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09693870203262513;  // std dev = 0.130, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return -0.0518368594883542;  // std dev = 1.223, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( enzyme(A, E), complex(D, F) )
%   | | | then return -0.07866752932506874;  // std dev = 0.527, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.004446761498214397;  // std dev = 1.450, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.149900511827094;  // std dev = 2.809, 92.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=53 */
%   | | | else return -0.13068619652986366;  // std dev = 0.210, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.04911770805854122;  // std dev = 4.369, 217.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=75 */
%   | | | else return 0.006289930663193682;  // std dev = 3.496, 119.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.11626868377776371;  // std dev = 0.082, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else return 0.18390990702011087;  // std dev = 0.155, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09772675070213509;  // std dev = 0.145, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(E, F), enzyme(A, G) )
%   | | | then return -0.07730478120061561;  // std dev = 0.711, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return -0.007980893884778198;  // std dev = 1.762, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1712758136418047;  // std dev = 4.982, 238.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=150 */
%   | | | else return -0.13099412174019395;  // std dev = 0.445, 250.000 (wgt'ed) examples reached here.  /* #neg=250 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.05595940313724531;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.3227676146133458;  // std dev = 1.089, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.488', 'seconds']
Refined model CLL: -0.177771


******************************************
Best model found
******************************************
Results 

CLL : -0.171551 

AUC ROC : 0.994762 

AUC PR : 0.534838 

Precision : 0.350649 

Recall : 0.931034 

F1 : 0.509434 

Total Learning Time : 60.37 

Total Inference Time : 65.6686110496521 

Total revision time: 130.99649322891236
Best scored revision CLL: -0.177771


Results 

CLL : -0.171551 

AUC ROC : 0.994762 

AUC PR : 0.534838 

Precision : 0.350649 

Recall : 0.931034 

F1 : 0.509434 

Total Learning Time : 141.7172778930664 

Total Inference Time : 65.6686110496521 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.971
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17823974100189183;  // std dev = 13.847, 881.000 (wgt'ed) examples reached here.  /* #neg=599 #pos=282 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1734656955918203;  // std dev = 10.126, 458.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=155 */
%   | | | else return 0.16405329203501776;  // std dev = 9.231, 386.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=127 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12765924116905747;  // std dev = 8.782, 356.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=113 */
%   | | | else return 0.1361309404813945;  // std dev = 10.675, 519.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=169 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09507251213359819;  // std dev = 7.167, 242.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=74 */
%   | | | else return 0.1283486744928869;  // std dev = 11.724, 613.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09870687291631938;  // std dev = 13.745, 854.000 (wgt'ed) examples reached here.  /* #neg=572 #pos=282 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08745279292032106;  // std dev = 13.674, 837.000 (wgt'ed) examples reached here.  /* #neg=555 #pos=282 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7283782610173014;  // std dev = 0.994, 114.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=113 */
%   | else return -0.262681177203477;  // std dev = 0.030, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07381766851297049;  // std dev = 7.294, 236.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=81 */
%   | | | else return 0.0645213704286524;  // std dev = 7.667, 265.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=88 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05795133796414068;  // std dev = 6.805, 326.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=113 */
%   | | | else return 0.05719776415388242;  // std dev = 10.566, 498.000 (wgt'ed) examples reached here.  /* #neg=329 #pos=169 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023800919557435192;  // std dev = 12.794, 881.000 (wgt'ed) examples reached here.  /* #neg=599 #pos=282 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02844026602826332;  // std dev = 12.674, 857.000 (wgt'ed) examples reached here.  /* #neg=575 #pos=282 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.517', 'seconds']
Parameter learned model CLL:-0.330237 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.847, 599, 282]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [10.126, 303, 155], 'false,false,false,false': [9.231, 259, 127]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.782, 243, 113], 'false,false,false,false': [10.675, 350, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.167, 168, 74], 'false,false,false,false': [11.724, 405, 208]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.745, 572, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.674, 555, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.994, 1, 113], 'true,false': [0.03, 193, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.294, 155, 81], 'false,false,false,false': [7.667, 177, 88]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.805, 213, 113], 'false,false,false,false': [10.566, 329, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.794, 599, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.674, 575, 282]}]
{'': [nan, 0.21763268187914797], 'false': [nan, 0.21763268187914894], 'false,false': [nan, 0.21763268187914797], 'false,false,false': [nan, 0.21763268187914894]}
{'': [nan, 0.22248489476875707], 'false': [nan, 0.222484894768757], 'false,false': [nan, 0.22248489476875707], 'false,false,false': [0.2238944718826834, 0.2207643158205551]}
{'': [nan, 0.21841076006561116], 'false': [nan, 0.21841076006561116], 'false,false': [nan, 0.2184107600656156], 'false,false,false': [0.21665796182181618, 0.21958386482329473]}
{'': [nan, 0.22106811757689748], 'false': [nan, 0.22106811757689748], 'false,false': [nan, 0.22106811757690006], 'false,false,false': [0.21228058192746205, 0.22422384682172436]}
{'': [nan, 0.2212117469408725], 'false': [nan, 0.2212117469408725], 'false,false': [nan, 0.22121174694086929], 'false,false,false': [nan, 0.22121174694086929]}
{'': [nan, 0.22340559313228323], 'false': [nan, 0.22340559313228323], 'false,false': [nan, 0.22340559313227662], 'false,false,false': [nan, 0.2234055931322831]}
{'': [0.23251292955253425, 0.22352754294495966], 'true': [0.008672011433508075, 4.5538762922458485e-06], 'false': [nan, 0.22352754294495966], 'false,false': [nan, 0.22352754294495966], 'false,false,false': [0.22542013789141283, 0.2218013527945897], 'true,true': [nan, 0.008672011433508075], 'true,true,false': [nan, 0.008672011433508075]}
{'': [nan, 0.1916753716780162], 'false': [nan, 0.1916753716780162], 'false,false': [nan, 0.19167537167801355], 'false,false,false': [0.14203879521325435, 0.22416816694438127]}
{'': [nan, 0.18579522855220207], 'false': [nan, 0.18579522855220168], 'false,false': [nan, 0.18579522855220168], 'false,false,false': [nan, 0.18579522855220168]}
{'': [nan, 0.1874267281846606], 'false': [nan, 0.1874267281846606], 'false,false': [nan, 0.1874267281846612], 'false,false,false': [nan, 0.1874267281846612]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.915
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995121;  // std dev = 2.06e-07, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( enzyme(A, E), enzyme(D, E) )
%   | | | then return -0.06492798797741087;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.14527764797079923;  // std dev = 4.547, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else if ( interaction(F, A) )
%   | | then if ( enzyme(A, G), enzyme(F, G) )
%   | | | then return -0.0168510649004878;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.1815022285126847;  // std dev = 10.470, 501.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=162 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.24524570929305936;  // std dev = 4.697, 93.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), enzyme(A, D) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(C, E), interaction(F, A) )
%   | | then return 0.7726964146086879;  // std dev = 0.058, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( complex(C, G), interaction(H, A) )
%   | | | then return 0.6344922226919248;  // std dev = 0.850, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.7460382824534779;  // std dev = 0.175, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839136;  // std dev = 1.49e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( enzyme(J, K), enzyme(A, K) )
%   | | | then return -0.03351943031298574;  // std dev = 1.756, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.1309900771486662;  // std dev = 6.912, 232.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=69 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.14513370987949703;  // std dev = 6.367, 191.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=60 */
%   | | | else return 0.19009147611408553;  // std dev = 8.039, 285.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=103 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return 0.052072270111198;  // std dev = 0.388, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.6798811711969074;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.16067697403512024;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.10072871151037756;  // std dev = 5.432, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6091589550387237;  // std dev = 0.075, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), complex(A, K) )
%   | | | then return -0.06721058126457706;  // std dev = 1.870, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | | else return 0.0807276798374864;  // std dev = 3.584, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.13540950238407917;  // std dev = 9.364, 411.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=133 */
%   | | | else return 0.21291272038307865;  // std dev = 3.748, 58.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, C) )
%   | then return 0.24503397817861944;  // std dev = 0.387, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | else return 0.5434530013192448;  // std dev = 0.189, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( location(E, F), interaction(A, E) )
%   | | then return -0.04299117057665306;  // std dev = 0.294, 68.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=7 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.1423776771540003;  // std dev = 2.361, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.060141695554580564;  // std dev = 3.527, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5743442293626174;  // std dev = 0.118, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.045719183748140324;  // std dev = 6.151, 213.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=51 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.25525290093575287;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.12037133685814616;  // std dev = 9.390, 396.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=133 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.35017420059671284;  // std dev = 0.161, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, F), location(A, G) )
%   | | then if ( complex(A, F), interaction(E, H) )
%   | | | then return -0.054236169625611064;  // std dev = 3.362, 99.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=14 */
%   | | | else return 0.033908688475200524;  // std dev = 3.696, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.10111390955486936;  // std dev = 1.921, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.41532803453053446;  // std dev = 1.373, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7430798595011707;  // std dev = 1.024, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return -0.21499970788013215;  // std dev = 0.310, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.43388797308869104;  // std dev = 0.967, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.06845417046022126;  // std dev = 9.787, 468.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=138 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then if ( complex(C, F), enzyme(A, D) )
%   | | then return 0.470703506395779;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.15603038012688258;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.24396042061514672;  // std dev = 0.170, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return 0.38421471919573946;  // std dev = 0.093, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, A) )
%   | then return -0.1204950408485484;  // std dev = 0.320, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.36769695298248584;  // std dev = 0.216, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.20343123150881237;  // std dev = 0.915, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.004269511400302105;  // std dev = 5.890, 218.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=48 */
%   | | | else return 0.06024751675811849;  // std dev = 10.458, 554.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=168 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24641747933942798;  // std dev = 0.060, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.6794516344434887;  // std dev = 0.152, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | else return -0.214708577708643;  // std dev = 0.078, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, F) )
%   | | | then return 0.35143346453216984;  // std dev = 0.759, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6151151999340546;  // std dev = 1.470, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | else return -0.2035227506690794;  // std dev = 0.452, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25810523772360217;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11525437603896026;  // std dev = 0.025, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.041524359007336545;  // std dev = 8.336, 341.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=104 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18383162313692014;  // std dev = 0.165, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.4879824257651599;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.059138834171761724;  // std dev = 3.836, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.03407308598670038;  // std dev = 2.295, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.08052455382242542;  // std dev = 2.128, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( complex(I, K), complex(A, L) )
%   | | | then return -0.011838876062425768;  // std dev = 2.203, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0.08299001362954797;  // std dev = 3.926, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.15378430673412444;  // std dev = 0.937, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.0020406538407360558;  // std dev = 8.442, 448.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=112 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16611170109276713;  // std dev = 0.150, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(A, D) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return -0.08009140170431876;  // std dev = 1.884, 51.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=5 */
%   | | | else return -0.006563188445860959;  // std dev = 2.547, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( phenotype(A, G), complex(D, H) )
%   | | | then return 0.0805754808887006;  // std dev = 3.688, 104.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=36 */
%   | | | else return 0.006256546599001918;  // std dev = 5.652, 196.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=54 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K), interaction(I, I) )
%   | | | then return 0.2449444361824721;  // std dev = 1.113, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.07252593856866353;  // std dev = 6.493, 240.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=89 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.05286057108892129;  // std dev = 3.384, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
%   | | | else return -0.028515054205542064;  // std dev = 1.936, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(F, D) )
%   | | then if ( interaction(D, E), location(A, G) )
%   | | | then return 0.42117710356995697;  // std dev = 2.150, 70.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=68 */
%   | | | else return -0.054185884204368706;  // std dev = 1.866, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.33614127807224903;  // std dev = 1.066, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.6027779601071666;  // std dev = 1.377, 59.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=58 */
%   | else return -0.2123331214042546;  // std dev = 0.069, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.16289579828500686;  // std dev = 0.051, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10821639678361755;  // std dev = 0.051, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.0035635492892170484;  // std dev = 3.113, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.05176122001571556;  // std dev = 6.656, 255.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.513', 'seconds']
Refined model CLL: -0.247537


******************************************
Best model found
******************************************
Results 

CLL : -0.246902 

AUC ROC : 0.962876 

AUC PR : 0.308665 

Precision : 0.314286 

Recall : 0.37931 

F1 : 0.34375 

Total Learning Time : 21.915 

Total Inference Time : 11.401349782943726 

Total revision time: 39.05651720619201
Best scored revision CLL: -0.247537


Results 

CLL : -0.246902 

AUC ROC : 0.962876 

AUC PR : 0.308665 

Precision : 0.314286 

Recall : 0.37931 

F1 : 0.34375 

Total Learning Time : 49.777301870346065 

Total Inference Time : 11.401349782943726 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.085
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1978925248431011;  // std dev = 5.916, 156.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14995978661025722;  // std dev = 4.292, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return 0.22625212172612186;  // std dev = 3.970, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11460847477456089;  // std dev = 3.888, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return 0.1615453420706717;  // std dev = 4.468, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.05679085712587023;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.17470322539540079;  // std dev = 5.159, 111.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08994776196517322;  // std dev = 5.928, 158.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07803221178838189;  // std dev = 5.901, 156.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7302520630031183;  // std dev = 0.087, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.26131663973201;  // std dev = 0.113, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08069650925927276;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.022157261724346938;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.043619490231773236;  // std dev = 3.007, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | | else return 0.028803259704806093;  // std dev = 4.571, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03532577508384552;  // std dev = 5.424, 158.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.021857803693252516;  // std dev = 5.657, 186.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=53 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.902', 'seconds']
Parameter learned model CLL:-0.325193 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.916, 103, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.292, 58, 27], 'false,false,false,false': [3.97, 40, 26]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.888, 49, 22], 'false,false,false,false': [4.468, 56, 31]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [5.159, 67, 44]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.928, 105, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.901, 103, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.087, 0, 22], 'true,false': [0.113, 38, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.394, 32, 18], 'false,false,false,false': [2.98, 28, 13]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.007, 44, 22], 'false,false,false,false': [4.571, 64, 31]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.424, 105, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.657, 133, 53]}]
{'': [nan, 0.22431788297172955], 'false': [nan, 0.2243178829717303], 'false,false': [nan, 0.22431788297172955], 'false,false,false': [nan, 0.2243178829717303]}
{'': [nan, 0.22779702644620778], 'false': [nan, 0.22779702644620806], 'false,false': [nan, 0.22779702644620778], 'false,false,false': [0.2167474048442899, 0.2387511478420561]}
{'': [nan, 0.22257379850646888], 'false': [nan, 0.22257379850646888], 'false,false': [nan, 0.22257379850647013], 'false,false,false': [0.2129440668383158, 0.2294425581078357]}
{'': [nan, 0.23166530731945947], 'false': [nan, 0.23166530731945947], 'false,false': [nan, 0.23166530731945875], 'false,false,false': [0.19463667820069233, 0.23974731955936943]}
{'': [nan, 0.2223956989180273], 'false': [nan, 0.2223956989180273], 'false,false': [nan, 0.22239569891802788], 'false,false,false': [nan, 0.22239569891802788]}
{'': [nan, 0.2231980614562164], 'false': [nan, 0.2231980614562164], 'false,false': [nan, 0.22319806145621582], 'false,false,false': [nan, 0.22319806145621604]}
{'': [0.2286617802584864, 0.22500271322345147], 'true': [0.00034714904095506876, 0.00033415468449606386], 'false': [nan, 0.22500271322345147], 'false,false': [nan, 0.22500271322345147], 'false,false,false': [0.2303999999999999, 0.21653777513384886], 'true,true': [nan, 0.00034714904095506876], 'true,true,false': [nan, 0.00034714904095506876]}
{'': [nan, 0.185982951432213], 'false': [nan, 0.185982951432213], 'false,false': [nan, 0.1859829514322134], 'false,false,false': [0.13700778417498244, 0.21991781462722285]}
{'': [nan, 0.18622505702038972], 'false': [nan, 0.1862250570203901], 'false,false': [nan, 0.1862250570203901], 'false,false,false': [nan, 0.1862250570203901]}
{'': [nan, 0.17203112079691488], 'false': [nan, 0.17203112079691488], 'false,false': [nan, 0.17203112079691527], 'false,false,false': [nan, 0.17203112079691527]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.608
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.22656998773109;  // std dev = 4.205, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.09624417319475043;  // std dev = 3.381, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8224807831565383;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.16376990520671114;  // std dev = 0.048, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7537518153482947;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.15365839642244225;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.1704816659085658;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.05321463500148978;  // std dev = 0.932, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.2537180436725729;  // std dev = 4.593, 88.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5894230759842857;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7836452384119135;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, E), complex(D, H) )
%   | | | then return -0.16704990574476514;  // std dev = 0.208, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.03942352823245847;  // std dev = 2.117, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), complex(K, L) )
%   | | | then return 0.03703948377625883;  // std dev = 1.155, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.15586778452035133;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.2696558374677726;  // std dev = 1.637, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.1301999235886345;  // std dev = 4.228, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.06766098462293373;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5690652131931597;  // std dev = 0.174, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.27390929354626664;  // std dev = 0.691, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10934142164809155;  // std dev = 0.662, 32.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=1 */
%   | | else if ( complex(E, J), complex(F, J) )
%   | | | then return 0.3006028425925165;  // std dev = 2.167, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.04333217872923555;  // std dev = 3.222, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 0.7500614343634657;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.19118992878864616;  // std dev = 2.032, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.027354949643008587;  // std dev = 2.074, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.4349071054719629;  // std dev = 0.310, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( location(A, D), phenotype(A, F) )
%   | | then return -0.024733714545971373;  // std dev = 0.332, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( enzyme(A, G), interaction(C, C) )
%   | | | then return 0.5145898006596575;  // std dev = 0.731, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.0637234941419405;  // std dev = 3.729, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   else if ( location(A, H), enzyme(A, I) )
%   | then return 0.08799097679114787;  // std dev = 0.351, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.49762588717401784;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.20133072243382727;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.28456715093438006;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7289283010167327;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then if ( phenotype(E, G), phenotype(C, G) )
%   | | then return -0.12209613652050853;  // std dev = 0.270, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else return 0.16130352339954934;  // std dev = 0.422, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else return -0.09040209424644405;  // std dev = 0.294, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then if ( complex(A, J), complex(H, J) )
%   | | then return -0.1371927904800125;  // std dev = 0.218, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(K, H), phenotype(K, I) )
%   | | | then return 0.23547498361751215;  // std dev = 2.459, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.045035058086907734;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( phenotype(A, L), interaction(M, A) )
%   | | then return -0.1319383633700082;  // std dev = 0.170, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.33978811911820994;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06878131444592717;  // std dev = 2.694, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.309509095285403;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6461432557188246;  // std dev = 0.091, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.19671941614131255;  // std dev = 0.073, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(A, H), complex(H, I) )
%   | | then return -0.04656524295888111;  // std dev = 0.356, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.6064069498641016;  // std dev = 0.145, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( enzyme(K, L), phenotype(J, M) )
%   | | | then return -0.1987049451618052;  // std dev = 0.706, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.02148088977310081;  // std dev = 2.424, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return 0.6661802938709512;  // std dev = 0.168, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.06973739154703382;  // std dev = 1.870, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.28771762386464045;  // std dev = 0.308, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), interaction(C, D) )
%   | | then return 0.04217196987736623;  // std dev = 0.232, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else return -0.10038835654450969;  // std dev = 0.279, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5116085972563471;  // std dev = 0.126, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.23473698482580607;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, I), complex(H, J) )
%   | | | then return 0.5084967677627713;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04414292572766812;  // std dev = 2.120, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.08668550591449178;  // std dev = 1.817, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.107780826832501;  // std dev = 1.476, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.24647458128312633;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(C, F) )
%   | | then return -0.0034613287994656205;  // std dev = 0.209, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return -0.11972031144929046;  // std dev = 0.111, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.33024169127659686;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.14768689496293883;  // std dev = 0.053, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( phenotype(A, L), interaction(J, M) )
%   | | | then return 0.23892101258852724;  // std dev = 0.514, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.12614307574288716;  // std dev = 1.198, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.27681520462298687;  // std dev = 1.648, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.07593619116828347;  // std dev = 2.943, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(A, D), phenotype(D, C) )
%   | then return -0.11678058932435202;  // std dev = 0.167, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else return 0.024686605000544166;  // std dev = 0.317, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( complex(A, G), interaction(F, F) )
%   | | then return -0.09491901539139848;  // std dev = 0.204, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(F, F), enzyme(F, H) )
%   | | | then return 0.3763380787692897;  // std dev = 0.358, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.11399738128809703;  // std dev = 2.232, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.46522479077401224;  // std dev = 0.396, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17613455811117765;  // std dev = 0.921, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(L, A) )
%   | | | then return -0.23533797101457538;  // std dev = 0.618, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.002242912377424392;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.053', 'seconds']
Refined model CLL: -0.286312


******************************************
Best model found
******************************************
Results 

CLL : -0.322457 

AUC ROC : 0.881315 

AUC PR : 0.11908 

Precision : 0.043786 

Recall : 0.653846 

F1 : 0.082076 

Total Learning Time : 7.608 

Total Inference Time : 5.206464767456055 

Total revision time: 15.36578242111206
Best scored revision CLL: -0.286312


Results 

CLL : -0.322457 

AUC ROC : 0.881315 

AUC PR : 0.11908 

Precision : 0.043786 

Recall : 0.653846 

F1 : 0.082076 

Total Learning Time : 26.08656708526611 

Total Inference Time : 5.206464767456055 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.198
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1946568716074494;  // std dev = 8.386, 315.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16044745262074195;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   | | | else return 0.17079200581561743;  // std dev = 5.637, 142.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10993403406725209;  // std dev = 5.544, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.13140230585755097;  // std dev = 6.479, 192.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=62 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10334847588847244;  // std dev = 4.064, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | | else return 0.12959615025664195;  // std dev = 7.348, 240.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=82 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1038790907954192;  // std dev = 8.388, 315.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0924562413760963;  // std dev = 8.339, 308.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=106 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7346933977949021;  // std dev = 0.024, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.264091529125759;  // std dev = 0.033, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07554485609696547;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | | | else return 0.07655572584196417;  // std dev = 4.266, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06728459279257294;  // std dev = 4.175, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
%   | | | else return 0.04926885163952084;  // std dev = 6.412, 184.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=62 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0529738269193843;  // std dev = 7.577, 300.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03735929482458614;  // std dev = 7.592, 305.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=106 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.950', 'seconds']
Parameter learned model CLL:-0.345412 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.386, 209, 106]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.245, 119, 58], 'false,false,false,false': [5.637, 94, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.544, 102, 44], 'false,false,false,false': [6.479, 130, 62]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.064, 53, 24], 'false,false,false,false': [7.348, 158, 82]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.388, 209, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.339, 202, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.024, 0, 44], 'true,false': [0.033, 102, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.712, 64, 34], 'false,false,false,false': [4.266, 52, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.175, 78, 44], 'false,false,false,false': [6.412, 122, 62]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.577, 194, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.592, 199, 106]}]
{'': [nan, 0.2232703451751093], 'false': [nan, 0.22327034517510766], 'false,false': [nan, 0.2232703451751093], 'false,false,false': [nan, 0.22327034517510766]}
{'': [nan, 0.22187281964603695], 'false': [nan, 0.22187281964603234], 'false,false': [nan, 0.22187281964603695], 'false,false,false': [0.22030706374285697, 0.22376512596706916]}
{'': [nan, 0.21523821895450876], 'false': [nan, 0.21523821895450876], 'false,false': [nan, 0.21523821895451326], 'false,false,false': [0.21049798081922994, 0.2186436938020111]}
{'': [nan, 0.22254869850679693], 'false': [nan, 0.22254869850679693], 'false,false': [nan, 0.22254869850679773], 'false,false,false': [0.21453870804520167, 0.22495122529971442]}
{'': [nan, 0.22333543863403646], 'false': [nan, 0.22333543863403646], 'false,false': [nan, 0.22333543863403713], 'false,false,false': [nan, 0.22333543863403713]}
{'': [nan, 0.22579474644210856], 'false': [nan, 0.22579474644210856], 'false,false': [nan, 0.225794746442108], 'false,false,false': [nan, 0.22579474644210737]}
{'': [0.2100457711582253, 0.22698947550738968], 'false': [nan, 0.22698947550738968], 'false,false': [nan, 0.22698947550738968], 'false,false,false': [0.22657226155768462, 0.22750000000000034], 'true': [1.2631637723520777e-05, 1.0366789774705545e-05], 'true,true': [nan, 1.2631637723520777e-05], 'true,true,false': [nan, 1.2631637723520777e-05]}
{'': [nan, 0.19139938047581437], 'false': [nan, 0.19139938047581437], 'false,false': [nan, 0.19139938047581412], 'false,false,false': [0.14286339771682463, 0.22345144480392243]}
{'': [nan, 0.19135202915899052], 'false': [nan, 0.1913520291589914], 'false,false': [nan, 0.1913520291589914], 'false,false,false': [nan, 0.1913520291589914]}
{'': [nan, 0.18896469529373247], 'false': [nan, 0.18896469529373247], 'false,false': [nan, 0.18896469529373325], 'false,false,false': [nan, 0.18896469529373325]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.771
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7867203636709409;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D), complex(A, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(H, J), complex(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.2771965541471308;  // std dev = 5.056, 105.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=44 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.020311097261674484;  // std dev = 2.242, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.18247325942383655;  // std dev = 4.932, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.76330580309212;  // std dev = 0.126, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.0073373756034664445;  // std dev = 0.363, 73.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( interaction(H, F), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6617756753648207;  // std dev = 0.890, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.18110243522560826;  // std dev = 5.367, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | else if ( interaction(K, F), location(K, L) )
%   | | | then return -0.09230415126814538;  // std dev = 1.283, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | | else return 0.11062427363085693;  // std dev = 2.546, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.8008563326244555;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.06895358853745603;  // std dev = 1.751, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.28899920915778443;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( location(A, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.6333360659725714;  // std dev = 0.254, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, G), interaction(G, C) )
%   | | | then return -0.0759069860852238;  // std dev = 1.508, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   | | | else return 0.07884308386462444;  // std dev = 2.372, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | else return -0.18564554481315768;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.644875981046577;  // std dev = 0.061, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, I) )
%   | | then if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.19376219754389495;  // std dev = 2.538, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.018659398580719716;  // std dev = 3.915, 100.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=21 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.18356911068931198;  // std dev = 4.938, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | | | else return 0.39741908455149394;  // std dev = 1.902, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.4505879724498921;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.14861237236601443;  // std dev = 0.102, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.4013910850976186;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6966623283521223;  // std dev = 0.189, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( interaction(F, H), location(A, I) )
%   | | | then return 0.08347786784811262;  // std dev = 2.943, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return -0.10895625060130625;  // std dev = 1.294, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.020801758390038453;  // std dev = 2.114, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.11525550396248088;  // std dev = 6.653, 219.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), phenotype(C, F) )
%   | then if ( enzyme(C, G), phenotype(A, H) )
%   | | then return -0.14489594106470582;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, I), location(D, J) )
%   | | | then return 0.11527630584975927;  // std dev = 1.610, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.35554230514916046;  // std dev = 1.632, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else return 6.873289852205446E-4;  // std dev = 0.359, 102.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return -0.018119079268677004;  // std dev = 0.364, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( interaction(A, M), complex(M, N) )
%   | | then if ( enzyme(A, P) )
%   | | | then return 0.09540151645996396;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4171377700042111;  // std dev = 1.501, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(Q, A), phenotype(A, R) )
%   | | | then return 0.16773244720183572;  // std dev = 3.171, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.09223157743089153;  // std dev = 4.800, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E) )
%   | then return 0.05435732665849657;  // std dev = 0.383, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | else if ( phenotype(A, F), complex(A, D) )
%   | | then return -0.18525893872989885;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(C, G), interaction(H, C) )
%   | | | then return 0.36121971473540415;  // std dev = 2.602, 30.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=19 */
%   | | | else return 0.14886237368103208;  // std dev = 2.259, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   else if ( interaction(I, A), location(A, J) )
%   | then return 3.35159125663181E-4;  // std dev = 0.402, 119.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=28 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(K, M), complex(M, N) )
%   | | | then return -0.19724518947512973;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.14418088351588096;  // std dev = 1.632, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.1553323927226168;  // std dev = 2.146, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.31034682437056277;  // std dev = 1.666, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6205522172976007;  // std dev = 0.142, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.21153938863112454;  // std dev = 0.063, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.4536455483234598;  // std dev = 0.376, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.04149621698582906;  // std dev = 2.542, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | | | else return 0.13055743835685515;  // std dev = 3.377, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.1863944939177506;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.10075638796376753;  // std dev = 0.966, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, K), location(K, L) )
%   | | | then return 0.11036578604591601;  // std dev = 3.019, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return -0.060995576667196134;  // std dev = 2.601, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2507216187660494;  // std dev = 0.184, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.10855506466990779;  // std dev = 0.734, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5513757410135657;  // std dev = 0.445, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.4600604548967732;  // std dev = 0.231, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03496166325212819;  // std dev = 4.904, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( complex(G, I), interaction(G, G) )
%   | | | then return 0.17658875171240054;  // std dev = 1.021, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.08748114799460499;  // std dev = 2.647, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.0371905659641284;  // std dev = 1.518, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.08764938952630358;  // std dev = 3.111, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then return 0.21994331342370527;  // std dev = 0.123, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(A, D), location(D, H) )
%   | | | then return -0.08671071372158315;  // std dev = 0.870, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.1386929420964644;  // std dev = 1.938, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( phenotype(D, I), complex(D, J) )
%   | | | then return -0.1022963071031863;  // std dev = 2.261, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.0046259120274979105;  // std dev = 2.378, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return -0.028100391573278777;  // std dev = 0.298, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else if ( complex(A, M), enzyme(A, N) )
%   | | then return -0.04093106362327749;  // std dev = 0.337, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.13497960836295633;  // std dev = 2.647, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.06310160518148825;  // std dev = 4.349, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.15674290155252915;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.08054227462171533;  // std dev = 0.213, 51.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(E, F) )
%   | | then if ( enzyme(D, G), interaction(H, A) )
%   | | | then return 0.07353332365640773;  // std dev = 1.209, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.07647300528813104;  // std dev = 1.939, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | else if ( interaction(A, E), enzyme(A, I) )
%   | | | then return 0.6294307700143608;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14225073644118771;  // std dev = 3.037, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then return -0.13630804369182253;  // std dev = 0.212, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.030822910664858913;  // std dev = 5.203, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | | | else return -0.05548673903569349;  // std dev = 1.007, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.840', 'seconds']
Refined model CLL: -0.300252


******************************************
Best model found
******************************************
Results 

CLL : -0.319358 

AUC ROC : 0.804308 

AUC PR : 0.109782 

Precision : 0.15 

Recall : 0.317308 

F1 : 0.203704 

Total Learning Time : 10.771 

Total Inference Time : 5.227097511291504 

Total revision time: 19.311840671539308
Best scored revision CLL: -0.300252


Results 

CLL : -0.319358 

AUC ROC : 0.804308 

AUC PR : 0.109782 

Precision : 0.15 

Recall : 0.317308 

F1 : 0.203704 

Total Learning Time : 30.03262533569336 

Total Inference Time : 5.227097511291504 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.432
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16628846998323302;  // std dev = 10.488, 516.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=159 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16741674661076095;  // std dev = 7.542, 257.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=85 */
%   | | | else return 0.16266863642717738;  // std dev = 7.062, 227.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=74 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.19131436398217155;  // std dev = 6.453, 177.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=67 */
%   | | | else return 0.14616710084795131;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10302269285199224;  // std dev = 4.943, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | | else return 0.10916661870965794;  // std dev = 9.135, 383.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=123 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09808613526041485;  // std dev = 10.320, 481.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=159 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06541288189931925;  // std dev = 10.430, 504.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=159 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7325918870169453;  // std dev = 0.001, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.2674076347035893;  // std dev = 0.002, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0669539114196013;  // std dev = 5.744, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
%   | | | else return 0.06695665982063734;  // std dev = 5.384, 132.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=43 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03754552459337678;  // std dev = 5.290, 206.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=67 */
%   | | | else return 0.05853665812287387;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037117129714463376;  // std dev = 9.496, 484.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=159 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.044507242909351735;  // std dev = 9.372, 460.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=159 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.859', 'seconds']
Parameter learned model CLL:-0.329526 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.488, 357, 159]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.542, 172, 85], 'false,false,false,false': [7.062, 153, 74]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.453, 110, 67], 'false,false,false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.943, 76, 36], 'false,false,false,false': [9.135, 260, 123]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.32, 322, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.43, 345, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.001, 0, 67], 'true,false': [0.002, 128, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.744, 101, 49], 'false,false,false,false': [5.384, 89, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.29, 139, 67], 'false,false,false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.496, 325, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.372, 301, 159]}]
{'': [nan, 0.2131895619253679], 'false': [nan, 0.21318956192536584], 'false,false': [nan, 0.2131895619253679], 'false,false,false': [nan, 0.21318956192536584]}
{'': [nan, 0.22059200191243997], 'false': [nan, 0.2205920019124388], 'false,false': [nan, 0.22059200191243997], 'false,false,false': [0.22135081530378814, 0.21972093384307742]}
{'': [nan, 0.22780815805803606], 'false': [nan, 0.22780815805803606], 'false,false': [nan, 0.2278081580580365], 'false,false,false': [0.23527908554886667, 0.22222060754579342]}
{'': [nan, 0.2179227235137836], 'false': [nan, 0.2179227235137836], 'false,false': [nan, 0.2179227235137831], 'false,false,false': [0.21811224489795816, 0.21785876119483635]}
{'': [nan, 0.2214265204864666], 'false': [nan, 0.2214265204864666], 'false,false': [nan, 0.22142652048646502], 'false,false,false': [nan, 0.22142652048646502]}
{'': [nan, 0.21585584228119337], 'false': [nan, 0.21585584228119337], 'false,false': [nan, 0.21585584228119542], 'false,false,false': [nan, 0.2158558422811932]}
{'': [0.22553563453424502, 0.21980765097974453], 'true': [1.8589388204547313e-08, 1.857939870009151e-08], 'false': [nan, 0.21980765097974453], 'false,false': [nan, 0.21980765097974453], 'false,false,false': [0.21995555555555493, 0.2196395775941221], 'true,true': [nan, 1.8589388204547313e-08], 'true,true,false': [nan, 1.8589388204547313e-08]}
{'': [nan, 0.18511171937632656], 'false': [nan, 0.18511171937632656], 'false,false': [nan, 0.18511171937632764], 'false,false,false': [0.13582158548336845, 0.22144852331304277]}
{'': [nan, 0.18632577944035256], 'false': [nan, 0.1863257794403499], 'false,false': [nan, 0.1863257794403499], 'false,false,false': [nan, 0.1863257794403499]}
{'': [nan, 0.19096342897426585], 'false': [nan, 0.19096342897426585], 'false,false': [nan, 0.19096342897426577], 'false,false,false': [nan, 0.19096342897426577]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 53.891
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then return 0.8434430527465715;  // std dev = 0.120, 68.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | | else if ( complex(A, F) )
%   | | | then return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.5350720120225873;  // std dev = 5.332, 130.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=88 */
%   | else return -0.1418510649004885;  // std dev = 0.000, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A) )
%   | | then if ( location(I, J) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, F) )
%   | | then return 0.7174092252559349;  // std dev = 0.177, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | else return 0.5613497848687152;  // std dev = 0.382, 41.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | else return -0.13983631690673703;  // std dev = 0.380, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.7454084583310948;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.14319753126483767;  // std dev = 0.148, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.09827767297887739;  // std dev = 4.204, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.7454084583310948;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.29190700471337044;  // std dev = 2.439, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.10717867453737849;  // std dev = 4.025, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5909779639794396;  // std dev = 0.209, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.2874569005403173;  // std dev = 1.004, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.584858260461069;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6831111255550892;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.138867551115122;  // std dev = 0.322, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.032705662881809684;  // std dev = 2.750, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.08800225189555794;  // std dev = 4.161, 147.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=42 */
%   | | | else return 0.15132902618204686;  // std dev = 6.051, 206.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=72 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.42969632910984285;  // std dev = 0.279, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | else return -0.02189563273187875;  // std dev = 0.294, 159.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=26 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, F), complex(A, H) )
%   | | then return -0.06748848404687148;  // std dev = 0.181, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.14700831100190861;  // std dev = 1.038, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.021063370365093006;  // std dev = 1.180, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(K, A) )
%   | | then if ( phenotype(K, L), location(K, M) )
%   | | | then return 0.14714963508765747;  // std dev = 4.571, 135.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=51 */
%   | | | else return 0.06680354038901284;  // std dev = 3.429, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.2791745128748262;  // std dev = 2.228, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | | else return 0.1340210961251805;  // std dev = 1.413, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3995817725221711;  // std dev = 0.114, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(F, A), complex(F, D) )
%   | | then return -0.060114058385219375;  // std dev = 0.206, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.06018076367014467;  // std dev = 2.174, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.1499440080334786;  // std dev = 2.732, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   else if ( interaction(A, H), phenotype(A, I) )
%   | then return -0.03653965754011166;  // std dev = 0.282, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), interaction(J, L) )
%   | | | then return 0.12400926102376032;  // std dev = 4.298, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   | | | else return 0.07400338076049072;  // std dev = 4.379, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.1411127742553891;  // std dev = 1.082, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.042502261007883874;  // std dev = 1.071, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3237682269264064;  // std dev = 0.094, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, D), interaction(F, A) )
%   | | then if ( interaction(F, E) )
%   | | | then return -0.10454960712715361;  // std dev = 0.378, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | | else return 0.020252994457392967;  // std dev = 0.818, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3878674002037353;  // std dev = 0.138, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.0015670462210657142;  // std dev = 2.211, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(I, I), interaction(A, J) )
%   | | | then return -0.04411809441839419;  // std dev = 0.882, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.1516336020854895;  // std dev = 3.858, 95.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=40 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return -0.0077491536425409475;  // std dev = 2.482, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return 0.09717299984121924;  // std dev = 5.059, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.42995983020796924;  // std dev = 0.180, 68.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=67 */
%   | else return -0.14767644536292496;  // std dev = 0.042, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.26595360485587055;  // std dev = 0.250, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( complex(E, H), enzyme(A, I) )
%   | | | then return 0.06906968891397665;  // std dev = 1.032, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.09354353962619932;  // std dev = 1.306, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), phenotype(A, M) )
%   | | | then return -0.01514416610483507;  // std dev = 2.527, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.06777041468641164;  // std dev = 4.853, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.20034153788247705;  // std dev = 1.986, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return -0.019556149745372536;  // std dev = 1.162, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(D, F), complex(A, G) )
%   | | | then return 0.23691067302175886;  // std dev = 0.928, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.4303277201869012;  // std dev = 1.429, 55.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=53 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return 0.45185321765568587;  // std dev = 2.578, 70.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=63 */
%   | | | else return -0.10605703464000295;  // std dev = 2.726, 72.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=13 */
%   | else return -0.1553609512490998;  // std dev = 0.048, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then if ( interaction(I, I) )
%   | | then return -0.143178532507843;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.2864847296515244;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( enzyme(A, K) )
%   | | then return -0.16365948279267525;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.2183496641976769;  // std dev = 1.064, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return -0.022894206533562365;  // std dev = 0.219, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.20675143101192156;  // std dev = 0.207, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( enzyme(A, G), interaction(A, H) )
%   | | | then return 0.13168621216442805;  // std dev = 1.590, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.0070603178167553664;  // std dev = 4.745, 278.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=83 */
%   else if ( phenotype(A, I) )
%   | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.23654524347475073;  // std dev = 0.263, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | else return -0.17720162112994023;  // std dev = 0.078, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( phenotype(K, M), enzyme(L, N) )
%   | | | then return -0.015209873189633873;  // std dev = 1.158, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.20084552567641148;  // std dev = 1.620, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else return 0.3386484587654236;  // std dev = 0.853, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(C, E) )
%   | then if ( complex(A, E) )
%   | | then return 0.11726689265565138;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.20912396008630396;  // std dev = 0.429, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.18132707047310156;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3063125469386972;  // std dev = 0.081, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), complex(A, I) )
%   | | then return 0.056445517590620595;  // std dev = 0.228, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2200850523336395;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.0936958466997152;  // std dev = 0.064, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.043327673400201244;  // std dev = 3.298, 126.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=47 */
%   | | | else return -0.007078937579532892;  // std dev = 5.020, 299.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=83 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.753', 'seconds']
Refined model CLL: -0.198431


******************************************
Best model found
******************************************
Results 

CLL : -0.203899 

AUC ROC : 0.977959 

AUC PR : 0.333451 

Precision : 0.176596 

Recall : 0.798077 

F1 : 0.289199 

Total Learning Time : 53.891 

Total Inference Time : 53.18431258201599 

Total revision time: 110.8241625289917
Best scored revision CLL: -0.198431


Results 

CLL : -0.203899 

AUC ROC : 0.977959 

AUC PR : 0.333451 

Precision : 0.176596 

Recall : 0.798077 

F1 : 0.289199 

Total Learning Time : 121.54494719314576 

Total Inference Time : 53.18431258201599 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.605
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1935919730741931;  // std dev = 11.870, 632.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=212 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15183100970390584;  // std dev = 8.965, 370.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=118 */
%   | | | else return 0.15047965835255447;  // std dev = 8.009, 296.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=94 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1453961591217426;  // std dev = 7.608, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
%   | | | else return 0.12725305246710025;  // std dev = 9.244, 395.000 (wgt'ed) examples reached here.  /* #neg=270 #pos=125 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09689986103827361;  // std dev = 5.992, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
%   | | | else return 0.09823926000032746;  // std dev = 10.519, 519.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=160 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12241448842291823;  // std dev = 11.739, 606.000 (wgt'ed) examples reached here.  /* #neg=394 #pos=212 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09341131673631128;  // std dev = 11.800, 618.000 (wgt'ed) examples reached here.  /* #neg=406 #pos=212 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7303620034162877;  // std dev = 1.08e-05, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | else return -0.26963807708607757;  // std dev = 1.45e-05, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09235308879732332;  // std dev = 6.506, 184.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=66 */
%   | | | else return 0.07106427010754794;  // std dev = 6.254, 175.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=59 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.041274587172396855;  // std dev = 6.000, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
%   | | | else return 0.05075032553235436;  // std dev = 9.128, 375.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=125 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04638804952411907;  // std dev = 10.832, 617.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=212 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033016226796270476;  // std dev = 10.847, 626.000 (wgt'ed) examples reached here.  /* #neg=414 #pos=212 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.938', 'seconds']
Parameter learned model CLL:-0.337918 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.87, 420, 212]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.965, 252, 118], 'false,false,false,false': [8.009, 202, 94]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.608, 173, 87], 'false,false,false,false': [9.244, 270, 125]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.992, 116, 52], 'false,false,false,false': [10.519, 359, 160]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.739, 394, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.8, 406, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.08e-05, 0, 87], 'true,false': [1.45e-05, 163, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.506, 118, 66], 'false,false,false,false': [6.254, 116, 59]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.0, 174, 87], 'false,false,false,false': [9.128, 250, 125]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.832, 405, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.847, 414, 212]}]
{'': [nan, 0.2229210062490011], 'false': [nan, 0.2229210062490005], 'false,false': [nan, 0.2229210062490011], 'false,false,false': [nan, 0.2229210062490005]}
{'': [nan, 0.21699176654132157], 'false': [nan, 0.21699176654131339], 'false,false': [nan, 0.21699176654132157], 'false,false,false': [0.21720964207450277, 0.21671840759678213]}
{'': [nan, 0.21890759950062802], 'false': [nan, 0.21890759950062802], 'false,false': [nan, 0.21890759950063374], 'false,false,false': [0.2226509259232847, 0.21631297398339663]}
{'': [nan, 0.2133227167052722], 'false': [nan, 0.2133227167052722], 'false,false': [nan, 0.21332271670527425], 'false,false,false': [0.21371882086168026, 0.21319405931393076]}
{'': [nan, 0.22740507289426734], 'false': [nan, 0.22740507289426734], 'false,false': [nan, 0.22740507289426068], 'false,false,false': [nan, 0.22740507289426068]}
{'': [nan, 0.22530909140224623], 'false': [nan, 0.22530909140224623], 'false,false': [nan, 0.2253090914022426], 'false,false,false': [nan, 0.22530909140224623]}
{'': [0.22689603653263496, 0.22695072077845027], 'false': [nan, 0.22695072077845027], 'false,false': [nan, 0.22695072077845027], 'false,false,false': [0.23003308128544409, 0.22347755102041034], 'true': [1.3333701958642984e-12, 1.2885670717219977e-12], 'true,true': [nan, 1.3333701958642984e-12], 'true,true,false': [nan, 1.3333701958642984e-12]}
{'': [nan, 0.18763900946588727], 'false': [nan, 0.18763900946588727], 'false,false': [nan, 0.18763900946588824], 'false,false,false': [0.13791343736655834, 0.22221116002098612]}
{'': [nan, 0.19017153267769044], 'false': [nan, 0.1901715326776897], 'false,false': [nan, 0.1901715326776897], 'false,false,false': [nan, 0.1901715326776897]}
{'': [nan, 0.18795584970131288], 'false': [nan, 0.18795584970131288], 'false,false': [nan, 0.18795584970131218], 'false,false,false': [nan, 0.18795584970131218]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 51.005
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.8244410699309701;  // std dev = 0.180, 178.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=172 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.14185106490048768;  // std dev = 6.66e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else return -0.14185106490048782;  // std dev = 1.03e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6944961417615542;  // std dev = 0.187, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.10563695940842015;  // std dev = 0.151, 73.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=2 */
%   | | else return 0.12298652241576116;  // std dev = 0.390, 307.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=90 */
%   else if ( complex(A, G), interaction(H, A) )
%   | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.7262261227607609;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, J), complex(J, G) )
%   | | | then return 0.06811689812823411;  // std dev = 1.674, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.22296612745353456;  // std dev = 1.964, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.7228497674858577;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.028299601797849856;  // std dev = 2.419, 55.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | | else return 0.1596475931143079;  // std dev = 5.053, 155.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.539546382303517;  // std dev = 0.199, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(A, E), interaction(D, D) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.013631555972817337;  // std dev = 1.397, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return -0.12560321096118704;  // std dev = 0.115, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(E, D), enzyme(D, H) )
%   | | | then return 0.22146479115956685;  // std dev = 1.337, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.06652456200510924;  // std dev = 4.813, 176.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=44 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6814582365761805;  // std dev = 0.849, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return -0.14660454783401616;  // std dev = 0.331, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.0819947960480264;  // std dev = 1.787, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.1458646350526829;  // std dev = 6.000, 225.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=78 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5464474824783683;  // std dev = 0.180, 79.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=76 */
%   | else return -0.13403657476466307;  // std dev = 0.246, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F) )
%   | | then if ( interaction(A, G), complex(G, F) )
%   | | | then return 0.45628410253782503;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.20052837384489433;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5687107585266997;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.16297532552645658;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.46259136183593635;  // std dev = 0.188, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11841633982233055;  // std dev = 0.139, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.09679450718218091;  // std dev = 6.984, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.3813458637704061;  // std dev = 0.194, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | else if ( interaction(A, C) )
%   | | then return -0.11639374081286026;  // std dev = 0.177, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( complex(A, F), phenotype(D, G) )
%   | | | then return -0.010392831210701654;  // std dev = 2.564, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.07177298486862482;  // std dev = 3.329, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   else if ( enzyme(A, H) )
%   | then return 0.04985445300744339;  // std dev = 0.241, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, K) )
%   | | | then return 0.538184695553698;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2702732793889355;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.08167963004905598;  // std dev = 3.162, 70.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=22 */
%   | | | else return 0.14608108095086964;  // std dev = 4.835, 148.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=59 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, D), location(A, E) )
%   | then return -0.005617989723775427;  // std dev = 0.244, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | else if ( complex(A, F), interaction(G, C) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.06209939139516942;  // std dev = 2.228, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.1948924637192512;  // std dev = 1.473, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return 0.029379040876789296;  // std dev = 0.306, 173.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=48 */
%   else if ( enzyme(A, I) )
%   | then return 0.05111061104790051;  // std dev = 0.254, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.40852154293001697;  // std dev = 0.969, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.16227191458170973;  // std dev = 0.224, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.334259968724997;  // std dev = 0.659, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.08856577735275775;  // std dev = 4.953, 174.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=63 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.45119363014931624;  // std dev = 0.139, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | else return -0.1564627445378943;  // std dev = 0.064, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( enzyme(F, G), location(F, H) )
%   | | then return 0.006222955583514485;  // std dev = 0.288, 146.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=39 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24708539201756513;  // std dev = 0.580, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05881367233070166;  // std dev = 3.492, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.31758943655853034;  // std dev = 2.556, 54.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | | | else return -0.17980898196889653;  // std dev = 0.241, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.05755694069570343;  // std dev = 0.678, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.0658035314802891;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.22270186876807643;  // std dev = 0.198, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), complex(E, F) )
%   | | | then return 0.4762392547005808;  // std dev = 0.172, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08826043769024208;  // std dev = 0.894, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.004967110657787344;  // std dev = 0.275, 419.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=100 */
%   else if ( complex(A, G) )
%   | then return 0.013631773518019929;  // std dev = 0.231, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, I), enzyme(A, J) )
%   | | | then return 0.09028623686907707;  // std dev = 0.627, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.17671034557489054;  // std dev = 1.463, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03993659301795128;  // std dev = 1.131, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.07515667249621565;  // std dev = 2.739, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.01991837553672607;  // std dev = 0.189, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( interaction(D, D), phenotype(D, H) )
%   | | | then return 0.19093462792990826;  // std dev = 0.854, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.02822254912709565;  // std dev = 2.646, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | else if ( location(A, I), location(D, I) )
%   | | | then return 0.06136028710781887;  // std dev = 2.830, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.1871082429508152;  // std dev = 1.587, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.24348187030029483;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.050323628555131256;  // std dev = 1.069, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.22374828334744679;  // std dev = 0.248, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.020382958614350577;  // std dev = 5.028, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2022864882660799;  // std dev = 0.106, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( location(D, E) )
%   | | then if ( interaction(A, D) )
%   | | | then return -0.04400193630482269;  // std dev = 1.383, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | | else return 0.01509916486634087;  // std dev = 5.226, 319.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=98 */
%   | | else if ( interaction(F, D), location(F, E) )
%   | | | then return 0.012453914714941691;  // std dev = 1.467, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.08687549291454455;  // std dev = 2.377, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return -0.007231649256386942;  // std dev = 1.251, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.15753249683353052;  // std dev = 0.884, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.1864564580765141;  // std dev = 1.469, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.047209055158921265;  // std dev = 2.186, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.244', 'seconds']
Refined model CLL: -0.194469


******************************************
Best model found
******************************************
Results 

CLL : -0.205328 

AUC ROC : 0.98501 

AUC PR : 0.323156 

Precision : 0.252747 

Recall : 0.663462 

F1 : 0.366048 

Total Learning Time : 51.005 

Total Inference Time : 39.52394127845764 

Total revision time: 95.2374242401123
Best scored revision CLL: -0.194469


Results 

CLL : -0.205328 

AUC ROC : 0.98501 

AUC PR : 0.323156 

Precision : 0.252747 

Recall : 0.663462 

F1 : 0.366048 

Total Learning Time : 105.95820890426636 

Total Inference Time : 39.52394127845764 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.831
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19572855293390312;  // std dev = 13.249, 785.000 (wgt'ed) examples reached here.  /* #neg=520 #pos=265 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18013226290752513;  // std dev = 9.794, 423.000 (wgt'ed) examples reached here.  /* #neg=276 #pos=147 */
%   | | | else return 0.18696888676542558;  // std dev = 8.728, 333.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=118 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14093952646650257;  // std dev = 8.433, 319.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=107 */
%   | | | else return 0.11104665770999868;  // std dev = 10.475, 517.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=158 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1305875195935071;  // std dev = 6.512, 187.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=65 */
%   | | | else return 0.12167562724473509;  // std dev = 11.531, 596.000 (wgt'ed) examples reached here.  /* #neg=396 #pos=200 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08815710721882916;  // std dev = 13.383, 817.000 (wgt'ed) examples reached here.  /* #neg=552 #pos=265 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08398281250002537;  // std dev = 13.261, 788.000 (wgt'ed) examples reached here.  /* #neg=523 #pos=265 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7273634265851252;  // std dev = 0.002, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.27264809174489657;  // std dev = 0.003, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09448086271753015;  // std dev = 7.246, 228.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=82 */
%   | | | else return 0.08534931095591682;  // std dev = 7.018, 216.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=76 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05162599915695346;  // std dev = 6.555, 307.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=107 */
%   | | | else return 0.07050222175157916;  // std dev = 10.101, 446.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=158 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04150541584745919;  // std dev = 12.122, 771.000 (wgt'ed) examples reached here.  /* #neg=506 #pos=265 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03454144509230675;  // std dev = 12.092, 767.000 (wgt'ed) examples reached here.  /* #neg=502 #pos=265 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.010', 'seconds']
Parameter learned model CLL:-0.343656 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.249, 520, 265]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.794, 276, 147], 'false,false,false,false': [8.728, 215, 118]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.433, 212, 107], 'false,false,false,false': [10.475, 359, 158]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.512, 122, 65], 'false,false,false,false': [11.531, 396, 200]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.383, 552, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.261, 523, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.002, 0, 107], 'true,false': [0.003, 203, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.246, 146, 82], 'false,false,false,false': [7.018, 140, 76]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.555, 200, 107], 'false,false,false,false': [10.101, 288, 158]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.122, 506, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.092, 502, 265]}]
{'': [nan, 0.22361961945718078], 'false': [nan, 0.22361961945718156], 'false,false': [nan, 0.22361961945718078], 'false,false,false': [nan, 0.22361961945718156]}
{'': [nan, 0.22765845021135395], 'false': [nan, 0.22765845021136397], 'false,false': [nan, 0.22765845021135395], 'false,false,false': [0.22674915748705182, 0.2287873459044666]}
{'': [nan, 0.21653263373973008], 'false': [nan, 0.21653263373973008], 'false,false': [nan, 0.21653263373972725], 'false,false,false': [0.2229480679131799, 0.2122332016656824]}
{'': [nan, 0.2239879375041136], 'false': [nan, 0.2239879375041136], 'false,false': [nan, 0.2239879375041113], 'false,false,false': [0.22677228402299357, 0.22309535750525444]}
{'': [nan, 0.21920777102583702], 'false': [nan, 0.21920777102583702], 'false,false': [nan, 0.2192077710258374], 'false,false,false': [nan, 0.2192077710258374]}
{'': [nan, 0.22315590101393729], 'false': [nan, 0.22315590101393729], 'false,false': [nan, 0.22315590101394106], 'false,false,false': [nan, 0.22315590101393715]}
{'': [0.22603022049816981, 0.22922810853488496], 'false': [nan, 0.22922810853488496], 'false,false': [nan, 0.22922810853488496], 'false,false,false': [0.23030163127115963, 0.22805212620027399], 'true': [4.037630720731443e-08, 3.922481102924266e-08], 'true,true': [nan, 4.037630720731443e-08], 'true,true,false': [nan, 4.037630720731443e-08]}
{'': [nan, 0.19265122628479506], 'false': [nan, 0.19265122628479506], 'false,false': [nan, 0.19265122628479123], 'false,false,false': [0.13998201169485705, 0.22876032675735516]}
{'': [nan, 0.19057290408520855], 'false': [nan, 0.19057290408521133], 'false,false': [nan, 0.19057290408521133], 'false,false,false': [nan, 0.19057290408521133]}
{'': [nan, 0.19062142133862542], 'false': [nan, 0.19062142133862542], 'false,false': [nan, 0.19062142133862514], 'false,false,false': [nan, 0.19062142133862514]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 50.108
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8337586911970727;  // std dev = 0.154, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( phenotype(A, E), complex(A, F) )
%   | | | then return 0.0010060779566551223;  // std dev = 1.852, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return -0.08629550934493223;  // std dev = 1.374, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else if ( enzyme(D, G), complex(A, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.18423589162125145;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(J, K), phenotype(I, L) )
%   | | | then return 0.16782635445435126;  // std dev = 5.756, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
%   | | | else return 0.11693487759152571;  // std dev = 7.748, 313.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=81 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.17545662740720405;  // std dev = 6.713, 208.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=66 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.7224785504842263;  // std dev = 0.291, 147.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=133 */
%   | | else return -0.1576838706501966;  // std dev = 0.071, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return -0.15846785311961595;  // std dev = 0.116, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
%   else if ( enzyme(A, F), complex(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.810924236197877;  // std dev = 0.225, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.15808078354320185;  // std dev = 0.072, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( location(J, I) )
%   | | | then return 0.18094985033061356;  // std dev = 6.469, 194.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=67 */
%   | | | else return 0.09119276487646003;  // std dev = 3.872, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7214319182564296;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07244746149794334;  // std dev = 3.804, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.55162114595787;  // std dev = 0.194, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), interaction(F, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14393738429655212;  // std dev = 0.051, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.08802860522445492;  // std dev = 2.076, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(G, A), complex(D, H) )
%   | | | then return 0.158223434212686;  // std dev = 2.519, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | | else return 0.06574640419400059;  // std dev = 3.382, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(A, K), complex(I, K) )
%   | | | then return 0.03297816015200475;  // std dev = 2.716, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.12887250737270664;  // std dev = 8.407, 379.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=118 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.32258091367003766;  // std dev = 1.413, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.134299576457746;  // std dev = 5.294, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F) )
%   | | then return 0.4532679975635194;  // std dev = 0.366, 138.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=106 */
%   | | else return -0.1700181402275936;  // std dev = 0.239, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.1614128927906123;  // std dev = 0.306, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.6504542762399433;  // std dev = 0.095, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return -0.17529716887130667;  // std dev = 0.053, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(K, B) )
%   | | | then return 0.6302742078044876;  // std dev = 0.634, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.03642990363672138;  // std dev = 4.612, 137.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=33 */
%   | | else if ( location(A, M) )
%   | | | then return 0.15881990223878883;  // std dev = 6.530, 203.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=75 */
%   | | | else return 0.37916115136602396;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then if ( interaction(A, F), interaction(C, F) )
%   | | then return 0.2978089602984762;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.3619934378799134;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.31107610832876875;  // std dev = 0.197, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5867369535331945;  // std dev = 0.118, 86.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=85 */
%   | | else return -0.15816146222427913;  // std dev = 0.787, 256.000 (wgt'ed) examples reached here.  /* #neg=256 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5548538757824761;  // std dev = 0.898, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.014029059802150403;  // std dev = 4.325, 142.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=31 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.06848215893433897;  // std dev = 3.279, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | | else return 0.15412257821606312;  // std dev = 6.390, 183.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=71 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.30517341499916467;  // std dev = 0.211, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else if ( interaction(C, F), complex(F, G) )
%   | | then return -0.09068901215784335;  // std dev = 0.995, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.10109543233623311;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5517454253701303;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then if ( location(A, K), location(I, K) )
%   | | then return -0.03286239500441428;  // std dev = 0.257, 128.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=23 */
%   | | else return 0.09053937110207977;  // std dev = 0.368, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12022747773341409;  // std dev = 0.159, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.2217096503702814;  // std dev = 0.890, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.06743999559413534;  // std dev = 8.990, 541.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=177 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.22931591697737455;  // std dev = 0.207, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.33924760688974914;  // std dev = 0.208, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4519098131813195;  // std dev = 0.546, 76.000 (wgt'ed) examples reached here.  /* #pos=76 */
%   | else return -0.1438420573105797;  // std dev = 0.052, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(G, H), interaction(A, G) )
%   | | then return 0.1740870687769991;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2745807408854412;  // std dev = 0.056, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1317837491386083;  // std dev = 0.147, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.045821032066016586;  // std dev = 4.751, 187.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=59 */
%   | | | else return 0.08867781079534216;  // std dev = 7.089, 230.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=81 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.19038043313759848;  // std dev = 0.039, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( phenotype(C, E), interaction(F, C) )
%   | | then return 0.24259232496882344;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, C), phenotype(G, H) )
%   | | | then return -0.32981233508639973;  // std dev = 0.623, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10818945060182336;  // std dev = 0.760, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.10816081459337541;  // std dev = 0.209, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3366039772618159;  // std dev = 0.581, 84.000 (wgt'ed) examples reached here.  /* #pos=84 */
%   | | | else return -0.13763813410800532;  // std dev = 0.764, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.11888631678234939;  // std dev = 3.113, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | | else return 0.04029219762424274;  // std dev = 7.957, 378.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=119 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(D, E) )
%   | then if ( complex(A, F), complex(C, F) )
%   | | then return 0.17825144568302642;  // std dev = 0.038, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(C, C), interaction(C, A) )
%   | | | then return 0.13451146182771542;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.4445959203748246;  // std dev = 0.841, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.3057571229686875;  // std dev = 0.173, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.19313117828802742;  // std dev = 0.045, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2620646351505354;  // std dev = 1.142, 77.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=76 */
%   | | | else return -0.11013281063711788;  // std dev = 0.522, 231.000 (wgt'ed) examples reached here.  /* #neg=231 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10120744734684954;  // std dev = 0.105, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.018684889459043744;  // std dev = 8.555, 445.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=133 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.09507874471094771;  // std dev = 0.166, 159.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=106 */
%   | else return -0.09394793876812632;  // std dev = 0.363, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.1284606835928596;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(F, G), enzyme(F, H) )
%   | | | then return 0.24061255985665664;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.017572285212392676;  // std dev = 3.182, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.5443264522435144;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1801745805237524;  // std dev = 0.567, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.07173638520388805;  // std dev = 3.687, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | | else return 0.02002188999021847;  // std dev = 6.887, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.594', 'seconds']
Refined model CLL: -0.219391


******************************************
Best model found
******************************************
Results 

CLL : -0.223556 

AUC ROC : 0.96685 

AUC PR : 0.315571 

Precision : 0.277533 

Recall : 0.605769 

F1 : 0.380665 

Total Learning Time : 50.108 

Total Inference Time : 49.94005489349365 

Total revision time: 105.39083968544006
Best scored revision CLL: -0.219391


Results 

CLL : -0.223556 

AUC ROC : 0.96685 

AUC PR : 0.315571 

Precision : 0.277533 

Recall : 0.605769 

F1 : 0.380665 

Total Learning Time : 116.11162434959411 

Total Inference Time : 49.94005489349365 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.047
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284466;  // std dev = 6.055, 165.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14899496491575964;  // std dev = 4.531, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | | else return 0.16653882456488242;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09165546809729083;  // std dev = 3.596, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return 0.1693728942525273;  // std dev = 4.870, 103.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07481314280097283;  // std dev = 2.687, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.14191951732067096;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10809667210684121;  // std dev = 6.000, 161.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08942357163188738;  // std dev = 5.998, 160.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=55 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.742209333848253;  // std dev = 0.034, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.2564792067995311;  // std dev = 0.058, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.12942123002981315;  // std dev = 3.440, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.11306604478831273;  // std dev = 3.206, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05824370100515252;  // std dev = 2.715, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.027700027191374613;  // std dev = 4.967, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02681360520389858;  // std dev = 5.652, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0026980448723525176;  // std dev = 5.772, 180.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=55 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.647', 'seconds']
Parameter learned model CLL:-0.337964 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.055, 110, 55]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.531, 65, 30], 'false,false,false,false': [4.082, 50, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.596, 46, 18], 'false,false,false,false': [4.87, 66, 37]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.687, 26, 10], 'false,false,false,false': [5.379, 81, 45]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.0, 106, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.998, 105, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.034, 0, 18], 'true,false': [0.058, 55, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.44, 29, 20], 'false,false,false,false': [3.206, 26, 17]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.715, 35, 18], 'false,false,false,false': [4.967, 74, 37]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.652, 113, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.772, 125, 55]}]
{'': [nan, 0.22222222222222254], 'false': [nan, 0.22222222222222313], 'false,false': [nan, 0.22222222222222254], 'false,false,false': [nan, 0.22222222222222313]}
{'': [nan, 0.21885813148788827], 'false': [nan, 0.2188581314878896], 'false,false': [nan, 0.21885813148788827], 'false,false,false': [0.21606648199446066, 0.222222222222223]}
{'': [nan, 0.22086773920287653], 'false': [nan, 0.22086773920287653], 'false,false': [nan, 0.2208677392028757], 'false,false,false': [0.2020684703720333, 0.23023410838400385]}
{'': [nan, 0.2239757185242219], 'false': [nan, 0.2239757185242219], 'false,false': [nan, 0.22397571852422282], 'false,false,false': [0.20061728395061706, 0.22964883130689567]}
{'': [nan, 0.22363396052451665], 'false': [nan, 0.22363396052451665], 'false,false': [nan, 0.2236339605245177], 'false,false,false': [nan, 0.2236339605245177]}
{'': [nan, 0.22484391589741431], 'false': [nan, 0.22484391589741431], 'false,false': [nan, 0.22484391589741382], 'false,false,false': [nan, 0.2248439158974141]}
{'': [0.18535094436017466, 0.2404557675168908], 'false': [nan, 0.2404557675168908], 'false,false': [nan, 0.2404557675168908], 'false,false,false': [0.24156601416076645, 0.2390481341265549], 'true': [6.503468797940886e-05, 6.094986460231605e-05], 'true,true': [nan, 6.503468797940886e-05], 'true,true,false': [nan, 6.503468797940886e-05]}
{'': [nan, 0.19558355632857094], 'false': [nan, 0.19558355632857094], 'false,false': [nan, 0.19558355632857094], 'false,false,false': [0.13912360913571198, 0.22224041834314195]}
{'': [nan, 0.190128180035533], 'false': [nan, 0.19012818003553286], 'false,false': [nan, 0.19012818003553286], 'false,false,false': [nan, 0.19012818003553286]}
{'': [nan, 0.18511159643818512], 'false': [nan, 0.18511159643818512], 'false,false': [nan, 0.18511159643818484], 'false,false,false': [nan, 0.18511159643818484]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.53
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, E), enzyme(A, F) )
%   | | then if ( interaction(E, G), enzyme(G, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.13592671287729008;  // std dev = 1.900, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( location(A, H) )
%   | | | then return 0.26218933913991566;  // std dev = 4.882, 99.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=40 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.2881676721130466;  // std dev = 0.476, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else return -0.10890329956769382;  // std dev = 0.217, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0.013079256820952881;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, E), interaction(I, A) )
%   | | | then return 0.8231462343190691;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43088759188880554;  // std dev = 1.871, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), enzyme(L, M) )
%   | | | then return 0.5797427697025918;  // std dev = 1.170, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.13442867378945295;  // std dev = 1.642, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.21893695426063606;  // std dev = 3.173, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.035856066736725596;  // std dev = 1.988, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, C) )
%   | then return -0.08852333197541837;  // std dev = 0.308, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(A, F), phenotype(F, E) )
%   | | | then return 0.4262401179739696;  // std dev = 1.076, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.18166999935423483;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(C, G), complex(C, H) )
%   | | | then return 0.2596221788638253;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7583826097514894;  // std dev = 0.211, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, I), interaction(J, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13146451810698975;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.23434012299811616;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.09147107845574273;  // std dev = 4.095, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | else return -0.08039894099604272;  // std dev = 0.317, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5770339531717679;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), phenotype(A, G) )
%   | | then if ( phenotype(D, F), interaction(D, D) )
%   | | | then return 0.17636292916293533;  // std dev = 1.395, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.12688429967540954;  // std dev = 1.320, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( interaction(E, D), location(A, H) )
%   | | | then return 0.0672160518092929;  // std dev = 1.165, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.45921950226188313;  // std dev = 1.508, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7454881390090924;  // std dev = 0.165, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.25200011935768696;  // std dev = 0.161, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.018951790959887287;  // std dev = 3.741, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return -0.1389867953594559;  // std dev = 1.189, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then return -0.19593535675361157;  // std dev = 0.126, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(A, C), interaction(C, A) )
%   | then if ( phenotype(A, D), phenotype(C, D) )
%   | | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | | then return 0.5272287023741313;  // std dev = 0.806, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.2611634782055252;  // std dev = 0.221, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.009483903161955673;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.19290311359289056;  // std dev = 0.162, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.41333003650116984;  // std dev = 0.159, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.2009043858237465;  // std dev = 1.771, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.04217278954601673;  // std dev = 4.505, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.3550144784503047;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.28583020695417266;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1521697736549917;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.41677467473751745;  // std dev = 0.750, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11367972202414431;  // std dev = 1.855, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, I) )
%   | | | then return -0.17045184425148502;  // std dev = 0.695, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.441927072529522;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16043340150286325;  // std dev = 2.249, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return -0.019428538520951253;  // std dev = 3.754, 86.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49529236405181654;  // std dev = 0.244, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return -0.2488554370876844;  // std dev = 0.102, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return -0.0696310468942179;  // std dev = 0.311, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.4427995355142105;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1047129782953264;  // std dev = 1.327, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6546685073819449;  // std dev = 1.007, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.24826420212609837;  // std dev = 0.200, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.2199052413999092;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.0217261025260012;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( complex(A, E), location(A, D) )
%   | then return -0.06705034252279446;  // std dev = 0.234, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.3460348894863722;  // std dev = 0.235, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( enzyme(C, G), interaction(C, H) )
%   | | | then return -0.15620967703193533;  // std dev = 1.169, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.005369247020570829;  // std dev = 1.938, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( interaction(J, J), complex(A, K) )
%   | | then return 0.3027149704758606;  // std dev = 0.635, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, L), interaction(I, J) )
%   | | | then return -0.06579738919691423;  // std dev = 1.523, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.13804554413290468;  // std dev = 2.527, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | else if ( phenotype(A, M) )
%   | | then return -0.03749714494455225;  // std dev = 0.748, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.20367808038804566;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, C) )
%   | | then return 0.3455746346754756;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.016588752232569726;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.09365866084116105;  // std dev = 0.277, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   else if ( phenotype(A, F), interaction(G, A) )
%   | then if ( enzyme(A, H), complex(A, I) )
%   | | then return 0.18921548103237967;  // std dev = 0.611, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, J), interaction(K, G) )
%   | | | then return -0.136503187324226;  // std dev = 0.748, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.0035434525971719533;  // std dev = 2.124, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( location(A, L), interaction(M, A) )
%   | | then if ( enzyme(A, N), complex(M, P) )
%   | | | then return 0.2981048317979325;  // std dev = 0.910, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.08164143445970691;  // std dev = 2.333, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | else return -0.06276779784337971;  // std dev = 0.223, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( complex(A, E), interaction(C, F) )
%   | then return -0.0667838525996858;  // std dev = 0.243, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.26888918990402455;  // std dev = 0.305, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(C, H) )
%   | | | then return 0.09351152426934332;  // std dev = 1.197, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.07046017664612098;  // std dev = 1.264, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.3994731214181071;  // std dev = 0.257, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), interaction(L, J) )
%   | | | then return -0.051298485871757026;  // std dev = 0.677, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3267717854295502;  // std dev = 0.870, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( location(A, M) )
%   | | | then return 0.04309289083329522;  // std dev = 3.061, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   | | | else return -0.13456101026201006;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.359', 'seconds']
Refined model CLL: -0.266651


******************************************
Best model found
******************************************
Results 

CLL : -0.264798 

AUC ROC : 0.814279 

AUC PR : 0.131564 

Precision : 0.066079 

Recall : 0.326087 

F1 : 0.10989 

Total Learning Time : 8.53 

Total Inference Time : 3.6405837535858154 

Total revision time: 14.825321771621702
Best scored revision CLL: -0.266651


Results 

CLL : -0.264798 

AUC ROC : 0.814279 

AUC PR : 0.131564 

Precision : 0.066079 

Recall : 0.326087 

F1 : 0.10989 

Total Learning Time : 25.546106435775755 

Total Inference Time : 3.6405837535858154 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.368
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1955722479829484;  // std dev = 8.537, 326.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16596964845352982;  // std dev = 6.272, 177.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=59 */
%   | | | else return 0.16380514628902695;  // std dev = 5.840, 154.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.141663585771219;  // std dev = 5.228, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
%   | | | else return 0.14012223554186465;  // std dev = 6.790, 208.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=69 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10175070755787405;  // std dev = 4.134, 79.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=25 */
%   | | | else return 0.110152078917563;  // std dev = 7.578, 262.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=85 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1095290725805579;  // std dev = 8.503, 321.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06190468477825851;  // std dev = 8.679, 349.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7352012126746199;  // std dev = 0.004, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2647706632404463;  // std dev = 0.005, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09223379864473084;  // std dev = 4.672, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | | else return 0.04726110991004876;  // std dev = 4.905, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04809038886507414;  // std dev = 4.109, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.04792173957811502;  // std dev = 6.813, 211.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=69 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04573366881280579;  // std dev = 7.902, 325.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038725170908095616;  // std dev = 7.873, 323.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=110 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.628', 'seconds']
Parameter learned model CLL:-0.336448 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.537, 216, 110]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.272, 118, 59], 'false,false,false,false': [5.84, 103, 51]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.228, 82, 41], 'false,false,false,false': [6.79, 139, 69]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.134, 54, 25], 'false,false,false,false': [7.578, 177, 85]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.503, 211, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.679, 239, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.004, 0, 41], 'true,false': [0.005, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.672, 61, 34], 'false,false,false,false': [4.905, 77, 35]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.109, 81, 41], 'false,false,false,false': [6.813, 142, 69]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.902, 215, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.873, 213, 110]}]
{'': [nan, 0.22356882080620516], 'false': [nan, 0.22356882080620324], 'false,false': [nan, 0.22356882080620516], 'false,false,false': [nan, 0.22356882080620324]}
{'': [nan, 0.22188552495869343], 'false': [nan, 0.22188552495869893], 'false,false': [nan, 0.22188552495869343], 'false,false,false': [0.22222222222222218, 0.2214960364311017]}
{'': [nan, 0.22188721148473334], 'false': [nan, 0.22188721148473334], 'false,false': [nan, 0.22188721148473203], 'false,false,false': [0.22223315093461343, 0.22168175868609727]}
{'': [nan, 0.21852363962759214], 'false': [nan, 0.21852363962759214], 'false,false': [nan, 0.21852363962759186], 'false,false,false': [0.2163114885435032, 0.2191743101999693]}
{'': [nan, 0.22523951589434596], 'false': [nan, 0.22523951589434596], 'false,false': [nan, 0.22523951589434754], 'false,false,false': [nan, 0.22523951589434754]}
{'': [nan, 0.21582089641450863], 'false': [nan, 0.21582089641450863], 'false,false': [nan, 0.2158208964145088], 'false,false,false': [nan, 0.21582089641450936]}
{'': [0.22491824937765095, 0.22221275168088092], 'true': [3.510334057470639e-07, 3.427441023204183e-07], 'false': [nan, 0.22221275168088092], 'false,false': [nan, 0.22221275168088092], 'false,false,false': [0.22980609418282616, 0.21484374999999875], 'true,true': [nan, 3.510334057470639e-07], 'true,true,false': [nan, 3.510334057470639e-07]}
{'': [nan, 0.19011548556819802], 'false': [nan, 0.19011548556819802], 'false,false': [nan, 0.190115485568198], 'false,false,false': [0.13841091350540335, 0.22001100970542742]}
{'': [nan, 0.19212453784272407], 'false': [nan, 0.19212453784272449], 'false,false': [nan, 0.19212453784272449], 'false,false,false': [nan, 0.19212453784272449]}
{'': [nan, 0.19190889204342115], 'false': [nan, 0.19190889204342115], 'false,false': [nan, 0.19190889204342157], 'false,false,false': [nan, 0.19190889204342157]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.98
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( enzyme(A, G), complex(F, H) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.14075763075168626;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7418698653320699;  // std dev = 2.102, 43.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=38 */
%   | | | else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.31846639541697147;  // std dev = 3.956, 63.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=29 */
%   | | | else return 0.12229987849573878;  // std dev = 3.210, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7453306497916032;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(C, D) )
%   | | then return 0.11212197432826462;  // std dev = 0.425, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else return -0.0650732366673813;  // std dev = 0.263, 34.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), complex(E, G) )
%   | | then return 0.79659560231716;  // std dev = 0.146, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7522852481663976;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.14085637956426827;  // std dev = 6.101, 193.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=61 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then return -0.17343802917497822;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.1702913479676733;  // std dev = 2.515, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5767652670834661;  // std dev = 0.206, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(D, F), phenotype(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6855688360079818;  // std dev = 0.902, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.04879228230585381;  // std dev = 3.039, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7593654849350234;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.09779949108665358;  // std dev = 1.804, 56.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7716303123368834;  // std dev = 0.145, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1688154153675709;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.046448395060750707;  // std dev = 2.335, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.17362882228390264;  // std dev = 4.567, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4042012362809042;  // std dev = 0.264, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.6444216034380299;  // std dev = 0.358, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2947893150356262;  // std dev = 0.867, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.14242683419333743;  // std dev = 0.878, 66.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=1 */
%   | | | else return 0.09580563216837223;  // std dev = 2.278, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(J, A), interaction(H, K) )
%   | | | then return 0.11645395101290085;  // std dev = 2.398, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.6176193440282988;  // std dev = 0.870, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.09481772279824074;  // std dev = 5.383, 173.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=54 */
%   | | | else return -0.18852026973753713;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3886411708425332;  // std dev = 0.105, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( location(A, E), complex(D, H) )
%   | | | then return -0.010354368135721834;  // std dev = 0.797, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3704389776494953;  // std dev = 1.256, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1279858555121284;  // std dev = 0.035, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.01852873249654676;  // std dev = 4.115, 125.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=32 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), interaction(K, A) )
%   | | | then return 0.08951737558368064;  // std dev = 2.415, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.1959134296035774;  // std dev = 3.629, 65.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=29 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.12201929281597404;  // std dev = 1.414, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.009443842291163;  // std dev = 1.961, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(E, A) )
%   | then return 0.2927031798925199;  // std dev = 0.100, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then return -0.13440456113584742;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, C) )
%   | | | then return 0.3834134999223508;  // std dev = 0.198, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07480372584414437;  // std dev = 0.520, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3290193025028266;  // std dev = 0.744, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( interaction(K, A), interaction(K, I) )
%   | | | then return -0.04481590802930986;  // std dev = 2.657, 86.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=13 */
%   | | | else return 0.08057591606693347;  // std dev = 3.498, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07715756552494461;  // std dev = 4.905, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
%   | | | else return -0.01770800563261732;  // std dev = 1.110, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.530318609844929;  // std dev = 0.163, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.202010805460979;  // std dev = 0.069, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F) )
%   | | then return -0.02810976870345783;  // std dev = 0.325, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | | else if ( phenotype(A, G), phenotype(E, G) )
%   | | | then return -0.24593382657839197;  // std dev = 0.217, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.10719503329710103;  // std dev = 3.752, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.17328602401816617;  // std dev = 1.258, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.40485391423764616;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.11961977262698324;  // std dev = 1.338, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.09442383321640585;  // std dev = 0.915, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, C), recursion_proteinclass(D, B) )
%   | then return 0.30667519383477443;  // std dev = 0.240, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else if ( interaction(A, E), interaction(E, D) )
%   | | then return -0.14185863106692082;  // std dev = 0.188, 51.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=2 */
%   | | else if ( location(A, F), location(D, F) )
%   | | | then return 0.03373799139090762;  // std dev = 4.634, 155.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=54 */
%   | | | else return 0.14203088938112934;  // std dev = 2.468, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   else if ( interaction(A, G) )
%   | then if ( interaction(H, A), enzyme(A, I) )
%   | | then return 0.2448667679489401;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(G, J) )
%   | | | then return -0.06668534231667714;  // std dev = 1.746, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.1078892902864797;  // std dev = 1.127, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( enzyme(A, K) )
%   | | then return -0.01261058998742444;  // std dev = 0.385, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.16832198944247495;  // std dev = 0.247, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19381246975041733;  // std dev = 0.077, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), phenotype(A, G) )
%   | | | then return -0.376208838510853;  // std dev = 0.635, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3519098365250875;  // std dev = 1.051, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1267514604016447;  // std dev = 0.312, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.041801306052609635;  // std dev = 5.264, 184.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=62 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( complex(J, I), interaction(J, J) )
%   | | | then return -0.15402104424316937;  // std dev = 0.711, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.2106953624148343;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.13097232493527916;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08744723977913937;  // std dev = 2.178, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.11875168511214082;  // std dev = 0.208, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.3042443929651564;  // std dev = 0.279, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else return -0.05765540895713893;  // std dev = 0.285, 142.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=21 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), phenotype(H, I) )
%   | | then if ( enzyme(A, J), interaction(F, H) )
%   | | | then return 0.25244438293286436;  // std dev = 1.570, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.05284580676562398;  // std dev = 2.840, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else return 0.5954099531236158;  // std dev = 0.190, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.25887618827862113;  // std dev = 2.173, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return -0.23546581933214464;  // std dev = 0.193, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.18626060995615376;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.048', 'seconds']
Refined model CLL: -0.249847


******************************************
Best model found
******************************************
Results 

CLL : -0.250744 

AUC ROC : 0.879715 

AUC PR : 0.346073 

Precision : 0.428571 

Recall : 0.423913 

F1 : 0.42623 

Total Learning Time : 15.98 

Total Inference Time : 9.671296119689941 

Total revision time: 29.148139665603637
Best scored revision CLL: -0.249847


Results 

CLL : -0.250744 

AUC ROC : 0.879715 

AUC PR : 0.346073 

Precision : 0.428571 

Recall : 0.423913 

F1 : 0.42623 

Total Learning Time : 39.86892432975769 

Total Inference Time : 9.671296119689941 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.498
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2105905486876216;  // std dev = 10.368, 471.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=166 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1791920046125012;  // std dev = 7.699, 261.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=91 */
%   | | | else return 0.18100029050070762;  // std dev = 6.980, 214.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=75 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15634171216414275;  // std dev = 6.586, 190.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=67 */
%   | | | else return 0.12198508738880248;  // std dev = 8.215, 311.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=99 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09335466364432662;  // std dev = 5.298, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.12414620103019107;  // std dev = 9.070, 366.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=125 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12082316912130688;  // std dev = 10.307, 461.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=166 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07025367385867935;  // std dev = 10.528, 500.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=166 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7224681166155139;  // std dev = 0.026, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.2771571867459117;  // std dev = 0.036, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05039423630876363;  // std dev = 5.811, 154.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=50 */
%   | | | else return 0.029706649778080622;  // std dev = 5.838, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06688337873924192;  // std dev = 5.090, 179.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=67 */
%   | | | else return 0.08155710257322946;  // std dev = 7.934, 272.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=99 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0156943195743657;  // std dev = 9.771, 519.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=166 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0268631534553525;  // std dev = 9.663, 492.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=166 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.588', 'seconds']
Parameter learned model CLL:-0.340418 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.368, 305, 166]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.699, 170, 91], 'false,false,false,false': [6.98, 139, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.586, 123, 67], 'false,false,false,false': [8.215, 212, 99]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.298, 89, 41], 'false,false,false,false': [9.07, 241, 125]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.307, 295, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.528, 334, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 67], 'true,false': [0.036, 133, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.811, 104, 50], 'false,false,false,false': [5.838, 112, 49]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.09, 112, 67], 'false,false,false,false': [7.934, 173, 99]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.771, 353, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.663, 326, 166]}]
{'': [nan, 0.2282265225995227], 'false': [nan, 0.22822652259952064], 'false,false': [nan, 0.2282265225995227], 'false,false,false': [nan, 0.22822652259952064]}
{'': [nan, 0.22734182825484942], 'false': [nan, 0.2273418282548489], 'false,false': [nan, 0.22734182825484942], 'false,false,false': [0.22709590287870302, 0.22763996855620497]}
{'': [nan, 0.22154901389453519], 'false': [nan, 0.22154901389453519], 'false,false': [nan, 0.22154901389453446], 'false,false,false': [0.22826802277127567, 0.21699650494934966]}
{'': [nan, 0.22263480590100074], 'false': [nan, 0.22263480590100074], 'false,false': [nan, 0.222634805901], 'false,false,false': [0.21591715976331446, 0.22477235620321848]}
{'': [nan, 0.23046188203479334], 'false': [nan, 0.23046188203479334], 'false,false': [nan, 0.23046188203479448], 'false,false,false': [nan, 0.23046188203479448]}
{'': [nan, 0.2216829959454696], 'false': [nan, 0.2216829959454696], 'false,false': [nan, 0.22168299594546842], 'false,false,false': [nan, 0.22168299594546992]}
{'': [0.2226178050108853, 0.21551389451769518], 'true': [1.0178405022276901e-05, 9.4888051891629e-06], 'false': [nan, 0.21551389451769518], 'false,false': [nan, 0.21551389451769518], 'false,false,false': [0.219261258222297, 0.21172022684309902], 'true,true': [nan, 1.0178405022276901e-05], 'true,true,false': [nan, 1.0178405022276901e-05]}
{'': [nan, 0.1970616898258255], 'false': [nan, 0.1970616898258255], 'false,false': [nan, 0.19706168982582614], 'false,false,false': [0.1447318367681785, 0.23141389160270742]}
{'': [nan, 0.18394650678238608], 'false': [nan, 0.1839465067823872], 'false,false': [nan, 0.1839465067823872], 'false,false,false': [nan, 0.1839465067823872]}
{'': [nan, 0.18978143673246517], 'false': [nan, 0.18978143673246517], 'false,false': [nan, 0.18978143673246203], 'false,false,false': [nan, 0.18978143673246203]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.529
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return -0.03658790700575091;  // std dev = 1.892, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return 0.14762261931003842;  // std dev = 4.842, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.058148935099512356;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.19399799170328708;  // std dev = 7.688, 265.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=89 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6505078949695753;  // std dev = 0.253, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.1131693340879763;  // std dev = 2.011, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.08451763266191589;  // std dev = 1.380, 35.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6449838496734042;  // std dev = 2.201, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.010042506081037433;  // std dev = 4.638, 152.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=26 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.8171756544114553;  // std dev = 0.150, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.1671444222787892;  // std dev = 1.05e-08, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.0872910688640615;  // std dev = 3.224, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | | | else return 0.18092016281897025;  // std dev = 5.699, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), interaction(E, E) )
%   | then if ( complex(E, F), interaction(E, C) )
%   | | then return 0.15292317277613712;  // std dev = 0.427, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return -0.03787425705631087;  // std dev = 0.308, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.5707699657997138;  // std dev = 0.317, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.02844582979871235;  // std dev = 2.483, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.17298303152712186;  // std dev = 2.275, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5554450281634419;  // std dev = 0.192, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5723249313240228;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13671037155625823;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.11528861414439588;  // std dev = 8.411, 359.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=108 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5350847935563696;  // std dev = 0.278, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(C, F), interaction(G, A) )
%   | | then if ( complex(A, H), enzyme(G, I) )
%   | | | then return 0.09453858906325321;  // std dev = 1.747, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return -0.1075493421982725;  // std dev = 1.962, 68.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=5 */
%   | | else if ( phenotype(A, J), phenotype(C, J) )
%   | | | then return 0.40251714941521344;  // std dev = 1.186, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.1020125500767754;  // std dev = 2.400, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.412282218921226;  // std dev = 0.227, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12348262418917302;  // std dev = 0.044, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.10634972560079345;  // std dev = 7.978, 322.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=102 */
%   | | | else return 0.2883419162593867;  // std dev = 2.258, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3995918452060709;  // std dev = 0.085, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( location(A, D), location(C, D) )
%   | | then if ( enzyme(A, E), enzyme(C, E) )
%   | | | then return -0.12487295928559848;  // std dev = 0.780, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.020440663803035324;  // std dev = 3.634, 99.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | | else return -0.2122045760370326;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.4250678458054802;  // std dev = 0.084, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( interaction(I, G), interaction(J, I) )
%   | | | then return 0.03452288307989215;  // std dev = 4.994, 153.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=40 */
%   | | | else return 0.19625413399998684;  // std dev = 2.712, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.19976326379645346;  // std dev = 4.430, 81.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=35 */
%   | | | else return 0.04879762320324229;  // std dev = 4.307, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2915149394984386;  // std dev = 0.204, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.5749097182742032;  // std dev = 1.457, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.1407786391626474;  // std dev = 1.090, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.16623451203009468;  // std dev = 0.453, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return 0.028323446521654968;  // std dev = 4.144, 100.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=23 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.20320285438099212;  // std dev = 2.513, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return -0.028003767330354572;  // std dev = 2.322, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else if ( location(A, K) )
%   | | | then return 0.12713725784285865;  // std dev = 5.929, 164.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=63 */
%   | | | else return 0.558420198147902;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5561559778034079;  // std dev = 0.196, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.19181142794918485;  // std dev = 0.072, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, E) )
%   | | | then return 0.2462119781007536;  // std dev = 0.427, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6960484836568704;  // std dev = 0.369, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return -0.229660333916156;  // std dev = 0.079, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), interaction(A, J) )
%   | | | then return -0.019491674325078538;  // std dev = 2.131, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.2596401783568394;  // std dev = 2.584, 34.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=20 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.039924591034643686;  // std dev = 4.627, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | | else return -0.06133565709906869;  // std dev = 1.429, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then return 0.42224716256676126;  // std dev = 0.220, 67.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=66 */
%   | | else return -0.1728877414140256;  // std dev = 0.104, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else return -0.16099255032084417;  // std dev = 0.424, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), phenotype(F, G) )
%   | | then return 0.03078018763448669;  // std dev = 0.867, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2759574628635561;  // std dev = 0.258, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3704766283905044;  // std dev = 0.945, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return -0.006857799888943661;  // std dev = 6.258, 253.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=64 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.024699724542880254;  // std dev = 2.309, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.1359306926237858;  // std dev = 0.893, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.27784022093787364;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(C, F), interaction(G, C) )
%   | | then return -0.010262203626296418;  // std dev = 0.306, 84.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=23 */
%   | | else if ( complex(A, H), interaction(I, C) )
%   | | | then return 0.46129111838223597;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.058809867548600576;  // std dev = 2.232, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   else if ( interaction(J, A), complex(A, K) )
%   | then return -0.00962620585753496;  // std dev = 0.222, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( phenotype(L, N), complex(L, P) )
%   | | | then return 0.12343041389370706;  // std dev = 1.834, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.06785755898072093;  // std dev = 2.143, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( interaction(A, Q), interaction(R, A) )
%   | | | then return 0.10722415869550078;  // std dev = 3.017, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.008449379372837693;  // std dev = 4.724, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16349292093931958;  // std dev = 0.078, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, E), location(A, F) )
%   | | | then return 0.012353082711408746;  // std dev = 3.849, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | | else return -0.11752705153582246;  // std dev = 1.777, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | else if ( interaction(A, G), interaction(H, D) )
%   | | | then return 0.08666137344543001;  // std dev = 3.322, 71.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=27 */
%   | | | else return -0.012004449753357842;  // std dev = 4.955, 161.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=46 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5099398543837104;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1572988028417761;  // std dev = 0.130, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.16869803290433524;  // std dev = 1.419, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.3921532367261372;  // std dev = 0.685, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.379', 'seconds']
Refined model CLL: -0.247498


******************************************
Best model found
******************************************
Results 

CLL : -0.254056 

AUC ROC : 0.932246 

AUC PR : 0.422638 

Precision : 0.536585 

Recall : 0.478261 

F1 : 0.505747 

Total Learning Time : 23.529 

Total Inference Time : 13.807284593582153 

Total revision time: 41.46338277053833
Best scored revision CLL: -0.247498


Results 

CLL : -0.254056 

AUC ROC : 0.932246 

AUC PR : 0.422638 

Precision : 0.536585 

Recall : 0.478261 

F1 : 0.505747 

Total Learning Time : 52.184167434692384 

Total Inference Time : 13.807284593582153 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.662
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18799968136816658;  // std dev = 12.170, 670.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=221 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14618891917000368;  // std dev = 8.696, 352.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=110 */
%   | | | else return 0.1940785295596133;  // std dev = 8.426, 308.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=111 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13108895156957653;  // std dev = 7.319, 246.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=79 */
%   | | | else return 0.1446297901682441;  // std dev = 9.708, 422.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=142 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12728504583661507;  // std dev = 5.647, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
%   | | | else return 0.10036385227135008;  // std dev = 10.880, 548.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=173 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11166276824095932;  // std dev = 12.040, 643.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=221 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09380054507093913;  // std dev = 12.016, 638.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=221 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7298224398128622;  // std dev = 0.018, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | else return -0.2699491152595256;  // std dev = 0.026, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06385394824395241;  // std dev = 6.446, 188.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=62 */
%   | | | else return 0.06649423889237051;  // std dev = 7.256, 234.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=80 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.058189743903727116;  // std dev = 5.612, 223.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=79 */
%   | | | else return 0.05165257937597545;  // std dev = 9.708, 423.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=142 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03214189171442333;  // std dev = 11.290, 671.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=221 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02595082099155744;  // std dev = 11.278, 670.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=221 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.737', 'seconds']
Parameter learned model CLL:-0.337818 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.17, 449, 221]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.696, 242, 110], 'false,false,false,false': [8.426, 197, 111]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.319, 167, 79], 'false,false,false,false': [9.708, 280, 142]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.647, 95, 48], 'false,false,false,false': [10.88, 375, 173]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.04, 422, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.016, 417, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.018, 0, 79], 'true,false': [0.026, 172, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.446, 126, 62], 'false,false,false,false': [7.256, 154, 80]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.612, 144, 79], 'false,false,false,false': [9.708, 281, 142]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.29, 450, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.278, 449, 221]}]
{'': [nan, 0.22104923145466934], 'false': [nan, 0.22104923145466893], 'false,false': [nan, 0.22104923145466934], 'false,false,false': [nan, 0.22104923145466893]}
{'': [nan, 0.22272497704315913], 'false': [nan, 0.22272497704316027], 'false,false': [nan, 0.22272497704315913], 'false,false,false': [0.2148437500000033, 0.23050893911283876]}
{'': [nan, 0.22132824897929831], 'false': [nan, 0.22132824897929831], 'false,false': [nan, 0.2213282489792986], 'false,false,false': [0.21773961103438022, 0.22335268110528653]}
{'': [nan, 0.21757230077890669], 'false': [nan, 0.21757230077890669], 'false,false': [nan, 0.2175723007789148], 'false,false,false': [0.22299378942735573, 0.21600758467200162]}
{'': [nan, 0.22543794460747427], 'false': [nan, 0.22543794460747427], 'false,false': [nan, 0.2254379446074741], 'false,false,false': [nan, 0.2254379446074741]}
{'': [nan, 0.22631107843378057], 'false': [nan, 0.22631107843378057], 'false,false': [nan, 0.22631107843378515], 'false,false,false': [nan, 0.22631107843377948]}
{'': [0.21558449481283187, 0.22323102098328887], 'false': [nan, 0.22323102098328887], 'false,false': [nan, 0.22323102098328887], 'false,false,false': [0.22102761430511603, 0.2249981737161234], 'true': [4.084137332709741e-06, 3.828490198291813e-06], 'true,true': [nan, 4.084137332709741e-06], 'true,true,false': [nan, 4.084137332709741e-06]}
{'': [nan, 0.19466826692869119], 'false': [nan, 0.19466826692869119], 'false,false': [nan, 0.19466826692869177], 'false,false,false': [0.1412517629396531, 0.2228139886536181]}
{'': [nan, 0.18996222922036618], 'false': [nan, 0.18996222922036635], 'false,false': [nan, 0.18996222922036635], 'false,false,false': [nan, 0.18996222922036635]}
{'': [nan, 0.1898416302085364], 'false': [nan, 0.1898416302085364], 'false,false': [nan, 0.18984163020853548], 'false,false,false': [nan, 0.18984163020853548]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 25.662
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G), interaction(H, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.673938408783722;  // std dev = 2.390, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | else return -0.007959851511366984;  // std dev = 5.265, 239.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=32 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.16194640345394085;  // std dev = 8.175, 316.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=96 */
%   | | | else return 0.27675358626230306;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return 0.13371491028260693;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, F) )
%   | | then return 0.7325594396689299;  // std dev = 0.143, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.3963136363268007;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.1408848769491681;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, G), location(A, I) )
%   | | | then return -0.04558158972460808;  // std dev = 2.629, 78.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=9 */
%   | | | else return 0.13062326345936268;  // std dev = 5.392, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.09715683406739431;  // std dev = 2.994, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.18733651749209412;  // std dev = 8.848, 349.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=122 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.5742276515565283;  // std dev = 0.217, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return 0.3552692633951244;  // std dev = 0.912, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.693005142600012;  // std dev = 0.984, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.12655669709893114;  // std dev = 1.527, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7094887251663426;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.02163965486852443;  // std dev = 4.816, 200.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=28 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12467938343568064;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.22707227563245216;  // std dev = 3.525, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | | | else return 0.1378660303832539;  // std dev = 8.545, 337.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=110 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, C) )
%   | | then return 0.4238113442304879;  // std dev = 0.154, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.07643188717207709;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, E), complex(A, F) )
%   | | then return 0.5541127092837742;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.652619212815607;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.11940170359401953;  // std dev = 0.026, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then if ( interaction(I, G), complex(I, J) )
%   | | | then return 0.09590155858703253;  // std dev = 9.307, 450.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=140 */
%   | | | else return 0.19871141178993654;  // std dev = 3.788, 62.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=26 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.17754454265412892;  // std dev = 1.744, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.02867935308071517;  // std dev = 3.715, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3794784108437698;  // std dev = 0.076, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F), phenotype(D, G) )
%   | | | then return 0.502692702893656;  // std dev = 1.791, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | | else return 0.02396174288824;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1493291545144624;  // std dev = 0.567, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | | else return 0.02695192816779088;  // std dev = 5.105, 155.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(I, H) )
%   | | | then return -0.10567460259984256;  // std dev = 1.337, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.08306720537379586;  // std dev = 4.077, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.19096715985808246;  // std dev = 2.103, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.09580507795783606;  // std dev = 7.472, 253.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=84 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.29968991533681866;  // std dev = 0.365, 73.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=58 */
%   | else if ( interaction(A, D) )
%   | | then return -0.13718541605277795;  // std dev = 0.047, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( enzyme(A, F), enzyme(D, G) )
%   | | | then return 0.20671780264348447;  // std dev = 3.706, 58.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=26 */
%   | | | else return 0.08821000405261056;  // std dev = 7.714, 299.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=102 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.5005871656727869;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04669743580944612;  // std dev = 0.414, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.13183347533356202;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.09050090376485273;  // std dev = 2.268, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.006657679150600857;  // std dev = 2.685, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5340563725766116;  // std dev = 0.242, 80.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=79 */
%   | else return -0.1955486033792087;  // std dev = 0.078, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.21658572733821635;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.05172587215745587;  // std dev = 2.026, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.08225783239219202;  // std dev = 0.240, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( phenotype(A, G), location(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.540906006938245;  // std dev = 3.181, 71.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=59 */
%   | | | else return -0.2594696322699484;  // std dev = 0.458, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.15339854519374763;  // std dev = 5.184, 114.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=49 */
%   | | | else return 0.051148068039044994;  // std dev = 2.533, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, C), recursion_proteinclass(C, B) )
%   | then return 0.1484306026144728;  // std dev = 0.034, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return -0.2646593269800267;  // std dev = 0.948, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(C, D) )
%   | | | then return -0.05472823198817758;  // std dev = 1.956, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | | | else return 0.008556810951725885;  // std dev = 1.863, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.21698967866601415;  // std dev = 0.074, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.3004619709753618;  // std dev = 6.752, 244.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=152 */
%   | | | else return -0.2202960650615366;  // std dev = 0.834, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.12241503239228242;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.19708515206174412;  // std dev = 1.891, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.12255652140049682;  // std dev = 0.187, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E), enzyme(D, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4822555344503198;  // std dev = 0.148, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.16807011871816283;  // std dev = 0.574, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.023818657153117356;  // std dev = 2.848, 100.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=23 */
%   | | | else return 0.09365504380737712;  // std dev = 1.753, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return -0.03252532807226813;  // std dev = 0.763, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.13423715651571738;  // std dev = 2.313, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.05037058344481014;  // std dev = 5.510, 223.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=75 */
%   | | | else return -0.0064199464565799546;  // std dev = 5.249, 202.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=57 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.19622701658787137;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.025249225697826283;  // std dev = 0.303, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(F, A), interaction(F, C) )
%   | | then return 0.15844760785883422;  // std dev = 0.059, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.23222454325078962;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.07072777799347445;  // std dev = 0.038, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.003810591167960024;  // std dev = 4.245, 194.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=60 */
%   | | | else return 0.054049894992527325;  // std dev = 6.455, 274.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=99 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.10615024046673173;  // std dev = 1.336, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.0016216488524850516;  // std dev = 3.712, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.012', 'seconds']
Refined model CLL: -0.250014


******************************************
Best model found
******************************************
Results 

CLL : -0.240702 

AUC ROC : 0.96322 

AUC PR : 0.318057 

Precision : 0.333333 

Recall : 0.23913 

F1 : 0.278481 

Total Learning Time : 25.662 

Total Inference Time : 23.644441604614258 

Total revision time: 54.19556629562378
Best scored revision CLL: -0.250014


Results 

CLL : -0.240702 

AUC ROC : 0.96322 

AUC PR : 0.318057 

Precision : 0.333333 

Recall : 0.23913 

F1 : 0.278481 

Total Learning Time : 64.91635095977783 

Total Inference Time : 23.644441604614258 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.947
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18557210294820817;  // std dev = 13.649, 846.000 (wgt'ed) examples reached here.  /* #neg=569 #pos=277 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16586379948053176;  // std dev = 9.944, 446.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=148 */
%   | | | else return 0.1752950757279515;  // std dev = 9.218, 378.000 (wgt'ed) examples reached here.  /* #neg=249 #pos=129 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1582083642575804;  // std dev = 8.229, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
%   | | | else return 0.1190429022997171;  // std dev = 10.925, 558.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=173 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09613400014986434;  // std dev = 6.840, 218.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=68 */
%   | | | else return 0.1483423218454677;  // std dev = 11.569, 581.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=209 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09491922704332603;  // std dev = 13.615, 837.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=277 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05824139322061614;  // std dev = 13.809, 888.000 (wgt'ed) examples reached here.  /* #neg=611 #pos=277 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7348796383649862;  // std dev = 0.059, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else return -0.26501727377645334;  // std dev = 0.087, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06711002492474165;  // std dev = 7.318, 242.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=80 */
%   | | | else return 0.09238957602108093;  // std dev = 7.729, 260.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=93 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04434958674892333;  // std dev = 6.573, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
%   | | | else return 0.060189214129435294;  // std dev = 10.680, 508.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=173 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029025422282709008;  // std dev = 12.679, 858.000 (wgt'ed) examples reached here.  /* #neg=581 #pos=277 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028181342684300063;  // std dev = 12.617, 844.000 (wgt'ed) examples reached here.  /* #neg=567 #pos=277 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.684', 'seconds']
Parameter learned model CLL:-0.332628 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.649, 569, 277]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.944, 298, 148], 'false,false,false,false': [9.218, 249, 129]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.229, 194, 104], 'false,false,false,false': [10.925, 385, 173]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.84, 150, 68], 'false,false,false,false': [11.569, 372, 209]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.615, 560, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.809, 611, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.059, 0, 104], 'true,false': [0.087, 234, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.318, 162, 80], 'false,false,false,false': [7.729, 167, 93]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.573, 209, 104], 'false,false,false,false': [10.68, 335, 173]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.679, 581, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.617, 567, 277]}]
{'': [nan, 0.22021723700462378], 'false': [nan, 0.22021723700462464], 'false,false': [nan, 0.22021723700462378], 'false,false,false': [nan, 0.22021723700462464]}
{'': [nan, 0.2231581086813043], 'false': [nan, 0.2231581086813105], 'false,false': [nan, 0.2231581086813043], 'false,false,false': [0.22172173178628413, 0.22480473670950085]}
{'': [nan, 0.21889542177649382], 'false': [nan, 0.21889542177649382], 'false,false': [nan, 0.21889542177648666], 'false,false,false': [0.22723790342934944, 0.21390610842632943]}
{'': [nan, 0.2266100269365049], 'false': [nan, 0.2266100269365049], 'false,false': [nan, 0.22661002693650248], 'false,false,false': [0.21462839828297292, 0.23036203021526677]}
{'': [nan, 0.22145596039485352], 'false': [nan, 0.22145596039485352], 'false,false': [nan, 0.22145596039485538], 'false,false,false': [nan, 0.22145596039485538]}
{'': [nan, 0.21475095749903542], 'false': [nan, 0.21475095749903542], 'false,false': [nan, 0.2147509574990345], 'false,false,false': [nan, 0.21475095749903553]}
{'': [0.21300648787092996, 0.22583353141259047], 'false': [nan, 0.22583353141259047], 'false,false': [nan, 0.22583353141259047], 'false,false,false': [0.22129635953828222, 0.22974852071006033], 'true': [3.292543296994611e-05, 3.253223002604724e-05], 'true,true': [nan, 3.292543296994611e-05], 'true,true,false': [nan, 3.292543296994611e-05]}
{'': [nan, 0.19161035709617769], 'false': [nan, 0.19161035709617769], 'false,false': [nan, 0.19161035709617477], 'false,false,false': [0.13803976426344103, 0.2245217836140038]}
{'': [nan, 0.18735935235071613], 'false': [nan, 0.18735935235071371], 'false,false': [nan, 0.18735935235071371], 'false,false,false': [nan, 0.18735935235071371]}
{'': [nan, 0.188604010212538], 'false': [nan, 0.188604010212538], 'false,false': [nan, 0.1886040102125367], 'false,false,false': [nan, 0.1886040102125367]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 56.56
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F), enzyme(A, D) )
%   | | then return 0.4295775065280837;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return 0.8025933795439567;  // std dev = 0.229, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.14185106490048768;  // std dev = 3.80e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.1264416180263422;  // std dev = 6.344, 205.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=55 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.791482268432845;  // std dev = 0.249, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.10184641409110795;  // std dev = 4.683, 119.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=29 */
%   | | | else return 0.21018975142604124;  // std dev = 9.456, 392.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=138 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8030337661985614;  // std dev = 0.147, 93.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | else return -0.1618698195589006;  // std dev = 0.146, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.7112933809571592;  // std dev = 0.224, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5051746065349939;  // std dev = 1.516, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.0942543625883083;  // std dev = 9.613, 497.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=127 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.22198982616463173;  // std dev = 2.396, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.030589404695201706;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.4695376000599462;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.49970674203601034;  // std dev = 1.159, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, C) )
%   | then return 0.2727053875753897;  // std dev = 0.405, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.5494839815151811;  // std dev = 0.360, 44.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | else return 0.026635464971518932;  // std dev = 0.368, 230.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=48 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then if ( interaction(A, I), phenotype(H, J) )
%   | | then return 0.1386827136008039;  // std dev = 0.391, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | else if ( interaction(H, H), phenotype(H, K) )
%   | | | then return 0.12711276334532595;  // std dev = 1.837, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.24344056370060557;  // std dev = 3.266, 60.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=28 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.5594226069194616;  // std dev = 0.222, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.09271566463516046;  // std dev = 5.851, 186.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=52 */
%   | | | else return 0.142322620405025;  // std dev = 6.436, 190.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=62 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), enzyme(C, E) )
%   | then return 0.6051705613312024;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3867659554976176;  // std dev = 0.335, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.06551490255984668;  // std dev = 0.247, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0.004943527096618503;  // std dev = 2.846, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | | | else return 0.09885668637825307;  // std dev = 5.243, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( recursion_proteinclass(I, B), enzyme(A, J) )
%   | | | then return 0.4368222537550439;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04629023357150793;  // std dev = 4.216, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.10987580612425374;  // std dev = 8.569, 391.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=125 */
%   | | | else return 0.1730944863375914;  // std dev = 2.675, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then return 0.3607452028401858;  // std dev = 0.158, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.04739323647067584;  // std dev = 0.866, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5185628480962372;  // std dev = 0.089, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.33424629016387114;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6077874618187684;  // std dev = 1.417, 80.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=78 */
%   | | else return -0.17055124290981774;  // std dev = 0.294, 184.000 (wgt'ed) examples reached here.  /* #neg=184 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5200475429055808;  // std dev = 0.054, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.04053051093934894;  // std dev = 4.270, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | | else return 0.11756909713067197;  // std dev = 8.589, 338.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, D) )
%   | then if ( interaction(A, C), interaction(C, C) )
%   | | then return 0.27839884090930483;  // std dev = 0.112, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.12564570765510116;  // std dev = 1.284, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.3926466827599631;  // std dev = 0.084, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.5996602488617031;  // std dev = 0.204, 82.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=81 */
%   | | else return -0.1815694165398388;  // std dev = 0.052, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( location(H, G) )
%   | | | then return 0.034350692064069294;  // std dev = 7.639, 369.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=104 */
%   | | | else return 0.09276379679111137;  // std dev = 3.609, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.06214695468334817;  // std dev = 2.026, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.002430322246762849;  // std dev = 3.036, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.43464665280610026;  // std dev = 0.176, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else return -0.16523428223097855;  // std dev = 0.072, 225.000 (wgt'ed) examples reached here.  /* #neg=225 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, E), recursion_proteinclass(F, B) )
%   | | then return 0.48255118027256316;  // std dev = 0.207, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.17541451398957592;  // std dev = 0.510, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return 0.04232012266221962;  // std dev = 7.640, 349.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=110 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3752026791155938;  // std dev = 0.651, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.020940481465208504;  // std dev = 2.609, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( location(A, I) )
%   | | | then return 0.22069112956741951;  // std dev = 2.179, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.07173346759880346;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), complex(D, G) )
%   | | | then return 0.25669749101522665;  // std dev = 2.084, 71.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=65 */
%   | | | else return 0.5262356547642754;  // std dev = 2.951, 178.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=174 */
%   | | else return -0.08932940377969391;  // std dev = 0.249, 155.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=24 */
%   | else return -0.18831174979955562;  // std dev = 0.065, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.41966818136234313;  // std dev = 0.369, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(I, J), interaction(I, A) )
%   | | | then return -0.195640697596424;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.04807575090681224;  // std dev = 1.904, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( interaction(A, K) )
%   | | then return 0.2599212181297452;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.18742268076693655;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.1661210348183277;  // std dev = 0.283, 88.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=73 */
%   | else return -0.015804602890259933;  // std dev = 0.288, 645.000 (wgt'ed) examples reached here.  /* #neg=479 #pos=166 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.4167669052151398;  // std dev = 0.349, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, I), location(F, I) )
%   | | | then return -0.020606472034073908;  // std dev = 1.845, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.1287800734709816;  // std dev = 1.495, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6174828511833248;  // std dev = 0.381, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16915317810115804;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.190450481233039;  // std dev = 1.045, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04162172989992902;  // std dev = 2.067, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( phenotype(A, E), complex(C, F) )
%   | then return -0.023587402110626425;  // std dev = 0.201, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.16218640453850633;  // std dev = 0.192, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.00165672245853713;  // std dev = 0.211, 140.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=46 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( recursion_proteinclass(G, B), interaction(I, A) )
%   | | then return 0.13052330278792443;  // std dev = 0.190, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( complex(A, H), interaction(A, A) )
%   | | | then return -0.10810317731037149;  // std dev = 0.108, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.0029903220267340964;  // std dev = 4.079, 204.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=57 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16766621474388868;  // std dev = 0.075, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return 0.042929324180872565;  // std dev = 3.060, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | | else return 0.06757251546524311;  // std dev = 5.825, 225.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=81 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.505', 'seconds']
Refined model CLL: -0.203987


******************************************
Best model found
******************************************
Results 

CLL : -0.206543 

AUC ROC : 0.986041 

AUC PR : 0.59079 

Precision : 0.591398 

Recall : 0.597826 

F1 : 0.594595 

Total Learning Time : 56.56 

Total Inference Time : 50.89648151397705 

Total revision time: 113.22310546112061
Best scored revision CLL: -0.203987


Results 

CLL : -0.206543 

AUC ROC : 0.986041 

AUC PR : 0.59079 

Precision : 0.591398 

Recall : 0.597826 

F1 : 0.594595 

Total Learning Time : 123.94389012527466 

Total Inference Time : 50.89648151397705 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.077
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1763307532813294;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.24319527917705752;  // std dev = 4.284, 76.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=31 */
%   | | | else return 0.18252276455717448;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17079949985585963;  // std dev = 3.890, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.15670673692220885;  // std dev = 4.553, 91.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1888459959489729;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.0522336706290386;  // std dev = 5.258, 139.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09400886439929027;  // std dev = 6.097, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05881928890925912;  // std dev = 6.181, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7141718891166824;  // std dev = 0.084, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.27926647518422626;  // std dev = 0.134, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07682561484271774;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.0797095760022104;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02311318729344985;  // std dev = 3.147, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return 0.03930043011601842;  // std dev = 4.692, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031329783635514995;  // std dev = 5.600, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04324528687145649;  // std dev = 5.523, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.508', 'seconds']
Parameter learned model CLL:-0.327893 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.179, 120, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.284, 45, 31], 'false,false,false,false': [4.04, 47, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.89, 41, 24], 'false,false,false,false': [4.553, 59, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.235, 25, 18], 'false,false,false,false': [5.258, 101, 38]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.097, 112, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.181, 121, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.084, 0, 24], 'true,false': [0.134, 48, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.924, 25, 13], 'false,false,false,false': [3.559, 38, 19]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.147, 50, 24], 'false,false,false,false': [4.692, 70, 32]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.6, 120, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.523, 108, 56]}]
{'': [nan, 0.21694214876033097], 'false': [nan, 0.21694214876033183], 'false,false': [nan, 0.21694214876033097], 'false,false,false': [nan, 0.21694214876033183]}
{'': [nan, 0.2352081811541279], 'false': [nan, 0.2352081811541267], 'false,false': [nan, 0.2352081811541279], 'false,false,false': [0.24151662049861453, 0.22665895061728358]}
{'': [nan, 0.22994277737499672], 'false': [nan, 0.22994277737499672], 'false,false': [nan, 0.22994277737499694], 'false,false,false': [0.23283557748063158, 0.22779373909896453]}
{'': [nan, 0.21275956932052903], 'false': [nan, 0.21275956932052903], 'false,false': [nan, 0.21275956932052892], 'false,false,false': [0.24337479718766866, 0.198879298527056]}
{'': [nan, 0.22127973372469523], 'false': [nan, 0.22127973372469523], 'false,false': [nan, 0.2212797337246937], 'false,false,false': [nan, 0.2212797337246937]}
{'': [nan, 0.2158526521065552], 'false': [nan, 0.2158526521065552], 'false,false': [nan, 0.21585265210655538], 'false,false,false': [nan, 0.2158526521065548]}
{'': [0.21966353590738283, 0.22336303030003032], 'false': [nan, 0.22336303030003032], 'false,false': [nan, 0.22336303030003032], 'false,false,false': [0.2250692520775625, 0.22222222222222238], 'true': [0.00029062167557129354, 0.00037673180166647446], 'true,true': [nan, 0.00029062167557129354], 'true,true,false': [nan, 0.00029062167557129354]}
{'': [nan, 0.18139689924312558], 'false': [nan, 0.18139689924312558], 'false,false': [nan, 0.1813968992431256], 'false,false,false': [0.13382503187741587, 0.2157996522543042]}
{'': [nan, 0.17819660238511117], 'false': [nan, 0.17819660238511134], 'false,false': [nan, 0.17819660238511134], 'false,false,false': [nan, 0.17819660238511134]}
{'': [nan, 0.1859839358489588], 'false': [nan, 0.1859839358489588], 'false,false': [nan, 0.18598393584895911], 'false,false,false': [nan, 0.18598393584895911]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.16
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( complex(D, F), interaction(G, D) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.09056901361843647;  // std dev = 1.377, 39.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.23164291100312548;  // std dev = 4.407, 83.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=31 */
%   | | | else return 0.0010060779566550668;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( enzyme(C, E), enzyme(A, F) )
%   | then if ( complex(A, G), interaction(H, A) )
%   | | then return 0.7915239855181334;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.33442779272929696;  // std dev = 1.208, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(C, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return 0.7554986988645439;  // std dev = 0.125, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2803898627489127;  // std dev = 1.172, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.06585588860096082;  // std dev = 0.404, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   else if ( interaction(K, A), interaction(K, K) )
%   | then return -0.011238352442099659;  // std dev = 0.338, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return -0.021636882422018264;  // std dev = 1.251, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.1366261834436922;  // std dev = 3.939, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6299157361531984;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), enzyme(E, F) )
%   | | then return 0.2774896445568193;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6683353364692104;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( enzyme(A, I), location(H, J) )
%   | | | then return 0.1029114299094141;  // std dev = 2.114, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.04664699299761134;  // std dev = 2.024, 49.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.028183105476548623;  // std dev = 1.647, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.20106102101918336;  // std dev = 4.070, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then return 0.5298597613287367;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.42247999927114854;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, F), complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6709623559396101;  // std dev = 0.322, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16352163244151144;  // std dev = 0.270, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(I, K), phenotype(I, L) )
%   | | | then return 0.5821606895793328;  // std dev = 0.909, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.009022529154230761;  // std dev = 0.963, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.057184677557436;  // std dev = 3.489, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.20728896098000082;  // std dev = 2.858, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, E), phenotype(C, F) )
%   | then return 0.15274011306777063;  // std dev = 0.351, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | else if ( phenotype(C, G), enzyme(A, H) )
%   | | then return -0.15581263697146144;  // std dev = 0.227, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.431252870054738;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 6.432042688146446E-4;  // std dev = 2.865, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   else if ( enzyme(A, J), location(A, K) )
%   | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | then return 0.6770568069374108;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.24389700599946307;  // std dev = 0.086, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(M, A), location(M, N) )
%   | | then return -0.014036379509263069;  // std dev = 0.376, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.4642425174071816;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04250094420790769;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.32612648186013654;  // std dev = 0.300, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return -0.1885396118168536;  // std dev = 0.128, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( phenotype(A, H), interaction(I, A) )
%   | | then return -0.03269246784443937;  // std dev = 0.247, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.5171114686939585;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.17145558546653394;  // std dev = 1.335, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( phenotype(M, N), location(M, P) )
%   | | | then return 0.12375367722378981;  // std dev = 3.271, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return -0.11991091152297724;  // std dev = 1.305, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( phenotype(A, Q) )
%   | | | then return 0.22211181431831373;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.16328223751848095;  // std dev = 0.937, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4239558287239736;  // std dev = 0.183, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.20852754321647374;  // std dev = 0.107, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.23815411572787673;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.21886514045680952;  // std dev = 0.428, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.36874442574704674;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(A, I), location(G, J) )
%   | | | then return -0.03733225125721991;  // std dev = 1.662, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.20049177594267015;  // std dev = 3.089, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2930414898082584;  // std dev = 1.065, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.22105564604194136;  // std dev = 0.197, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, E), interaction(E, C) )
%   | | then return -0.10886137269979122;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.28312231598629356;  // std dev = 0.244, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(C, A), location(C, D) )
%   | | then return -0.2169825866151489;  // std dev = 0.112, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.03016425668072678;  // std dev = 1.372, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.11307816747313863;  // std dev = 2.106, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( phenotype(A, I), interaction(J, G) )
%   | | then return -0.04772489798878476;  // std dev = 0.255, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else if ( interaction(K, G), phenotype(K, L) )
%   | | | then return 0.2082979463189601;  // std dev = 2.478, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return -0.06263711691543358;  // std dev = 1.227, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else return 0.4112493942201551;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22843387475799332;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return -0.22908256297619922;  // std dev = 0.550, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.06314803142789321;  // std dev = 0.250, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(D, G) )
%   | | | then return -0.08927511550662186;  // std dev = 0.807, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.044342780994990935;  // std dev = 0.827, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(K, J) )
%   | | | then return 0.13106749155611017;  // std dev = 2.131, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | | | else return -0.19576536631653085;  // std dev = 0.531, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.08074331013762191;  // std dev = 1.379, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return -0.0015268946964249724;  // std dev = 3.152, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.16581965081974356;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.30668643118235456;  // std dev = 0.225, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else return -0.16742507393329528;  // std dev = 0.087, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( enzyme(A, F), interaction(A, G) )
%   | then if ( phenotype(A, H) )
%   | | then return 0.44567111738207826;  // std dev = 0.163, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.12340283560188867;  // std dev = 0.499, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), interaction(K, K) )
%   | | | then return 0.1157801845792712;  // std dev = 3.023, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | | | else return -0.1811308984259359;  // std dev = 0.922, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.2900119153248997;  // std dev = 0.929, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.15075116882652587;  // std dev = 0.104, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.834', 'seconds']
Refined model CLL: -0.268802


******************************************
Best model found
******************************************
Results 

CLL : -0.271186 

AUC ROC : 0.819116 

AUC PR : 0.100355 

Precision : 0.080306 

Recall : 0.488372 

F1 : 0.137931 

Total Learning Time : 9.16 

Total Inference Time : 3.812407970428467 

Total revision time: 15.577688705444336
Best scored revision CLL: -0.268802


Results 

CLL : -0.271186 

AUC ROC : 0.819116 

AUC PR : 0.100355 

Precision : 0.080306 

Recall : 0.488372 

F1 : 0.137931 

Total Learning Time : 26.29847336959839 

Total Inference Time : 3.812407970428467 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.358
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1964722883929264;  // std dev = 8.647, 334.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=113 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19670838502666171;  // std dev = 6.125, 162.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=59 */
%   | | | else return 0.20751085416246415;  // std dev = 5.809, 144.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11799884410260902;  // std dev = 5.674, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return 0.16291809441069294;  // std dev = 6.496, 183.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=66 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16041806492299032;  // std dev = 4.467, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | | else return 0.10467883359762861;  // std dev = 7.375, 247.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=81 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11486471223339051;  // std dev = 8.518, 316.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09318302272322238;  // std dev = 8.517, 316.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=113 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7180076520365206;  // std dev = 0.029, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.28144069537173805;  // std dev = 0.044, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.014016835198011512;  // std dev = 4.358, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | | | else return 0.06966339136692308;  // std dev = 5.017, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03233829370425643;  // std dev = 4.380, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   | | | else return 0.028702222535115694;  // std dev = 6.686, 205.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=66 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05149423358144484;  // std dev = 7.806, 317.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=113 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013141638629533858;  // std dev = 7.966, 348.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=113 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.455', 'seconds']
Parameter learned model CLL:-0.340967 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.647, 221, 113]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.125, 103, 59], 'false,false,false,false': [5.809, 90, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.674, 102, 47], 'false,false,false,false': [6.496, 117, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.467, 53, 32], 'false,false,false,false': [7.375, 166, 81]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.518, 203, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.517, 203, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 47], 'true,false': [0.044, 100, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.358, 64, 27], 'false,false,false,false': [5.017, 71, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.38, 94, 47], 'false,false,false,false': [6.686, 139, 66]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.806, 204, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.966, 235, 113]}]
{'': [nan, 0.223860661909716], 'false': [nan, 0.22386066190971393], 'false,false': [nan, 0.223860661909716], 'false,false,false': [nan, 0.22386066190971393]}
{'': [nan, 0.23291255500021277], 'false': [nan, 0.23291255500021268], 'false,false': [nan, 0.23291255500021277], 'false,false,false': [0.23155768937661853, 0.23437499999999906]}
{'': [nan, 0.2245490826504374], 'false': [nan, 0.2245490826504374], 'false,false': [nan, 0.224549082650438], 'false,false,false': [0.21603444100223917, 0.23057621745892984]}
{'': [nan, 0.22450922633199885], 'false': [nan, 0.22450922633199885], 'false,false': [nan, 0.22450922633199943], 'false,false,false': [0.2347404844290646, 0.22019291652670703]}
{'': [nan, 0.22961476992424998], 'false': [nan, 0.22961476992424998], 'false,false': [nan, 0.22961476992424976], 'false,false,false': [nan, 0.22961476992424976]}
{'': [nan, 0.22957435024255213], 'false': [nan, 0.22957435024255213], 'false,false': [nan, 0.22957435024255293], 'false,false,false': [nan, 0.22957435024255307]}
{'': [0.2172809437542377, 0.22047735818757314], 'false': [nan, 0.22047735818757314], 'false,false': [nan, 0.22047735818757314], 'false,false,false': [0.20867045042869187, 0.22884297520661065], 'true': [1.7858315730069186e-05, 1.9362893712635552e-05], 'true,true': [nan, 1.7858315730069186e-05], 'true,true,false': [nan, 1.7858315730069186e-05]}
{'': [nan, 0.18465911112100752], 'false': [nan, 0.18465911112100752], 'false,false': [nan, 0.18465911112100705], 'false,false,false': [0.13606031376966457, 0.21808021325248908]}
{'': [nan, 0.19220740576503131], 'false': [nan, 0.19220740576503167], 'false,false': [nan, 0.19220740576503167], 'false,false,false': [nan, 0.19220740576503167]}
{'': [nan, 0.18235940445316062], 'false': [nan, 0.18235940445316062], 'false,false': [nan, 0.18235940445316], 'false,false,false': [nan, 0.18235940445316]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 39.43
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.7969244453035937;  // std dev = 1.678, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   | | | else return 0.28672036367094084;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.1418510649004877;  // std dev = 2.79e-08, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else return -0.14185106490048766;  // std dev = 7.45e-08, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2719420385477882;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.006297083247660414;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.18793616914206446;  // std dev = 4.558, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.50058645787196;  // std dev = 0.786, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.726787068584652;  // std dev = 0.023, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.628584607223043;  // std dev = 0.895, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then if ( complex(F, G), location(F, H) )
%   | | | then return -0.05952038418037997;  // std dev = 1.920, 56.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=5 */
%   | | | else return 0.10926419702670123;  // std dev = 3.391, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.029324827357628667;  // std dev = 1.878, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.1678220670975641;  // std dev = 6.032, 178.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=60 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then return -0.013465785429620576;  // std dev = 0.293, 55.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=8 */
%   | else if ( phenotype(C, F) )
%   | | then if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.3450922939411516;  // std dev = 0.980, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5643264004798485;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.056977830751537666;  // std dev = 0.308, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5131094103638371;  // std dev = 0.199, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( location(J, K) )
%   | | | then return 0.08123949904269467;  // std dev = 5.565, 189.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=51 */
%   | | | else return 0.20744795685059433;  // std dev = 2.984, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.3447307640499115;  // std dev = 1.722, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.14609915774913404;  // std dev = 2.420, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(C, A), recursion_proteinclass(C, B) )
%   | then return 0.5733138143658382;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, D), location(A, E) )
%   | | then return -0.12693615353513094;  // std dev = 0.087, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return -0.22648531575165198;  // std dev = 0.111, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G) )
%   | | then return 0.45524728215821736;  // std dev = 0.131, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(F, H), enzyme(H, I) )
%   | | | then return -0.23561977774291232;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.42979400853088523;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6413727344409388;  // std dev = 0.160, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.055203506572327705;  // std dev = 3.800, 104.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=25 */
%   | | | else return 0.16321489297829467;  // std dev = 5.976, 172.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=65 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), enzyme(C, F) )
%   | then return -0.03407041625525655;  // std dev = 0.297, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.3797799240044426;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.048605764198897346;  // std dev = 0.400, 180.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=48 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( complex(G, H) )
%   | | then if ( phenotype(A, I), phenotype(G, I) )
%   | | | then return -0.15504270253288568;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.18021162726885065;  // std dev = 1.745, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return -0.14887475190484126;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then return 0.3839516702246318;  // std dev = 0.379, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.2320433479591288;  // std dev = 1.729, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.13373124533226105;  // std dev = 3.602, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.4037081057870637;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.10163952838947077;  // std dev = 0.485, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2740630724501097;  // std dev = 0.087, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.11901934737879624;  // std dev = 0.120, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( phenotype(A, G), location(A, H) )
%   | | then if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.02228019516830113;  // std dev = 3.998, 126.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | | | else return 0.1511325489530695;  // std dev = 2.020, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.18191783380996077;  // std dev = 3.040, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return 0.08053720349264273;  // std dev = 4.623, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5428982748939034;  // std dev = 0.191, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.19499970893278407;  // std dev = 0.059, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(F, F), complex(E, G) )
%   | | then if ( enzyme(E, H) )
%   | | | then return 0.05711322846589854;  // std dev = 1.104, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2727716364942203;  // std dev = 0.626, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.04628778969026092;  // std dev = 0.353, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4231126744667632;  // std dev = 3.066, 56.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | | | else return -0.2453731776153904;  // std dev = 0.382, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.3988610739285489;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20391649506899334;  // std dev = 1.002, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( enzyme(A, G), phenotype(A, E) )
%   | | | then return -0.02807818459498964;  // std dev = 0.864, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.1301577208134585;  // std dev = 1.843, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5497550898337977;  // std dev = 0.594, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.25859574734727453;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.04156129818009067;  // std dev = 0.294, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   else if ( enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.547166875564679;  // std dev = 0.089, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return -0.22957344292392792;  // std dev = 0.073, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.16058113572853225;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.044797869005874354;  // std dev = 0.323, 178.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(A, E), interaction(A, F) )
%   | then if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.5195898609897904;  // std dev = 0.412, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.03659465203093621;  // std dev = 0.285, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | else if ( phenotype(C, H), location(A, I) )
%   | | then return -0.008451674544523897;  // std dev = 0.316, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else return -0.13526187843840243;  // std dev = 0.246, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), interaction(A, L) )
%   | | | then return 0.35579967531050016;  // std dev = 1.758, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return 0.12483028751690972;  // std dev = 3.372, 77.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=39 */
%   | | else return -0.18111114343538395;  // std dev = 0.051, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, M), phenotype(M, N) )
%   | | then return -0.033880355422435955;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.37659293947287786;  // std dev = 0.795, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.06352075077497399;  // std dev = 0.216, 82.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), complex(F, E) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.052398638039966625;  // std dev = 1.256, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.13769487780449474;  // std dev = 1.053, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(D, H), complex(H, I) )
%   | | | then return 0.34215899617933515;  // std dev = 0.966, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.1217718834261945;  // std dev = 1.428, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return -8.352798049675274E-4;  // std dev = 1.283, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.1362350319936881;  // std dev = 1.527, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.0030750337483811895;  // std dev = 2.394, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.05339659910833271;  // std dev = 3.411, 83.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.445', 'seconds']
Refined model CLL: -0.221862


******************************************
Best model found
******************************************
Results 

CLL : -0.207249 

AUC ROC : 0.985785 

AUC PR : 0.445155 

Precision : 0.457627 

Recall : 0.627907 

F1 : 0.529412 

Total Learning Time : 39.43 

Total Inference Time : 38.472925424575806 

Total revision time: 81.4585322265625
Best scored revision CLL: -0.221862


Results 

CLL : -0.207249 

AUC ROC : 0.985785 

AUC PR : 0.445155 

Precision : 0.457627 

Recall : 0.627907 

F1 : 0.529412 

Total Learning Time : 92.17931689071655 

Total Inference Time : 38.472925424575806 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.476
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21096730670702676;  // std dev = 10.458, 479.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=169 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16996336109784296;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
%   | | | else return 0.13482779235085113;  // std dev = 7.319, 253.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=77 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14207604109339456;  // std dev = 6.773, 206.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=69 */
%   | | | else return 0.16654673365382058;  // std dev = 8.010, 279.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=100 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13308257158321546;  // std dev = 5.463, 131.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=46 */
%   | | | else return 0.13399962901193338;  // std dev = 8.928, 350.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=123 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11452699823516342;  // std dev = 10.431, 475.000 (wgt'ed) examples reached here.  /* #neg=306 #pos=169 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08007602314890588;  // std dev = 10.534, 493.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=169 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7232530637345704;  // std dev = 0.027, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return -0.2765175845871814;  // std dev = 0.039, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.037518470098122716;  // std dev = 5.586, 143.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=46 */
%   | | | else return 0.03150409259794709;  // std dev = 6.110, 175.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=54 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04598050341268859;  // std dev = 5.267, 200.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=69 */
%   | | | else return 0.058660545523427414;  // std dev = 8.088, 289.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023340848642997764;  // std dev = 9.787, 522.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=169 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03192221830497481;  // std dev = 9.671, 500.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.470', 'seconds']
Parameter learned model CLL:-0.3377 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.458, 310, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.795, 179, 92], 'false,false,false,false': [7.319, 176, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.773, 137, 69], 'false,false,false,false': [8.01, 179, 100]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.463, 85, 46], 'false,false,false,false': [8.928, 227, 123]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.431, 306, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.534, 324, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.027, 0, 69], 'true,false': [0.039, 139, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.586, 97, 46], 'false,false,false,false': [6.11, 121, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.267, 131, 69], 'false,false,false,false': [8.088, 189, 100]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.787, 353, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.671, 331, 169]}]
{'': [nan, 0.22833756826373994], 'false': [nan, 0.22833756826373783], 'false,false': [nan, 0.22833756826373994], 'false,false,false': [nan, 0.22833756826373783]}
{'': [nan, 0.2185005244449602], 'false': [nan, 0.218500524444962], 'false,false': [nan, 0.2185005244449602], 'false,false,false': [0.22423441946596398, 0.21172022684310252]}
{'': [nan, 0.2270252205008133], 'false': [nan, 0.2270252205008133], 'false,false': [nan, 0.22702522050081106], 'false,false,false': [0.22268894741731213, 0.2299725712178771]}
{'': [nan, 0.22776115168243968], 'false': [nan, 0.22776115168243968], 'false,false': [nan, 0.22776115168243888], 'false,false,false': [0.2278422003379756, 0.22773058728431636]}
{'': [nan, 0.2290740154483677], 'false': [nan, 0.2290740154483677], 'false,false': [nan, 0.22907401544836484], 'false,false,false': [nan, 0.22907401544836484]}
{'': [nan, 0.22507529189122807], 'false': [nan, 0.22507529189122807], 'false,false': [nan, 0.22507529189122685], 'false,false,false': [nan, 0.22507529189122835]}
{'': [0.2215944743143365, 0.21554335431546623], 'true': [1.0370683241738835e-05, 1.0840345673493396e-05], 'false': [nan, 0.21554335431546623], 'false,false': [nan, 0.21554335431546623], 'false,false,false': [0.21820137904054, 0.2133551020408171], 'true,true': [nan, 1.0370683241738835e-05], 'true,true,false': [nan, 1.0370683241738835e-05]}
{'': [nan, 0.19053297352775694], 'false': [nan, 0.19053297352775694], 'false,false': [nan, 0.19053297352775828], 'false,false,false': [0.1386828105093263, 0.22634967917487575]}
{'': [nan, 0.18351438383723054], 'false': [nan, 0.18351438383723023], 'false,false': [nan, 0.18351438383723023], 'false,false,false': [nan, 0.18351438383723023]}
{'': [nan, 0.1870572383979292], 'false': [nan, 0.1870572383979292], 'false,false': [nan, 0.1870572383979287], 'false,false,false': [nan, 0.1870572383979287]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 61.77
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.012221435270858057;  // std dev = 2.468, 54.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
%   | | | else return 0.16344488525527526;  // std dev = 8.251, 321.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=98 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.2024112301814791;  // std dev = 3.711, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.7675116978555754;  // std dev = 0.214, 144.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=137 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.7184166396349981;  // std dev = 1.405, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.16655933785797392;  // std dev = 0.201, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return -0.16233271683370554;  // std dev = 0.149, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.1686041349358066;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6536636006093597;  // std dev = 0.876, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.317466940449602;  // std dev = 1.181, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.16472919839752675;  // std dev = 0.006, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.5536291875123063;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.47776364474677097;  // std dev = 0.266, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.543474782345503;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.34347478234550294;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7012384707225503;  // std dev = 0.146, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | | else return -0.14772153979826452;  // std dev = 0.376, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.07216079276310493;  // std dev = 0.811, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.11835763912015497;  // std dev = 3.242, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return 0.3615829103968252;  // std dev = 1.353, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.14581474571944633;  // std dev = 5.599, 189.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=65 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44144491097657007;  // std dev = 0.187, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( complex(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.5248319541134319;  // std dev = 0.303, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return -0.14743240702869406;  // std dev = 0.317, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return -0.12465765287258362;  // std dev = 0.148, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.14610266899748525;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.22777478001397622;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return 0.08009151474318994;  // std dev = 6.059, 247.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=74 */
%   | | | else return 0.1865660479503425;  // std dev = 2.997, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3418242042453088;  // std dev = 0.056, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.4102356205394957;  // std dev = 0.181, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.014362517248668253;  // std dev = 0.418, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( recursion_proteinclass(D, B), complex(D, E) )
%   | | | then return 0.30776684547504274;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04233935695101031;  // std dev = 2.560, 179.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=26 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.1939752355608901;  // std dev = 1.713, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.0023557095241309683;  // std dev = 3.267, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | | else if ( location(A, J) )
%   | | | then return 0.08273644310363669;  // std dev = 5.340, 201.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=63 */
%   | | | else return 0.2242601681265761;  // std dev = 1.841, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2717836485116229;  // std dev = 0.043, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), phenotype(A, E) )
%   | | then if ( location(A, F) )
%   | | | then return -0.0641191729840388;  // std dev = 0.790, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return -0.2579609573862446;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, G), enzyme(D, G) )
%   | | | then return -0.19469589183047972;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.056537597915859925;  // std dev = 2.413, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.38265212842386004;  // std dev = 0.351, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.11528287740751056;  // std dev = 0.201, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.1462516872837217;  // std dev = 2.613, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.07220767600132842;  // std dev = 5.584, 207.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=67 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.019851335291559948;  // std dev = 0.186, 214.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=69 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.4904982959332725;  // std dev = 0.611, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.24357662755457188;  // std dev = 0.158, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.16095697902939857;  // std dev = 0.257, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.0685427332090301;  // std dev = 5.325, 183.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=63 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( phenotype(G, H), enzyme(A, I) )
%   | | | then return -0.0816148302219439;  // std dev = 0.745, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10504758101184242;  // std dev = 1.774, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.17730073913470812;  // std dev = 0.833, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.01075680438408258;  // std dev = 2.517, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20516569518071914;  // std dev = 0.040, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.3851967335366949;  // std dev = 2.189, 85.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=74 */
%   | | | else return -0.1484063934178313;  // std dev = 0.310, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.10179894431569708;  // std dev = 0.073, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.19959556275308182;  // std dev = 0.226, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.11828968674628115;  // std dev = 1.229, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.009585339154394013;  // std dev = 2.131, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | else if ( interaction(L, A), interaction(A, M) )
%   | | | then return -0.10331567711678556;  // std dev = 1.329, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return -0.009674705120209754;  // std dev = 4.406, 170.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=42 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return -0.0362428154116673;  // std dev = 0.179, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | else if ( phenotype(C, F) )
%   | | then return 0.08646463907562048;  // std dev = 0.226, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else return -0.013226253662178538;  // std dev = 0.242, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else if ( enzyme(A, G), phenotype(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.36651853057549905;  // std dev = 0.147, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else return -0.14999223400944117;  // std dev = 0.071, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( enzyme(A, L), interaction(J, M) )
%   | | | then return -0.0281087847014011;  // std dev = 1.102, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08873444406541925;  // std dev = 2.291, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.02083763225397475;  // std dev = 4.784, 230.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=71 */
%   | | | else return -0.0691198997362038;  // std dev = 1.480, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.20664251557311095;  // std dev = 0.098, 69.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=68 */
%   | else return -0.10986549945614456;  // std dev = 0.084, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.2769169351872932;  // std dev = 0.136, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.12630242202767358;  // std dev = 0.406, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.0108204744658085;  // std dev = 1.710, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3984729516285007;  // std dev = 0.242, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.15543958515461154;  // std dev = 0.132, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.08967312252564862;  // std dev = 2.447, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | | else return 0.02117709884111052;  // std dev = 4.661, 162.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=50 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.585', 'seconds']
Refined model CLL: -0.181988


******************************************
Best model found
******************************************
Results 

CLL : -0.18332 

AUC ROC : 0.995533 

AUC PR : 0.570303 

Precision : 0.465116 

Recall : 0.697674 

F1 : 0.55814 

Total Learning Time : 61.77 

Total Inference Time : 59.088980197906494 

Total revision time: 125.02131576156617
Best scored revision CLL: -0.181988


Results 

CLL : -0.18332 

AUC ROC : 0.995533 

AUC PR : 0.570303 

Precision : 0.465116 

Recall : 0.697674 

F1 : 0.55814 

Total Learning Time : 135.74210042572022 

Total Inference Time : 59.088980197906494 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.757
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19050187627597967;  // std dev = 12.284, 680.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=226 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17334169584465034;  // std dev = 8.862, 350.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=119 */
%   | | | else return 0.17194929078135818;  // std dev = 8.412, 316.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=107 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13896325625119751;  // std dev = 8.014, 290.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=96 */
%   | | | else return 0.15744248978847256;  // std dev = 9.196, 372.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=130 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1134045474831697;  // std dev = 6.455, 189.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=62 */
%   | | | else return 0.1261414258161963;  // std dev = 10.379, 478.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=164 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08917336687648017;  // std dev = 12.333, 691.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=226 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0992338102192502;  // std dev = 12.087, 639.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=226 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7293558451046339;  // std dev = 0.011, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else return -0.2706860953033876;  // std dev = 0.014, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06123310557487108;  // std dev = 6.146, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | | else return 0.05909556161447532;  // std dev = 6.968, 218.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=73 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.028388465783027273;  // std dev = 6.363, 303.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=96 */
%   | | | else return 0.04107618076151973;  // std dev = 9.339, 395.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=130 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032588282963401036;  // std dev = 11.264, 685.000 (wgt'ed) examples reached here.  /* #neg=459 #pos=226 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0428608886647902;  // std dev = 11.090, 650.000 (wgt'ed) examples reached here.  /* #neg=424 #pos=226 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.552', 'seconds']
Parameter learned model CLL:-0.336853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.284, 454, 226]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.862, 231, 119], 'false,false,false,false': [8.412, 209, 107]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.014, 194, 96], 'false,false,false,false': [9.196, 242, 130]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.455, 127, 62], 'false,false,false,false': [10.379, 314, 164]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.333, 465, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.087, 413, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.011, 0, 96], 'true,false': [0.014, 177, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.146, 112, 57], 'false,false,false,false': [6.968, 145, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.363, 207, 96], 'false,false,false,false': [9.339, 265, 130]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.264, 459, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.09, 424, 226]}]
{'': [nan, 0.2218944636678224], 'false': [nan, 0.22189446366782226], 'false,false': [nan, 0.2218944636678224], 'false,false,false': [nan, 0.22189446366782226]}
{'': [nan, 0.2241881521160841], 'false': [nan, 0.22418815211608234], 'false,false': [nan, 0.2241881521160841], 'false,false,false': [0.22440000000000204, 0.22395249158788896]}
{'': [nan, 0.22484511610082], 'false': [nan, 0.22484511610082], 'false,false': [nan, 0.22484511610082447], 'false,false,false': [0.22145495933243853, 0.2273383884039377]}
{'': [nan, 0.2240071767092388], 'false': [nan, 0.2240071767092388], 'false,false': [nan, 0.22400717670924516], 'false,false,false': [0.22043055905489894, 0.22537539367740073]}
{'': [nan, 0.2201268677945464], 'false': [nan, 0.2201268677945464], 'false,false': [nan, 0.22012686779454632], 'false,false,false': [nan, 0.22012686779454632]}
{'': [nan, 0.22863756083396222], 'false': [nan, 0.22863756083396222], 'false,false': [nan, 0.2286375608339645], 'false,false,false': [nan, 0.2286375608339636]}
{'': [0.2280120783600743, 0.22307656013849775], 'true': [1.1487570809413465e-06, 1.1744118996363896e-06], 'false': [nan, 0.22307656013849775], 'false,false': [nan, 0.22307656013849775], 'false,false,false': [0.2235215853786648, 0.22272956821816256], 'true,true': [nan, 1.1487570809413465e-06], 'true,true,false': [nan, 1.1487570809413465e-06]}
{'': [nan, 0.1829873197955069], 'false': [nan, 0.1829873197955069], 'false,false': [nan, 0.1829873197955079], 'false,false,false': [0.1336084176779185, 0.22079543288243791]}
{'': [nan, 0.18521915722517937], 'false': [nan, 0.1852191572251796], 'false,false': [nan, 0.1852191572251796], 'false,false,false': [nan, 0.1852191572251796]}
{'': [nan, 0.18920140521536002], 'false': [nan, 0.18920140521536002], 'false,false': [nan, 0.18920140521536113], 'false,false,false': [nan, 0.18920140521536113]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.155
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(A, H), complex(F, I) )
%   | | | then return 0.2775037738091898;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.047338124288701544;  // std dev = 3.369, 74.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=14 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.25573929654529415;  // std dev = 4.459, 83.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=33 */
%   | | | else return 0.1811154422765456;  // std dev = 9.560, 418.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=135 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.7256408894130967;  // std dev = 0.058, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( complex(C, E), phenotype(A, F) )
%   | | then return -0.01433696013342145;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.6194734122109544;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(G, H) )
%   | | then return 0.8325296419340884;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(G, I) )
%   | | | then return -0.16993725100571555;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.8346412392339125;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.06031903540782828;  // std dev = 4.572, 123.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=27 */
%   | | | else return 0.15364892073510683;  // std dev = 10.223, 480.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=154 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(C, C) )
%   | | then return 0.5592728002796262;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.30869298003393036;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6698796467786879;  // std dev = 0.158, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then return 0.24277110911874744;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.5724576985911328;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6381083460045914;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.07983597437020001;  // std dev = 6.455, 215.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=57 */
%   | | | else return 0.15370913814347406;  // std dev = 9.037, 365.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=124 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.4626204329339706;  // std dev = 0.324, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16895087682457532;  // std dev = 0.039, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.07237710136432078;  // std dev = 0.429, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
%   else if ( complex(A, F), phenotype(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.711279981338177;  // std dev = 0.146, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else return -0.19313101891769915;  // std dev = 0.047, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.569717810129244;  // std dev = 1.308, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.09240999381510004;  // std dev = 4.496, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1748670570637656;  // std dev = 3.561, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | | else return 0.09239836276008635;  // std dev = 5.935, 171.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.28702770522395704;  // std dev = 0.272, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.6235575552932194;  // std dev = 1.411, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.18420831485206937;  // std dev = 1.331, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.08277910168776142;  // std dev = 3.018, 128.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=12 */
%   | | | else return 0.0735008897032985;  // std dev = 8.520, 370.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=113 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, H), enzyme(A, J) )
%   | | | then return 0.506765029238018;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05691628460627202;  // std dev = 2.806, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.7719080333520963;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23404095842327313;  // std dev = 2.696, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(C, E) )
%   | then if ( complex(C, F) )
%   | | then return 0.2633751858691385;  // std dev = 0.063, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.19570897997013356;  // std dev = 0.433, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else return 0.35083014863855044;  // std dev = 0.076, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( enzyme(A, H) )
%   | | then return -0.1253183006509315;  // std dev = 0.184, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | else if ( phenotype(A, I), complex(G, J) )
%   | | | then return 0.13469472543425431;  // std dev = 2.732, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.004932642395212387;  // std dev = 4.250, 115.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=27 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09086968877795555;  // std dev = 0.059, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.08207016126559716;  // std dev = 8.181, 359.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=121 */
%   | | | else return 0.03950726317968813;  // std dev = 4.336, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4993469046110932;  // std dev = 0.265, 98.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=96 */
%   | else return -0.2034287393752767;  // std dev = 0.071, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.26014744722506383;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(E, E), phenotype(A, F) )
%   | | | then return -0.15380193783940774;  // std dev = 0.194, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.010029471413833903;  // std dev = 2.280, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.42561058913828326;  // std dev = 1.175, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11559685967778315;  // std dev = 3.052, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.004259882009092795;  // std dev = 4.215, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
%   | | | else return 0.06541882883036954;  // std dev = 6.456, 197.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=64 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2520285035893727;  // std dev = 0.270, 70.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=59 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16669428108283094;  // std dev = 0.095, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | | then return 0.31877322492064325;  // std dev = 0.202, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.05179290869228491;  // std dev = 8.725, 416.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=135 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.25289786046241514;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), phenotype(A, J) )
%   | | | then return -0.12494239654852571;  // std dev = 1.261, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.07934442241013413;  // std dev = 1.042, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.00469710915489079;  // std dev = 1.424, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.06819415097980555;  // std dev = 2.805, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then return -0.01070455462403108;  // std dev = 0.333, 357.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=103 */
%   | else if ( interaction(A, F), phenotype(C, G) )
%   | | then return 0.14761446388432325;  // std dev = 0.367, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else return 0.04854511989617309;  // std dev = 0.444, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then if ( enzyme(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.20848886306724493;  // std dev = 1.006, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.036852431533408656;  // std dev = 2.266, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | else return -0.03955856519701375;  // std dev = 0.335, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( phenotype(A, M), complex(A, N) )
%   | | then return -0.011250684575291095;  // std dev = 0.287, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( location(A, P) )
%   | | | then return 0.10057490668095695;  // std dev = 5.063, 120.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=49 */
%   | | | else return 0.2071081008187633;  // std dev = 1.583, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16401988966595027;  // std dev = 0.063, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), enzyme(D, G) )
%   | | then if ( phenotype(A, H), complex(D, I) )
%   | | | then return -0.029902514402298;  // std dev = 1.512, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return -0.12830256489260844;  // std dev = 1.062, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( enzyme(D, J), phenotype(A, E) )
%   | | | then return 0.08396695401798668;  // std dev = 1.742, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.0046465456873511545;  // std dev = 7.297, 367.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=105 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( recursion_proteinclass(K, B), complex(A, L) )
%   | | | then return 0.1785891752620274;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.010970526506245325;  // std dev = 3.584, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.33629796256801997;  // std dev = 1.479, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.05622164261874503;  // std dev = 4.633, 109.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.600', 'seconds']
Refined model CLL: -0.282654


******************************************
Best model found
******************************************
Results 

CLL : -0.301401 

AUC ROC : 0.855123 

AUC PR : 0.236022 

Precision : 0.252174 

Recall : 0.337209 

F1 : 0.288557 

Total Learning Time : 16.155 

Total Inference Time : 8.862953662872314 

Total revision time: 29.989149868011474
Best scored revision CLL: -0.282654


Results 

CLL : -0.301401 

AUC ROC : 0.855123 

AUC PR : 0.236022 

Precision : 0.252174 

Recall : 0.337209 

F1 : 0.288557 

Total Learning Time : 40.709934532165526 

Total Inference Time : 8.862953662872314 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.021
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18645519960066814;  // std dev = 13.787, 862.000 (wgt'ed) examples reached here.  /* #neg=579 #pos=283 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16202795384977273;  // std dev = 9.938, 448.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=147 */
%   | | | else return 0.1592618055244139;  // std dev = 9.579, 418.000 (wgt'ed) examples reached here.  /* #neg=282 #pos=136 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14279006035732514;  // std dev = 8.951, 361.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=120 */
%   | | | else return 0.11743103367416276;  // std dev = 10.629, 531.000 (wgt'ed) examples reached here.  /* #neg=368 #pos=163 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11915843022377978;  // std dev = 7.079, 226.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=75 */
%   | | | else return 0.1302782304804552;  // std dev = 11.722, 613.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10939407895384656;  // std dev = 13.653, 829.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=283 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08885878682843468;  // std dev = 13.659, 830.000 (wgt'ed) examples reached here.  /* #neg=547 #pos=283 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7287281166003508;  // std dev = 0.009, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return -0.2712423804770981;  // std dev = 0.012, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07177194100478666;  // std dev = 6.895, 212.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=72 */
%   | | | else return 0.07738838095188107;  // std dev = 7.722, 264.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=91 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03861335457410097;  // std dev = 7.041, 363.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=120 */
%   | | | else return 0.05359702740131564;  // std dev = 10.403, 485.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=163 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04125726599899272;  // std dev = 12.507, 839.000 (wgt'ed) examples reached here.  /* #neg=556 #pos=283 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04113774097864386;  // std dev = 12.431, 810.000 (wgt'ed) examples reached here.  /* #neg=527 #pos=283 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.541', 'seconds']
Parameter learned model CLL:-0.337425 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.787, 579, 283]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.938, 301, 147], 'false,false,false,false': [9.579, 282, 136]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.951, 241, 120], 'false,false,false,false': [10.629, 368, 163]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.079, 151, 75], 'false,false,false,false': [11.722, 405, 208]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.653, 546, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.659, 547, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 120], 'true,false': [0.012, 224, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.895, 140, 72], 'false,false,false,false': [7.722, 173, 91]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.041, 243, 120], 'false,false,false,false': [10.403, 322, 163]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.507, 556, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.431, 527, 283]}]
{'': [nan, 0.2205212611904562], 'false': [nan, 0.22052126119045723], 'false,false': [nan, 0.2205212611904562], 'false,false,false': [nan, 0.22052126119045723]}
{'': [nan, 0.2199982398967366], 'false': [nan, 0.21999823989674025], 'false,false': [nan, 0.2199982398967366], 'false,false,false': [0.22045898437499994, 0.2195004693116]}
{'': [nan, 0.2166119395774785], 'false': [nan, 0.2166119395774785], 'false,false': [nan, 0.21661193957748007], 'false,false,false': [0.2219209603917399, 0.21274234522627297]}
{'': [nan, 0.22351629984319976], 'false': [nan, 0.22351629984319976], 'false,false': [nan, 0.2235162998431958], 'false,false,false': [0.2217284047302052, 0.22414215118511543]}
{'': [nan, 0.22485914339380145], 'false': [nan, 0.22485914339380145], 'false,false': [nan, 0.22485914339379778], 'false,false,false': [nan, 0.22485914339379778]}
{'': [nan, 0.22477479553403815], 'false': [nan, 0.22477479553403815], 'false,false': [nan, 0.22477479553404167], 'false,false,false': [nan, 0.2247747955340383]}
{'': [0.22713703899835236, 0.22517532469301332], 'true': [6.397604925822975e-07, 6.267041564430745e-07], 'false': [nan, 0.22517532469301332], 'false,false': [nan, 0.22517532469301332], 'false,false,false': [0.22427910288359032, 0.225880968778695], 'true,true': [nan, 6.397604925822975e-07], 'true,true,false': [nan, 6.397604925822975e-07]}
{'': [nan, 0.18613540743948592], 'false': [nan, 0.18613540743948592], 'false,false': [nan, 0.18613540743948762], 'false,false,false': [0.13657293201899734, 0.22313451570226966]}
{'': [nan, 0.18645369364719672], 'false': [nan, 0.18645369364719008], 'false,false': [nan, 0.18645369364719008], 'false,false,false': [nan, 0.18645369364719008]}
{'': [nan, 0.19078425872395202], 'false': [nan, 0.19078425872395202], 'false,false': [nan, 0.1907842587239547], 'false,false,false': [nan, 0.1907842587239547]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 33.724
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.8581489350995115;  // std dev = 2.60e-07, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return 0.5724346493852265;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( enzyme(A, F), enzyme(E, F) )
%   | | | then return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.1854216623722387;  // std dev = 4.921, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.132658739021081;  // std dev = 3.187, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.23314893509951312;  // std dev = 6.423, 176.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=66 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.221785298735876;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.14169323889698085;  // std dev = 8.958, 395.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7672685808008758;  // std dev = 0.056, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( interaction(A, D) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8340460584707282;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.016641240842836247;  // std dev = 3.147, 86.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=12 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6927649176578385;  // std dev = 2.063, 35.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=30 */
%   | | | else return 0.05363661062977478;  // std dev = 6.732, 271.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=59 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.17809343538771047;  // std dev = 6.883, 211.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=72 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.17710523295450897;  // std dev = 5.851, 154.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=53 */
%   | | | else return 0.26496019328647213;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), interaction(G, D) )
%   | | then if ( enzyme(G, E) )
%   | | | then return 0.5435351014663221;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2623575670596778;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5951821331286437;  // std dev = 0.073, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6349872819343144;  // std dev = 0.076, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(A, A) )
%   | then return -0.13072494361552522;  // std dev = 0.109, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), interaction(H, H) )
%   | | | then return -0.10910518956582295;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5885573380403528;  // std dev = 0.989, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.10359476890704138;  // std dev = 9.784, 485.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=142 */
%   | | | else return 0.1597957783378191;  // std dev = 7.338, 243.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=83 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.46496879890716414;  // std dev = 0.286, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1811039581012026;  // std dev = 0.082, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.5190358681180925;  // std dev = 0.140, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.034364709305128645;  // std dev = 4.630, 140.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=34 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.43724485831339743;  // std dev = 0.196, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4015327125712032;  // std dev = 8.345, 306.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=189 */
%   | | | else return -0.20096211726865548;  // std dev = 0.399, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.02916651921845937;  // std dev = 2.175, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.46135464455902436;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2735946916010519;  // std dev = 0.273, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, D) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return -0.09603019348618218;  // std dev = 1.453, 48.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | | else return 0.0118206214529738;  // std dev = 2.630, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | else if ( interaction(G, E), interaction(H, G) )
%   | | | then return 0.08658495014958018;  // std dev = 5.596, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   | | | else return 0.22950836696761512;  // std dev = 1.668, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(I, J), interaction(K, A) )
%   | | | then return -0.08768957786246126;  // std dev = 1.114, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.05566204545572935;  // std dev = 3.167, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.12754429712032977;  // std dev = 6.299, 207.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=74 */
%   | | | else return 0.08473039487493905;  // std dev = 6.251, 218.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=68 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.22043719568608203;  // std dev = 0.218, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(F, A), enzyme(A, D) )
%   | | then return -0.05158280133153477;  // std dev = 0.260, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5544418641489492;  // std dev = 0.127, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.015981043578308898;  // std dev = 4.580, 130.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=32 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.337811571499837;  // std dev = 0.101, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.07946238011268415;  // std dev = 6.889, 266.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=90 */
%   | | | else return 0.052239403639261245;  // std dev = 6.883, 292.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=88 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.18557028797219674;  // std dev = 1.261, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.10064782867350333;  // std dev = 3.776, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5607459670098771;  // std dev = 0.189, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return -0.21107113123831017;  // std dev = 0.075, 234.000 (wgt'ed) examples reached here.  /* #neg=234 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1980650028457333;  // std dev = 0.216, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( interaction(F, E), interaction(G, F) )
%   | | | then return 0.004546401648379525;  // std dev = 2.977, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
%   | | | else return 0.08150761032071985;  // std dev = 3.525, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6943609673357144;  // std dev = 0.195, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2194579833113738;  // std dev = 0.100, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.11541240056549294;  // std dev = 6.575, 222.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=86 */
%   | | | else return 0.026393093119466783;  // std dev = 3.186, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), complex(C, E) )
%   | then return 0.003583029936766763;  // std dev = 0.335, 225.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=72 */
%   | else if ( phenotype(C, F), complex(C, G) )
%   | | then return 0.07845675937192718;  // std dev = 0.403, 173.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=63 */
%   | | else return 0.02907274722160007;  // std dev = 0.370, 279.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=94 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4976852739554505;  // std dev = 0.297, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return -0.19212703166326228;  // std dev = 0.242, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.632209709029055;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2894962338291973;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.2966405694714603;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.017941444841501248;  // std dev = 3.728, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.018917597321452706;  // std dev = 0.271, 201.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=58 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), enzyme(D, G) )
%   | | then if ( complex(A, H), complex(D, H) )
%   | | | then return 0.02948887464445955;  // std dev = 1.067, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2417294673303422;  // std dev = 2.208, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1005872725894604;  // std dev = 3.212, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | | else return 0.0071284378549592384;  // std dev = 2.376, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else if ( enzyme(A, K), phenotype(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.5526912702970371;  // std dev = 0.606, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.22163470096094673;  // std dev = 0.398, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return -0.02572049337174154;  // std dev = 4.561, 152.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=41 */
%   | | | else return 0.020065268989115505;  // std dev = 6.621, 291.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=95 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.15724015085295343;  // std dev = 0.330, 194.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=119 */
%   | else return -0.15632802536167228;  // std dev = 0.444, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.5326909759700225;  // std dev = 2.769, 140.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=134 */
%   | | | else return -0.09142076157368147;  // std dev = 2.993, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else return -0.21356302940862154;  // std dev = 0.060, 235.000 (wgt'ed) examples reached here.  /* #neg=235 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.35515004317688853;  // std dev = 1.387, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.2351220611912709;  // std dev = 0.235, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.05553073348347826;  // std dev = 1.118, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.13766709532296958;  // std dev = 1.304, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.909', 'seconds']
Refined model CLL: -0.231347


******************************************
Best model found
******************************************
Results 

CLL : -0.215982 

AUC ROC : 0.988701 

AUC PR : 0.385961 

Precision : 0.366412 

Recall : 0.55814 

F1 : 0.442396 

Total Learning Time : 33.724 

Total Inference Time : 36.785937786102295 

Total revision time: 76.28209888458252
Best scored revision CLL: -0.231347


Results 

CLL : -0.215982 

AUC ROC : 0.988701 

AUC PR : 0.385961 

Precision : 0.366412 

Recall : 0.55814 

F1 : 0.442396 

Total Learning Time : 87.00288354873658 

Total Inference Time : 36.785937786102295 

Run: 2
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.007
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18950988184507345;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1668127550982751;  // std dev = 4.472, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | | | else return 0.18014608843160843;  // std dev = 4.121, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11705607864131708;  // std dev = 3.810, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0.11218412320686738;  // std dev = 4.935, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17263414758968262;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.1363045772209524;  // std dev = 5.300, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.081072088232338;  // std dev = 6.188, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11567303529437843;  // std dev = 5.960, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7243164009696115;  // std dev = 0.010, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.2758355234123296;  // std dev = 0.015, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.14538659615289998;  // std dev = 3.155, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.055393742509856396;  // std dev = 3.480, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.051385304999197697;  // std dev = 2.913, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | | else return 0.022318677770457495;  // std dev = 4.903, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05543790864015788;  // std dev = 5.555, 156.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=56 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03132291626883648;  // std dev = 5.599, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.568', 'seconds']
Parameter learned model CLL:-0.344451 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.119, 113, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.472, 60, 30], 'false,false,false,false': [4.121, 49, 26]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.81, 47, 21], 'false,false,false,false': [4.935, 80, 35]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.834, 21, 13], 'false,false,false,false': [5.3, 81, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.188, 121, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.96, 97, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.01, 0, 21], 'true,false': [0.015, 46, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.155, 24, 17], 'false,false,false,false': [3.48, 37, 18]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.913, 38, 21], 'false,false,false,false': [4.903, 77, 35]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.555, 100, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.599, 107, 56]}]
{'': [nan, 0.22156086971744715], 'false': [nan, 0.22156086971744782], 'false,false': [nan, 0.22156086971744715], 'false,false,false': [nan, 0.22156086971744782]}
{'': [nan, 0.22420569329660414], 'false': [nan, 0.22420569329660225], 'false,false': [nan, 0.22420569329660414], 'false,false,false': [0.22222222222222163, 0.22648888888888838]}
{'': [nan, 0.21241798328761116], 'false': [nan, 0.21241798328761116], 'false,false': [nan, 0.2124179832876117], 'false,false,false': [0.21345435700222148, 0.21179635108843417]}
{'': [nan, 0.2288570712509663], 'false': [nan, 0.2288570712509663], 'false,false': [nan, 0.22885707125096716], 'false,false,false': [0.23615916955017338, 0.2265708673036622]}
{'': [nan, 0.216306386061621], 'false': [nan, 0.216306386061621], 'false,false': [nan, 0.2163063860616209], 'false,false,false': [nan, 0.2163063860616209]}
{'': [nan, 0.23216731200809096], 'false': [nan, 0.23216731200809096], 'false,false': [nan, 0.23216731200809057], 'false,false,false': [nan, 0.23216731200809085]}
{'': [0.21526291476125972, 0.23177651908119948], 'false': [nan, 0.23177651908119948], 'false,false': [nan, 0.23177651908119948], 'false,false,false': [0.2427126710291494, 0.220165289256198], 'true': [4.960254987534676e-06, 4.771279154272194e-06], 'true,true': [nan, 4.960254987534676e-06], 'true,true,false': [nan, 4.960254987534676e-06]}
{'': [nan, 0.19037376370866907], 'false': [nan, 0.19037376370866907], 'false,false': [nan, 0.19037376370866915], 'false,false,false': [0.14382064495602653, 0.21460577717687426]}
{'': [nan, 0.19780399809836965], 'false': [nan, 0.19780399809836963], 'false,false': [nan, 0.19780399809836963], 'false,false,false': [nan, 0.19780399809836963]}
{'': [nan, 0.1923381962892895], 'false': [nan, 0.1923381962892895], 'false,false': [nan, 0.1923381962892894], 'false,false,false': [nan, 0.1923381962892894]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.724
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(E, A), complex(A, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(E, H) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.11148226843284566;  // std dev = 3.767, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else return 0.3581489350995123;  // std dev = 3.000, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( location(C, D), location(A, E) )
%   | then if ( complex(A, F), complex(C, G) )
%   | | then if ( phenotype(C, H), location(A, D) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.3753169297878776;  // std dev = 1.199, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else return -0.10483620695909363;  // std dev = 0.214, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | else return 0.5393828283939069;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7471311475919461;  // std dev = 0.126, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( complex(K, J), phenotype(A, L) )
%   | | | then return 0.2688485647763153;  // std dev = 1.297, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.10006341738950199;  // std dev = 0.977, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( location(A, M) )
%   | | | then return 0.22034288155942017;  // std dev = 4.596, 91.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | | | else return -0.018710865564952495;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.6898126595617896;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5619437818788485;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6805356875775861;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.09284491079040791;  // std dev = 1.178, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.11164267063909154;  // std dev = 0.914, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.06732867963405573;  // std dev = 3.175, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return 0.19772910890840947;  // std dev = 3.733, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.530859824111767;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.422931366085824;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.1347166400989427;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, E), interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.46330039595158146;  // std dev = 0.728, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.03095377190814011;  // std dev = 3.345, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.033742390228039446;  // std dev = 1.964, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.23959368578057763;  // std dev = 3.222, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.43657126567681176;  // std dev = 0.172, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(C, E) )
%   | | then return -0.19276381350831828;  // std dev = 0.085, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.26949540358050544;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.05417048564682472;  // std dev = 1.056, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4483533203279416;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7280764485819677;  // std dev = 0.455, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.23786853410222067;  // std dev = 0.536, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3384584653173445;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.029492486345793514;  // std dev = 3.807, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2699797555622353;  // std dev = 0.162, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6296204247911661;  // std dev = 0.788, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.23301773689318503;  // std dev = 0.279, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.28696112207237795;  // std dev = 1.468, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return -0.14554040724046097;  // std dev = 0.050, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.2410230729882231;  // std dev = 0.041, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   else if ( interaction(A, I) )
%   | then if ( enzyme(I, J) )
%   | | then return -0.1877046048200978;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.4925951164923605;  // std dev = 0.340, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.21446538853708663;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.20751066897100237;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.418748977259161;  // std dev = 0.267, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5739969816258221;  // std dev = 0.362, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1749148381891641;  // std dev = 0.101, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2359376220847366;  // std dev = 0.119, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.41643759605491165;  // std dev = 0.329, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16470099570422686;  // std dev = 0.195, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.021551916320650937;  // std dev = 2.295, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.09596843974500599;  // std dev = 1.612, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19930924006403627;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.34216793476537005;  // std dev = 1.054, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.05168259990255036;  // std dev = 1.246, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return -0.14190004619216381;  // std dev = 0.243, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.260979326224939;  // std dev = 0.073, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.45197227402247037;  // std dev = 0.479, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16849654337140738;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.10728371395418385;  // std dev = 0.669, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.061390710496111715;  // std dev = 1.610, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), interaction(D, E) )
%   | then if ( enzyme(E, F), location(D, G) )
%   | | then return -0.11113635320562544;  // std dev = 0.103, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.03994372525261781;  // std dev = 0.859, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.054131188366654925;  // std dev = 0.976, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | then return 0.29144136770968493;  // std dev = 0.125, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.14326709515271457;  // std dev = 0.103, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.17812772416673114;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return -0.08145642357332154;  // std dev = 0.138, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return -0.024034341736455758;  // std dev = 0.930, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.0653432936878367;  // std dev = 2.332, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( location(C, E), location(A, E) )
%   | then return 0.007793577785833842;  // std dev = 0.217, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | else if ( location(C, F), phenotype(C, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.14548113713964458;  // std dev = 0.635, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.295697296455287;  // std dev = 0.604, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.013079600860604711;  // std dev = 0.207, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then return -0.22479042713703787;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, K), location(A, L) )
%   | | then if ( interaction(K, M), interaction(M, K) )
%   | | | then return 0.04797950656898347;  // std dev = 1.311, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.10159265240322816;  // std dev = 1.034, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.05854646954402467;  // std dev = 0.992, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 3.389601594663144E-4;  // std dev = 0.727, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.728', 'seconds']
Refined model CLL: -0.179295


******************************************
Best model found
******************************************
Results 

CLL : -0.189406 

AUC ROC : 0.983734 

AUC PR : 0.312467 

Precision : 0.397436 

Recall : 0.712644 

F1 : 0.510288 

Total Learning Time : 17.724 

Total Inference Time : 12.519537210464478 

Total revision time: 32.8174589214325
Best scored revision CLL: -0.179295


Results 

CLL : -0.189406 

AUC ROC : 0.983734 

AUC PR : 0.312467 

Precision : 0.397436 

Recall : 0.712644 

F1 : 0.510288 

Total Learning Time : 43.53818541145325 

Total Inference Time : 12.519537210464478 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.383
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2038279474451923;  // std dev = 8.561, 324.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19457793460014372;  // std dev = 6.233, 168.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=61 */
%   | | | else return 0.16481602983823793;  // std dev = 5.831, 153.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1520049298343361;  // std dev = 5.539, 135.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=47 */
%   | | | else return 0.17223080217622988;  // std dev = 6.411, 177.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=65 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1408651032070945;  // std dev = 4.221, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | | else return 0.10547641721889062;  // std dev = 7.516, 256.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=84 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07313053274875907;  // std dev = 8.755, 354.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=112 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06608707975263006;  // std dev = 8.711, 347.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=112 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7301942308318605;  // std dev = 0.043, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.2698290116594182;  // std dev = 0.057, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05156313340328029;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return -0.010113555499747497;  // std dev = 4.879, 125.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03299573628097534;  // std dev = 4.438, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | | else return 0.04127293150370445;  // std dev = 6.673, 207.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=65 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.058728977176764334;  // std dev = 7.818, 322.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=112 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03984679682325051;  // std dev = 7.873, 326.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.640', 'seconds']
Parameter learned model CLL:-0.332271 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.561, 212, 112]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.233, 107, 61], 'false,false,false,false': [5.831, 102, 51]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.539, 88, 47], 'false,false,false,false': [6.411, 112, 65]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.221, 49, 28], 'false,false,false,false': [7.516, 172, 84]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.755, 242, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.711, 235, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.043, 0, 47], 'true,false': [0.057, 82, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.725, 69, 33], 'false,false,false,false': [4.879, 93, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.438, 99, 47], 'false,false,false,false': [6.673, 142, 65]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.818, 210, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.873, 214, 112]}]
{'': [nan, 0.22618503276939744], 'false': [nan, 0.22618503276939525], 'false,false': [nan, 0.22618503276939744], 'false,false,false': [nan, 0.22618503276939525]}
{'': [nan, 0.22717170834910663], 'false': [nan, 0.22717170834910233], 'false,false': [nan, 0.22717170834910663], 'false,false,false': [0.2312570861677988, 0.2222222222222211]}
{'': [nan, 0.23016096818366158], 'false': [nan, 0.23016096818366158], 'false,false': [nan, 0.23016096818366422], 'false,false,false': [0.22727300732824887, 0.23218664186472823]}
{'': [nan, 0.22336122636731373], 'false': [nan, 0.22336122636731373], 'false,false': [nan, 0.22336122636731215], 'false,false,false': [0.23140495867768662, 0.2206522379726286]}
{'': [nan, 0.21653639128521504], 'false': [nan, 0.21653639128521504], 'false,false': [nan, 0.21653639128521807], 'false,false,false': [nan, 0.21653639128521807]}
{'': [nan, 0.21867136264807788], 'false': [nan, 0.21867136264807788], 'false,false': [nan, 0.21867136264807957], 'false,false,false': [nan, 0.21867136264807904]}
{'': [0.2316468256301513, 0.20416383695364956], 'true': [3.943743041940375e-05, 3.9379936279849675e-05], 'false': [nan, 0.20416383695364956], 'false,false': [nan, 0.20416383695364956], 'false,false,false': [0.21885813148788918, 0.19046399999999905], 'true,true': [nan, 3.943743041940375e-05], 'true,true,false': [nan, 3.943743041940375e-05]}
{'': [nan, 0.1819524953980396], 'false': [nan, 0.1819524953980396], 'false,false': [nan, 0.18195249539803973], 'false,false,false': [0.1349167169724836, 0.2150991524852339]}
{'': [nan, 0.18983798351356226], 'false': [nan, 0.1898379835135616], 'false,false': [nan, 0.1898379835135616], 'false,false,false': [nan, 0.1898379835135616]}
{'': [nan, 0.1901118879448786], 'false': [nan, 0.1901118879448786], 'false,false': [nan, 0.1901118879448785], 'false,false,false': [nan, 0.1901118879448785]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.655
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(F, H) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(D, I), interaction(J, A) )
%   | | | then return -0.061851064900487696;  // std dev = 2.349, 75.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=6 */
%   | | | else return 0.13314893509951237;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( phenotype(A, K), enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.31648226843284566;  // std dev = 2.441, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.13845196540254143;  // std dev = 5.160, 132.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7551207999395346;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), complex(D, G) )
%   | | then if ( interaction(D, H) )
%   | | | then return 0.2388862400024503;  // std dev = 1.759, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.024710581264637575;  // std dev = 0.926, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.0028229130797062098;  // std dev = 1.584, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return -0.14469535420214333;  // std dev = 0.042, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( complex(A, L), complex(J, M) )
%   | | | then return -0.056224243466910254;  // std dev = 1.254, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.15398855546839307;  // std dev = 2.853, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else if ( interaction(A, N), interaction(N, A) )
%   | | | then return 0.06605896193242962;  // std dev = 1.944, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.22456868207128688;  // std dev = 5.936, 159.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=63 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.5940763539792718;  // std dev = 0.077, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.33824906910511665;  // std dev = 0.924, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( phenotype(E, G), complex(E, H) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.14821669800808546;  // std dev = 0.041, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.25421274053086007;  // std dev = 1.857, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.06354574315468083;  // std dev = 0.245, 45.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6894166167826178;  // std dev = 1.410, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | | | else return -0.16633981906128564;  // std dev = 0.138, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( location(A, L) )
%   | | | then return 0.11236386360861624;  // std dev = 5.661, 163.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=50 */
%   | | | else return -0.17030704651095707;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3995486496127856;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(C, D) )
%   | | then return -0.13593450688384462;  // std dev = 0.061, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return 0.06767317687944131;  // std dev = 0.354, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.5769053958539483;  // std dev = 0.113, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.14892964931823918;  // std dev = 0.173, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.48518869728358605;  // std dev = 0.272, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.09105835387492063;  // std dev = 3.931, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | | else if ( location(A, I) )
%   | | | then return 0.07843247980160405;  // std dev = 4.795, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | | else return -0.1573781827758262;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, A), location(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.30855260252087113;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.15196436995596668;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.5234106607015515;  // std dev = 0.160, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.25871986659996643;  // std dev = 1.324, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.043629404888667435;  // std dev = 4.203, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.49694607622020676;  // std dev = 0.412, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.13908567013679454;  // std dev = 3.287, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.1393038564109258;  // std dev = 3.575, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | | | else return -0.19294763716917235;  // std dev = 0.157, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then return 0.0984388755684225;  // std dev = 0.361, 110.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=43 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return -0.11164185422981691;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.523488206415692;  // std dev = 0.395, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, E), interaction(H, A) )
%   | | | then return -0.055364520733831385;  // std dev = 1.805, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | | else return 0.06805672561246039;  // std dev = 4.074, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5417693510867507;  // std dev = 0.386, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.19785920564063536;  // std dev = 0.154, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.0013923523201812616;  // std dev = 2.531, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.13239626557417114;  // std dev = 1.324, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2599312598279008;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.411363038060154;  // std dev = 0.427, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.6298595795625122;  // std dev = 0.522, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.19099809069837761;  // std dev = 0.051, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.32587847817575233;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K) )
%   | | | then return -0.050044220318455165;  // std dev = 1.988, 49.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=9 */
%   | | | else return 0.37032574541163427;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.3716584171304567;  // std dev = 0.581, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04687515399418828;  // std dev = 4.792, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.293116044612362;  // std dev = 0.129, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), phenotype(E, D) )
%   | | then if ( interaction(E, E) )
%   | | | then return -0.1002009627050239;  // std dev = 0.557, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01576546939427518;  // std dev = 1.905, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( phenotype(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.4461724631501389;  // std dev = 1.830, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.2006248787192619;  // std dev = 0.410, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.10390979249355686;  // std dev = 2.055, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return -0.0023127318685040306;  // std dev = 2.879, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.10984903863058472;  // std dev = 0.936, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.03989261755966414;  // std dev = 2.189, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), location(A, E) )
%   | then return 0.2229002434710513;  // std dev = 0.267, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return -0.05675657621311439;  // std dev = 0.291, 158.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=31 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(A, H), location(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.16467808224572808;  // std dev = 0.711, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6521822395151149;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, F), phenotype(K, G) )
%   | | | then return 0.03362918954555722;  // std dev = 2.761, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | | else return 0.13733762021706272;  // std dev = 2.261, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( complex(L, N), complex(M, N) )
%   | | | then return -0.028682234309488037;  // std dev = 1.030, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.25832271989699634;  // std dev = 1.267, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else return -0.06550062619333875;  // std dev = 0.205, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22712608666065462;  // std dev = 0.119, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(D, E), phenotype(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11684433793833149;  // std dev = 0.077, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.06160515991804753;  // std dev = 1.186, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return -0.03036901178642626;  // std dev = 0.750, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.13203667664478963;  // std dev = 0.566, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.3105059020063225;  // std dev = 1.360, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.015779669264403707;  // std dev = 1.787, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.008643226701431495;  // std dev = 3.954, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   | | | else return 0.04112190079037725;  // std dev = 2.894, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.993', 'seconds']
Refined model CLL: -0.226459


******************************************
Best model found
******************************************
Results 

CLL : -0.236614 

AUC ROC : 0.934204 

AUC PR : 0.262242 

Precision : 0.150943 

Recall : 0.45977 

F1 : 0.227273 

Total Learning Time : 10.655 

Total Inference Time : 4.709173202514648 

Total revision time: 18.897085321426392
Best scored revision CLL: -0.226459


Results 

CLL : -0.236614 

AUC ROC : 0.934204 

AUC PR : 0.262242 

Precision : 0.150943 

Recall : 0.45977 

F1 : 0.227273 

Total Learning Time : 29.617811811447144 

Total Inference Time : 4.709173202514648 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.575
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20164487005886075;  // std dev = 10.533, 492.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=169 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15043243408621057;  // std dev = 8.003, 295.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=94 */
%   | | | else return 0.142991685791675;  // std dev = 7.187, 241.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=75 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14666568016615714;  // std dev = 6.766, 205.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=69 */
%   | | | else return 0.13289020393416107;  // std dev = 8.230, 310.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=100 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11162785606183992;  // std dev = 5.322, 129.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=42 */
%   | | | else return 0.12113592209632716;  // std dev = 9.206, 382.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=127 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0919524025336704;  // std dev = 10.683, 521.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=169 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08138519754574634;  // std dev = 10.635, 511.000 (wgt'ed) examples reached here.  /* #neg=342 #pos=169 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7198082282442358;  // std dev = 0.993, 70.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=69 */
%   | else return -0.26589249636253864;  // std dev = 0.002, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09370215535030628;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
%   | | | else return 0.060852240043361566;  // std dev = 5.695, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07444942996185434;  // std dev = 5.217, 187.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=69 */
%   | | | else return 0.046372118611886545;  // std dev = 8.208, 307.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=100 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039603644722310476;  // std dev = 9.741, 507.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=169 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019735991174160472;  // std dev = 9.834, 525.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.553', 'seconds']
Parameter learned model CLL:-0.330412 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.533, 323, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.003, 201, 94], 'false,false,false,false': [7.187, 166, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.766, 136, 69], 'false,false,false,false': [8.23, 210, 100]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.322, 87, 42], 'false,false,false,false': [9.206, 255, 127]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.683, 352, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.635, 342, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.993, 1, 69], 'true,false': [0.002, 142, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.775, 93, 52], 'false,false,false,false': [5.695, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.217, 118, 69], 'false,false,false,false': [8.208, 207, 100]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.741, 338, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.834, 356, 169]}]
{'': [nan, 0.22550647762575507], 'false': [nan, 0.22550647762575304], 'false,false': [nan, 0.22550647762575507], 'false,false,false': [nan, 0.22550647762575304]}
{'': [nan, 0.21588535865448574], 'false': [nan, 0.21588535865448763], 'false,false': [nan, 0.21588535865448574], 'false,false,false': [0.21711002585463646, 0.21435581343296617]}
{'': [nan, 0.22044867315666117], 'false': [nan, 0.22044867315666117], 'false,false': [nan, 0.220448673156661], 'false,false,false': [0.22332682442059051, 0.21846984255402593]}
{'': [nan, 0.22131555226327157], 'false': [nan, 0.22131555226327157], 'false,false': [nan, 0.22131555226327423], 'false,false,false': [0.2195781503515408, 0.2218794445483433]}
{'': [nan, 0.21907093769354505], 'false': [nan, 0.21907093769354505], 'false,false': [nan, 0.21907093769354388], 'false,false,false': [nan, 0.21907093769354388]}
{'': [nan, 0.22132641804011124], 'false': [nan, 0.22132641804011124], 'false,false': [nan, 0.2213264180401122], 'false,false,false': [nan, 0.22132641804011013]}
{'': [0.21953252817352578, 0.22478905665244955], 'false': [nan, 0.22478905665244955], 'false,false': [nan, 0.22478905665244955], 'false,false,false': [0.23001189060642074, 0.21913805697589417], 'true': [0.014077223573816156, 3.715791151453023e-08], 'true,true': [nan, 0.014077223573816156], 'true,true,false': [nan, 0.014077223573816156]}
{'': [nan, 0.19166481604521346], 'false': [nan, 0.19166481604521346], 'false,false': [nan, 0.19166481604521318], 'false,false,false': [0.1455645626046641, 0.21944700798119168]}
{'': [nan, 0.18715779356470172], 'false': [nan, 0.18715779356470166], 'false,false': [nan, 0.18715779356470166], 'false,false,false': [nan, 0.18715779356470166]}
{'': [nan, 0.18420368077625224], 'false': [nan, 0.18420368077625224], 'false,false': [nan, 0.18420368077625224], 'false,false,false': [nan, 0.18420368077625224]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 37.741
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E), interaction(A, C) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.221785298735876;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.06223056775257356;  // std dev = 3.990, 98.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=20 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( enzyme(H, I) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15193424583397533;  // std dev = 8.570, 354.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), complex(A, D) )
%   | then return 0.5953205705001804;  // std dev = 0.304, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7194734122109543;  // std dev = 4.21e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then return 0.2522059392170999;  // std dev = 0.939, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, G), phenotype(G, H) )
%   | | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7559453400170874;  // std dev = 0.153, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8380808923950024;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.01240171546594145;  // std dev = 3.439, 97.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=14 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.07315845098669542;  // std dev = 4.876, 134.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=31 */
%   | | | else return 0.1372815530799258;  // std dev = 7.257, 253.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=75 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.55874527497163;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.046820822886278674;  // std dev = 0.399, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5137434217023525;  // std dev = 0.330, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(H, F), interaction(I, H) )
%   | | | then return 0.1144738395751988;  // std dev = 4.025, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | | else return 0.401938479786723;  // std dev = 1.983, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7612508880848338;  // std dev = 0.995, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.1715394555339213;  // std dev = 0.042, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.566024387364707;  // std dev = 0.104, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.1355123333970649;  // std dev = 6.067, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( enzyme(C, E), interaction(C, F) )
%   | | then return 0.2611549158525973;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.6064932242454784;  // std dev = 0.234, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.47116842630196554;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.1290892715933218;  // std dev = 1.113, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.14386003885635423;  // std dev = 0.049, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(H, J), interaction(K, A) )
%   | | | then return 0.11908252195498648;  // std dev = 3.247, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return -0.07891171581075769;  // std dev = 1.777, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.10551701165169838;  // std dev = 7.962, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
%   | | | else return 0.21284082066523402;  // std dev = 2.993, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.34169920446861296;  // std dev = 0.120, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.48512396078630726;  // std dev = 0.129, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(C, F) )
%   | | | then return 0.46130797280549074;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3573824563054218;  // std dev = 0.143, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.44217664597900885;  // std dev = 0.060, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return -0.01733672569003639;  // std dev = 3.702, 113.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=21 */
%   | | | else return 0.18086510021651975;  // std dev = 1.317, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.04393674856899427;  // std dev = 3.810, 82.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | | | else return 0.1106702129179481;  // std dev = 7.381, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.13310763616807514;  // std dev = 0.543, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.2637952039113699;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, A), interaction(G, C) )
%   | | | then return 0.37857120072653394;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2984948090241983;  // std dev = 0.163, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, A) )
%   | then return -0.14235705290844014;  // std dev = 0.041, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, A), complex(H, J) )
%   | | | then return -0.1561325164321955;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.05140701707759277;  // std dev = 3.715, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3345751523137156;  // std dev = 0.157, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.09691759695033958;  // std dev = 8.291, 333.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.037438454126337915;  // std dev = 0.389, 215.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=69 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( phenotype(E, F) )
%   | | then if ( enzyme(A, G), interaction(E, H) )
%   | | | then return -0.03175838893057665;  // std dev = 1.518, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.08561754918118414;  // std dev = 3.093, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( interaction(E, E) )
%   | | | then return 0.6111230531934286;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.018705238973283682;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5788406274670509;  // std dev = 1.274, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.20420380616728537;  // std dev = 0.180, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( location(A, K) )
%   | | | then return 0.013716201324575685;  // std dev = 5.514, 164.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=46 */
%   | | | else return -0.10161935379960586;  // std dev = 1.453, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3362319281388908;  // std dev = 0.310, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | else if ( interaction(C, A) )
%   | | then return -0.17612962097387014;  // std dev = 0.050, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return 0.00878286656280339;  // std dev = 0.408, 184.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=53 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6661323275141311;  // std dev = 0.166, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return -0.26275132001683676;  // std dev = 0.218, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3010383038582024;  // std dev = 3.846, 74.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | | | else return -0.2186919895626218;  // std dev = 0.395, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.25230655928478585;  // std dev = 1.104, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.011058604301494834;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.19289379859253225;  // std dev = 0.091, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.01015276544611821;  // std dev = 0.346, 124.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=29 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B), complex(E, G) )
%   | | then return 0.44311231232517045;  // std dev = 0.222, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(E, A), location(A, H) )
%   | | | then return -0.11527540511384568;  // std dev = 1.108, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.15953402510081766;  // std dev = 3.958, 76.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=37 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.31360790047629344;  // std dev = 4.108, 109.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=75 */
%   | | | else return -0.198178130012176;  // std dev = 0.393, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.02185212306029675;  // std dev = 0.955, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.17480953441595137;  // std dev = 1.147, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), interaction(E, E) )
%   | | | then return 0.3321965815957227;  // std dev = 0.932, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.48617410036573383;  // std dev = 2.423, 121.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=119 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.2683480256518315;  // std dev = 0.851, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0.26712760109882727;  // std dev = 2.426, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then return -0.14317553504256383;  // std dev = 0.043, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else return -0.20394272295162866;  // std dev = 0.069, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   else if ( interaction(J, A), location(J, K) )
%   | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | then return 0.7005235718340205;  // std dev = 0.176, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05600152892184332;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.039461426299212454;  // std dev = 0.342, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.794', 'seconds']
Refined model CLL: -0.222662


******************************************
Best model found
******************************************
Results 

CLL : -0.206037 

AUC ROC : 0.978132 

AUC PR : 0.322644 

Precision : 0.251012 

Recall : 0.712644 

F1 : 0.371257 

Total Learning Time : 37.741 

Total Inference Time : 41.265679597854614 

Total revision time: 83.15778972244263
Best scored revision CLL: -0.222662


Results 

CLL : -0.206037 

AUC ROC : 0.978132 

AUC PR : 0.322644 

Precision : 0.251012 

Recall : 0.712644 

F1 : 0.371257 

Total Learning Time : 93.87851621246338 

Total Inference Time : 41.265679597854614 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.867
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19247285783353613;  // std dev = 12.238, 673.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=225 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1680931602279527;  // std dev = 9.369, 394.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=132 */
%   | | | else return 0.14725696870648186;  // std dev = 7.986, 296.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=93 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15536495045478504;  // std dev = 7.757, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
%   | | | else return 0.16645717408187452;  // std dev = 9.250, 373.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=133 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11830645468112648;  // std dev = 6.368, 182.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=61 */
%   | | | else return 0.09906195871343525;  // std dev = 10.595, 520.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=164 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10733487350410689;  // std dev = 12.166, 658.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=225 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08595795654688228;  // std dev = 12.180, 661.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=225 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7282759737619926;  // std dev = 0.036, 92.000 (wgt'ed) examples reached here.  /* #pos=92 */
%   | else return -0.27130508333662784;  // std dev = 0.049, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07871676960318212;  // std dev = 6.786, 202.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=71 */
%   | | | else return 0.02942210669755774;  // std dev = 6.597, 208.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=62 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03506166344314144;  // std dev = 6.191, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
%   | | | else return 0.06187455105874045;  // std dev = 9.334, 388.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=133 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037017101005193516;  // std dev = 11.228, 675.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=225 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022356691570899853;  // std dev = 11.286, 690.000 (wgt'ed) examples reached here.  /* #neg=465 #pos=225 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.573', 'seconds']
Parameter learned model CLL:-0.333348 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.238, 448, 225]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.369, 262, 132], 'false,false,false,false': [7.986, 203, 93]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.757, 174, 92], 'false,false,false,false': [9.25, 240, 133]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.368, 121, 61], 'false,false,false,false': [10.595, 356, 164]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.166, 433, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.18, 436, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.036, 0, 92], 'true,false': [0.049, 159, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.786, 131, 71], 'false,false,false,false': [6.597, 146, 62]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.191, 189, 92], 'false,false,false,false': [9.334, 255, 133]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.228, 450, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.286, 465, 225]}]
{'': [nan, 0.22255143742176164], 'false': [nan, 0.2225514374217613], 'false,false': [nan, 0.22255143742176164], 'false,false,false': [nan, 0.2225514374217613]}
{'': [nan, 0.2197542533081304], 'false': [nan, 0.2197542533081268], 'false,false': [nan, 0.2197542533081304], 'false,false,false': [0.22278337499033574, 0.21547434258582704]}
{'': [nan, 0.22810753498890177], 'false': [nan, 0.22810753498890177], 'false,false': [nan, 0.2281075349888998], 'false,false,false': [0.22620820639082465, 0.22941079851601037]}
{'': [nan, 0.21775341571994883], 'false': [nan, 0.21775341571994883], 'false,false': [nan, 0.21775341571994844], 'false,false,false': [0.2228293684337655, 0.21588081544139648]}
{'': [nan, 0.22494328362325397], 'false': [nan, 0.22494328362325397], 'false,false': [nan, 0.22494328362325328], 'false,false,false': [nan, 0.22494328362325328]}
{'': [nan, 0.22445106513098131], 'false': [nan, 0.22445106513098131], 'false,false': [nan, 0.22445106513097635], 'false,false,false': [nan, 0.22445106513098143]}
{'': [0.2320068284053198, 0.21905561749410346], 'true': [1.3969859705360191e-05, 1.487460170774318e-05], 'false': [nan, 0.21905561749410346], 'false,false': [nan, 0.21905561749410346], 'false,false,false': [0.22794333888834417, 0.20922707100591947], 'true,true': [nan, 1.3969859705360191e-05], 'true,true,false': [nan, 1.3969859705360191e-05]}
{'': [nan, 0.1877023844378225], 'false': [nan, 0.1877023844378225], 'false,false': [nan, 0.1877023844378228], 'false,false,false': [0.1364031446267306, 0.22455269645172177]}
{'': [nan, 0.186772594156021], 'false': [nan, 0.18677259415602018], 'false,false': [nan, 0.18677259415602018], 'false,false,false': [nan, 0.18677259415602018]}
{'': [nan, 0.18460157408277073], 'false': [nan, 0.18460157408277073], 'false,false': [nan, 0.18460157408277147], 'false,false,false': [nan, 0.18460157408277147]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.248
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( recursion_proteinclass(C, B), location(A, D) )
%   | then return 0.8268989350995116;  // std dev = 0.174, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.7331489350995116;  // std dev = 0.331, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | | else return 0.1581489350995081;  // std dev = 9.391, 420.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=126 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.043334120284697505;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.24050187627598293;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.27920156667845974;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(A, D) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.7257371741022818;  // std dev = 4.21e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(C, D), location(A, E) )
%   | | | then return -0.12827300058136284;  // std dev = 0.035, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.19972669757174652;  // std dev = 2.677, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else return 0.04140933553350518;  // std dev = 0.383, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   else if ( enzyme(A, F), complex(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.8093975588594687;  // std dev = 0.263, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.16228172858205495;  // std dev = 0.179, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.6753413513331182;  // std dev = 0.307, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.09419809767507831;  // std dev = 3.771, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | | else return 0.18447831074757828;  // std dev = 8.542, 331.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=117 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(A, D), location(C, E) )
%   | then return 0.04816625577296707;  // std dev = 0.375, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.641799573043144;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.05349238285885356;  // std dev = 0.398, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   else if ( interaction(F, A), phenotype(A, G) )
%   | then if ( phenotype(F, G), interaction(A, F) )
%   | | then return -0.003679238639287314;  // std dev = 0.297, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.6803020167159375;  // std dev = 0.224, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.17943019935549315;  // std dev = 6.304, 187.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=70 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6097664921773184;  // std dev = 0.063, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.06057610644595217;  // std dev = 3.808, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | | else return 0.135226604427454;  // std dev = 6.525, 195.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=65 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( location(C, D), recursion_proteinclass(C, B) )
%   | then return 0.49106937296712494;  // std dev = 0.192, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else if ( interaction(C, C), location(C, D) )
%   | | then return 0.009402102542898238;  // std dev = 0.342, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
%   | | else return 0.10670383614860081;  // std dev = 0.441, 411.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=133 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.46890540537566777;  // std dev = 0.144, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.684669578631421;  // std dev = 0.293, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.15437483481833011;  // std dev = 4.300, 83.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=32 */
%   | else if ( interaction(A, H) )
%   | | then return -0.04057464139547038;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.03674884902157892;  // std dev = 1.223, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.18953854830652456;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.42957562567748014;  // std dev = 0.235, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6713121496763303;  // std dev = 0.171, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | else return -0.18662325342426467;  // std dev = 0.278, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(A, A), location(A, G) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.41052497119183845;  // std dev = 0.091, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1328940571387137;  // std dev = 0.123, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5000914170014534;  // std dev = 1.868, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return 0.027323787325555543;  // std dev = 5.206, 174.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=45 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.004007123135039531;  // std dev = 3.461, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return 0.07860797909400563;  // std dev = 6.903, 235.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=76 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.04810661809394616;  // std dev = 0.381, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return 0.36940021298790543;  // std dev = 0.172, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(F, B), phenotype(G, H) )
%   | | then if ( phenotype(A, I), enzyme(G, J) )
%   | | | then return -0.205808659202649;  // std dev = 0.640, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.43461239127990803;  // std dev = 0.338, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( recursion_proteinclass(G, B), interaction(A, K) )
%   | | | then return 0.4432920847251318;  // std dev = 1.770, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return -0.00602032193110048;  // std dev = 7.924, 442.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=97 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then return 0.42762681636209304;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(A, N), interaction(A, P) )
%   | | | then return -0.005636538708207735;  // std dev = 2.238, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.10301604041508954;  // std dev = 4.946, 117.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.3464508972410927;  // std dev = 0.337, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.10519403712943036;  // std dev = 1.225, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else return 0.5593844618681815;  // std dev = 0.165, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return -0.18703498588906145;  // std dev = 0.051, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.33905024246027643;  // std dev = 0.176, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.44756764912198027;  // std dev = 0.163, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.16851377506538193;  // std dev = 0.421, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.12802090039953395;  // std dev = 2.432, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.04333002413529574;  // std dev = 7.866, 316.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=95 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( enzyme(A, D), complex(C, E) )
%   | then return -0.03613301674660167;  // std dev = 0.147, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else return 0.005857598085117314;  // std dev = 0.212, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), phenotype(G, H) )
%   | | then if ( phenotype(F, I), location(A, J) )
%   | | | then return 0.27835944235062016;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2317146823381034;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.31439712176354945;  // std dev = 0.121, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, K), interaction(A, L) )
%   | | then if ( phenotype(L, M), interaction(L, N) )
%   | | | then return 0.05429526962589686;  // std dev = 2.234, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.18340010821746194;  // std dev = 1.742, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | else if ( complex(A, P), interaction(A, Q) )
%   | | | then return -0.020825197443746266;  // std dev = 2.245, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.04690498628115147;  // std dev = 8.383, 392.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=126 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then return -0.01610988166073857;  // std dev = 0.381, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else return 0.22042668453091732;  // std dev = 0.143, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09716638809485097;  // std dev = 0.081, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.054748188645326046;  // std dev = 1.227, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.022703061973319182;  // std dev = 2.840, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.21580347009417747;  // std dev = 1.000, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.002168963046952995;  // std dev = 5.504, 227.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=62 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.004471164203396107;  // std dev = 2.564, 73.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=23 */
%   | | | else return 0.07117721143157173;  // std dev = 6.321, 199.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=74 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.21802841839108483;  // std dev = 0.065, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( phenotype(A, E), complex(C, F) )
%   | | then return -0.19977195278960652;  // std dev = 0.986, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.187510907924223;  // std dev = 0.178, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( enzyme(A, H), complex(G, I) )
%   | | then return -0.10470588890873353;  // std dev = 0.157, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else return -0.025006652462478355;  // std dev = 0.197, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | else if ( complex(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.15754503912567497;  // std dev = 3.397, 99.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=55 */
%   | | | else return -0.17224781100445133;  // std dev = 0.310, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.08212460775983221;  // std dev = 5.627, 150.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=54 */
%   | | | else return 0.036696682019922905;  // std dev = 5.790, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.092', 'seconds']
Refined model CLL: -0.265231


******************************************
Best model found
******************************************
Results 

CLL : -0.245539 

AUC ROC : 0.914173 

AUC PR : 0.254426 

Precision : 0.336283 

Recall : 0.436782 

F1 : 0.38 

Total Learning Time : 17.248 

Total Inference Time : 11.303163528442383 

Total revision time: 33.57650255203247
Best scored revision CLL: -0.265231


Results 

CLL : -0.245539 

AUC ROC : 0.914173 

AUC PR : 0.254426 

Precision : 0.336283 

Recall : 0.436782 

F1 : 0.38 

Total Learning Time : 44.297229042053225 

Total Inference Time : 11.303163528442383 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.036
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19831781326597372;  // std dev = 13.641, 829.000 (wgt'ed) examples reached here.  /* #neg=547 #pos=282 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17669780708073746;  // std dev = 10.080, 450.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=155 */
%   | | | else return 0.15540857892127985;  // std dev = 9.271, 393.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=127 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12110021242820998;  // std dev = 8.806, 360.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=113 */
%   | | | else return 0.15404228054979627;  // std dev = 10.512, 488.000 (wgt'ed) examples reached here.  /* #neg=319 #pos=169 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11832652127656239;  // std dev = 7.032, 223.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=74 */
%   | | | else return 0.10586142544883444;  // std dev = 11.876, 647.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08764915063349224;  // std dev = 13.829, 876.000 (wgt'ed) examples reached here.  /* #neg=594 #pos=282 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08693212342247528;  // std dev = 13.672, 836.000 (wgt'ed) examples reached here.  /* #neg=554 #pos=282 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7180413806222808;  // std dev = 1.405, 115.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=113 */
%   | else return -0.26444932318358577;  // std dev = 0.047, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.053186551834828594;  // std dev = 7.400, 250.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=81 */
%   | | | else return 0.042141970472238034;  // std dev = 7.799, 285.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=88 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.026176524637382206;  // std dev = 7.012, 369.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=113 */
%   | | | else return 0.07316090495231371;  // std dev = 10.472, 481.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=169 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05561661280804056;  // std dev = 12.503, 804.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=282 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030558633500971273;  // std dev = 12.639, 836.000 (wgt'ed) examples reached here.  /* #neg=554 #pos=282 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.662', 'seconds']
Parameter learned model CLL:-0.336363 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.641, 547, 282]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [10.08, 295, 155], 'false,false,false,false': [9.271, 266, 127]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.806, 247, 113], 'false,false,false,false': [10.512, 319, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.032, 149, 74], 'false,false,false,false': [11.876, 439, 208]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.829, 594, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.672, 554, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.405, 2, 113], 'true,false': [0.047, 224, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.4, 169, 81], 'false,false,false,false': [7.799, 197, 88]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.012, 256, 113], 'false,false,false,false': [10.472, 312, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.503, 522, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.639, 554, 282]}]
{'': [nan, 0.22445401249343575], 'false': [nan, 0.2244540124934368], 'false,false': [nan, 0.22445401249343575], 'false,false,false': [nan, 0.2244540124934368]}
{'': [nan, 0.22261622826458285], 'false': [nan, 0.22261622826458255], 'false,false': [nan, 0.22261622826458285], 'false,false,false': [0.22580246913579866, 0.2187259224727865]}
{'': [nan, 0.2220267722672873], 'false': [nan, 0.2220267722672873], 'false,false': [nan, 0.2220267722672852], 'false,false,false': [0.2153953232458396, 0.226458135264224]}
{'': [nan, 0.21898069937549813], 'false': [nan, 0.21898069937549813], 'false,false': [nan, 0.21898069937549947], 'false,false,false': [0.221721731786283, 0.2179961271148059]}
{'': [nan, 0.21831395756764221], 'false': [nan, 0.21831395756764221], 'false,false': [nan, 0.21831395756764793], 'false,false,false': [nan, 0.21831395756764793]}
{'': [nan, 0.22358733686683172], 'false': [nan, 0.22358733686683172], 'false,false': [nan, 0.2235873368668325], 'false,false,false': [nan, 0.22358733686683174]}
{'': [0.22220623318642552, 0.21607535615950793], 'true': [0.017175733562537293, 9.851813742530905e-06], 'false': [nan, 0.21607535615950793], 'false,false': [nan, 0.21607535615950793], 'false,false,false': [0.21902399999999925, 0.21343182517697618], 'true,true': [nan, 0.017175733562537293], 'true,true,false': [nan, 0.017175733562537293]}
{'': [nan, 0.1874053845363632], 'false': [nan, 0.1874053845363632], 'false,false': [nan, 0.18740538453636282], 'false,false,false': [0.13323513241250515, 0.22800386058537778]}
{'': [nan, 0.19443046767825356], 'false': [nan, 0.19443046767825584], 'false,false': [nan, 0.19443046767825584], 'false,false,false': [nan, 0.19443046767825584]}
{'': [nan, 0.19108095588960852], 'false': [nan, 0.19108095588960852], 'false,false': [nan, 0.19108095588960985], 'false,false,false': [nan, 0.19108095588960985]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 32.851
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( complex(A, E), phenotype(C, F) )
%   | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.8025933795439567;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8105298874804645;  // std dev = 0.213, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( complex(I, J), location(A, K) )
%   | | | then return -0.015800644732420436;  // std dev = 3.621, 119.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=15 */
%   | | | else return 0.18709630352056428;  // std dev = 4.096, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | else if ( location(A, L), phenotype(A, M) )
%   | | | then return 0.18474826169883665;  // std dev = 8.082, 297.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=97 */
%   | | | else return 0.11801735615214519;  // std dev = 7.647, 304.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=79 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.6017231988936013;  // std dev = 0.358, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7278130384563324;  // std dev = 0.122, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14848998431337543;  // std dev = 0.066, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( complex(A, G), interaction(F, A) )
%   | | | then return 0.31622920578803926;  // std dev = 1.916, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.11541020609391074;  // std dev = 4.720, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, H), enzyme(A, J) )
%   | | | then return 0.08116984302360455;  // std dev = 2.227, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.24394699789169835;  // std dev = 4.436, 83.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.094383026641647;  // std dev = 4.235, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | | | else return 0.16717228912810028;  // std dev = 9.323, 400.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=133 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.4930491433587128;  // std dev = 0.261, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | else return 0.630627873315673;  // std dev = 0.202, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), phenotype(A, G) )
%   | | then return 0.5956031527742011;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.06946930533680266;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.49450961282460426;  // std dev = 0.805, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6648381738150848;  // std dev = 2.071, 34.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | | else return -0.025203502117731636;  // std dev = 5.568, 251.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=37 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.16728722462302564;  // std dev = 6.484, 184.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=65 */
%   | | | else return 0.1196640298919873;  // std dev = 7.689, 282.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=85 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.439482696251398;  // std dev = 0.052, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.1989320909127629;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5087904301039741;  // std dev = 0.061, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.1520121598061977;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.12522085104790873;  // std dev = 0.044, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.0822492329160012;  // std dev = 1.595, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | | else return 0.07295631657777046;  // std dev = 5.569, 167.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=47 */
%   | | else if ( enzyme(A, H), interaction(A, I) )
%   | | | then return 0.18507785752527556;  // std dev = 4.342, 86.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=34 */
%   | | | else return 0.11564668819150671;  // std dev = 9.737, 460.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=152 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.32429749290841386;  // std dev = 0.199, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(F, G) )
%   | | | then return 0.6025404177213386;  // std dev = 1.042, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.23475736753751505;  // std dev = 1.489, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.155184904958528;  // std dev = 1.509, 116.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=3 */
%   | | | else return 0.03156099379382942;  // std dev = 5.846, 191.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=47 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(K, I) )
%   | | | then return 0.14231222103323257;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.44188245994932923;  // std dev = 0.148, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.026706029602342838;  // std dev = 4.474, 107.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=27 */
%   | | | else return 0.07743335582767355;  // std dev = 9.142, 405.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=121 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.26856248553138806;  // std dev = 0.178, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.5093490465721696;  // std dev = 1.318, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | | else return -0.06550768334914397;  // std dev = 1.047, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.16510898948141775;  // std dev = 0.749, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return 0.05101877607300295;  // std dev = 10.443, 558.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=159 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6064567874750765;  // std dev = 1.166, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.21995149934121574;  // std dev = 0.078, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.07806917344273656;  // std dev = 3.253, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.17038588462189674;  // std dev = 2.313, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.04782917677970012;  // std dev = 0.372, 335.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=113 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(D, G), phenotype(F, G) )
%   | | | then return -0.02301595839079136;  // std dev = 1.167, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.4735884246100667;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, D), enzyme(H, E) )
%   | | | then return -0.10072359811226975;  // std dev = 1.299, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.028918795702108674;  // std dev = 4.840, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.12489089247198118;  // std dev = 2.244, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.028978918017778948;  // std dev = 5.044, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.2701375529090903;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10934302783084103;  // std dev = 6.151, 166.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=59 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2098511596267537;  // std dev = 0.124, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(A, A) )
%   | | then return -0.0881563644233365;  // std dev = 0.046, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( phenotype(A, D) )
%   | | | then return -0.03757194613950841;  // std dev = 2.502, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   | | | else return 0.036400035137929866;  // std dev = 1.349, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.24089939217110384;  // std dev = 0.178, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then if ( recursion_proteinclass(F, B), interaction(H, F) )
%   | | | then return 0.27654510712683084;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.0018056063528546478;  // std dev = 5.943, 195.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=48 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.13305057948349677;  // std dev = 4.639, 93.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=37 */
%   | | | else return 0.059762626910461504;  // std dev = 8.450, 352.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=114 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2224232968457942;  // std dev = 0.087, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.6491808943503923;  // std dev = 0.197, 89.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=87 */
%   | else return -0.2354329435669137;  // std dev = 0.079, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( location(F, I), interaction(G, F) )
%   | | | then return 0.1860034893505343;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.3508775270427116;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.1808717034246873;  // std dev = 0.149, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08758173500846411;  // std dev = 0.175, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return -0.004243405846608411;  // std dev = 6.362, 247.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=71 */
%   | | | else return 0.031671359894073096;  // std dev = 6.903, 256.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=78 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.1281101590286128;  // std dev = 0.130, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else return 0.19744204932775364;  // std dev = 0.065, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.536408515160453;  // std dev = 3.908, 201.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=186 */
%   | | | else return -0.05199392119476254;  // std dev = 4.576, 178.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=39 */
%   | | else return -0.22151405884761682;  // std dev = 0.069, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(J, A), location(J, K) )
%   | | | then return 0.06959689716930352;  // std dev = 1.373, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.04614159148496776;  // std dev = 1.001, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.17845408878746205;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.08179626501289547;  // std dev = 1.870, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.287', 'seconds']
Refined model CLL: -0.233473


******************************************
Best model found
******************************************
Results 

CLL : -0.231963 

AUC ROC : 0.978823 

AUC PR : 0.311162 

Precision : 0.333333 

Recall : 0.54023 

F1 : 0.412281 

Total Learning Time : 32.851 

Total Inference Time : 36.14191031455994 

Total revision time: 74.87159935188294
Best scored revision CLL: -0.233473


Results 

CLL : -0.231963 

AUC ROC : 0.978823 

AUC PR : 0.311162 

Precision : 0.333333 

Recall : 0.54023 

F1 : 0.412281 

Total Learning Time : 85.59232584190369 

Total Inference Time : 36.14191031455994 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.053
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1610060779566543;  // std dev = 6.079, 175.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17384659186288112;  // std dev = 4.888, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | | else return 0.09112933701562229;  // std dev = 3.562, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1316840219542786;  // std dev = 3.398, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.1739851765351098;  // std dev = 4.813, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.21998435811899567;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.10964856921298717;  // std dev = 5.080, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10808415800990698;  // std dev = 5.902, 156.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.058756871153600836;  // std dev = 6.032, 171.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7248131650698323;  // std dev = 0.049, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.26914984458034313;  // std dev = 0.118, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.12282246851244173;  // std dev = 3.582, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.022497987953399638;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.010297390372325778;  // std dev = 2.743, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | | else return 0.08865498725728473;  // std dev = 4.785, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.047693749525707325;  // std dev = 5.496, 160.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019097032877629247;  // std dev = 5.570, 171.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=53 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.885', 'seconds']
Parameter learned model CLL:-0.325104 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.079, 122, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.888, 71, 36], 'false,false,false,false': [3.562, 50, 17]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.398, 37, 17], 'false,false,false,false': [4.813, 65, 36]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.928, 20, 15], 'false,false,false,false': [5.08, 82, 38]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.902, 103, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.032, 118, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.049, 0, 17], 'true,false': [0.118, 50, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.582, 33, 21], 'false,false,false,false': [3.303, 40, 15]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.743, 48, 17], 'false,false,false,false': [4.785, 63, 36]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.496, 107, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.57, 118, 53]}]
{'': [nan, 0.21113469387755163], 'false': [nan, 0.21113469387755165], 'false,false': [nan, 0.21113469387755163], 'false,false,false': [nan, 0.21113469387755165]}
{'': [nan, 0.21181794160391026], 'false': [nan, 0.21181794160391032], 'false,false': [nan, 0.21181794160391026], 'false,false,false': [0.22325093894663264, 0.1893517487190905]}
{'': [nan, 0.2243319737627523], 'false': [nan, 0.2243319737627523], 'false,false': [nan, 0.22433197376275246], 'false,false,false': [0.2137866096982769, 0.2293466896247196]}
{'': [nan, 0.22393941308101134], 'false': [nan, 0.22393941308101134], 'false,false': [nan, 0.22393941308101165], 'false,false,false': [0.24489795918367366, 0.2150775391496303]}
{'': [nan, 0.22331081067979264], 'false': [nan, 0.22331081067979264], 'false,false': [nan, 0.22331081067979236], 'false,false,false': [nan, 0.22331081067979236]}
{'': [nan, 0.2127612982049084], 'false': [nan, 0.2127612982049084], 'false,false': [nan, 0.2127612982049084], 'false,false,false': [nan, 0.2127612982049084]}
{'': [0.18731685911914642, 0.22033644445590314], 'false': [nan, 0.22033644445590314], 'false,false': [nan, 0.22033644445590314], 'false,false,false': [0.23765432098765427, 0.19834710743801678], 'true': [0.0001435304524410613, 0.0002787476210770201], 'true,true': [nan, 0.0001435304524410613], 'true,true,false': [nan, 0.0001435304524410613]}
{'': [nan, 0.18782207971628118], 'false': [nan, 0.18782207971628118], 'false,false': [nan, 0.18782207971628107], 'false,false,false': [0.11574926693362624, 0.23126180697422707]}
{'': [nan, 0.18875869080312488], 'false': [nan, 0.18875869080312485], 'false,false': [nan, 0.18875869080312485], 'false,false,false': [nan, 0.18875869080312485]}
{'': [nan, 0.18144181789520503], 'false': [nan, 0.18144181789520503], 'false,false': [nan, 0.18144181789520483], 'false,false,false': [nan, 0.18144181789520483]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 7.802
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.2929315437951642;  // std dev = 3.362, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, J) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.2719420385477882;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.13814893509951237;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, D), complex(C, F) )
%   | | then if ( interaction(C, A) )
%   | | | then return 0.15619471171805724;  // std dev = 0.976, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5851807250903391;  // std dev = 1.219, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.0782099834886231;  // std dev = 0.956, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.226340373126857;  // std dev = 3.054, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   else if ( phenotype(A, H), enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.8269026792721738;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1741334579646191;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.021294919354117356;  // std dev = 0.373, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.69930443005106;  // std dev = 0.090, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.17857893366974964;  // std dev = 0.321, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( phenotype(F, G), phenotype(A, H) )
%   | | then if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6945014895735346;  // std dev = 0.179, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.14250770722571496;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( location(A, J), location(F, J) )
%   | | | then return 0.2491545106731391;  // std dev = 1.647, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.007751999031280809;  // std dev = 0.758, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( location(A, K), phenotype(A, L) )
%   | | then return 0.006716994665209457;  // std dev = 0.343, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.6477405545245741;  // std dev = 0.233, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20830474575888733;  // std dev = 2.733, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(E, C), phenotype(C, F) )
%   | | then return 0.08401377433407962;  // std dev = 0.348, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0.47098503896676;  // std dev = 0.301, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | else if ( enzyme(A, G) )
%   | | then return -0.14744518588008845;  // std dev = 0.155, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( complex(A, D) )
%   | | | then return 0.3981769892771924;  // std dev = 0.649, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1850823828284752;  // std dev = 1.274, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then return 0.15194382808430446;  // std dev = 0.327, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then return -0.1477497074558092;  // std dev = 0.254, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.26845899736989615;  // std dev = 1.555, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.003896281087143855;  // std dev = 3.003, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D) )
%   | | then return 0.31726495956696565;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.4888060537223743;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5913716406551208;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.16233274322338515;  // std dev = 0.061, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3809696319625133;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.29301788462493034;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.15256632570647516;  // std dev = 0.129, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.3481914928261064;  // std dev = 1.926, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | else return 0.09375085375671854;  // std dev = 2.995, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3294803271164822;  // std dev = 0.125, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), interaction(D, G) )
%   | | then if ( complex(G, H), enzyme(G, I) )
%   | | | then return -0.14710726030579702;  // std dev = 0.636, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1844989755515118;  // std dev = 0.778, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( complex(D, J), interaction(D, K) )
%   | | | then return -0.08976920307563069;  // std dev = 0.963, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.26536490348560776;  // std dev = 0.437, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(L, A) )
%   | | then if ( interaction(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.3712116406060079;  // std dev = 0.841, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.02320050004078123;  // std dev = 3.360, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.11054838024195605;  // std dev = 0.951, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.6679200477761312;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.31797695867399456;  // std dev = 0.083, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.1463009601237954;  // std dev = 0.065, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(A, G), interaction(H, E) )
%   | | then if ( interaction(E, E), complex(G, I) )
%   | | | then return 0.1278930770434286;  // std dev = 0.483, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.14113914141086373;  // std dev = 1.053, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5517956014229074;  // std dev = 0.555, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1933239299816768;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3339468894641989;  // std dev = 0.267, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.17876305135697898;  // std dev = 1.112, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.039898177882333026;  // std dev = 3.014, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(C, A) )
%   | then return 0.1967914407824294;  // std dev = 0.229, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return -0.16689706489797365;  // std dev = 0.151, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | else if ( enzyme(C, F), interaction(G, A) )
%   | | | then return 0.14874336776991556;  // std dev = 0.880, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.03488274492729929;  // std dev = 2.078, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   else if ( complex(A, H) )
%   | then return -0.04351884159952834;  // std dev = 0.168, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return 0.08344609748674352;  // std dev = 1.155, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.03264895745589657;  // std dev = 1.173, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.022127847228672472;  // std dev = 0.851, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.23148775826466542;  // std dev = 1.815, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19787980364966698;  // std dev = 0.104, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.12003612515365121;  // std dev = 0.584, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.03815886016433686;  // std dev = 0.820, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.049260256651625554;  // std dev = 0.352, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.13773150103725784;  // std dev = 0.462, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4124642736776526;  // std dev = 0.621, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.19432076170893348;  // std dev = 0.324, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return -0.1168044161044154;  // std dev = 0.612, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.03892213136078437;  // std dev = 2.900, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17014897283905112;  // std dev = 0.094, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(E, D) )
%   | | | then return -0.04841412346964671;  // std dev = 0.540, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.14376411967502475;  // std dev = 0.781, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return -0.009314222235236263;  // std dev = 0.495, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.19155441655392239;  // std dev = 0.977, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.31887327414977296;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11009681889704634;  // std dev = 0.270, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return -0.01725725382808751;  // std dev = 0.980, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.07554328750316662;  // std dev = 2.945, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.109', 'seconds']
Refined model CLL: -0.210328


******************************************
Best model found
******************************************
Results 

CLL : -0.193153 

AUC ROC : 0.879852 

AUC PR : 0.264452 

Precision : 0.264706 

Recall : 0.519231 

F1 : 0.350649 

Total Learning Time : 7.802 

Total Inference Time : 2.5168652534484863 

Total revision time: 12.913780431747437
Best scored revision CLL: -0.210328


Results 

CLL : -0.193153 

AUC ROC : 0.879852 

AUC PR : 0.264452 

Precision : 0.264706 

Recall : 0.519231 

F1 : 0.350649 

Total Learning Time : 23.63450692176819 

Total Inference Time : 2.5168652534484863 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.319
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19789252484310282;  // std dev = 8.366, 312.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1748541642508168;  // std dev = 6.385, 181.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=62 */
%   | | | else return 0.12761474120954716;  // std dev = 5.568, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15076895552604921;  // std dev = 5.381, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.13290927467383487;  // std dev = 6.476, 192.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=62 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13711389960381168;  // std dev = 4.172, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
%   | | | else return 0.11657620830285145;  // std dev = 7.286, 241.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=79 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1150282745362541;  // std dev = 8.302, 304.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07792016679274813;  // std dev = 8.406, 318.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=106 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.725590121204288;  // std dev = 0.043, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.27389037140169276;  // std dev = 0.059, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0678692658647103;  // std dev = 4.807, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.09731484429182244;  // std dev = 4.157, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.036851050563158495;  // std dev = 4.254, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | | else return 0.026083843790640007;  // std dev = 6.540, 200.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=62 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04861874175266948;  // std dev = 7.635, 308.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05358372578119537;  // std dev = 7.535, 293.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=106 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.875', 'seconds']
Parameter learned model CLL:-0.341547 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.366, 206, 106]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.385, 119, 62], 'false,false,false,false': [5.568, 105, 44]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.381, 85, 44], 'false,false,false,false': [6.476, 130, 62]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.172, 49, 27], 'false,false,false,false': [7.286, 162, 79]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.302, 198, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.406, 212, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.043, 0, 44], 'true,false': [0.059, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.807, 68, 35], 'false,false,false,false': [4.157, 48, 27]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.254, 89, 44], 'false,false,false,false': [6.54, 138, 62]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.635, 202, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.535, 187, 106]}]
{'': [nan, 0.22431788297173136], 'false': [nan, 0.22431788297172964], 'false,false': [nan, 0.22431788297173136], 'false,false,false': [nan, 0.22431788297172964]}
{'': [nan, 0.21803489439852985], 'false': [nan, 0.21803489439852955], 'false,false': [nan, 0.21803489439852985], 'false,false,false': [0.2252068007692061, 0.2080987342912469]}
{'': [nan, 0.22093675689535044], 'false': [nan, 0.22093675689535044], 'false,false': [nan, 0.22093675689534978], 'false,false,false': [0.22448404018669316, 0.21842524245167802]}
{'': [nan, 0.22244701351711224], 'false': [nan, 0.22244701351711224], 'false,false': [nan, 0.22244701351711157], 'false,false,false': [0.22905124653739642, 0.2202632260456976]}
{'': [nan, 0.22672211183649812], 'false': [nan, 0.22672211183649812], 'false,false': [nan, 0.22672211183650054], 'false,false,false': [nan, 0.22672211183650054]}
{'': [nan, 0.22219657121513606], 'false': [nan, 0.22219657121513606], 'false,false': [nan, 0.22219657121513586], 'false,false,false': [nan, 0.22219657121513484]}
{'': [0.22873411646721634, 0.22710350993797032], 'true': [4.286455397610341e-05, 4.418224211661936e-05], 'false': [nan, 0.22710350993797032], 'false,false': [nan, 0.22710350993797032], 'false,false,false': [0.22433782637383387, 0.23040000000000044], 'true,true': [nan, 4.286455397610341e-05], 'true,true,false': [nan, 4.286455397610341e-05]}
{'': [nan, 0.18281864790460606], 'false': [nan, 0.18281864790460606], 'false,false': [nan, 0.18281864790460625], 'false,false,false': [0.13608792021409646, 0.21384827835139672]}
{'': [nan, 0.18927987458991882], 'false': [nan, 0.18927987458991938], 'false,false': [nan, 0.18927987458991938], 'false,false,false': [nan, 0.18927987458991938]}
{'': [nan, 0.1937907103467447], 'false': [nan, 0.1937907103467447], 'false,false': [nan, 0.19379071034674483], 'false,false,false': [nan, 0.19379071034674483]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.974
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7711924133603816;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return -0.14185106490048766;  // std dev = 7.15e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.02481560176617897;  // std dev = 2.041, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.19617710411359596;  // std dev = 3.986, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109543;  // std dev = 4.21e-08, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.13743444037625968;  // std dev = 0.066, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(D, A), enzyme(A, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.17925001779180305;  // std dev = 3.890, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.5558581269858854;  // std dev = 0.809, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09396372273682214;  // std dev = 5.710, 191.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5696523612610482;  // std dev = 0.106, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.12420585923706401;  // std dev = 0.064, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.03088570100582448;  // std dev = 3.238, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.12817372697689128;  // std dev = 6.043, 204.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=65 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4258832044072485;  // std dev = 0.112, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.056948540199458414;  // std dev = 0.795, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.165838116818673;  // std dev = 0.157, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.3362860621138008;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.00969043948102447;  // std dev = 1.872, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( interaction(K, I), phenotype(I, L) )
%   | | | then return 0.12887807935509826;  // std dev = 2.719, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.31266005199157054;  // std dev = 2.029, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.12765377970804145;  // std dev = 3.878, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | | else return 0.037296356340205165;  // std dev = 3.655, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.36330589991829226;  // std dev = 0.060, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( interaction(D, A), interaction(E, D) )
%   | | | then return -0.021789951064433693;  // std dev = 1.109, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.21621264494406733;  // std dev = 1.863, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.17662401032943303;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.09422020872165837;  // std dev = 1.305, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), phenotype(A, I) )
%   | | | then return 0.26078305900359267;  // std dev = 1.829, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.026583644687567746;  // std dev = 4.006, 113.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=28 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.03175036049344616;  // std dev = 2.015, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.21112005872760917;  // std dev = 3.411, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), complex(D, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, G), phenotype(A, H) )
%   | | | then return -0.040855223802701075;  // std dev = 0.374, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.25216430925839795;  // std dev = 1.331, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else return -0.0026204544049283278;  // std dev = 0.321, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else return -0.04981282154870812;  // std dev = 0.312, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.2868766482263114;  // std dev = 0.056, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.46521810702660776;  // std dev = 0.895, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04233918506127586;  // std dev = 3.292, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.015163010569709557;  // std dev = 2.921, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.07393020767337523;  // std dev = 3.993, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5128533332497257;  // std dev = 0.189, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.18337882044944076;  // std dev = 0.085, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.3957884891009767;  // std dev = 0.289, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( interaction(E, H), enzyme(H, I) )
%   | | | then return -0.12114583794046682;  // std dev = 1.473, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | | else return 0.1265573077471995;  // std dev = 3.078, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5636024104112811;  // std dev = 1.001, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.20819049442907606;  // std dev = 0.275, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.13604201912046007;  // std dev = 0.747, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.020794407930219822;  // std dev = 2.409, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3247472898072766;  // std dev = 0.203, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(A, F), interaction(F, E) )
%   | | | then return -0.10240419416406327;  // std dev = 1.058, 35.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=3 */
%   | | | else return 0.023384819599919265;  // std dev = 4.321, 150.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=46 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return -0.17855201292681208;  // std dev = 0.202, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return 6.582003354819537E-4;  // std dev = 0.327, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   else if ( enzyme(A, I), location(A, J) )
%   | then return -0.01056744113688842;  // std dev = 0.264, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return 0.006997190895111707;  // std dev = 0.296, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.41783927800592796;  // std dev = 1.182, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.2082872991507252;  // std dev = 1.254, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.23417444689682046;  // std dev = 0.296, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | else if ( interaction(A, F), phenotype(A, G) )
%   | | then return -0.04916583975985041;  // std dev = 0.271, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else if ( complex(D, H), location(D, C) )
%   | | | then return -0.008648691695654085;  // std dev = 2.666, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.07308082136264167;  // std dev = 3.561, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   else if ( phenotype(A, I) )
%   | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.3427199117685258;  // std dev = 0.295, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | else return -0.18465189341262958;  // std dev = 0.052, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then return -0.13497165584353057;  // std dev = 0.312, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.08828443773412557;  // std dev = 0.831, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.005527105553145524;  // std dev = 1.885, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, A), location(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.07908814892210107;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.08368117887469594;  // std dev = 0.080, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.10200525970270316;  // std dev = 0.798, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.38082001526999854;  // std dev = 0.598, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, I), enzyme(F, J) )
%   | | | then return -0.08464317295845118;  // std dev = 1.110, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   | | | else return 0.03340377805571174;  // std dev = 4.753, 179.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=59 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.19130201763895238;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.08023337989013052;  // std dev = 1.033, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.01293501261415528;  // std dev = 2.380, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.442', 'seconds']
Refined model CLL: -0.228051


******************************************
Best model found
******************************************
Results 

CLL : -0.221975 

AUC ROC : 0.977369 

AUC PR : 0.19729 

Precision : 0.180822 

Recall : 0.634615 

F1 : 0.28145 

Total Learning Time : 16.974 

Total Inference Time : 6.41704797744751 

Total revision time: 26.718427198410033
Best scored revision CLL: -0.228051


Results 

CLL : -0.221975 

AUC ROC : 0.977369 

AUC PR : 0.19729 

Precision : 0.180822 

Recall : 0.634615 

F1 : 0.28145 

Total Learning Time : 37.439153688430785 

Total Inference Time : 6.41704797744751 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.615
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18734148168336318;  // std dev = 10.328, 483.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=159 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20487390963588237;  // std dev = 7.730, 256.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=95 */
%   | | | else return 0.16538637725246555;  // std dev = 6.540, 193.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=64 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.19257374317912804;  // std dev = 6.551, 181.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=70 */
%   | | | else return 0.1141465835853236;  // std dev = 7.847, 289.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=89 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.18243460604263007;  // std dev = 5.090, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | | | else return 0.10594856690086588;  // std dev = 8.839, 359.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=115 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10525036110926073;  // std dev = 10.193, 460.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=159 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05608162783222988;  // std dev = 10.420, 503.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=159 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6857658272542243;  // std dev = 1.410, 72.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=70 */
%   | else return -0.2842235204522511;  // std dev = 0.131, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10049482039756025;  // std dev = 5.694, 140.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=51 */
%   | | | else return 0.0742407299150594;  // std dev = 5.044, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03912247710385089;  // std dev = 5.348, 204.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=70 */
%   | | | else return 0.04011265102534148;  // std dev = 7.788, 280.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=89 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04654564242622955;  // std dev = 9.322, 461.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=159 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03231029105479082;  // std dev = 9.341, 469.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=159 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.900', 'seconds']
Parameter learned model CLL:-0.337082 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.328, 324, 159]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.73, 161, 95], 'false,false,false,false': [6.54, 129, 64]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.551, 111, 70], 'false,false,false,false': [7.847, 200, 89]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.09, 63, 44], 'false,false,false,false': [8.839, 244, 115]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.193, 301, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.42, 344, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.41, 2, 70], 'true,false': [0.131, 125, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.694, 89, 51], 'false,false,false,false': [5.044, 77, 38]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.348, 134, 70], 'false,false,false,false': [7.788, 191, 89]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.322, 302, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.341, 310, 159]}]
{'': [nan, 0.22082481385749309], 'false': [nan, 0.2208248138574907], 'false,false': [nan, 0.22082481385749309], 'false,false,false': [nan, 0.2208248138574907]}
{'': [nan, 0.22871910357587805], 'false': [nan, 0.22871910357587455], 'false,false': [nan, 0.22871910357587805], 'false,false,false': [0.23338317871094072, 0.22164353405460305]}
{'': [nan, 0.2237568867916503], 'false': [nan, 0.2237568867916503], 'false,false': [nan, 0.22375688679165143], 'false,false,false': [0.2370819884039178, 0.21304268813038477]}
{'': [nan, 0.22428766358397362], 'false': [nan, 0.22428766358397362], 'false,false': [nan, 0.2242876635839723], 'false,false,false': [0.24211721547733364, 0.2176302965974616]}
{'': [nan, 0.22585239119066775], 'false': [nan, 0.22585239119066775], 'false,false': [nan, 0.22585239119066539], 'false,false,false': [nan, 0.22585239119066539]}
{'': [nan, 0.21583995982950263], 'false': [nan, 0.21583995982950263], 'false,false': [nan, 0.21583995982950338], 'false,false,false': [nan, 0.21583995982950258]}
{'': [0.22837125657615845, 0.2270918663012039], 'true': [0.02760600562630808, 0.00013736043387999075], 'false': [nan, 0.2270918663012039], 'false,false': [nan, 0.2270918663012039], 'false,false,false': [0.2315816326530605, 0.2212476370510391], 'true,true': [nan, 0.02760600562630808], 'true,true,false': [nan, 0.02760600562630808]}
{'': [nan, 0.184397270015851], 'false': [nan, 0.184397270015851], 'false,false': [nan, 0.18439727001584594], 'false,false,false': [0.14017713975147064, 0.21661438024901836]}
{'': [nan, 0.18848971288943842], 'false': [nan, 0.18848971288943955], 'false,false': [nan, 0.18848971288943955], 'false,false,false': [nan, 0.18848971288943955]}
{'': [nan, 0.18605734551225445], 'false': [nan, 0.18605734551225445], 'false,false': [nan, 0.18605734551225542], 'false,false,false': [nan, 0.18605734551225542]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.72
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(A, E) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), interaction(G, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.10304689428318584;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.19857446701440637;  // std dev = 5.627, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
%   | | | else return 0.11608544303602138;  // std dev = 6.945, 252.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=65 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.7236124165610209;  // std dev = 0.064, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.48137304971739625;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | | then return 0.7705673655974467;  // std dev = 0.981, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.09752374078903629;  // std dev = 7.118, 266.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=69 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.747906431966103;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.4586181110800923;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.16468730121834987;  // std dev = 5.133, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5679970167004744;  // std dev = 0.151, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, A) )
%   | then return -0.1123163781936064;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.546462010733803;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6385182553948626;  // std dev = 0.170, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.18905994169883486;  // std dev = 4.341, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | | else return 0.10647251878185354;  // std dev = 8.069, 328.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=94 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42747214789761845;  // std dev = 0.157, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.5064465569428034;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.42945131446843227;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(F, A), interaction(A, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5734453422059388;  // std dev = 1.150, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.011572311351614292;  // std dev = 4.697, 164.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=28 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.0734267297203567;  // std dev = 3.993, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | | else return 0.12806954560332487;  // std dev = 6.453, 190.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=62 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.29031257413819717;  // std dev = 0.193, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.17682551574068273;  // std dev = 0.154, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.0038101821701415337;  // std dev = 1.847, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.013065666025041278;  // std dev = 0.719, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.27623932356655284;  // std dev = 0.764, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3789192688777954;  // std dev = 6.710, 192.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=117 */
%   | | | else return -0.21492337012433982;  // std dev = 0.288, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.19263605461827168;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -8.721496737298702E-4;  // std dev = 1.383, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.295306834076321;  // std dev = 0.312, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else if ( interaction(F, A), interaction(D, G) )
%   | | then return -0.054860607423912;  // std dev = 0.306, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | else if ( complex(A, H), complex(D, I) )
%   | | | then return 0.22163927625757657;  // std dev = 1.799, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.020111512007901844;  // std dev = 2.402, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.26892639734356977;  // std dev = 0.124, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( complex(K, M), interaction(K, N) )
%   | | | then return 0.20683933460975992;  // std dev = 1.339, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.08063870224245699;  // std dev = 1.470, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( complex(A, P), phenotype(A, Q) )
%   | | | then return 0.008885497981262496;  // std dev = 2.783, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.08758235658472362;  // std dev = 6.456, 231.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=76 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5536027032605717;  // std dev = 0.210, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | else return -0.19746661177228284;  // std dev = 0.052, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.1299824987688652;  // std dev = 0.860, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.4797838621143962;  // std dev = 0.167, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, G), interaction(F, G) )
%   | | | then return -0.10077483072267568;  // std dev = 1.868, 49.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | | else return 0.03848882296276265;  // std dev = 4.445, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return 0.34540661794929967;  // std dev = 1.054, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.020375761697200987;  // std dev = 1.959, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.10963482887844152;  // std dev = 3.386, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16808468195944384;  // std dev = 0.038, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.034937345037358375;  // std dev = 0.649, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.17942674323594907;  // std dev = 0.744, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(D, D), phenotype(D, I) )
%   | | | then return 0.19114076330953944;  // std dev = 1.247, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.02178530136848325;  // std dev = 2.587, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( location(A, L), complex(A, M) )
%   | | | then return 0.12422947232229192;  // std dev = 1.474, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.057230660326058454;  // std dev = 2.339, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.11360605043092059;  // std dev = 3.439, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | | else return 0.049224063075174455;  // std dev = 5.607, 212.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=65 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.021047871441495353;  // std dev = 0.298, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), complex(F, H) )
%   | | then if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.3008110336800582;  // std dev = 1.890, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.0030730047735567185;  // std dev = 1.549, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(K, F), location(F, L) )
%   | | | then return -0.02216617157658922;  // std dev = 2.497, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.10612376181452796;  // std dev = 2.046, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( phenotype(A, M), interaction(N, A) )
%   | | then if ( phenotype(N, M), complex(A, P) )
%   | | | then return 0.10094054769885022;  // std dev = 1.597, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.05328770340125262;  // std dev = 2.804, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | else if ( enzyme(A, Q) )
%   | | | then return -0.1113062213067069;  // std dev = 1.358, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.06580338523090996;  // std dev = 4.621, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(D, E), recursion_proteinclass(D, B) )
%   | then return 0.18899254815155267;  // std dev = 0.191, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1394248502696254;  // std dev = 0.061, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else return 0.05563306296270579;  // std dev = 0.392, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( enzyme(G, H), location(A, I) )
%   | | then if ( interaction(F, G), phenotype(F, J) )
%   | | | then return 0.2042984066274259;  // std dev = 1.873, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | else return 0.02883342261389062;  // std dev = 3.384, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | else return -0.03330577561807913;  // std dev = 0.337, 86.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=21 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return -0.13117431672225238;  // std dev = 0.328, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return -0.14055514799773042;  // std dev = 1.275, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -5.362505628027925E-4;  // std dev = 2.680, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.741', 'seconds']
Refined model CLL: -0.250544


******************************************
Best model found
******************************************
Results 

CLL : -0.255773 

AUC ROC : 0.930308 

AUC PR : 0.174423 

Precision : 0.144578 

Recall : 0.461538 

F1 : 0.220183 

Total Learning Time : 16.72 

Total Inference Time : 12.017610788345337 

Total revision time: 32.9124610042572
Best scored revision CLL: -0.250544


Results 

CLL : -0.255773 

AUC ROC : 0.930308 

AUC PR : 0.174423 

Precision : 0.144578 

Recall : 0.461538 

F1 : 0.220183 

Total Learning Time : 43.633187494277955 

Total Inference Time : 12.017610788345337 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.632
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17362512557569984;  // std dev = 12.047, 672.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=212 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17633176819221233;  // std dev = 9.042, 364.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=124 */
%   | | | else return 0.1488396873193524;  // std dev = 7.774, 281.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=88 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15149563996582147;  // std dev = 7.706, 265.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=90 */
%   | | | else return 0.12886034610639577;  // std dev = 9.128, 385.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=122 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14922678613524323;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | | else return 0.11905142777829314;  // std dev = 10.238, 476.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=156 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10163053893937038;  // std dev = 11.884, 635.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=212 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07485025649506459;  // std dev = 11.957, 651.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=212 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7299650499820465;  // std dev = 0.052, 90.000 (wgt'ed) examples reached here.  /* #pos=90 */
%   | else return -0.26995748639867756;  // std dev = 0.077, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.058346674727479425;  // std dev = 6.789, 211.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=68 */
%   | | | else return 0.05351663960555065;  // std dev = 6.095, 173.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=54 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06159462106632661;  // std dev = 5.983, 250.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=90 */
%   | | | else return 0.04362992700772756;  // std dev = 9.133, 386.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=122 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04463230911343913;  // std dev = 10.837, 634.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=212 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014537965541138984;  // std dev = 11.028, 676.000 (wgt'ed) examples reached here.  /* #neg=464 #pos=212 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.896', 'seconds']
Parameter learned model CLL:-0.324011 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.047, 460, 212]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.042, 240, 124], 'false,false,false,false': [7.774, 193, 88]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.706, 175, 90], 'false,false,false,false': [9.128, 263, 122]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.97, 98, 56], 'false,false,false,false': [10.238, 320, 156]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.884, 423, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.957, 439, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.052, 0, 90], 'true,false': [0.077, 195, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.789, 143, 68], 'false,false,false,false': [6.095, 119, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.983, 160, 90], 'false,false,false,false': [9.133, 264, 122]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.837, 422, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.028, 464, 212]}]
{'': [nan, 0.21595096371882327], 'false': [nan, 0.21595096371882277], 'false,false': [nan, 0.21595096371882327], 'false,false,false': [nan, 0.21595096371882277]}
{'': [nan, 0.22065020131001853], 'false': [nan, 0.22065020131001842], 'false,false': [nan, 0.22065020131001853], 'false,false,false': [0.2246105542808856, 0.2150935271843064]}
{'': [nan, 0.21965900685430417], 'false': [nan, 0.21965900685430417], 'false,false': [nan, 0.21965900685430578], 'false,false,false': [0.22409110110173722, 0.2163994607647964]}
{'': [nan, 0.22310637582658813], 'false': [nan, 0.22310637582658813], 'false,false': [nan, 0.2231063758265899], 'false,false,false': [0.23140495867768573, 0.22019896075892348]}
{'': [nan, 0.2224194893513755], 'false': [nan, 0.2224194893513755], 'false,false': [nan, 0.2224194893513735], 'false,false,false': [nan, 0.2224194893513735]}
{'': [nan, 0.219607110924647], 'false': [nan, 0.219607110924647], 'false,false': [nan, 0.2196071109246441], 'false,false,false': [nan, 0.2196071109246457]}
{'': [0.21606332095859285, 0.21675008958971279], 'false': [nan, 0.21675008958971279], 'false,false': [nan, 0.21675008958971279], 'false,false,false': [0.21841378226005637, 0.21470814260416268], 'true': [3.0169578548585225e-05, 3.0378099825685176e-05], 'true,true': [nan, 3.0169578548585225e-05], 'true,true,false': [nan, 3.0169578548585225e-05]}
{'': [nan, 0.18750197809068217], 'false': [nan, 0.18750197809068217], 'false,false': [nan, 0.1875019780906817], 'false,false,false': [0.14317985293524105, 0.21608115833095987]}
{'': [nan, 0.18522789122686653], 'false': [nan, 0.18522789122686426], 'false,false': [nan, 0.18522789122686426], 'false,false,false': [nan, 0.18522789122686426]}
{'': [nan, 0.17990605246769775], 'false': [nan, 0.17990605246769775], 'false,false': [nan, 0.1799060524676962], 'false,false,false': [nan, 0.1799060524676962]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 63.711
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.185421662372241;  // std dev = 6.960, 220.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=72 */
%   else if ( phenotype(A, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.7353419175556528;  // std dev = 2.478, 57.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=50 */
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.14386322081379718;  // std dev = 0.452, 168.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(D, D), enzyme(A, F) )
%   | | | then return 0.4323663916046557;  // std dev = 0.847, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7851899843293065;  // std dev = 0.504, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.14932478731957752;  // std dev = 0.177, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0.47397314226903037;  // std dev = 6.088, 175.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=117 */
%   | else return -0.1491536081578418;  // std dev = 0.374, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.31495061742743224;  // std dev = 1.182, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then return -0.16169943808114462;  // std dev = 0.009, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.017424127407959226;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.08971872973489792;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5848062257654263;  // std dev = 0.194, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), location(D, E) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.019844415605943373;  // std dev = 1.006, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.11375320104311976;  // std dev = 0.919, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( complex(A, H), complex(D, H) )
%   | | | then return 0.019839389443078764;  // std dev = 0.821, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.15274386733399722;  // std dev = 2.168, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), interaction(A, J) )
%   | | | then return 0.0398429108429277;  // std dev = 1.399, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.16326750840286433;  // std dev = 5.280, 173.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=64 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1074087938754429;  // std dev = 6.829, 297.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=90 */
%   | | | else return -0.04326434099395149;  // std dev = 0.924, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then return 0.4165674105122766;  // std dev = 0.175, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return 0.5108653994144533;  // std dev = 0.179, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5586478281227756;  // std dev = 0.165, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( enzyme(H, I), interaction(J, A) )
%   | | then return -0.047294011608072256;  // std dev = 0.555, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, K), phenotype(H, K) )
%   | | | then return 0.449991928104188;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5769940357641477;  // std dev = 0.152, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11756295064838455;  // std dev = 0.149, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.03594700232964167;  // std dev = 3.498, 99.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=24 */
%   | | | else return 0.10339849980300596;  // std dev = 8.293, 440.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=141 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then return 0.03360940912438593;  // std dev = 0.240, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   else if ( interaction(C, A), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | | then if ( complex(C, F), recursion_proteinclass(E, B) )
%   | | | then return 0.18829330778470724;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5750862815621436;  // std dev = 0.435, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.027072000218469436;  // std dev = 2.769, 91.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=15 */
%   | | | else return 0.09248983702266811;  // std dev = 6.590, 281.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=96 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I) )
%   | | | then return 0.1601107737162569;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3943872236331757;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.12336675211361708;  // std dev = 2.406, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.041518482321365506;  // std dev = 4.455, 148.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3658859497855389;  // std dev = 0.083, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, D) )
%   | | then if ( interaction(A, E), complex(E, F) )
%   | | | then return -0.05701550607705559;  // std dev = 0.774, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.191832783301256;  // std dev = 0.073, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(C, G), interaction(H, C) )
%   | | | then return 0.08362346157292576;  // std dev = 2.507, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return -0.005072603756998692;  // std dev = 2.601, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.34159698509236014;  // std dev = 0.063, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12341354326148553;  // std dev = 0.035, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.12054088511174177;  // std dev = 3.374, 87.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
%   | | | else return 0.06009223659686797;  // std dev = 7.264, 363.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2428672290386372;  // std dev = 0.035, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.4718002002170727;  // std dev = 0.945, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.5523899480263043;  // std dev = 0.769, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | else return -0.17429312411286074;  // std dev = 0.044, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3431468424591208;  // std dev = 0.063, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.323882622391682;  // std dev = 0.881, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.01934904391918297;  // std dev = 5.030, 204.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=45 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.03127177214036073;  // std dev = 1.940, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.0909188903969407;  // std dev = 4.754, 135.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=47 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.05709901315787868;  // std dev = 0.271, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.21671831762579963;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.014532108403943993;  // std dev = 0.296, 178.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=47 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.47455785639823894;  // std dev = 2.924, 129.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=124 */
%   | | | else return -0.11211217367404686;  // std dev = 3.060, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else return -0.1730190528717294;  // std dev = 0.032, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | else if ( interaction(J, A) )
%   | | then return -0.07242070174416193;  // std dev = 0.257, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.021070425136636824;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1214740382094381;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.1831967910861258;  // std dev = 0.067, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.047835297869616045;  // std dev = 0.186, 104.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=19 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.3304007795505831;  // std dev = 0.170, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return 0.12665371490735564;  // std dev = 2.352, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | | else return 0.034263212198544224;  // std dev = 4.245, 175.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=54 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), complex(K, L) )
%   | | | then return -0.024092436413864746;  // std dev = 3.208, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | | | else return 0.06638443240811207;  // std dev = 2.106, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.15113105340643845;  // std dev = 0.984, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.049980097386282965;  // std dev = 3.354, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.17150587526833605;  // std dev = 0.063, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(E, C), interaction(C, E) )
%   | | then if ( complex(C, F) )
%   | | | then return 0.13045833211408742;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.23574385028864367;  // std dev = 0.533, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.16026493718951895;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.09101783455366849;  // std dev = 0.042, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3319629178001309;  // std dev = 1.268, 71.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=70 */
%   | | | else return -0.14627018059171407;  // std dev = 0.456, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | | else if ( location(A, I) )
%   | | | then return 0.044621216528857865;  // std dev = 6.186, 307.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=105 */
%   | | | else return -0.06262234527628628;  // std dev = 1.487, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.529', 'seconds']
Refined model CLL: -0.196479


******************************************
Best model found
******************************************
Results 

CLL : -0.201163 

AUC ROC : 0.965281 

AUC PR : 0.347747 

Precision : 0.189711 

Recall : 0.567308 

F1 : 0.284337 

Total Learning Time : 63.711 

Total Inference Time : 52.737468957901 

Total revision time: 120.96345884132386
Best scored revision CLL: -0.196479


Results 

CLL : -0.201163 

AUC ROC : 0.965281 

AUC PR : 0.347747 

Precision : 0.189711 

Recall : 0.567308 

F1 : 0.284337 

Total Learning Time : 131.68418533134462 

Total Inference Time : 52.737468957901 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.953
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1781972442782524;  // std dev = 13.423, 828.000 (wgt'ed) examples reached here.  /* #neg=563 #pos=265 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1842122479022271;  // std dev = 9.781, 421.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=147 */
%   | | | else return 0.183126197691673;  // std dev = 8.771, 339.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=118 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14783060550131089;  // std dev = 8.406, 315.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=107 */
%   | | | else return 0.13460684846584067;  // std dev = 10.316, 484.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=158 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09964052796386731;  // std dev = 6.670, 206.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=65 */
%   | | | else return 0.11655040420186492;  // std dev = 11.571, 605.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=200 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09072606926065956;  // std dev = 13.377, 816.000 (wgt'ed) examples reached here.  /* #neg=551 #pos=265 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07774262814027083;  // std dev = 13.340, 807.000 (wgt'ed) examples reached here.  /* #neg=542 #pos=265 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7340805821951979;  // std dev = 0.016, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.2657221293364838;  // std dev = 0.021, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0720244900826109;  // std dev = 7.371, 243.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=82 */
%   | | | else return 0.048837214933560295;  // std dev = 7.220, 242.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=76 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03807999200892568;  // std dev = 6.700, 329.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=107 */
%   | | | else return 0.05656752272057559;  // std dev = 10.260, 473.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=158 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05530653301032287;  // std dev = 12.095, 757.000 (wgt'ed) examples reached here.  /* #neg=492 #pos=265 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02991902891156453;  // std dev = 12.204, 796.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=265 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.037', 'seconds']
Parameter learned model CLL:-0.334062 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.423, 563, 265]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.781, 274, 147], 'false,false,false,false': [8.771, 221, 118]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.406, 208, 107], 'false,false,false,false': [10.316, 326, 158]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.67, 141, 65], 'false,false,false,false': [11.571, 405, 200]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.377, 551, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.34, 542, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.016, 0, 107], 'true,false': [0.021, 216, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.371, 161, 82], 'false,false,false,false': [7.22, 166, 76]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.7, 222, 107], 'false,false,false,false': [10.26, 315, 158]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.095, 492, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.204, 531, 265]}]
{'': [nan, 0.21761738897057298], 'false': [nan, 0.21761738897057367], 'false,false': [nan, 0.21761738897057298], 'false,false,false': [nan, 0.21761738897057367]}
{'': [nan, 0.227103531855957], 'false': [nan, 0.22710353185595883], 'false,false': [nan, 0.227103531855957], 'false,false,false': [0.227249902674892, 0.22692110232246818]}
{'': [nan, 0.22166358236874534], 'false': [nan, 0.22166358236874534], 'false,false': [nan, 0.2216635823687372], 'false,false,false': [0.22429782660248115, 0.2198802062033984]}
{'': [nan, 0.22000092447118902], 'false': [nan, 0.22000092447118902], 'false,false': [nan, 0.22000092447119465], 'false,false,false': [0.21597228768027063, 0.22130002678149757]}
{'': [nan, 0.2192920981163345], 'false': [nan, 0.2192920981163345], 'false,false': [nan, 0.21929209811632866], 'false,false,false': [nan, 0.21929209811632866]}
{'': [nan, 0.22051660356811095], 'false': [nan, 0.22051660356811095], 'false,false': [nan, 0.22051660356811076], 'false,false,false': [nan, 0.22051660356811095]}
{'': [0.2214447307197844, 0.21964255518440626], 'true': [2.2787123766228025e-06, 2.108692570219946e-06], 'false': [nan, 0.21964255518440626], 'false,false': [nan, 0.21964255518440626], 'false,false,false': [0.22357702924689885, 0.21542244382214143], 'true,true': [nan, 2.2787123766228025e-06], 'true,true,false': [nan, 2.2787123766228025e-06]}
{'': [nan, 0.18730194337202122], 'false': [nan, 0.18730194337202122], 'false,false': [nan, 0.18730194337202072], 'false,false,false': [0.13644647732204077, 0.22253477412442055]}
{'': [nan, 0.1932601788419323], 'false': [nan, 0.19326017884193128], 'false,false': [nan, 0.19326017884193128], 'false,false,false': [nan, 0.19326017884193128]}
{'': [nan, 0.18710292538116655], 'false': [nan, 0.18710292538116655], 'false,false': [nan, 0.1871029253811661], 'false,false,false': [nan, 0.1871029253811661]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.671
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7883814932390467;  // std dev = 0.255, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( phenotype(A, G), phenotype(D, H) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.021851064900487684;  // std dev = 2.814, 75.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=9 */
%   | | | else return 0.11167006186007579;  // std dev = 6.349, 213.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=54 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.16042636781172329;  // std dev = 10.093, 483.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=146 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then return 0.733336774135335;  // std dev = 5.96e-08, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.0331588496206406;  // std dev = 0.386, 112.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=21 */
%   | | else if ( enzyme(D, F), complex(D, G) )
%   | | | then return 0.05891960238192249;  // std dev = 3.192, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.16954824144582614;  // std dev = 9.802, 438.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=146 */
%   else if ( interaction(A, H), phenotype(H, I) )
%   | then return 0.0765121323896514;  // std dev = 0.416, 125.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4013934077810562;  // std dev = 2.481, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return -0.15817142614668728;  // std dev = 0.015, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.3407406586726711;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08747691313074624;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.537870127215304;  // std dev = 0.207, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, D), interaction(D, E) )
%   | | then if ( enzyme(E, F), interaction(E, G) )
%   | | | then return -0.1469473061850703;  // std dev = 0.057, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.010158580698165904;  // std dev = 2.398, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7424567860569392;  // std dev = 0.980, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.05152111880468588;  // std dev = 6.088, 216.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=49 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.09881766996605838;  // std dev = 5.616, 155.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
%   | | | else return 0.16262988635630443;  // std dev = 6.248, 172.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=60 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5885664452446017;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.19297534348754097;  // std dev = 4.850, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.44796939764830973;  // std dev = 0.156, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, D) )
%   | | then return -0.11757584395974847;  // std dev = 0.204, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | | then return 0.494793452093118;  // std dev = 0.206, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18304343798549505;  // std dev = 4.631, 93.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=36 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then return 0.07948221171805231;  // std dev = 0.413, 301.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=89 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6686359471202163;  // std dev = 2.224, 60.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=55 */
%   | | | else return -0.20228126662470805;  // std dev = 0.241, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.06697982842388767;  // std dev = 2.761, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.1196272993866539;  // std dev = 6.066, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.41794665306807205;  // std dev = 0.220, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.24093505582538755;  // std dev = 2.023, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.023153945959339443;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( complex(A, H), complex(D, H) )
%   | | | then return -0.13142337413399052;  // std dev = 0.950, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | | else return 0.0358990753069651;  // std dev = 4.086, 105.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=24 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.49282994864088925;  // std dev = 1.029, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.12026599956368528;  // std dev = 6.837, 230.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=81 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.2252841337583292;  // std dev = 1.994, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.06292089893931488;  // std dev = 7.414, 304.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=91 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( interaction(E, A), interaction(E, C) )
%   | | then return 0.26395020881189374;  // std dev = 0.117, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.3297844137986588;  // std dev = 0.196, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5187811850129797;  // std dev = 0.279, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.09835608100309512;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.13772588806631253;  // std dev = 0.146, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( complex(H, I) )
%   | | | then return -0.020915527190892784;  // std dev = 2.145, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.08288610041385358;  // std dev = 2.516, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.10572932137909714;  // std dev = 6.231, 192.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=69 */
%   | | | else return 0.06850227212224794;  // std dev = 9.030, 432.000 (wgt'ed) examples reached here.  /* #neg=297 #pos=135 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.24771485635234994;  // std dev = 0.072, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.6720560775437133;  // std dev = 0.135, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | else return -0.20561964042399508;  // std dev = 0.634, 218.000 (wgt'ed) examples reached here.  /* #neg=218 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), location(A, H) )
%   | | then return 0.1118188352667127;  // std dev = 0.626, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3572481252360961;  // std dev = 0.110, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(J, I), interaction(J, K) )
%   | | | then return -0.07283599478709785;  // std dev = 2.043, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.062402645361625715;  // std dev = 3.936, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1264364237935918;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.0927236064760124;  // std dev = 7.839, 298.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=108 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1994794436591063;  // std dev = 0.168, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(D, F) )
%   | | then if ( interaction(E, A), location(E, F) )
%   | | | then return -0.01901255678567569;  // std dev = 5.240, 219.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=50 */
%   | | | else return 0.019168778618937565;  // std dev = 7.164, 334.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=96 */
%   | | else if ( location(E, G) )
%   | | | then return -0.052963690475373026;  // std dev = 1.477, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.19277021032307154;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.612202997741982;  // std dev = 0.725, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.21994035032212234;  // std dev = 0.265, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.11199672496685177;  // std dev = 0.958, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.02928657054135758;  // std dev = 5.071, 146.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=46 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.4223695159654586;  // std dev = 0.194, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | else return -0.17817680455551682;  // std dev = 0.530, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G) )
%   | | then return 0.21232518107313209;  // std dev = 0.074, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(F, H), interaction(H, H) )
%   | | | then return 0.182902720702908;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.21342235080469818;  // std dev = 0.931, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4658059764084556;  // std dev = 1.703, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return -0.044407530680957374;  // std dev = 4.728, 195.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=34 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.061341593339078196;  // std dev = 4.808, 166.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=59 */
%   | | | else return 0.024475042370133756;  // std dev = 6.628, 228.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=70 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.10853448288135695;  // std dev = 0.243, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(D, F), phenotype(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6062788833438153;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.023527911674482694;  // std dev = 2.485, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.390870239383897;  // std dev = 1.023, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.051546408293519065;  // std dev = 4.725, 186.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=36 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.33050069139580224;  // std dev = 5.750, 210.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=150 */
%   | | | else return -0.22600755914648885;  // std dev = 0.799, 226.000 (wgt'ed) examples reached here.  /* #neg=226 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0893802122136301;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.13704155173379393;  // std dev = 1.295, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.100', 'seconds']
Refined model CLL: -0.244261


******************************************
Best model found
******************************************
Results 

CLL : -0.256895 

AUC ROC : 0.947274 

AUC PR : 0.165007 

Precision : 0.1875 

Recall : 0.490385 

F1 : 0.271277 

Total Learning Time : 23.671 

Total Inference Time : 17.523768186569214 

Total revision time: 46.51433246040344
Best scored revision CLL: -0.244261


Results 

CLL : -0.256895 

AUC ROC : 0.947274 

AUC PR : 0.165007 

Precision : 0.1875 

Recall : 0.490385 

F1 : 0.271277 

Total Learning Time : 57.23505895042419 

Total Inference Time : 17.523768186569214 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.016
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1688833983763473;  // std dev = 6.157, 177.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16586799913767908;  // std dev = 4.409, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | | else return 0.20251972769081605;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17939122862047852;  // std dev = 3.891, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.11624320861043733;  // std dev = 4.635, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14929883992119128;  // std dev = 3.084, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.10291049094236684;  // std dev = 5.233, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10918485998877364;  // std dev = 6.008, 161.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0660705829078054;  // std dev = 6.117, 172.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=55 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.724111650804454;  // std dev = 0.005, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.2758940005212349;  // std dev = 0.006, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10373088410684463;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.016415493636991012;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06522937407592815;  // std dev = 3.051, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.020054287581209484;  // std dev = 4.691, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05252287912800269;  // std dev = 5.491, 159.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02932304371354661;  // std dev = 5.545, 165.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=55 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.597', 'seconds']
Parameter learned model CLL:-0.328327 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.157, 122, 55]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.409, 59, 29], 'false,false,false,false': [4.059, 45, 26]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.891, 41, 24], 'false,false,false,false': [4.635, 70, 31]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.084, 26, 15], 'false,false,false,false': [5.233, 87, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.008, 106, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.117, 117, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 24], 'true,false': [0.006, 43, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.996, 25, 14], 'false,false,false,false': [3.502, 44, 17]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.051, 41, 24], 'false,false,false,false': [4.691, 76, 31]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.491, 104, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.545, 110, 55]}]
{'': [nan, 0.2141785566088932], 'false': [nan, 0.21417855660889393], 'false,false': [nan, 0.2141785566088932], 'false,false,false': [nan, 0.21417855660889393]}
{'': [nan, 0.22625687275028897], 'false': [nan, 0.22625687275028597], 'false,false': [nan, 0.22625687275028897], 'false,false,false': [0.2209452479338835, 0.23209680618924736]}
{'': [nan, 0.22156870772764192], 'false': [nan, 0.22156870772764192], 'false,false': [nan, 0.22156870772764167], 'false,false,false': [0.23294709714863807, 0.21268454386247984]}
{'': [nan, 0.21998827543825422], 'false': [nan, 0.21998827543825422], 'false,false': [nan, 0.21998827543825314], 'false,false,false': [0.23200475907198148, 0.21558377727502295]}
{'': [nan, 0.22416836771849916], 'false': [nan, 0.22416836771849916], 'false,false': [nan, 0.22416836771849788], 'false,false,false': [nan, 0.22416836771849788]}
{'': [nan, 0.2175709941568517], 'false': [nan, 0.2175709941568517], 'false,false': [nan, 0.217570994156851], 'false,false,false': [nan, 0.2175709941568519]}
{'': [0.22989878205787267, 0.21418028478979056], 'true': [8.857860646453256e-07, 8.830075034158197e-07], 'false': [nan, 0.21418028478979056], 'false,false': [nan, 0.21418028478979056], 'false,false,false': [0.2301117685733071, 0.2010212308519217], 'true,true': [nan, 8.857860646453256e-07], 'true,true,false': [nan, 8.857860646453256e-07]}
{'': [nan, 0.18253443134488848], 'false': [nan, 0.18253443134488848], 'false,false': [nan, 0.18253443134488828], 'false,false,false': [0.14325150634089676, 0.20562666227000126]}
{'': [nan, 0.18965665323917336], 'false': [nan, 0.18965665323917344], 'false,false': [nan, 0.18965665323917344], 'false,false,false': [nan, 0.18965665323917344]}
{'': [nan, 0.18636246420735839], 'false': [nan, 0.18636246420735839], 'false,false': [nan, 0.1863624642073582], 'false,false,false': [nan, 0.1863624642073582]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.323
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( phenotype(G, H), complex(G, I) )
%   | | | then return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.23496052930240963;  // std dev = 4.025, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | | else return -0.07042249347191637;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( enzyme(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( phenotype(F, H), phenotype(A, H) )
%   | | | then return 0.21505093194353037;  // std dev = 1.023, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.14444140838587202;  // std dev = 0.066, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.7621927853598562;  // std dev = 0.222, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.14479029919128625;  // std dev = 0.105, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5068859155342985;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08397629162214276;  // std dev = 3.942, 85.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=21 */
%   | | | else return -0.05515411766384273;  // std dev = 1.344, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then return 0.2544901862807741;  // std dev = 0.797, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5699721240368048;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), complex(H, I) )
%   | | then return -0.10389705606573259;  // std dev = 0.219, 37.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=2 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8022299508568238;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17697747253016233;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( recursion_proteinclass(L, B), interaction(A, M) )
%   | | | then return 0.8187394356901695;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12765145778139828;  // std dev = 3.797, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.11708748253832461;  // std dev = 1.182, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.14299271003461142;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3680215487007362;  // std dev = 0.264, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), complex(F, G) )
%   | | | then return 0.6899898881045451;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.07083449497731727;  // std dev = 0.624, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, H), location(A, I) )
%   | | | then return -0.1260990785068665;  // std dev = 1.173, 41.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=2 */
%   | | | else return 0.36083918802186365;  // std dev = 0.997, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( location(A, J), interaction(A, K) )
%   | | then if ( interaction(L, A), location(L, J) )
%   | | | then return 0.2790505869661471;  // std dev = 1.733, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.01764027633089227;  // std dev = 0.598, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.12909208648089657;  // std dev = 2.789, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.014829203435845296;  // std dev = 2.016, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C) )
%   | then return 0.3435320381191494;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5178163066915298;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.25722002707532454;  // std dev = 0.682, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(D, G), phenotype(A, H) )
%   | | | then return 0.11927810219918952;  // std dev = 1.228, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.09771572294215837;  // std dev = 1.153, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( location(I, J) )
%   | | | then return 0.4299207028829979;  // std dev = 1.120, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.0010797779456087231;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.17332426280555466;  // std dev = 1.948, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.029635418568636142;  // std dev = 2.894, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then if ( interaction(F, F) )
%   | | then return 0.4504106051920325;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05183734549044596;  // std dev = 0.527, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.25747229554726736;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.08989954750789213;  // std dev = 0.272, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( enzyme(I, J), phenotype(A, K) )
%   | | then if ( complex(A, L), interaction(M, I) )
%   | | | then return 0.05993412857076875;  // std dev = 1.217, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.1003180724348811;  // std dev = 0.935, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( enzyme(A, N), complex(I, P) )
%   | | | then return 0.2965705196538344;  // std dev = 1.174, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.13793874330595188;  // std dev = 3.016, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | else return -0.03682243512808866;  // std dev = 0.224, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.40396133380591676;  // std dev = 0.139, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.17963447608971694;  // std dev = 0.046, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.268780730411847;  // std dev = 0.212, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.20511084507925914;  // std dev = 0.961, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return -0.08280219266220397;  // std dev = 1.142, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7620877219113255;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15676349322825223;  // std dev = 0.111, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1737434355113523;  // std dev = 2.721, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return -0.14935374237276508;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.28839567633951435;  // std dev = 0.117, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.37781609686649037;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.11466283753342457;  // std dev = 0.059, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, H) )
%   | | then return 0.17492060480739635;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2716873499438925;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), interaction(K, A) )
%   | | | then return -0.1492761141346246;  // std dev = 0.305, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.01265200190807731;  // std dev = 1.552, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return -0.16228233385208574;  // std dev = 0.234, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.03585494052425254;  // std dev = 3.380, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.22100065889113157;  // std dev = 0.196, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(F, C), interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.016203435277125623;  // std dev = 1.202, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.11475038250146784;  // std dev = 1.295, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | else if ( interaction(H, C), interaction(H, H) )
%   | | | then return -0.10942596105730097;  // std dev = 0.424, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.10062725904477972;  // std dev = 2.626, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   else if ( complex(A, I), phenotype(A, J) )
%   | then return 0.21309760328254565;  // std dev = 0.339, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return -0.14824858193355772;  // std dev = 0.107, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.14165171742279858;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0623581784496721;  // std dev = 1.492, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.19681363868264865;  // std dev = 0.746, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.04998810292613557;  // std dev = 1.526, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( interaction(A, I), complex(D, J) )
%   | | | then return 0.019912601448984955;  // std dev = 1.233, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.18276947531769713;  // std dev = 2.203, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | else if ( location(K, C), recursion_proteinclass(K, B) )
%   | | then if ( interaction(D, K), interaction(L, D) )
%   | | | then return 0.46741399023887287;  // std dev = 0.652, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1596037188070609;  // std dev = 0.527, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return -0.21288979641192798;  // std dev = 0.071, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( interaction(M, A), interaction(N, M) )
%   | then return -0.14753891707306283;  // std dev = 0.161, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0.039407698666477115;  // std dev = 0.245, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.321', 'seconds']
Refined model CLL: -0.215434


******************************************
Best model found
******************************************
Results 

CLL : -0.19097 

AUC ROC : 0.837374 

AUC PR : 0.413557 

Precision : 0.442105 

Recall : 0.456522 

F1 : 0.449198 

Total Learning Time : 12.323 

Total Inference Time : 5.928567171096802 

Total revision time: 20.78422213935852
Best scored revision CLL: -0.215434


Results 

CLL : -0.19097 

AUC ROC : 0.837374 

AUC PR : 0.413557 

Precision : 0.442105 

Recall : 0.456522 

F1 : 0.449198 

Total Learning Time : 31.50494862937927 

Total Inference Time : 5.928567171096802 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.278
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2073552843058622;  // std dev = 8.461, 315.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1550102171147363;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
%   | | | else return 0.16865020840835887;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15165390638321732;  // std dev = 5.247, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | | else return 0.14183914536641554;  // std dev = 6.725, 203.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07378866637735827;  // std dev = 4.377, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return 0.11672104955089688;  // std dev = 7.439, 249.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=83 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1096203781029223;  // std dev = 8.490, 319.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.051634858342386764;  // std dev = 8.732, 358.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7138597397986609;  // std dev = 0.985, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | else return -0.26275503585696663;  // std dev = 0.049, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05087409316524207;  // std dev = 4.604, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0.04811875723704905;  // std dev = 5.030, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0560777002874453;  // std dev = 4.173, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | | else return 0.044134860958663466;  // std dev = 6.796, 212.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=68 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04205676830830105;  // std dev = 7.942, 332.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0353648698418765;  // std dev = 7.931, 328.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=110 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.632', 'seconds']
Parameter learned model CLL:-0.331907 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.461, 205, 110]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.262, 121, 58], 'false,false,false,false': [5.869, 102, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.247, 80, 42], 'false,false,false,false': [6.725, 135, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.377, 66, 27], 'false,false,false,false': [7.439, 166, 83]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.49, 209, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.732, 248, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.985, 1, 42], 'true,false': [0.049, 89, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.604, 67, 31], 'false,false,false,false': [5.03, 80, 37]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.173, 81, 42], 'false,false,false,false': [6.796, 144, 68]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.942, 222, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.931, 218, 110]}]
{'': [nan, 0.22726127488032502], 'false': [nan, 0.22726127488032297], 'false,false': [nan, 0.22726127488032502], 'false,false,false': [nan, 0.22726127488032297]}
{'': [nan, 0.22121220319418639], 'false': [nan, 0.22121220319418472], 'false,false': [nan, 0.22121220319418639], 'false,false,false': [0.21903186542242706, 0.2236464833867426]}
{'': [nan, 0.22392133423555813], 'false': [nan, 0.22392133423555813], 'false,false': [nan, 0.22392133423555513], 'false,false,false': [0.22570394638736824, 0.22281385005133536]}
{'': [nan, 0.21818171850747006], 'false': [nan, 0.21818171850747006], 'false,false': [nan, 0.21818171850747253], 'false,false,false': [0.2060353798126958, 0.2222170846351002]}
{'': [nan, 0.22595638685141917], 'false': [nan, 0.22595638685141917], 'false,false': [nan, 0.2259563868514194], 'false,false,false': [nan, 0.2259563868514194]}
{'': [nan, 0.21296955052131142], 'false': [nan, 0.21296955052131142], 'false,false': [nan, 0.21296955052131236], 'false,false,false': [nan, 0.21296955052131122]}
{'': [0.21685566954693533, 0.21624850105433793], 'true': [0.022563928088115602, 2.7065960767396626e-05], 'false': [nan, 0.21624850105433793], 'false,false': [nan, 0.21624850105433793], 'false,false,false': [0.21626405664306536, 0.2162320111038054], 'true,true': [nan, 0.022563928088115602], 'true,true,false': [nan, 0.022563928088115602]}
{'': [nan, 0.1898678817278146], 'false': [nan, 0.1898678817278146], 'false,false': [nan, 0.18986788172781477], 'false,false,false': [0.14157062136566909, 0.21783703628347373]}
{'': [nan, 0.1899746907703182], 'false': [nan, 0.18997469077031862], 'false,false': [nan, 0.18997469077031862], 'false,false,false': [nan, 0.18997469077031862]}
{'': [nan, 0.19175496274402415], 'false': [nan, 0.19175496274402415], 'false,false': [nan, 0.19175496274402454], 'false,false,false': [nan, 0.19175496274402454]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.215
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.1650796281688206;  // std dev = 6.555, 202.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=62 */
%   | | | else return 0.03536412497293005;  // std dev = 3.394, 79.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.7332857516252523;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, E), enzyme(C, F) )
%   | | | then return -0.057691479030214946;  // std dev = 1.634, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.14105232356997072;  // std dev = 6.982, 234.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=70 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then return 0.1871226539361411;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.1462106793971922;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.020455987269474462;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, D), interaction(C, D) )
%   | | then return -0.18312352810139765;  // std dev = 0.914, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.4497643416773799;  // std dev = 0.318, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, H), complex(E, H) )
%   | | | then return -0.115340063220103;  // std dev = 0.956, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   | | | else return 0.15353365969985014;  // std dev = 6.734, 205.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=68 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.08527935667440366;  // std dev = 0.292, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.21665813578204998;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.023701821042753878;  // std dev = 1.408, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.45188569152770125;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.3577765609199286;  // std dev = 0.207, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.4142903211546268;  // std dev = 1.324, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(H, A), interaction(H, E) )
%   | | | then return -0.17702557910237568;  // std dev = 0.190, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.029373871196872302;  // std dev = 2.403, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6232978078731151;  // std dev = 1.343, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.08032045805158701;  // std dev = 5.605, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.101837527961933;  // std dev = 2.865, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return -0.11558699040528408;  // std dev = 1.000, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.36315019379178626;  // std dev = 0.083, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.6373990609083942;  // std dev = 0.502, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.1684384648880008;  // std dev = 1.007, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.17488304919481798;  // std dev = 0.244, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.11789225346422785;  // std dev = 5.678, 155.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=54 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.44994392937502203;  // std dev = 0.755, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.01842666178076392;  // std dev = 1.235, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.09630735191549782;  // std dev = 2.074, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.045284901325570136;  // std dev = 2.039, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), enzyme(C, D) )
%   | then return 0.09180725238066818;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2943405279009294;  // std dev = 0.087, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(E, F), enzyme(A, G) )
%   | | then return 0.3380780383765204;  // std dev = 0.994, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.11727366198478138;  // std dev = 1.346, 38.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | | | else return -0.006515475182952641;  // std dev = 1.958, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3136007930677783;  // std dev = 0.647, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.04110555840247464;  // std dev = 2.132, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | else if ( complex(A, L), location(A, M) )
%   | | | then return 0.04433151431164912;  // std dev = 2.938, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.12413043995697035;  // std dev = 5.227, 126.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4904121490742546;  // std dev = 0.320, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | else return -0.19354720956984706;  // std dev = 0.091, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.047027437123211065;  // std dev = 0.736, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5139686503517984;  // std dev = 1.991, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | else return -0.2295353096888396;  // std dev = 0.053, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5777870118362899;  // std dev = 0.766, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.24242743296438868;  // std dev = 0.092, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.2339854709298317;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04154750682185626;  // std dev = 3.610, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5384836671232676;  // std dev = 0.219, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.18035571364198585;  // std dev = 0.247, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.25442729926345153;  // std dev = 0.213, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.12909556235327416;  // std dev = 0.272, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0.03289482680875837;  // std dev = 4.988, 162.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=51 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6835873319885043;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2389267232243133;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.013660554054812013;  // std dev = 0.844, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.13177600385179014;  // std dev = 1.278, 34.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then return 0.13355508862636722;  // std dev = 0.184, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.23843850757860652;  // std dev = 0.208, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.3427877674653103;  // std dev = 0.362, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(F, I), phenotype(A, I) )
%   | | | then return 0.01582689539871495;  // std dev = 1.920, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return -0.11144303381934936;  // std dev = 2.002, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(L, A) )
%   | | | then return -0.10913639919169403;  // std dev = 1.205, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.023285854436496792;  // std dev = 0.967, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.08585673761052748;  // std dev = 3.873, 99.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=40 */
%   | | | else return 0.001337395079818922;  // std dev = 3.045, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), interaction(C, C) )
%   | then return 0.11080839299851623;  // std dev = 0.075, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return -0.5069780190756001;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(C, C), location(A, D) )
%   | | | then return -0.16014717138654536;  // std dev = 1.577, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return -0.06481065506457719;  // std dev = 1.761, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.4818184751545849;  // std dev = 2.118, 76.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=73 */
%   | | | else return -0.13433617648935214;  // std dev = 1.718, 47.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | else return -0.1937623179501533;  // std dev = 0.050, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( enzyme(A, H) )
%   | | then return 0.01105810403904739;  // std dev = 0.550, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4218900519640681;  // std dev = 0.752, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.139', 'seconds']
Refined model CLL: -0.204646


******************************************
Best model found
******************************************
Results 

CLL : -0.179467 

AUC ROC : 0.896211 

AUC PR : 0.472086 

Precision : 0.467532 

Recall : 0.391304 

F1 : 0.426036 

Total Learning Time : 17.215 

Total Inference Time : 13.827072381973267 

Total revision time: 34.35751482772827
Best scored revision CLL: -0.204646


Results 

CLL : -0.179467 

AUC ROC : 0.896211 

AUC PR : 0.472086 

Precision : 0.467532 

Recall : 0.391304 

F1 : 0.426036 

Total Learning Time : 45.07824131774902 

Total Inference Time : 13.827072381973267 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.626
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1678504276368246;  // std dev = 10.705, 536.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=166 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1745421877039901;  // std dev = 7.930, 281.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=95 */
%   | | | else return 0.149239226285522;  // std dev = 6.985, 227.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17663971412694668;  // std dev = 6.328, 173.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=63 */
%   | | | else return 0.17708067965609114;  // std dev = 8.094, 283.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=103 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1061438620997056;  // std dev = 5.456, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return 0.09071590801992269;  // std dev = 9.204, 399.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=122 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10230091602063093;  // std dev = 10.509, 497.000 (wgt'ed) examples reached here.  /* #neg=331 #pos=166 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09037361896160999;  // std dev = 10.456, 487.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=166 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7299467997934606;  // std dev = 0.029, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | else return -0.26944844740686935;  // std dev = 0.041, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07981022963549864;  // std dev = 5.761, 146.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=51 */
%   | | | else return 0.05252062894978535;  // std dev = 5.959, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03290234608389906;  // std dev = 5.134, 196.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=63 */
%   | | | else return 0.04030172749313764;  // std dev = 8.363, 322.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=103 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04924688572474599;  // std dev = 9.680, 481.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=166 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03155950686706165;  // std dev = 9.689, 501.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=166 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.638', 'seconds']
Parameter learned model CLL:-0.335381 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.705, 370, 166]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.93, 186, 95], 'false,false,false,false': [6.985, 156, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.328, 110, 63], 'false,false,false,false': [8.094, 180, 103]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.456, 92, 44], 'false,false,false,false': [9.204, 277, 122]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.509, 331, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.456, 321, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 63], 'true,false': [0.041, 114, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.761, 95, 51], 'false,false,false,false': [5.959, 112, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.134, 133, 63], 'false,false,false,false': [8.363, 219, 103]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.68, 315, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.689, 335, 166]}]
{'': [nan, 0.2137864780574767], 'false': [nan, 0.213786478057475], 'false,false': [nan, 0.2137864780574767], 'false,false,false': [nan, 0.213786478057475]}
{'': [nan, 0.21999193998387764], 'false': [nan, 0.21999193998387814], 'false,false': [nan, 0.21999193998387764], 'false,false,false': [0.22378136041843122, 0.21494692309185184]}
{'': [nan, 0.23146829992346807], 'false': [nan, 0.23146829992346807], 'false,false': [nan, 0.2314682999234689], 'false,false,false': [0.23144082614966838, 0.23148502107343438]}
{'': [nan, 0.21403499918822835], 'false': [nan, 0.21403499918822835], 'false,false': [nan, 0.21403499918822907], 'false,false,false': [0.21885813148789024, 0.21233051780114898]}
{'': [nan, 0.22220646881953893], 'false': [nan, 0.22220646881953893], 'false,false': [nan, 0.2222064688195371], 'false,false,false': [nan, 0.2222064688195371]}
{'': [nan, 0.22447150038641975], 'false': [nan, 0.22447150038641975], 'false,false': [nan, 0.22447150038642227], 'false,false,false': [nan, 0.22447150038641886]}
{'': [0.22898175846667734, 0.2217891871572657], 'true': [1.3476344239028737e-05, 1.5030174376269456e-05], 'false': [nan, 0.2217891871572657], 'false,false': [nan, 0.2217891871572657], 'false,false,false': [0.22729405141677606, 0.21653777513384836], 'true,true': [nan, 1.3476344239028737e-05], 'true,true,false': [nan, 1.3476344239028737e-05]}
{'': [nan, 0.18592982269856856], 'false': [nan, 0.18592982269856856], 'false,false': [nan, 0.18592982269856873], 'false,false,false': [0.13449780204864464, 0.21721555351465988]}
{'': [nan, 0.1948086148906111], 'false': [nan, 0.194808614890609], 'false,false': [nan, 0.194808614890609], 'false,false,false': [nan, 0.194808614890609]}
{'': [nan, 0.18736645669688748], 'false': [nan, 0.18736645669688748], 'false,false': [nan, 0.1873664566968893], 'false,false,false': [nan, 0.1873664566968893]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 31.948
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), complex(C, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(C, F) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.25100607795665386;  // std dev = 4.476, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | | else return 0.17453311589047354;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then return 0.6242332672135312;  // std dev = 0.302, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.7290172450274855;  // std dev = 0.101, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( phenotype(F, G), phenotype(A, G) )
%   | | | then return 0.25562663297029903;  // std dev = 2.025, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.06412203983365712;  // std dev = 2.410, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(I, I), complex(I, J) )
%   | | | then return 0.22660454927966941;  // std dev = 1.443, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.07196612099014744;  // std dev = 3.698, 107.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=25 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.22512708237524628;  // std dev = 4.148, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
%   | | | else return 0.13184399694115617;  // std dev = 6.278, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(A, E), enzyme(A, D) )
%   | then return 0.018298750293968043;  // std dev = 0.343, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.6553395183434438;  // std dev = 0.106, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.6267259970551892;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05376881083086443;  // std dev = 3.769, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5646955076634288;  // std dev = 0.066, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(J, I) )
%   | | | then return 0.7285513805238282;  // std dev = 0.147, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.21126200613183083;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.06515715964887286;  // std dev = 3.631, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | | else return 0.13916897859462188;  // std dev = 6.866, 239.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=78 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( location(A, D), location(C, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.417539153607438;  // std dev = 0.302, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | | else if ( enzyme(C, F) )
%   | | | then return 0.0427603506342234;  // std dev = 4.338, 125.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=31 */
%   | | | else return 0.11321398332678055;  // std dev = 6.879, 254.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=83 */
%   | else if ( complex(A, G) )
%   | | then return 0.04725287871560805;  // std dev = 0.685, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.022736974307368134;  // std dev = 0.455, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3691672100749896;  // std dev = 1.843, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return -0.07789578535335587;  // std dev = 0.257, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then return 0.17660883275344905;  // std dev = 0.450, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.032312519008018264;  // std dev = 0.381, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.3588018168526105;  // std dev = 0.056, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(C, E), phenotype(E, F) )
%   | | then return 0.48337972030361975;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.42424921389015513;  // std dev = 0.105, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.1254312492859732;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.4238923776314377;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6448430596663653;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13234668308606523;  // std dev = 0.038, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.06835867768046999;  // std dev = 8.387, 387.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=113 */
%   | | | else return -0.02941985645029385;  // std dev = 2.544, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.5635504849624974;  // std dev = 0.282, 153.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=145 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.5470977987576998;  // std dev = 0.978, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.19503085826022815;  // std dev = 0.388, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else return -0.20224997275041975;  // std dev = 0.042, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( interaction(H, H), interaction(G, H) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.2544842795819416;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05450469097737542;  // std dev = 1.048, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.20526811058808134;  // std dev = 0.268, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.13475834449698135;  // std dev = 1.106, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.06260685165986322;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.02256074187373361;  // std dev = 0.277, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( phenotype(D, F), phenotype(A, G) )
%   | | then if ( interaction(D, A), complex(D, H) )
%   | | | then return -0.05207019461237329;  // std dev = 1.323, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.16563391085056736;  // std dev = 2.536, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2933887358816038;  // std dev = 1.019, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.08441477923483562;  // std dev = 2.033, 55.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=7 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5789901184361568;  // std dev = 1.062, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.19701440117796415;  // std dev = 0.086, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.10394701163795618;  // std dev = 3.181, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.26336532571567084;  // std dev = 2.098, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), interaction(C, A) )
%   | then return 0.16399842040313872;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return 0.21553094141615223;  // std dev = 0.046, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(D, F), interaction(D, D) )
%   | | | then return 0.36094380864236963;  // std dev = 0.713, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5408738948508285;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.17299942428330511;  // std dev = 0.688, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.006959752800117905;  // std dev = 3.603, 121.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=30 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.23263910276669908;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.1164022775657051;  // std dev = 1.632, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.023547381574313242;  // std dev = 5.235, 231.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=66 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(C, E) )
%   | then return 0.3042621857215948;  // std dev = 0.244, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, C), location(A, F) )
%   | | then return 0.141507866694557;  // std dev = 0.037, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.2087460377505854;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16689460718320742;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.08081512360979871;  // std dev = 0.033, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.32910429757617293;  // std dev = 0.652, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.026854222767506906;  // std dev = 3.352, 117.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=27 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.07103991425081224;  // std dev = 3.441, 92.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=36 */
%   | | | else return 0.007495332375696977;  // std dev = 4.948, 222.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=66 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.020882180692445573;  // std dev = 0.268, 112.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=41 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( phenotype(A, F), interaction(D, D) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4066566816911568;  // std dev = 0.260, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20114994418592633;  // std dev = 0.394, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( location(A, H), complex(A, E) )
%   | | | then return -0.035669816509456186;  // std dev = 0.948, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.06561894501677361;  // std dev = 4.458, 150.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.45146720350375397;  // std dev = 1.001, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.1900799453243306;  // std dev = 0.202, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.18275358059853258;  // std dev = 0.100, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.03329658056202686;  // std dev = 3.865, 144.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.073', 'seconds']
Refined model CLL: -0.218723


******************************************
Best model found
******************************************
Results 

CLL : -0.19949 

AUC ROC : 0.993584 

AUC PR : 0.604524 

Precision : 0.573171 

Recall : 0.51087 

F1 : 0.54023 

Total Learning Time : 31.948 

Total Inference Time : 27.905692100524902 

Total revision time: 64.23813617134094
Best scored revision CLL: -0.218723


Results 

CLL : -0.19949 

AUC ROC : 0.993584 

AUC PR : 0.604524 

Precision : 0.573171 

Recall : 0.51087 

F1 : 0.54023 

Total Learning Time : 74.95886266136169 

Total Inference Time : 27.905692100524902 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.73
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1991983178155589;  // std dev = 12.068, 648.000 (wgt'ed) examples reached here.  /* #neg=427 #pos=221 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17004248936629415;  // std dev = 9.024, 364.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=123 */
%   | | | else return 0.15239183936270057;  // std dev = 8.162, 306.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=98 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15048778070313526;  // std dev = 7.519, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
%   | | | else return 0.1426329742493148;  // std dev = 9.481, 404.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=135 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15124597322800942;  // std dev = 6.103, 160.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=59 */
%   | | | else return 0.11460382634785622;  // std dev = 10.425, 492.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=162 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09738206867901994;  // std dev = 12.131, 660.000 (wgt'ed) examples reached here.  /* #neg=439 #pos=221 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08870864055590637;  // std dev = 12.040, 643.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=221 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7230893843054765;  // std dev = 0.047, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   | else return -0.2764809653661185;  // std dev = 0.066, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06542243854209427;  // std dev = 6.515, 190.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=64 */
%   | | | else return 0.04483198213873061;  // std dev = 6.985, 227.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=71 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0723920823208087;  // std dev = 5.726, 227.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=86 */
%   | | | else return 0.05784131493044565;  // std dev = 9.452, 399.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=135 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025996139406137587;  // std dev = 11.234, 682.000 (wgt'ed) examples reached here.  /* #neg=461 #pos=221 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033695537542793134;  // std dev = 11.128, 649.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=221 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.615', 'seconds']
Parameter learned model CLL:-0.339403 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.068, 427, 221]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.024, 241, 123], 'false,false,false,false': [8.162, 208, 98]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.519, 165, 86], 'false,false,false,false': [9.481, 269, 135]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.103, 101, 59], 'false,false,false,false': [10.425, 330, 162]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.131, 439, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.04, 422, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.047, 0, 86], 'true,false': [0.066, 164, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.515, 126, 64], 'false,false,false,false': [6.985, 156, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.726, 141, 86], 'false,false,false,false': [9.452, 264, 135]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.234, 461, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.128, 428, 221]}]
{'': [nan, 0.22473470126505352], 'false': [nan, 0.22473470126505313], 'false,false': [nan, 0.22473470126505352], 'false,false,false': [nan, 0.22473470126505313]}
{'': [nan, 0.221049231454661], 'false': [nan, 0.22104923145466931], 'false,false': [nan, 0.221049231454661], 'false,false,false': [0.22372750875498487, 0.21769404929728325]}
{'': [nan, 0.2235602173240848], 'false': [nan, 0.2235602173240848], 'false,false': [nan, 0.22356021732409095], 'false,false,false': [0.22524956254033815, 0.22248700584086994]}
{'': [nan, 0.22406351119905377], 'false': [nan, 0.22406351119905377], 'false,false': [nan, 0.22406351119905465], 'false,false,false': [0.23277343750000085, 0.22090153093231824]}
{'': [nan, 0.222956228689412], 'false': [nan, 0.222956228689412], 'false,false': [nan, 0.2229562286894087], 'false,false,false': [nan, 0.2229562286894087]}
{'': [nan, 0.2254381262170358], 'false': [nan, 0.2254381262170358], 'false,false': [nan, 0.22543812621704085], 'false,false,false': [nan, 0.22543812621703704]}
{'': [0.2254963629242173, 0.21889426231599213], 'true': [2.5220733554931485e-05, 2.6766094286258225e-05], 'false': [nan, 0.21889426231599213], 'false,false': [nan, 0.21889426231599213], 'false,false,false': [0.22337950138504264, 0.21494692309185207], 'true,true': [nan, 2.5220733554931485e-05], 'true,true,false': [nan, 2.5220733554931485e-05]}
{'': [nan, 0.19512190254806552], 'false': [nan, 0.19512190254806552], 'false,false': [nan, 0.1951219025480652], 'false,false,false': [0.14441420748192849, 0.2238938657272242]}
{'': [nan, 0.1850535880426874], 'false': [nan, 0.18505358804268782], 'false,false': [nan, 0.18505358804268782], 'false,false,false': [nan, 0.18505358804268782]}
{'': [nan, 0.19081630440394542], 'false': [nan, 0.19081630440394542], 'false,false': [nan, 0.1908163044039443], 'false,false,false': [nan, 0.1908163044039443]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 74.701
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else return 0.6081489350995123;  // std dev = 0.433, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 3.33e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.17698951480965672;  // std dev = 3.871, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.03056272820296054;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), complex(A, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5581489350995122;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12545203772480779;  // std dev = 9.059, 419.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=112 */
%   | | | else return 0.23789577054255034;  // std dev = 4.314, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.7879778893930536;  // std dev = 1.733, 113.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=110 */
%   | | | else return 0.19909340697305153;  // std dev = 2.735, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else return -0.16151713371267148;  // std dev = 0.105, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else return -0.1585395798910161;  // std dev = 0.164, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( enzyme(G, H), phenotype(G, I) )
%   | | then return 0.4337386289033884;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7224483215875649;  // std dev = 0.046, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, J), complex(A, K) )
%   | | | then return 0.09364101442991307;  // std dev = 2.553, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.1989103576734807;  // std dev = 6.744, 199.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=72 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), recursion_proteinclass(D, B) )
%   | then return 0.5195953153481678;  // std dev = 0.174, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( enzyme(D, F), enzyme(A, F) )
%   | | then return -0.06864743977799455;  // std dev = 0.246, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( interaction(G, D), location(A, H) )
%   | | | then return 0.07018268462862923;  // std dev = 6.395, 303.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=78 */
%   | | | else return 0.18620401008383583;  // std dev = 2.339, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.5320740113152841;  // std dev = 0.217, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( complex(A, L) )
%   | | | then return 0.5956625545180898;  // std dev = 1.530, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.1313498400367284;  // std dev = 3.478, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.24364036621796595;  // std dev = 1.939, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.07914002124445821;  // std dev = 6.250, 212.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C), interaction(E, D) )
%   | then return 0.09105102991314683;  // std dev = 0.396, 460.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=146 */
%   | else return 0.17704690152819785;  // std dev = 0.441, 105.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=43 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.5971924956964165;  // std dev = 0.373, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, F), phenotype(F, H) )
%   | | | then return 0.1536620704638197;  // std dev = 2.393, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.030411510999917186;  // std dev = 1.875, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | else if ( location(A, I) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.4406211298484224;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4900641678174106;  // std dev = 0.776, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.07413574941070096;  // std dev = 1.202, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.23673901381253684;  // std dev = 1.620, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(C, B) )
%   | then return 0.41837505792602886;  // std dev = 0.166, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.5019880553014839;  // std dev = 0.358, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.014163178354549196;  // std dev = 0.345, 159.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=35 */
%   else if ( complex(A, G), location(A, H) )
%   | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.6269651327830167;  // std dev = 0.136, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return -0.2071400913313769;  // std dev = 0.056, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2568584602777907;  // std dev = 1.773, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.07106040653133233;  // std dev = 5.346, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return -0.04540890818000786;  // std dev = 2.130, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.07717166172400919;  // std dev = 4.720, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.35815481527981846;  // std dev = 0.161, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( interaction(D, D), interaction(A, H) )
%   | | | then return -0.04857772946415863;  // std dev = 1.092, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.13296991689207693;  // std dev = 4.538, 115.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=48 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.48380738115059113;  // std dev = 1.606, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return -0.0020451802854293466;  // std dev = 7.045, 381.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=85 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6890881993772539;  // std dev = 0.439, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.18221187182203247;  // std dev = 0.125, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.00706686870164028;  // std dev = 1.910, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.1913743088668952;  // std dev = 1.747, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.26856145334137627;  // std dev = 0.081, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.5131226507207736;  // std dev = 0.117, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.18436458254503485;  // std dev = 0.057, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, F), recursion_proteinclass(F, B) )
%   | | then return 0.26333729965824315;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), interaction(G, F) )
%   | | | then return -0.07061999869167031;  // std dev = 2.216, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | | | else return 0.0010515354683986009;  // std dev = 1.402, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.26900885015323267;  // std dev = 1.017, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.09129140262011459;  // std dev = 5.427, 154.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=53 */
%   | | | else return 0.05299140692668909;  // std dev = 5.384, 174.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.2109176140639362;  // std dev = 0.282, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.33619499785240664;  // std dev = 0.459, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.4172315792440325;  // std dev = 0.081, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.1538075586078687;  // std dev = 0.054, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.27125106705968893;  // std dev = 0.092, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5509609331783862;  // std dev = 0.871, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.17498745743614746;  // std dev = 0.270, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.04036529909393078;  // std dev = 7.111, 293.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=88 */
%   | | | else return 0.12726794682745118;  // std dev = 2.059, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.24090316970661277;  // std dev = 0.234, 63.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=57 */
%   | else if ( interaction(A, D) )
%   | | then return -0.15140374089557995;  // std dev = 0.057, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else if ( phenotype(D, F), enzyme(D, G) )
%   | | | then return -0.08109520524334542;  // std dev = 1.537, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return 0.049191422712260256;  // std dev = 3.658, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   else if ( complex(A, H) )
%   | then return 0.012223150920625762;  // std dev = 0.246, 97.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=37 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), interaction(L, K) )
%   | | | then return 0.06934605759161287;  // std dev = 4.207, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | | | else return 0.5159644717032339;  // std dev = 0.860, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.380549064731695;  // std dev = 0.195, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.01971224918343534;  // std dev = 4.617, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.01066451757105738;  // std dev = 0.258, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | else return 0.18609479173688273;  // std dev = 0.150, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(G, F), location(E, H) )
%   | | then if ( interaction(A, I), recursion_proteinclass(F, B) )
%   | | | then return 0.26037372287303917;  // std dev = 1.452, 35.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=32 */
%   | | | else return -0.02749841465591332;  // std dev = 6.814, 474.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=103 */
%   | | else if ( phenotype(A, J), location(E, K) )
%   | | | then return 0.39809096099384034;  // std dev = 0.676, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.049245059193985884;  // std dev = 1.712, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.217064618890398;  // std dev = 2.608, 58.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=37 */
%   | | | else return -0.19681367394159366;  // std dev = 0.479, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return 0.6938186783994637;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.988', 'seconds']
Refined model CLL: -0.22767


******************************************
Best model found
******************************************
Results 

CLL : -0.22811 

AUC ROC : 0.948402 

AUC PR : 0.515836 

Precision : 0.345238 

Recall : 0.630435 

F1 : 0.446154 

Total Learning Time : 74.701 

Total Inference Time : 118.37529444694519 

Total revision time: 197.93414474105833
Best scored revision CLL: -0.22767


Results 

CLL : -0.22811 

AUC ROC : 0.948402 

AUC PR : 0.515836 

Precision : 0.345238 

Recall : 0.630435 

F1 : 0.446154 

Total Learning Time : 208.65487123107908 

Total Inference Time : 118.37529444694519 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.945
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21556828993821792;  // std dev = 13.341, 775.000 (wgt'ed) examples reached here.  /* #neg=498 #pos=277 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15654205759206838;  // std dev = 9.982, 453.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=148 */
%   | | | else return 0.1572424083277172;  // std dev = 9.315, 394.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=129 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12360913880066314;  // std dev = 8.428, 328.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=104 */
%   | | | else return 0.12452853125991468;  // std dev = 10.862, 544.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=173 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1166515924136459;  // std dev = 6.749, 206.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=68 */
%   | | | else return 0.12674036523596718;  // std dev = 11.741, 614.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=209 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1017585721369903;  // std dev = 13.552, 822.000 (wgt'ed) examples reached here.  /* #neg=545 #pos=277 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09182356316241894;  // std dev = 13.461, 801.000 (wgt'ed) examples reached here.  /* #neg=524 #pos=277 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7291483696764984;  // std dev = 0.010, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else return -0.270854220243664;  // std dev = 0.014, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06813626076131854;  // std dev = 7.264, 235.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=80 */
%   | | | else return 0.03050352983434042;  // std dev = 8.052, 307.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=93 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.039635537442794105;  // std dev = 6.559, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
%   | | | else return 0.07185533105644576;  // std dev = 10.573, 489.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=173 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03199251066558223;  // std dev = 12.599, 840.000 (wgt'ed) examples reached here.  /* #neg=563 #pos=277 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026691968356871522;  // std dev = 12.591, 832.000 (wgt'ed) examples reached here.  /* #neg=555 #pos=277 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.592', 'seconds']
Parameter learned model CLL:-0.338149 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.341, 498, 277]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.982, 305, 148], 'false,false,false,false': [9.315, 265, 129]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.428, 224, 104], 'false,false,false,false': [10.862, 371, 173]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.749, 138, 68], 'false,false,false,false': [11.741, 405, 209]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.552, 545, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.461, 524, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.01, 0, 104], 'true,false': [0.014, 190, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.264, 155, 80], 'false,false,false,false': [8.052, 214, 93]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.559, 209, 104], 'false,false,false,false': [10.573, 316, 173]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.599, 563, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.591, 555, 277]}]
{'': [nan, 0.2296707596253922], 'false': [nan, 0.22967075962539318], 'false,false': [nan, 0.2296707596253922], 'false,false,false': [nan, 0.22967075962539318]}
{'': [nan, 0.22008366217876177], 'false': [nan, 0.22008366217876218], 'false,false': [nan, 0.22008366217876177], 'false,false,false': [0.21997085897792518, 0.22021309490067253]}
{'': [nan, 0.21675184288478616], 'false': [nan, 0.21675184288478616], 'false,false': [nan, 0.2167518428847876], 'false,false,false': [0.2165368188358087, 0.21688117178755245]}
{'': [nan, 0.22369430649749808], 'false': [nan, 0.22369430649749808], 'false,false': [nan, 0.2236943064975066], 'false,false,false': [0.2211330002827776, 0.22452806728678598]}
{'': [nan, 0.22343440189578942], 'false': [nan, 0.22343440189578942], 'false,false': [nan, 0.22343440189579253], 'false,false,false': [nan, 0.22343440189579253]}
{'': [nan, 0.22621950745385272], 'false': [nan, 0.22621950745385272], 'false,false': [nan, 0.22621950745385072], 'false,false,false': [nan, 0.22621950745385322]}
{'': [0.22861066456023033, 0.21730965084664772], 'true': [1.0291267932197675e-06, 1.0308193660528941e-06], 'false': [nan, 0.21730965084664772], 'false,false': [nan, 0.21730965084664772], 'false,false,false': [0.22453598913535608, 0.21116404418084042], 'true,true': [nan, 1.0291267932197675e-06], 'true,true,false': [nan, 1.0291267932197675e-06]}
{'': [nan, 0.19327341940860027], 'false': [nan, 0.19327341940860027], 'false,false': [nan, 0.19327341940859954], 'false,false,false': [0.1374486505945864, 0.22860068823389898]}
{'': [nan, 0.1889832313705333], 'false': [nan, 0.18898323137053008], 'false,false': [nan, 0.18898323137053008], 'false,false,false': [nan, 0.18898323137053008]}
{'': [nan, 0.19055489160700148], 'false': [nan, 0.19055489160700148], 'false,false': [nan, 0.1905548916070034], 'false,false,false': [nan, 0.1905548916070034]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 24.502
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then if ( enzyme(C, D) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(F, C), interaction(F, A) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else return 0.7581489350995122;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004877;  // std dev = 3.16e-08, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.1637915683283506;  // std dev = 11.636, 638.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=195 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.24590403714032863;  // std dev = 3.411, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.3914822684328456;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7020254455946604;  // std dev = 0.286, 63.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=57 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1557629878139777;  // std dev = 0.151, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else return 0.15519371654345906;  // std dev = 0.461, 440.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=142 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.7250572202662983;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.07789370479197567;  // std dev = 0.416, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8247209056262119;  // std dev = 0.037, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.17517823204257066;  // std dev = 0.059, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.04426043088989266;  // std dev = 2.127, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.1042217084535919;  // std dev = 5.292, 142.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.49275920844058313;  // std dev = 0.219, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.6068067753175945;  // std dev = 0.173, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, F), interaction(E, G) )
%   | | | then return 0.6914881817048719;  // std dev = 1.034, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return 0.1269962097425419;  // std dev = 1.594, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.14051592938050267;  // std dev = 0.220, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | | else return 0.07210746568627936;  // std dev = 5.902, 187.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6394087521927678;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.0428586596468625;  // std dev = 2.437, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.12354787194645547;  // std dev = 9.342, 416.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=129 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.45250190890541736;  // std dev = 0.169, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10300452860669773;  // std dev = 0.071, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return 0.07406426110178885;  // std dev = 2.131, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( phenotype(D, E), phenotype(A, F) )
%   | | | then return 0.04655111220973166;  // std dev = 2.320, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.1017070375858897;  // std dev = 1.885, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), location(A, J) )
%   | | | then return 0.08056245303511149;  // std dev = 3.378, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.2692482179735984;  // std dev = 2.639, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.12658482457570075;  // std dev = 4.055, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.08049753126013555;  // std dev = 9.791, 481.000 (wgt'ed) examples reached here.  /* #neg=344 #pos=137 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.3895130163399522;  // std dev = 0.302, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | else if ( interaction(A, D) )
%   | | then return -0.12792628776102755;  // std dev = 0.070, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( enzyme(D, C), complex(A, F) )
%   | | | then return -0.04398663002095444;  // std dev = 1.244, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.1499138010915119;  // std dev = 6.111, 165.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=61 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.30428323227660187;  // std dev = 0.257, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(H, I) )
%   | | | then return -0.06166202646382433;  // std dev = 2.478, 74.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=10 */
%   | | | else return 0.10684661762894074;  // std dev = 3.984, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5570383774729444;  // std dev = 0.976, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.07452018421750686;  // std dev = 8.422, 370.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3472935629291837;  // std dev = 0.170, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.44504894547844326;  // std dev = 0.211, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | else if ( interaction(F, A), complex(F, D) )
%   | | | then return -0.10624208729839317;  // std dev = 2.476, 124.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=9 */
%   | | | else return 0.03250857107895238;  // std dev = 4.577, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then return 0.02636897890968627;  // std dev = 0.278, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.5384084468030661;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11968996426454175;  // std dev = 3.960, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   | | else if ( location(A, J) )
%   | | | then return 0.08563053806824909;  // std dev = 8.877, 378.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=126 */
%   | | | else return 0.13893903686834538;  // std dev = 1.800, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5378866382568678;  // std dev = 0.227, 105.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=104 */
%   | else return -0.21325771041301406;  // std dev = 0.093, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), interaction(G, A) )
%   | | then return -0.03298694585758281;  // std dev = 0.296, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.30302686497547776;  // std dev = 1.340, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.044811988714913174;  // std dev = 4.330, 105.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=32 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return -0.024379657012572595;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.054696498251812845;  // std dev = 3.956, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.09759545155807152;  // std dev = 6.695, 210.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=75 */
%   | | | else return 0.3868783269742018;  // std dev = 1.376, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(D, E), complex(A, F) )
%   | | then return 0.0919911608732964;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.2222566640129021;  // std dev = 0.050, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.3281901421738117;  // std dev = 0.102, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( phenotype(G, H), complex(A, I) )
%   | | then return 0.05888231089564252;  // std dev = 0.722, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.30583758264764443;  // std dev = 0.151, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( interaction(K, A), interaction(J, K) )
%   | | | then return -0.04421374613311336;  // std dev = 2.042, 110.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=15 */
%   | | | else return 0.02463594821751846;  // std dev = 2.932, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( location(A, L), phenotype(A, M) )
%   | | | then return 0.06376422080817837;  // std dev = 7.220, 301.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=98 */
%   | | | else return 0.01252162782893476;  // std dev = 7.392, 305.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=86 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.22469531381369762;  // std dev = 0.233, 80.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=71 */
%   | else if ( interaction(C, A) )
%   | | then return -0.12100131206183812;  // std dev = 0.079, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( interaction(C, C), location(C, D) )
%   | | | then return 0.09443701394630352;  // std dev = 2.362, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return -0.01656129933782554;  // std dev = 5.457, 207.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=57 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.21952903968696236;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5339824098034103;  // std dev = 2.956, 73.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=62 */
%   | | | else return -0.2638250856679205;  // std dev = 0.361, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.05399995562420893;  // std dev = 3.719, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.12262113251285606;  // std dev = 4.812, 103.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.14294109592504148;  // std dev = 0.058, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return -0.4441595544779659;  // std dev = 0.865, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, C), interaction(G, G) )
%   | | | then return -0.12892823551440957;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.19529191930396478;  // std dev = 0.163, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, A) )
%   | then return -0.0789422737985039;  // std dev = 0.152, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), location(J, K) )
%   | | | then return 0.021696980786894977;  // std dev = 5.138, 249.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=77 */
%   | | | else return -0.012152070272851484;  // std dev = 7.000, 314.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=89 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.025704160679240445;  // std dev = 2.796, 81.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | | else return 0.07535480773688324;  // std dev = 5.028, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.588', 'seconds']
Refined model CLL: -0.262038


******************************************
Best model found
******************************************
Results 

CLL : -0.280772 

AUC ROC : 0.898211 

AUC PR : 0.296353 

Precision : 0.44 

Recall : 0.358696 

F1 : 0.39521 

Total Learning Time : 24.502 

Total Inference Time : 19.92130994796753 

Total revision time: 50.069613668441775
Best scored revision CLL: -0.262038


Results 

CLL : -0.280772 

AUC ROC : 0.898211 

AUC PR : 0.296353 

Precision : 0.44 

Recall : 0.358696 

F1 : 0.39521 

Total Learning Time : 60.79034015846253 

Total Inference Time : 19.92130994796753 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.055
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19754287449345057;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.11497021785656701;  // std dev = 4.319, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   | | | else return 0.2671441309000458;  // std dev = 4.118, 69.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10881505384446587;  // std dev = 4.183, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | | else return 0.1001721453374384;  // std dev = 4.644, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16834282683538662;  // std dev = 3.274, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
%   | | | else return 0.14623615583637742;  // std dev = 4.968, 107.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09241088030879686;  // std dev = 6.113, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06306102544514049;  // std dev = 6.162, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7334858883045715;  // std dev = 0.060, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.2708527723278844;  // std dev = 0.086, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0578983598926171;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.13286554405061707;  // std dev = 3.587, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.050573623501458685;  // std dev = 3.201, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.0556058467264848;  // std dev = 4.474, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0010108444367358655;  // std dev = 5.662, 190.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=56 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05140362537011074;  // std dev = 5.451, 157.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.536', 'seconds']
Parameter learned model CLL:-0.334281 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.082, 109, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.319, 66, 26], 'false,false,false,false': [4.118, 39, 30]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.183, 58, 25], 'false,false,false,false': [4.644, 73, 31]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.274, 29, 17], 'false,false,false,false': [4.968, 68, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.113, 112, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.162, 119, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.06, 0, 25], 'true,false': [0.086, 45, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.491, 20, 9], 'false,false,false,false': [3.587, 31, 22]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.201, 48, 25], 'false,false,false,false': [4.474, 58, 31]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.662, 134, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.451, 101, 56]}]
{'': [nan, 0.22420569329660267], 'false': [nan, 0.22420569329660367], 'false,false': [nan, 0.22420569329660267], 'false,false,false': [nan, 0.22420569329660367]}
{'': [nan, 0.22684310018903323], 'false': [nan, 0.22684310018903578], 'false,false': [nan, 0.22684310018903323], 'false,false,false': [0.20274102079395087, 0.24574669187145515]}
{'': [nan, 0.2089166276416541], 'false': [nan, 0.2089166276416541], 'false,false': [nan, 0.20891662764165447], 'false,false,false': [0.21085970542326837, 0.20733274654825923]}
{'': [nan, 0.2314918353254341], 'false': [nan, 0.2314918353254341], 'false,false': [nan, 0.23149183532543496], 'false,false,false': [0.23298676748582203, 0.23070222332398782]}
{'': [nan, 0.22240584878321343], 'false': [nan, 0.22240584878321343], 'false,false': [nan, 0.22240584878321273], 'false,false,false': [nan, 0.22240584878321273]}
{'': [nan, 0.2169839848355089], 'false': [nan, 0.2169839848355089], 'false,false': [nan, 0.21698398483550982], 'false,false,false': [nan, 0.216983984835509]}
{'': [0.23174569858979158, 0.23390443032791883], 'false': [nan, 0.23390443032791883], 'false,false': [nan, 0.23390443032791883], 'false,false,false': [0.21403091557669432, 0.24279102883588424], 'true': [0.00014360451560726517, 0.0001649053306493404], 'true,true': [nan, 0.00014360451560726517], 'true,true,false': [nan, 0.00014360451560726517]}
{'': [nan, 0.18681190620137553], 'false': [nan, 0.18681190620137553], 'false,false': [nan, 0.18681190620137592], 'false,false,false': [0.1403693928779421, 0.22489379254302716]}
{'': [nan, 0.16874325365052112], 'false': [nan, 0.16874325365052126], 'false,false': [nan, 0.16874325365052126], 'false,false,false': [nan, 0.16874325365052126]}
{'': [nan, 0.18927267211564788], 'false': [nan, 0.18927267211564788], 'false,false': [nan, 0.18927267211564758], 'false,false,false': [nan, 0.18927267211564758]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 24.047
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( interaction(C, C) )
%   | then if ( phenotype(C, D), phenotype(A, D) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( enzyme(C, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.24198731893789496;  // std dev = 4.839, 99.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=38 */
%   | | | else return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(F, E), enzyme(F, G) )
%   | | | then return 0.8095079261789213;  // std dev = 0.222, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.6431809806146602;  // std dev = 1.773, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.16617994155920174;  // std dev = 0.072, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.8235601158512846;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.17130972144240225;  // std dev = 0.318, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(A, I) )
%   | then return -0.17504404327080025;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.06131899106642738;  // std dev = 0.815, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6806214530872505;  // std dev = 0.207, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.15366561868745382;  // std dev = 0.316, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, G), interaction(G, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.41193406258965964;  // std dev = 0.933, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.12204837839389575;  // std dev = 0.893, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( complex(F, H), phenotype(E, I) )
%   | | | then return 0.6551709003618517;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.005230016103772783;  // std dev = 0.813, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(J, L), interaction(M, K) )
%   | | | then return 0.4505775782633177;  // std dev = 2.008, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | | else return 0.16246226491199176;  // std dev = 1.437, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return -0.04097035082959371;  // std dev = 0.309, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( location(A, D), location(C, D) )
%   | then if ( complex(A, E) )
%   | | then return -0.06049386444116371;  // std dev = 0.244, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( location(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.1840257762828334;  // std dev = 0.597, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.09481625220452199;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.16382557191338235;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.4188096987571798;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.47960693606711535;  // std dev = 0.955, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.14696019672316493;  // std dev = 0.204, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.03306843247758888;  // std dev = 3.638, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | | | else return -0.10096369495797725;  // std dev = 0.733, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), interaction(F, D) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.48843452728939163;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, G), complex(F, G) )
%   | | | then return -0.19374517236203667;  // std dev = 0.181, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.1063992403428071;  // std dev = 2.085, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else return -0.07497956817037757;  // std dev = 0.221, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4959336099893569;  // std dev = 0.130, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.14707033164021924;  // std dev = 0.088, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( phenotype(J, L), interaction(A, M) )
%   | | | then return -0.10516177599749903;  // std dev = 0.639, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.11643141206156138;  // std dev = 2.380, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | else return -0.07779448469441282;  // std dev = 0.215, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(C, E) )
%   | | then return 0.39144638351135924;  // std dev = 0.088, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.07199346566056766;  // std dev = 0.267, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, C) )
%   | | then return -0.13482005649140102;  // std dev = 0.166, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, F), phenotype(F, G) )
%   | | | then return 0.18800540079179687;  // std dev = 1.399, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.046074699339082176;  // std dev = 3.083, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then return 0.07391471561827194;  // std dev = 0.516, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( phenotype(A, J) )
%   | | then return -0.24699200073787372;  // std dev = 0.376, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return -0.10716578044174091;  // std dev = 0.475, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.07398766287717189;  // std dev = 1.004, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3688287168508279;  // std dev = 0.112, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.15071336376143424;  // std dev = 0.063, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.1181070502936624;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return 0.07915099959125525;  // std dev = 1.722, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return -0.03425666204995546;  // std dev = 1.204, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5241489363353196;  // std dev = 0.342, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.191459223331127;  // std dev = 0.219, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.14224641422366838;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.05323799683049321;  // std dev = 0.953, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(A, E), interaction(C, C) )
%   | then if ( phenotype(C, E) )
%   | | then return -0.25258166621642264;  // std dev = 0.594, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12143263986293096;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.051175201063982566;  // std dev = 0.181, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   else if ( interaction(F, A), enzyme(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then return 0.11231065134581357;  // std dev = 0.186, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(J, F), phenotype(J, K) )
%   | | | then return -0.08059990554750307;  // std dev = 1.031, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.05005435045486767;  // std dev = 0.611, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.3763220431338922;  // std dev = 0.277, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, M) )
%   | | | then return 0.05577357870753151;  // std dev = 2.827, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | | else return -0.20470417728016113;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( complex(A, E), phenotype(D, F) )
%   | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0.23408851736676486;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.0014466878577631542;  // std dev = 0.206, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else return -0.06693102300113339;  // std dev = 0.179, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.28836567678688574;  // std dev = 0.101, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.12452996525286318;  // std dev = 0.075, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.23800154388015748;  // std dev = 0.707, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.12546746538828452;  // std dev = 0.302, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.06998749266948193;  // std dev = 1.729, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.1884778180482204;  // std dev = 1.435, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, E), phenotype(C, F) )
%   | then if ( interaction(C, A) )
%   | | then return -0.07929772136047461;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.11227186334293884;  // std dev = 0.170, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | else return -0.10773498758416561;  // std dev = 0.119, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   else if ( interaction(G, A), location(A, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.22021924842612947;  // std dev = 0.197, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(G, J), interaction(K, G) )
%   | | | then return 0.017006113349053123;  // std dev = 2.162, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return 0.10116932587178601;  // std dev = 1.460, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then return 0.04615472025675413;  // std dev = 0.739, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return -0.1275882315798562;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.04321889772360509;  // std dev = 0.598, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.058', 'seconds']
Refined model CLL: -0.185844


******************************************
Best model found
******************************************
Results 

CLL : -0.162528 

AUC ROC : 0.982256 

AUC PR : 0.547415 

Precision : 0.561224 

Recall : 0.639535 

F1 : 0.597826 

Total Learning Time : 24.047 

Total Inference Time : 15.718471050262451 

Total revision time: 42.31281924438477
Best scored revision CLL: -0.185844


Results 

CLL : -0.162528 

AUC ROC : 0.982256 

AUC PR : 0.547415 

Precision : 0.561224 

Recall : 0.639535 

F1 : 0.597826 

Total Learning Time : 53.03354573440552 

Total Inference Time : 15.718471050262451 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.243
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18663730719253674;  // std dev = 8.711, 344.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=113 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.12627538962752666;  // std dev = 5.948, 171.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=50 */
%   | | | else return 0.2001567985762564;  // std dev = 6.319, 172.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=63 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1535731307275949;  // std dev = 5.787, 149.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=51 */
%   | | | else return 0.1281369797972292;  // std dev = 6.491, 194.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=62 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1247546593468283;  // std dev = 4.397, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.13905003330865964;  // std dev = 7.363, 238.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=84 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11635471066826548;  // std dev = 8.543, 321.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09773787093917503;  // std dev = 8.525, 318.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=113 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7032779446173243;  // std dev = 0.985, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | else return -0.27666283723391055;  // std dev = 0.083, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return -0.005301090020331583;  // std dev = 3.935, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | | else return 0.15832614148947147;  // std dev = 4.788, 93.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05064187338114184;  // std dev = 4.537, 146.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=51 */
%   | | | else return 0.003324806163268899;  // std dev = 6.578, 206.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=62 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020802293404877104;  // std dev = 7.948, 353.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=113 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041666407551038;  // std dev = 7.785, 324.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=113 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.547', 'seconds']
Parameter learned model CLL:-0.336278 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.711, 231, 113]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.948, 121, 50], 'false,false,false,false': [6.319, 109, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.787, 98, 51], 'false,false,false,false': [6.491, 132, 62]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.397, 58, 29], 'false,false,false,false': [7.363, 154, 84]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.543, 208, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.525, 205, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.985, 1, 51], 'true,false': [0.083, 93, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.935, 59, 21], 'false,false,false,false': [4.788, 52, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.537, 95, 51], 'false,false,false,false': [6.578, 144, 62]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.948, 240, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.785, 211, 113]}]
{'': [nan, 0.22058376149270123], 'false': [nan, 0.22058376149269912], 'false,false': [nan, 0.22058376149270123], 'false,false,false': [nan, 0.22058376149269912]}
{'': [nan, 0.220911354962642], 'false': [nan, 0.22091135496264222], 'false,false': [nan, 0.220911354962642], 'false,false,false': [0.20690126876645754, 0.23211871281773805]}
{'': [nan, 0.2206546721659761], 'false': [nan, 0.2206546721659761], 'false,false': [nan, 0.22065467216597673], 'false,false,false': [0.22477553472137854, 0.21720862244882705]}
{'': [nan, 0.22635012369459884], 'false': [nan, 0.22635012369459884], 'false,false': [nan, 0.2263501236945977], 'false,false,false': [0.22222222222222257, 0.22780435747933309]}
{'': [nan, 0.22738157867699174], 'false': [nan, 0.22738157867699174], 'false,false': [nan, 0.22738157867699332], 'false,false,false': [nan, 0.22738157867699332]}
{'': [nan, 0.2285500755146377], 'false': [nan, 0.2285500755146377], 'false,false': [nan, 0.2285500755146375], 'false,false,false': [nan, 0.2285500755146374]}
{'': [0.2276120164754276, 0.22869169013521465], 'false': [nan, 0.22869169013521465], 'false,false': [nan, 0.22869169013521465], 'false,false,false': [0.19359375000000068, 0.24650248583651405], 'true': [0.018649189235754163, 7.375939010700644e-05], 'true,true': [nan, 0.018649189235754163], 'true,true,false': [nan, 0.018649189235754163]}
{'': [nan, 0.18195086656233625], 'false': [nan, 0.18195086656233625], 'false,false': [nan, 0.18195086656233547], 'false,false,false': [0.14098722817488643, 0.2100547114671258]}
{'': [nan, 0.17895521685995439], 'false': [nan, 0.17895521685995372], 'false,false': [nan, 0.17895521685995372], 'false,false,false': [nan, 0.17895521685995372]}
{'': [nan, 0.18705669651645324], 'false': [nan, 0.18705669651645324], 'false,false': [nan, 0.18705669651645399], 'false,false,false': [nan, 0.18705669651645399]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 57.382
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(C, D) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else return 0.04419544672741935;  // std dev = 0.389, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, F) )
%   | | | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.024204006076958388;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.0803711573217346;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.25100607795665486;  // std dev = 5.169, 112.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(C, E) )
%   | then return 0.508243899526118;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.732635282612116;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, A) )
%   | then return -0.14124103268535;  // std dev = 0.042, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4741265580884559;  // std dev = 5.493, 151.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=100 */
%   | | | else return -0.15069710724907823;  // std dev = 0.282, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3247683754202455;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.1577924396942784;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6381389960199304;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.020644529644586275;  // std dev = 0.299, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.573962274328995;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10187225272467368;  // std dev = 4.703, 138.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=42 */
%   else if ( complex(A, H) )
%   | then return 0.16395085630660414;  // std dev = 0.363, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.28908890335504406;  // std dev = 1.329, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.17019539881909357;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.2375523548462257;  // std dev = 3.317, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.4655160365230291;  // std dev = 1.355, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.47312863080921697;  // std dev = 0.360, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return 0.027767149675669355;  // std dev = 0.349, 145.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=34 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.4909550125652503;  // std dev = 0.128, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5618728529046165;  // std dev = 1.594, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return -0.16393830716783886;  // std dev = 0.353, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(J, A) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.18808028183890946;  // std dev = 2.352, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.3076562846214547;  // std dev = 1.997, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.2505034159812333;  // std dev = 1.541, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.030080929404868558;  // std dev = 1.885, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5855718642932524;  // std dev = 0.115, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.1612162626066268;  // std dev = 0.056, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2975070795553745;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6439874535513475;  // std dev = 0.153, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, F) )
%   | | | then return -0.12335508548381523;  // std dev = 1.535, 55.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=4 */
%   | | | else return 0.07493684621770173;  // std dev = 1.726, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( location(A, I), complex(H, J) )
%   | | | then return 0.021205645084466335;  // std dev = 2.665, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | | else return 0.11252719325326653;  // std dev = 3.686, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | else return 0.2402594618055783;  // std dev = 1.048, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3387786629538803;  // std dev = 0.116, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.44930067044418537;  // std dev = 0.199, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else return -0.030000757842753523;  // std dev = 0.277, 148.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=29 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( location(E, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.34012757770151725;  // std dev = 0.253, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07332754117310258;  // std dev = 4.157, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | else return 0.35909804227272174;  // std dev = 0.599, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then return 0.07403285519036769;  // std dev = 0.525, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.45144617545074067;  // std dev = 0.804, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4010290205705789;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3833659663783309;  // std dev = 0.103, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.14989020468926365;  // std dev = 0.055, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, A) )
%   | | then return -0.12881789120823595;  // std dev = 0.123, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.074733759585102;  // std dev = 1.048, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.15171797907344992;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.0046708131099706075;  // std dev = 3.178, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | | else return 0.2984138991261079;  // std dev = 0.789, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.19532674595126953;  // std dev = 1.502, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.08339038663291905;  // std dev = 3.252, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.25734851204206083;  // std dev = 1.252, 48.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=44 */
%   | | | else return 0.4873313808947624;  // std dev = 1.819, 54.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=51 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.3771675742780279;  // std dev = 0.844, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.2354917035905956;  // std dev = 0.704, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( complex(A, H) )
%   | | then return -0.100961840934409;  // std dev = 0.177, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.1482739534021786;  // std dev = 0.261, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.24178750326680754;  // std dev = 0.535, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( interaction(K, A), interaction(L, K) )
%   | then return 0.01687988773734463;  // std dev = 0.485, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.17531715621487537;  // std dev = 0.438, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18114526567921233;  // std dev = 0.106, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.26733913747755383;  // std dev = 0.093, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.04781686773236063;  // std dev = 0.353, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(E, A), enzyme(E, G) )
%   | | | then return -0.09139876867839083;  // std dev = 1.513, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.015099247089574505;  // std dev = 3.662, 197.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=60 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.09766543289926076;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.06368290050549238;  // std dev = 0.421, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.05761653185333207;  // std dev = 1.358, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.2092854436395254;  // std dev = 1.336, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.35500623153922023;  // std dev = 1.104, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | | else return 0.09441004382469197;  // std dev = 1.164, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | else if ( phenotype(A, G) )
%   | | | then return -0.2040495962749937;  // std dev = 0.468, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.18606632282904867;  // std dev = 2.175, 75.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=57 */
%   | else if ( complex(A, H) )
%   | | then return -0.10136838641568496;  // std dev = 0.233, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else return -0.15925184897650735;  // std dev = 0.062, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then return -0.09527542816284057;  // std dev = 0.576, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, K) )
%   | | then return -0.2790272999650517;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.2148644979287373;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '12.712', 'seconds']
Refined model CLL: -0.179622


******************************************
Best model found
******************************************
Results 

CLL : -0.178115 

AUC ROC : 0.99194 

AUC PR : 0.648421 

Precision : 0.542857 

Recall : 0.883721 

F1 : 0.672566 

Total Learning Time : 57.382 

Total Inference Time : 54.70681405067444 

Total revision time: 115.43387198448181
Best scored revision CLL: -0.179622


Results 

CLL : -0.178115 

AUC ROC : 0.99194 

AUC PR : 0.648421 

Precision : 0.542857 

Recall : 0.883721 

F1 : 0.672566 

Total Learning Time : 126.15459847450256 

Total Inference Time : 54.70681405067444 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.603
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1941330305269472;  // std dev = 10.593, 503.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=169 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13283677850452147;  // std dev = 7.389, 260.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=78 */
%   | | | else return 0.21043013950036976;  // std dev = 7.526, 241.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=91 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15655268317952;  // std dev = 6.989, 216.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=75 */
%   | | | else return 0.12207461820190213;  // std dev = 8.013, 298.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=94 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11212447040044522;  // std dev = 5.456, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return 0.12762691057226142;  // std dev = 9.049, 364.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=125 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10797051962648832;  // std dev = 10.518, 491.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=169 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09812962258710793;  // std dev = 10.435, 477.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=169 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7229827921369992;  // std dev = 0.080, 75.000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | else return -0.27527123936594294;  // std dev = 0.107, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04073870361667024;  // std dev = 4.856, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | | else return 0.08487961387736805;  // std dev = 6.168, 164.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=60 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.010365213552780205;  // std dev = 5.688, 249.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=75 */
%   | | | else return 0.0360690644674706;  // std dev = 7.957, 290.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=94 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026259425737848847;  // std dev = 9.745, 521.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=169 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038749721981332585;  // std dev = 9.595, 491.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.492', 'seconds']
Parameter learned model CLL:-0.33298 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.593, 334, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.389, 182, 78], 'false,false,false,false': [7.526, 150, 91]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.989, 141, 75], 'false,false,false,false': [8.013, 204, 94]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.456, 92, 44], 'false,false,false,false': [9.049, 239, 125]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.518, 322, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.435, 308, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.08, 0, 75], 'true,false': [0.107, 150, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.856, 77, 34], 'false,false,false,false': [6.168, 104, 60]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.688, 174, 75], 'false,false,false,false': [7.957, 196, 94]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.745, 352, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.595, 322, 169]}]
{'': [nan, 0.22309878304724653], 'false': [nan, 0.22309878304724423], 'false,false': [nan, 0.22309878304724653], 'false,false,false': [nan, 0.22309878304724423]}
{'': [nan, 0.22353695802009022], 'false': [nan, 0.2235369580200886], 'false,false': [nan, 0.22353695802009022], 'false,false,false': [0.21000000000000058, 0.23501661472770943]}
{'': [nan, 0.2202345861109602], 'false': [nan, 0.2202345861109602], 'false,false': [nan, 0.2202345861109609], 'false,false,false': [0.22613828713522782, 0.21545584637095858]}
{'': [nan, 0.22334034257479662], 'false': [nan, 0.22334034257479662], 'false,false': [nan, 0.22334034257479776], 'false,false,false': [0.21885813148788952, 0.22494964627187924]}
{'': [nan, 0.22532661496984657], 'false': [nan, 0.22532661496984657], 'false,false': [nan, 0.225326614969845], 'false,false,false': [nan, 0.225326614969845]}
{'': [nan, 0.22828336219206594], 'false': [nan, 0.22828336219206594], 'false,false': [nan, 0.22828336219206605], 'false,false,false': [nan, 0.22828336219206588]}
{'': [0.22152596482833656, 0.22459397959814204], 'false': [nan, 0.22459397959814204], 'false,false': [nan, 0.22459397959814204], 'false,false,false': [0.21248275302329467, 0.23200475907197973], 'true': [8.485766885864146e-05, 7.614793745071088e-05], 'true,true': [nan, 8.485766885864146e-05], 'true,true,false': [nan, 8.485766885864146e-05]}
{'': [nan, 0.1776615682709414], 'false': [nan, 0.1776615682709414], 'false,false': [nan, 0.17766156827094196], 'false,false,false': [0.1299435524461038, 0.21832802815747926]}
{'': [nan, 0.1822804919641125], 'false': [nan, 0.18228049196411264], 'false,false': [nan, 0.18228049196411264], 'false,false,false': [nan, 0.18228049196411264]}
{'': [nan, 0.1875068323494044], 'false': [nan, 0.1875068323494044], 'false,false': [nan, 0.18750683234940316], 'false,false,false': [nan, 0.18750683234940316]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.932
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(A, E), enzyme(C, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.28672036367094084;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I) )
%   | | then if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.20061468852416883;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.04682818038253037;  // std dev = 4.934, 159.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=30 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.2581489350995135;  // std dev = 5.797, 140.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=56 */
%   | | | else return 0.18345013991878825;  // std dev = 4.268, 83.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, E) )
%   | then return 0.7591752643571399;  // std dev = 0.191, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1550901145144712;  // std dev = 0.086, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.18042332141808873;  // std dev = 4.596, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | | | else return -0.016171541320432744;  // std dev = 2.018, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( location(G, H), location(A, H) )
%   | | then if ( interaction(I, G), interaction(I, I) )
%   | | | then return 0.2660192673879491;  // std dev = 4.152, 71.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=31 */
%   | | | else return 0.1326554605158457;  // std dev = 4.952, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
%   | | else if ( interaction(J, G), location(A, K) )
%   | | | then return 0.3390693205352108;  // std dev = 3.423, 47.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | | else return 0.16803477880842016;  // std dev = 2.539, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else return -0.052418663980831316;  // std dev = 0.320, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E), interaction(D, D) )
%   | | then return 0.2855044416092967;  // std dev = 0.637, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.545542373068203;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6863092480132019;  // std dev = 0.029, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, A) )
%   | then return -0.13133004826688932;  // std dev = 0.024, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then if ( enzyme(A, H), enzyme(F, H) )
%   | | | then return -0.18003739452650136;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.21277150424257363;  // std dev = 5.299, 128.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=52 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5218589630205156;  // std dev = 0.783, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10351365458039093;  // std dev = 7.887, 304.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=91 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4294201583502698;  // std dev = 0.287, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), interaction(G, A) )
%   | | then if ( interaction(E, H), complex(H, I) )
%   | | | then return 0.019780525006886276;  // std dev = 2.629, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return -0.16731938870504184;  // std dev = 0.192, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( phenotype(E, J) )
%   | | | then return 0.08673395217837392;  // std dev = 4.787, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | | else return -0.030394231476648704;  // std dev = 2.485, 48.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=8 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then if ( interaction(M, K), enzyme(M, L) )
%   | | | then return 0.2959992738395596;  // std dev = 2.323, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.12784937274898142;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.07954983126722495;  // std dev = 4.542, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0.1456166319661806;  // std dev = 4.743, 99.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.41151297974319617;  // std dev = 0.245, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, F), enzyme(F, D) )
%   | | then return -0.11790685866888087;  // std dev = 0.181, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.5082149901845086;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11396305234360136;  // std dev = 4.635, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(G, H), complex(G, I) )
%   | | then return 0.42502990703010035;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.18610579692337056;  // std dev = 0.872, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12708847391887776;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.09975798871534776;  // std dev = 5.189, 125.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=42 */
%   | | | else return 0.038235611824972815;  // std dev = 6.551, 237.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=64 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.19220035424863527;  // std dev = 0.259, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.38517914783838897;  // std dev = 0.121, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11926938321224977;  // std dev = 0.120, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return -0.11585026591060614;  // std dev = 0.732, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.023171476658864886;  // std dev = 2.728, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.4320941016763009;  // std dev = 0.176, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.05601727744585233;  // std dev = 1.063, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.13277934134065783;  // std dev = 4.289, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
%   | | | else return 0.04394401698908961;  // std dev = 8.010, 316.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5564606366161948;  // std dev = 0.245, 78.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=75 */
%   | else return -0.23065947240799153;  // std dev = 0.068, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), location(E, H) )
%   | | then if ( recursion_proteinclass(G, B), interaction(A, I) )
%   | | | then return 0.38062522842413193;  // std dev = 0.884, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.026230720662654576;  // std dev = 5.197, 162.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.14406196643985625;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1954058745602299;  // std dev = 2.192, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( interaction(L, A), interaction(A, L) )
%   | | then return -0.11832911410772438;  // std dev = 0.092, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( location(A, M), interaction(A, N) )
%   | | | then return 0.26631276342528026;  // std dev = 2.711, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.12497479583202414;  // std dev = 3.660, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.020624369771701005;  // std dev = 0.252, 107.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=26 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(E, F), interaction(E, E) )
%   | | then if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.19914778389607737;  // std dev = 2.533, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.06014083363907221;  // std dev = 3.769, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | else if ( phenotype(E, H), interaction(I, E) )
%   | | | then return -0.015760475880766022;  // std dev = 4.623, 144.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=41 */
%   | | | else return 0.08125641399393789;  // std dev = 3.591, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5583164798848844;  // std dev = 1.095, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.2410138070906818;  // std dev = 0.269, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.04823377916218684;  // std dev = 1.422, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2774499017522395;  // std dev = 2.387, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.4443887128550336;  // std dev = 0.157, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1901805445800122;  // std dev = 0.058, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), phenotype(F, H) )
%   | | then return -0.052713032730332066;  // std dev = 0.776, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.019037409130128885;  // std dev = 0.505, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2696714543077162;  // std dev = 0.392, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.46624096132190296;  // std dev = 2.842, 67.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=56 */
%   | | | else return -0.23964956259988604;  // std dev = 0.935, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( location(A, M) )
%   | | | then return 0.036919258845398824;  // std dev = 5.698, 178.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=57 */
%   | | | else return 0.15274049714244584;  // std dev = 1.682, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.3119250998769751;  // std dev = 0.232, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | else return -0.17692728734970822;  // std dev = 0.098, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), complex(H, G) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.18933149364646412;  // std dev = 0.723, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.007812620913171467;  // std dev = 2.540, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | else if ( enzyme(F, J), phenotype(F, K) )
%   | | | then return 0.1056904676458579;  // std dev = 1.262, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.09470525683612437;  // std dev = 1.446, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.23845637093636812;  // std dev = 0.126, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.23292344194548614;  // std dev = 1.512, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.05777747980288762;  // std dev = 6.120, 201.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=72 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.668', 'seconds']
Refined model CLL: -0.261395


******************************************
Best model found
******************************************
Results 

CLL : -0.247442 

AUC ROC : 0.943215 

AUC PR : 0.301341 

Precision : 0.356522 

Recall : 0.476744 

F1 : 0.40796 

Total Learning Time : 17.932 

Total Inference Time : 7.6403727531433105 

Total revision time: 29.987839612960812
Best scored revision CLL: -0.261395


Results 

CLL : -0.247442 

AUC ROC : 0.943215 

AUC PR : 0.301341 

Precision : 0.356522 

Recall : 0.476744 

F1 : 0.40796 

Total Learning Time : 40.708566102981564 

Total Inference Time : 7.6403727531433105 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.752
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1805455114190524;  // std dev = 12.375, 701.000 (wgt'ed) examples reached here.  /* #neg=475 #pos=226 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16316563117782162;  // std dev = 8.673, 341.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=112 */
%   | | | else return 0.16903073381711756;  // std dev = 8.711, 341.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=114 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16042487720662282;  // std dev = 8.023, 283.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=99 */
%   | | | else return 0.11721856461209594;  // std dev = 9.383, 414.000 (wgt'ed) examples reached here.  /* #neg=287 #pos=127 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13807925124826387;  // std dev = 6.231, 170.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=60 */
%   | | | else return 0.10686955241467641;  // std dev = 10.648, 524.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=166 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0921933106081486;  // std dev = 12.367, 699.000 (wgt'ed) examples reached here.  /* #neg=473 #pos=226 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0899368208618622;  // std dev = 12.233, 669.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=226 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.728218717845016;  // std dev = 0.024, 99.000 (wgt'ed) examples reached here.  /* #pos=99 */
%   | else return -0.2718004673700755;  // std dev = 0.033, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06990238185035896;  // std dev = 5.906, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
%   | | | else return 0.08369734313274352;  // std dev = 7.014, 218.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=75 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0552347137672786;  // std dev = 6.290, 281.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=99 */
%   | | | else return 0.06711515556648458;  // std dev = 9.140, 371.000 (wgt'ed) examples reached here.  /* #neg=244 #pos=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04761817919493498;  // std dev = 11.087, 658.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=226 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026342980656928493;  // std dev = 11.191, 680.000 (wgt'ed) examples reached here.  /* #neg=454 #pos=226 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.537', 'seconds']
Parameter learned model CLL:-0.332966 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.375, 475, 226]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.673, 229, 112], 'false,false,false,false': [8.711, 227, 114]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.023, 184, 99], 'false,false,false,false': [9.383, 287, 127]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.231, 110, 60], 'false,false,false,false': [10.648, 358, 166]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.367, 473, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.233, 443, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.024, 0, 99], 'true,false': [0.033, 182, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.906, 106, 52], 'false,false,false,false': [7.014, 143, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.29, 182, 99], 'false,false,false,false': [9.14, 244, 127]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.087, 432, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.191, 454, 226]}]
{'': [nan, 0.21845702389698254], 'false': [nan, 0.21845702389698246], 'false,false': [nan, 0.21845702389698254], 'false,false,false': [nan, 0.21845702389698246]}
{'': [nan, 0.2215667219924153], 'false': [nan, 0.2215667219924139], 'false,false': [nan, 0.2215667219924153], 'false,false,false': [0.22056913855229895, 0.22254710571804412]}
{'': [nan, 0.2191080019124505], 'false': [nan, 0.2191080019124505], 'false,false': [nan, 0.2191080019124549], 'false,false,false': [0.22745276147944393, 0.21264577079770997]}
{'': [nan, 0.21950005899364616], 'false': [nan, 0.21950005899364616], 'false,false': [nan, 0.21950005899364744], 'false,false,false': [0.2283737024221467, 0.21638260621648409]}
{'': [nan, 0.21879276453938637], 'false': [nan, 0.21879276453938637], 'false,false': [nan, 0.2187927645393858], 'false,false,false': [nan, 0.2187927645393858]}
{'': [nan, 0.22368610801379432], 'false': [nan, 0.22368610801379432], 'false,false': [nan, 0.22368610801379432], 'false,false,false': [nan, 0.2236861080137946]}
{'': [0.22820333407387006, 0.2236722245694614], 'true': [5.9923034368240466e-06, 5.971547351215244e-06], 'false': [nan, 0.2236722245694614], 'false,false': [nan, 0.2236722245694614], 'false,false,false': [0.22079794904662747, 0.22567544819459642], 'true,true': [nan, 5.9923034368240466e-06], 'true,true,false': [nan, 5.9923034368240466e-06]}
{'': [nan, 0.18883963447862873], 'false': [nan, 0.18883963447862873], 'false,false': [nan, 0.18883963447862756], 'false,false,false': [0.14080464197086962, 0.2251611025331242]}
{'': [nan, 0.18679529460595148], 'false': [nan, 0.18679529460595062], 'false,false': [nan, 0.18679529460595062], 'false,false,false': [nan, 0.18679529460595062]}
{'': [nan, 0.18416128101641077], 'false': [nan, 0.18416128101641077], 'false,false': [nan, 0.18416128101641224], 'false,false,false': [nan, 0.18416128101641224]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.219
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( complex(C, E) )
%   | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.06606972717872027;  // std dev = 4.078, 101.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=21 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.25208832903890505;  // std dev = 3.970, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | | else return 0.17092426549598577;  // std dev = 9.879, 454.000 (wgt'ed) examples reached here.  /* #neg=312 #pos=142 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.6562257184160247;  // std dev = 0.318, 58.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=51 */
%   | else if ( interaction(C, A) )
%   | | then return -0.15122422393721924;  // std dev = 0.160, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else return 0.0997204249217424;  // std dev = 0.436, 206.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=55 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.8360429843266213;  // std dev = 1.58e-07, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else return -0.16395701567337845;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7451338934175307;  // std dev = 1.348, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.16228256449316125;  // std dev = 0.038, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.13449130188173197;  // std dev = 4.587, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | | else return 0.19699198912251478;  // std dev = 4.452, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.5709248096070122;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.7295419666305396;  // std dev = 0.057, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then return 0.28025446092684153;  // std dev = 0.873, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5709248096070121;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.677582271239919;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( complex(A, K), complex(I, K) )
%   | | | then return -0.013795796399667092;  // std dev = 2.950, 77.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=12 */
%   | | | else return 0.09374748613940434;  // std dev = 5.257, 165.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=46 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.16198496670277526;  // std dev = 5.296, 141.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=50 */
%   | | | else return 0.11466398165477572;  // std dev = 6.753, 241.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=73 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.4660822588374051;  // std dev = 0.310, 58.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=51 */
%   | else return 0.0083654493741527;  // std dev = 0.372, 285.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=55 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5614872459975415;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.4697358706242488;  // std dev = 0.713, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15152120163027716;  // std dev = 3.114, 60.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.515867366026836;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06048468092393814;  // std dev = 4.971, 142.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=38 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.15524653282142337;  // std dev = 5.131, 127.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=47 */
%   | | | else return -0.01924034327590316;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(C, C) )
%   | | then return 0.3205203050937108;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.034924710800514035;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(C, E), phenotype(A, E) )
%   | | then return 0.670463872837512;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.43436810755662525;  // std dev = 0.208, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.12169654043924479;  // std dev = 0.038, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), phenotype(G, H) )
%   | | | then return 0.08441714281656865;  // std dev = 5.734, 207.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=65 */
%   | | | else return 0.019732726643383557;  // std dev = 4.158, 115.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=27 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.09548019102619958;  // std dev = 7.009, 265.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=88 */
%   | | | else return 0.29397623073630613;  // std dev = 2.400, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.20691725875270348;  // std dev = 0.225, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.42614388507156314;  // std dev = 0.115, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(A, G) )
%   | | then return 0.5246014120192118;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(E, H), location(E, I) )
%   | | | then return 0.026529346963829106;  // std dev = 1.100, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.35413756377241523;  // std dev = 0.220, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6709842462309152;  // std dev = 0.736, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | | else return -0.20231824256117054;  // std dev = 0.344, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10701428616968522;  // std dev = 0.079, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.04283635436525912;  // std dev = 9.260, 499.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=142 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4931540087131928;  // std dev = 0.205, 100.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=99 */
%   | else return -0.1977895443998916;  // std dev = 0.069, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.3098834260830904;  // std dev = 0.101, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.23912604237612697;  // std dev = 1.615, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return 0.026004280468591736;  // std dev = 7.357, 313.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=86 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.16623909010519097;  // std dev = 1.616, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.3900837482347595;  // std dev = 1.544, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.02505769175409662;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.2706496638690713;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( enzyme(A, F), interaction(A, D) )
%   | | then return 0.2242006050253175;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, C) )
%   | | | then return 0.15311787689909856;  // std dev = 0.036, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.006513374201591371;  // std dev = 0.395, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2936881598914946;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.08533903747700568;  // std dev = 0.143, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), phenotype(I, J) )
%   | | | then return 0.03710253677194933;  // std dev = 3.076, 79.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=24 */
%   | | | else return -0.08518164883556847;  // std dev = 1.586, 47.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=5 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.13894850325496252;  // std dev = 2.695, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | else return 0.0349116466685354;  // std dev = 8.253, 464.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=149 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), interaction(C, C) )
%   | then return 0.13513025566916062;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(C, D) )
%   | | then return -0.09399299945683179;  // std dev = 0.215, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | else if ( complex(C, E), enzyme(A, F) )
%   | | | then return -0.17094994917534578;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.005182869955875198;  // std dev = 2.673, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.21955426779038484;  // std dev = 0.089, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2875076352880473;  // std dev = 6.545, 249.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=159 */
%   | | | else return -0.21902141535385128;  // std dev = 0.773, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.07547881277034547;  // std dev = 1.493, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.15541900880051596;  // std dev = 1.529, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( enzyme(C, D) )
%   | then return -0.0720274329669802;  // std dev = 0.220, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else return 0.019135981173778936;  // std dev = 0.269, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( location(A, G) )
%   | | then if ( interaction(E, E), enzyme(E, H) )
%   | | | then return 0.22275362384366018;  // std dev = 1.181, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.04356953588704689;  // std dev = 2.749, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | else return 0.34935705143445744;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.1917670856402403;  // std dev = 0.312, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.022410276347067472;  // std dev = 6.592, 346.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=108 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.11512483203644204;  // std dev = 1.528, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.015159304545189723;  // std dev = 3.396, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.431', 'seconds']
Refined model CLL: -0.234753


******************************************
Best model found
******************************************
Results 

CLL : -0.232324 

AUC ROC : 0.973091 

AUC PR : 0.28366 

Precision : 0.298611 

Recall : 0.5 

F1 : 0.373913 

Total Learning Time : 20.219 

Total Inference Time : 15.819360256195068 

Total revision time: 41.161835237503055
Best scored revision CLL: -0.234753


Results 

CLL : -0.232324 

AUC ROC : 0.973091 

AUC PR : 0.28366 

Precision : 0.298611 

Recall : 0.5 

F1 : 0.373913 

Total Learning Time : 51.88256172752381 

Total Inference Time : 15.819360256195068 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.085
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19707109078813084;  // std dev = 13.678, 835.000 (wgt'ed) examples reached here.  /* #neg=552 #pos=283 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.154795763660489;  // std dev = 9.981, 456.000 (wgt'ed) examples reached here.  /* #neg=309 #pos=147 */
%   | | | else return 0.16172516343110194;  // std dev = 9.551, 413.000 (wgt'ed) examples reached here.  /* #neg=277 #pos=136 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13014888398400357;  // std dev = 9.028, 374.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=120 */
%   | | | else return 0.14585998412846155;  // std dev = 10.398, 484.000 (wgt'ed) examples reached here.  /* #neg=321 #pos=163 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11493310120741097;  // std dev = 7.109, 230.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=75 */
%   | | | else return 0.10452115419749317;  // std dev = 11.906, 653.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09538536987796388;  // std dev = 13.799, 865.000 (wgt'ed) examples reached here.  /* #neg=582 #pos=283 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08492851902401227;  // std dev = 13.728, 847.000 (wgt'ed) examples reached here.  /* #neg=564 #pos=283 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7357592921144026;  // std dev = 0.004, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return -0.2642724807419766;  // std dev = 0.005, 253.000 (wgt'ed) examples reached here.  /* #neg=253 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07250144468057437;  // std dev = 6.904, 213.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=72 */
%   | | | else return 0.07394366451375509;  // std dev = 7.745, 267.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=91 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05549161378464607;  // std dev = 6.984, 348.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=120 */
%   | | | else return 0.05940340125893448;  // std dev = 10.370, 479.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=163 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04205336327844992;  // std dev = 12.530, 837.000 (wgt'ed) examples reached here.  /* #neg=554 #pos=283 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030946941168957822;  // std dev = 12.540, 844.000 (wgt'ed) examples reached here.  /* #neg=561 #pos=283 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.522', 'seconds']
Parameter learned model CLL:-0.333264 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.678, 552, 283]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.981, 309, 147], 'false,false,false,false': [9.551, 277, 136]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.028, 254, 120], 'false,false,false,false': [10.398, 321, 163]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.109, 155, 75], 'false,false,false,false': [11.906, 445, 208]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.799, 582, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.728, 564, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.004, 0, 120], 'true,false': [0.005, 253, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.904, 141, 72], 'false,false,false,false': [7.745, 176, 91]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.984, 228, 120], 'false,false,false,false': [10.37, 316, 163]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.53, 554, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.54, 561, 283]}]
{'': [nan, 0.22405392807200156], 'false': [nan, 0.22405392807200264], 'false,false': [nan, 0.22405392807200156], 'false,false,false': [nan, 0.22405392807200264]}
{'': [nan, 0.2196061502116742], 'false': [nan, 0.21960615021168098], 'false,false': [nan, 0.2196061502116742], 'false,false,false': [0.2184470221606688, 0.22086076602431087]}
{'': [nan, 0.22105932190773406], 'false': [nan, 0.22105932190773406], 'false,false': [nan, 0.22105932190773672], 'false,false,false': [0.21791811793834295, 0.22337901954173428]}
{'': [nan, 0.2178057679697843], 'false': [nan, 0.2178057679697843], 'false,false': [nan, 0.2178057679697856], 'false,false,false': [0.21975425330813053, 0.2170912336381486]}
{'': [nan, 0.22013477880343182], 'false': [nan, 0.22013477880343182], 'false,false': [nan, 0.22013477880343826], 'false,false,false': [nan, 0.22013477880343826]}
{'': [nan, 0.22248567570514122], 'false': [nan, 0.22248567570514122], 'false,false': [nan, 0.22248567570514374], 'false,false,false': [nan, 0.22248567570514136]}
{'': [0.21822872023823275, 0.22426507707988733], 'false': [nan, 0.22426507707988733], 'false,false': [nan, 0.22426507707988733], 'false,false,false': [0.2237651259670684, 0.2246629914853627], 'true': [1.0739835154538468e-07, 1.0101184386431855e-07], 'true,true': [nan, 1.0739835154538468e-07], 'true,true,false': [nan, 1.0739835154538468e-07]}
{'': [nan, 0.18903502418009369], 'false': [nan, 0.18903502418009369], 'false,false': [nan, 0.1890350241800858], 'false,false,false': [0.1401806395447275, 0.22452195848243087]}
{'': [nan, 0.18756643626367817], 'false': [nan, 0.1875664362636812], 'false,false': [nan, 0.1875664362636812], 'false,false,false': [nan, 0.1875664362636812]}
{'': [nan, 0.186313528208233], 'false': [nan, 0.186313528208233], 'false,false': [nan, 0.18631352820823294], 'false,false,false': [nan, 0.18631352820823294]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 36.057
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else if ( interaction(G, E), phenotype(G, C) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.1418510649004879;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.12028485742960991;  // std dev = 7.731, 309.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=81 */
%   | | | else return 0.18379735008509912;  // std dev = 8.729, 347.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=113 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.681011873749416;  // std dev = 0.192, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.8222821412334013;  // std dev = 0.155, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then return 0.10450072863117256;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(E, G), enzyme(E, H) )
%   | | | then return 0.41058033599965266;  // std dev = 0.848, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 2.98e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13140932888457038;  // std dev = 0.152, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.1094095140425853;  // std dev = 4.919, 134.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=36 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.1852483994192659;  // std dev = 5.893, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
%   | | | else return 0.13715449506780175;  // std dev = 9.355, 422.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=126 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then if ( phenotype(C, F) )
%   | | then return 0.5927969577535293;  // std dev = 0.058, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.24519060535273005;  // std dev = 0.965, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.617749532095323;  // std dev = 0.062, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A), interaction(A, H) )
%   | | then return 0.17024903749940762;  // std dev = 1.056, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.3419183370341748;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5768554899034573;  // std dev = 0.163, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12476302790727936;  // std dev = 0.086, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.03957653792919844;  // std dev = 5.100, 169.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=36 */
%   | | | else return 0.1393571591506045;  // std dev = 10.959, 577.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=189 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then return 0.3400920798563437;  // std dev = 0.240, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return 0.5196196067624514;  // std dev = 0.062, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, F) )
%   | | | then return 0.7240414559422607;  // std dev = 1.101, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | | else return -0.19017345307478112;  // std dev = 0.309, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.18106559684041879;  // std dev = 0.413, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(H, A) )
%   | | | then return -0.07052120889203839;  // std dev = 1.447, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.16151206416200045;  // std dev = 2.588, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.11094851770506152;  // std dev = 8.779, 375.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=121 */
%   | | | else return 0.18420521502013315;  // std dev = 2.773, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33134181108792066;  // std dev = 0.261, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), complex(D, G) )
%   | | then if ( interaction(E, D), enzyme(E, H) )
%   | | | then return -0.031012719099351875;  // std dev = 1.902, 41.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=5 */
%   | | | else return 0.1236837439684595;  // std dev = 4.614, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | else if ( phenotype(A, I), interaction(D, D) )
%   | | | then return 0.1903428301107619;  // std dev = 1.123, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -6.23371703717195E-5;  // std dev = 4.022, 121.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=25 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( enzyme(A, L), interaction(M, K) )
%   | | | then return 0.10794578453157942;  // std dev = 2.306, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.05016408630807829;  // std dev = 3.337, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.16010886603959804;  // std dev = 4.251, 87.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
%   | | | else return 0.0977690931778104;  // std dev = 7.167, 254.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=84 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, D) )
%   | | then return 0.26419881907365417;  // std dev = 0.060, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.09118400192904969;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.3895173906263375;  // std dev = 0.179, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( enzyme(A, F) )
%   | | then return -0.11020214909991931;  // std dev = 0.170, 44.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=2 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5319639586869964;  // std dev = 1.201, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.025706773229597087;  // std dev = 5.111, 172.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=45 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12018494188436833;  // std dev = 0.031, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.15470369903351922;  // std dev = 2.866, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | | else return 0.060165071176483426;  // std dev = 9.446, 523.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=165 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.13974445649982625;  // std dev = 0.832, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.27754518839627285;  // std dev = 0.232, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.5287276797287345;  // std dev = 0.142, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | else return -0.178949293963957;  // std dev = 0.642, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.24085950362402517;  // std dev = 0.151, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( enzyme(A, K), interaction(L, I) )
%   | | | then return -0.022792371384639867;  // std dev = 2.420, 50.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=10 */
%   | | | else return 0.03684605934610986;  // std dev = 4.109, 93.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=26 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.039117178648571796;  // std dev = 4.374, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | | else return 0.10219693426118194;  // std dev = 7.041, 221.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=79 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(A, E) )
%   | then return 0.06202491076209907;  // std dev = 0.318, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | else return 0.23649355437248185;  // std dev = 0.233, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(A, F), complex(A, G) )
%   | then if ( interaction(H, A), complex(H, G) )
%   | | then return -0.06626795347854669;  // std dev = 0.193, 99.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=13 */
%   | | else if ( enzyme(F, I), complex(F, J) )
%   | | | then return 0.086480021300023;  // std dev = 1.804, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.0023681622136656052;  // std dev = 2.586, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( complex(K, M), interaction(N, K) )
%   | | | then return -0.020032143716321515;  // std dev = 3.978, 133.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=32 */
%   | | | else return 0.04971569052294213;  // std dev = 3.617, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | else if ( interaction(A, P), recursion_proteinclass(P, B) )
%   | | | then return 0.25341322543612926;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.05119388882953564;  // std dev = 8.526, 376.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=119 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then if ( complex(A, E) )
%   | | then return 0.19132726117392018;  // std dev = 0.152, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.3564016193938469;  // std dev = 0.655, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.19055357356042582;  // std dev = 0.183, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.400265461025929;  // std dev = 0.124, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | | else return -0.15228854519934587;  // std dev = 0.475, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), interaction(A, K) )
%   | | | then return 0.46144295702117627;  // std dev = 1.890, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.0021028194400809544;  // std dev = 7.993, 361.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=97 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 5.524046238022158E-4;  // std dev = 2.778, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.13553325663093674;  // std dev = 3.587, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then return 0.06053055227245355;  // std dev = 0.287, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return 0.16614206846399573;  // std dev = 0.193, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07843202118216974;  // std dev = 0.122, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( enzyme(F, G), enzyme(A, G) )
%   | | | then return 0.12538287635063053;  // std dev = 0.809, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.021716511396844596;  // std dev = 3.656, 140.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=38 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3613041552157942;  // std dev = 1.132, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.009175988578740447;  // std dev = 4.124, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.04079405944423045;  // std dev = 3.171, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 8.609214163502238E-4;  // std dev = 7.954, 427.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.495', 'seconds']
Refined model CLL: -0.248513


******************************************
Best model found
******************************************
Results 

CLL : -0.256082 

AUC ROC : 0.920738 

AUC PR : 0.299647 

Precision : 0.320313 

Recall : 0.476744 

F1 : 0.383178 

Total Learning Time : 36.057 

Total Inference Time : 24.794333934783936 

Total revision time: 66.6641140384674
Best scored revision CLL: -0.248513


Results 

CLL : -0.256082 

AUC ROC : 0.920738 

AUC PR : 0.299647 

Precision : 0.320313 

Recall : 0.476744 

F1 : 0.383178 

Total Learning Time : 77.38484052848816 

Total Inference Time : 24.794333934783936 

Run: 3
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.008
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19961234973365752;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.23451158202227843;  // std dev = 4.441, 82.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=33 */
%   | | | else return 0.15151700207647814;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14034720502143064;  // std dev = 3.897, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.1328754636387106;  // std dev = 4.701, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09912201935013369;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | | else return 0.12733312486469178;  // std dev = 5.179, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12285257919074076;  // std dev = 5.963, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06513369473734505;  // std dev = 6.124, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7225856597391686;  // std dev = 0.025, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.2777031239821011;  // std dev = 0.038, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1761078614433844;  // std dev = 3.113, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return 0.05727838194759093;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.002935130637819639;  // std dev = 3.165, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | | else return -0.001654542871415506;  // std dev = 4.790, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017661023678083212;  // std dev = 5.704, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028761754197080706;  // std dev = 5.597, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.654', 'seconds']
Parameter learned model CLL:-0.33493 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.073, 108, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.441, 49, 33], 'false,false,false,false': [3.956, 49, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.897, 45, 23], 'false,false,false,false': [4.701, 67, 33]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.179, 31, 15], 'false,false,false,false': [5.179, 78, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.963, 98, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.124, 114, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.025, 0, 23], 'true,false': [0.038, 56, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.113, 21, 18], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.165, 56, 23], 'false,false,false,false': [4.79, 78, 33]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.704, 117, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.597, 113, 56]}]
{'': [nan, 0.22486615110053568], 'false': [nan, 0.22486615110053668], 'false,false': [nan, 0.22486615110053568], 'false,false,false': [nan, 0.22486615110053668]}
{'': [nan, 0.2314049586776881], 'false': [nan, 0.2314049586776853], 'false,false': [nan, 0.2314049586776881], 'false,false,false': [0.24048185603807165, 0.2173996913580243]}
{'': [nan, 0.2219525279393999], 'false': [nan, 0.2219525279393999], 'false,false': [nan, 0.22195252793939999], 'false,false,false': [0.22330671254825435, 0.22100908579519007]}
{'': [nan, 0.22395920440907044], 'false': [nan, 0.22395920440907044], 'false,false': [nan, 0.22395920440907], 'false,false,false': [0.21975425330812848, 0.225362769765604]}
{'': [nan, 0.2308546452593877], 'false': [nan, 0.2308546452593877], 'false,false': [nan, 0.230854645259387], 'false,false,false': [nan, 0.230854645259387]}
{'': [nan, 0.2205921981841218], 'false': [nan, 0.2205921981841218], 'false,false': [nan, 0.22059219818412099], 'false,false,false': [nan, 0.22059219818412112]}
{'': [0.20652280484591054, 0.2364591505833616], 'false': [nan, 0.2364591505833616], 'false,false': [nan, 0.2364591505833616], 'false,false,false': [0.2485207100591713, 0.21975425330812828], 'true': [2.71484402212252e-05, 2.6103536925781157e-05], 'true,true': [nan, 2.71484402212252e-05], 'true,true,false': [nan, 2.71484402212252e-05]}
{'': [nan, 0.17348867156905734], 'false': [nan, 0.17348867156905734], 'false,false': [nan, 0.17348867156905742], 'false,false,false': [0.12676911458392412, 0.20673076879330268]}
{'': [nan, 0.18805436702165182], 'false': [nan, 0.1880543670216517], 'false,false': [nan, 0.1880543670216517], 'false,false,false': [nan, 0.1880543670216517]}
{'': [nan, 0.18537075024004757], 'false': [nan, 0.18537075024004757], 'false,false': [nan, 0.1853707502400471], 'false,false,false': [nan, 0.1853707502400471]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 30.96
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( complex(A, H), complex(F, I) )
%   | | then return -0.01685106490048774;  // std dev = 0.331, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( interaction(J, F), complex(J, K) )
%   | | | then return 0.14981560176617903;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.01814893509951222;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | else if ( phenotype(A, L) )
%   | | then if ( phenotype(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.8025933795439567;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.058148935099512224;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.75620564611706;  // std dev = 0.154, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.6888251424939824;  // std dev = 0.892, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, G), phenotype(D, H) )
%   | | | then return -0.11456267638530757;  // std dev = 0.971, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | | else return 0.12898632892702505;  // std dev = 2.907, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.563104473228077;  // std dev = 2.349, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.14278056462686364;  // std dev = 0.061, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return -0.1478271544995246;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.5632305059118274;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6814478875052087;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.6625261724726295;  // std dev = 1.354, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.11052534275200539;  // std dev = 1.783, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return -0.1348687070384435;  // std dev = 0.131, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.5469535609885191;  // std dev = 0.826, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.03252966545483685;  // std dev = 0.785, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return -0.0708039790157037;  // std dev = 1.571, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.08429514732905688;  // std dev = 2.012, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.4067094764713908;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5555018990396924;  // std dev = 0.208, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.5158090121263359;  // std dev = 1.550, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | | else return 0.08432695070877748;  // std dev = 2.923, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else return -0.13385897901572913;  // std dev = 0.250, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else return -0.14344037055627284;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.45941758827856205;  // std dev = 0.123, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.11255291249555063;  // std dev = 0.885, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   | | | else return 0.2096402684994794;  // std dev = 1.716, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( location(A, G), location(C, G) )
%   | | then return -0.10585573722036123;  // std dev = 0.213, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else return 0.030020349720736177;  // std dev = 0.303, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return 0.4156631299348706;  // std dev = 0.708, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.23307665935718969;  // std dev = 2.007, 36.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=24 */
%   | | | else return -0.11227177901956649;  // std dev = 0.088, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.12468170647162609;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30239775031080385;  // std dev = 0.087, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3310338597948102;  // std dev = 0.719, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.10935672669386294;  // std dev = 0.846, 48.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=1 */
%   | | else if ( complex(A, H), complex(D, I) )
%   | | | then return -0.11386849741224021;  // std dev = 0.753, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.06712418367491389;  // std dev = 2.331, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.02846105678279519;  // std dev = 0.521, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.24257704212968997;  // std dev = 0.775, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return -0.08705648292479382;  // std dev = 0.789, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.09819563317912842;  // std dev = 1.712, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.22399649646210093;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), phenotype(A, G) )
%   | | | then return 0.31142816372322274;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.456860839842027;  // std dev = 0.426, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.14158986674729257;  // std dev = 0.093, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.4866434825314076;  // std dev = 0.875, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.04372274696516956;  // std dev = 1.553, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return -0.12402770046922641;  // std dev = 0.036, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then return -0.015280169335775631;  // std dev = 0.234, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12340555349296722;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1966156274099717;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.061504734716337967;  // std dev = 0.362, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.27276948820082597;  // std dev = 0.450, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, I), location(D, I) )
%   | | | then return -0.04791438964871058;  // std dev = 0.460, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.12866765891804424;  // std dev = 0.666, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( phenotype(A, L) )
%   | | | then return 0.0016898157483726296;  // std dev = 1.727, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | | else return 0.07751902623517692;  // std dev = 1.910, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.28132260768811024;  // std dev = 0.434, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.17157713943358088;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.24544895324920493;  // std dev = 0.980, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return 0.41499506418634136;  // std dev = 0.724, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.30455164116790717;  // std dev = 0.366, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.238265832407581;  // std dev = 0.398, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else return -0.10849855063049305;  // std dev = 0.268, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else return -0.10587400446179773;  // std dev = 0.288, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.09861560284104794;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.16456287865595534;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.18908794520721878;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, I), complex(G, F) )
%   | | | then return 0.02199176923065461;  // std dev = 0.567, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.12793470539814847;  // std dev = 0.761, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.1626676425079518;  // std dev = 1.865, 51.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=37 */
%   | | | else return -0.10158848766848223;  // std dev = 0.207, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.0707241736247659;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.14054099420250632;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '21.424', 'seconds']
Refined model CLL: -0.157624


******************************************
Best model found
******************************************
Results 

CLL : -0.155432 

AUC ROC : 0.974084 

AUC PR : 0.315343 

Precision : 0.233333 

Recall : 0.724138 

F1 : 0.352941 

Total Learning Time : 30.96 

Total Inference Time : 31.360812425613403 

Total revision time: 64.85212666320801
Best scored revision CLL: -0.157624


Results 

CLL : -0.155432 

AUC ROC : 0.974084 

AUC PR : 0.315343 

Precision : 0.233333 

Recall : 0.724138 

F1 : 0.352941 

Total Learning Time : 75.57290131378174 

Total Inference Time : 31.360812425613403 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.284
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20705859242038538;  // std dev = 8.539, 321.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1573453256217641;  // std dev = 6.463, 190.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=62 */
%   | | | else return 0.19334837672779007;  // std dev = 5.647, 138.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16060475378690514;  // std dev = 5.329, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.1807142071345255;  // std dev = 6.514, 181.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=68 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13962067495068292;  // std dev = 4.315, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | | | else return 0.1125589858847439;  // std dev = 7.414, 246.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=83 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0945052144853438;  // std dev = 8.604, 330.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=112 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0627291112378735;  // std dev = 8.695, 344.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=112 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.726131701191065;  // std dev = 0.006, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2737672045900969;  // std dev = 0.008, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05811673083873548;  // std dev = 4.702, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | | else return 0.08175597220601592;  // std dev = 4.730, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.023743962299769883;  // std dev = 4.311, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.04194266041596025;  // std dev = 6.741, 205.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=68 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03119902992348044;  // std dev = 7.995, 337.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=112 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02749810624688881;  // std dev = 7.972, 334.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.632', 'seconds']
Parameter learned model CLL:-0.337393 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.539, 209, 112]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.463, 128, 62], 'false,false,false,false': [5.647, 88, 50]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.329, 80, 44], 'false,false,false,false': [6.514, 113, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.315, 52, 29], 'false,false,false,false': [7.414, 163, 83]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.604, 218, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.695, 232, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.006, 0, 44], 'true,false': [0.008, 88, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.702, 67, 33], 'false,false,false,false': [4.73, 62, 35]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.311, 96, 44], 'false,false,false,false': [6.741, 137, 68]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.995, 225, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.972, 222, 112]}]
{'': [nan, 0.2271717083491063], 'false': [nan, 0.2271717083491042], 'false,false': [nan, 0.2271717083491063], 'false,false,false': [nan, 0.2271717083491042]}
{'': [nan, 0.224866151100539], 'false': [nan, 0.22486615110053476], 'false,false': [nan, 0.224866151100539], 'false,false,false': [0.21983379501384914, 0.2310438983406836]}
{'': [nan, 0.23231885546555966], 'false': [nan, 0.23231885546555966], 'false,false': [nan, 0.23231885546556152], 'false,false,false': [0.2289913916163512, 0.23443403617491507]}
{'': [nan, 0.2251767178104306], 'false': [nan, 0.2251767178104306], 'false,false': [nan, 0.22517671781043042], 'false,false,false': [0.2298430117360152, 0.22345885109008787]}
{'': [nan, 0.22434210545937097], 'false': [nan, 0.22434210545937097], 'false,false': [nan, 0.22434210545936928], 'false,false,false': [nan, 0.22434210545936928]}
{'': [nan, 0.21976196767962078], 'false': [nan, 0.21976196767962078], 'false,false': [nan, 0.21976196767961997], 'false,false,false': [nan, 0.21976196767962136]}
{'': [0.2221779600760925, 0.22593222951548161], 'false': [nan, 0.22593222951548161], 'false,false': [nan, 0.22593222951548161], 'false,false,false': [0.22110000000000066, 0.23063024763524181], 'true': [7.113148604273337e-07, 6.438625879527522e-07], 'true,true': [nan, 7.113148604273337e-07], 'true,true,false': [nan, 7.113148604273337e-07]}
{'': [nan, 0.1856571226792701], 'false': [nan, 0.1856571226792701], 'false,false': [nan, 0.18565712267927006], 'false,false,false': [0.13274906404580533, 0.2216550584021358]}
{'': [nan, 0.18968631737446517], 'false': [nan, 0.1896863173744656], 'false,false': [nan, 0.1896863173744656], 'false,false,false': [nan, 0.1896863173744656]}
{'': [nan, 0.19026225797203383], 'false': [nan, 0.19026225797203383], 'false,false': [nan, 0.19026225797203344], 'false,false,false': [nan, 0.19026225797203344]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.865
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(F, I), phenotype(A, I) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.006715929765352654;  // std dev = 2.080, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.06223056775257359;  // std dev = 2.821, 49.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=10 */
%   | | | else return 0.2081489350995113;  // std dev = 5.225, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7403970747886944;  // std dev = 0.223, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.1431628615076634;  // std dev = 0.043, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.16420970890030848;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(D, G), location(A, G) )
%   | | | then return 0.04891237773057644;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.21929497951248572;  // std dev = 1.367, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6841926609640915;  // std dev = 2.185, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14950229063205817;  // std dev = 0.201, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.2594184980943655;  // std dev = 2.020, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.1128844724948552;  // std dev = 3.977, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5821497554169217;  // std dev = 0.211, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3079617045329256;  // std dev = 0.806, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.15184326158184644;  // std dev = 0.273, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(I, D), interaction(J, I) )
%   | | | then return 0.05208344027234114;  // std dev = 4.287, 135.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=32 */
%   | | | else return 0.15003548717239598;  // std dev = 2.386, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( complex(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.6398466108652188;  // std dev = 0.197, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16383011088113883;  // std dev = 0.362, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.3803197079742253;  // std dev = 2.002, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return 0.14862277520798692;  // std dev = 3.550, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then if ( enzyme(D, F), interaction(E, E) )
%   | | then return 0.5123454801765757;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.40319208674641577;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5288329205611818;  // std dev = 0.225, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.48467846973552603;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13498290898778456;  // std dev = 0.088, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.008101261802237827;  // std dev = 2.694, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.10541038186857994;  // std dev = 6.014, 227.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), interaction(C, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.5365548219470885;  // std dev = 0.193, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.019600900565803114;  // std dev = 0.319, 116.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=21 */
%   | else return -0.0017289093600848053;  // std dev = 0.335, 89.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=19 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( complex(A, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.38866070425427823;  // std dev = 0.993, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.004739296303819918;  // std dev = 0.787, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.4845649725659829;  // std dev = 0.778, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.40765737587252054;  // std dev = 0.240, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.012498463365411857;  // std dev = 2.002, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.16043904923203914;  // std dev = 3.132, 61.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2941125616194494;  // std dev = 0.095, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( complex(A, G), enzyme(F, H) )
%   | | | then return -0.1650411849696837;  // std dev = 0.385, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.05734974266877445;  // std dev = 4.390, 143.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=39 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.35940422360130236;  // std dev = 0.683, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.08888150405004948;  // std dev = 1.911, 53.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=6 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.46434899793713197;  // std dev = 0.342, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.20315359192827068;  // std dev = 0.318, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.061996668907358186;  // std dev = 1.710, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.2485365279731783;  // std dev = 2.809, 36.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.46565286101501785;  // std dev = 0.190, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.19014762763671364;  // std dev = 0.118, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.3316025917300902;  // std dev = 0.186, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(E, H), interaction(H, H) )
%   | | | then return -0.1619032743772054;  // std dev = 1.097, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return -0.007606195578045871;  // std dev = 1.821, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), interaction(J, J) )
%   | | | then return -0.022255867223916922;  // std dev = 2.298, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | | else return 0.11699454223630579;  // std dev = 3.536, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.4158710074758248;  // std dev = 0.234, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17751776391013485;  // std dev = 1.154, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | then return 0.2649387197951981;  // std dev = 0.226, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1381822279260698;  // std dev = 0.068, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( location(A, E), location(C, E) )
%   | | | then return -0.06619924623223329;  // std dev = 2.370, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | | | else return 0.03809988526467692;  // std dev = 2.021, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2664099937560588;  // std dev = 0.280, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(A, I), interaction(J, G) )
%   | | | then return 0.12774568218593751;  // std dev = 1.484, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.18162507512364115;  // std dev = 0.205, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.052709979180357434;  // std dev = 4.200, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | | | else return 0.3159042743376882;  // std dev = 0.549, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then return -0.015720952123482804;  // std dev = 0.221, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then return -0.021474811324357412;  // std dev = 0.198, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( interaction(C, C) )
%   | | | then return 9.28036021270695E-5;  // std dev = 1.637, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.12117095288107489;  // std dev = 4.116, 109.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=46 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then if ( recursion_proteinclass(I, B) )
%   | | then return 0.21767734290663288;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06123287276308063;  // std dev = 0.316, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.2233139354647758;  // std dev = 0.978, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.25273310261446663;  // std dev = 0.427, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.23202431664104228;  // std dev = 0.241, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.14977134310320628;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(C, D), location(A, E) )
%   | | then if ( enzyme(C, F), phenotype(A, G) )
%   | | | then return -0.18515545914530235;  // std dev = 0.334, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.01157786440284742;  // std dev = 1.761, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else return -0.17892301132167426;  // std dev = 0.231, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return -0.04420925188158515;  // std dev = 0.241, 71.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=15 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( location(A, L) )
%   | | | then return -0.05234788462228464;  // std dev = 0.829, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.06943769074113436;  // std dev = 0.664, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, M), enzyme(A, N) )
%   | | | then return 0.1566821589286062;  // std dev = 1.062, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.06269482948241553;  // std dev = 4.530, 151.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=59 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.756', 'seconds']
Refined model CLL: -0.22356


******************************************
Best model found
******************************************
Results 

CLL : -0.232969 

AUC ROC : 0.926264 

AUC PR : 0.343655 

Precision : 0.367347 

Recall : 0.413793 

F1 : 0.389189 

Total Learning Time : 13.865 

Total Inference Time : 6.117016077041626 

Total revision time: 23.572985719680787
Best scored revision CLL: -0.22356


Results 

CLL : -0.232969 

AUC ROC : 0.926264 

AUC PR : 0.343655 

Precision : 0.367347 

Recall : 0.413793 

F1 : 0.389189 

Total Learning Time : 34.29376037025452 

Total Inference Time : 6.117016077041626 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.538
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188227060099511;  // std dev = 10.640, 512.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=169 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14637216696139688;  // std dev = 7.908, 291.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=91 */
%   | | | else return 0.16986428688081873;  // std dev = 7.196, 232.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=78 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13004775313393857;  // std dev = 6.705, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
%   | | | else return 0.1363660632866937;  // std dev = 8.332, 316.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=103 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12754560404611454;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | | | else return 0.11044801468200503;  // std dev = 9.169, 385.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=124 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10230671001335022;  // std dev = 10.618, 508.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=169 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07104913913628311;  // std dev = 10.718, 528.000 (wgt'ed) examples reached here.  /* #neg=359 #pos=169 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7079836246243255;  // std dev = 1.393, 68.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=66 */
%   | else return -0.26263164714424164;  // std dev = 0.006, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06842946816250566;  // std dev = 5.557, 140.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=46 */
%   | | | else return 0.11786147936629118;  // std dev = 5.933, 149.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=57 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.028028831687365297;  // std dev = 5.385, 216.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=66 */
%   | | | else return 0.07124384059953534;  // std dev = 8.164, 292.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=103 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035239815761553044;  // std dev = 9.847, 517.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=169 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029915358242072962;  // std dev = 9.839, 510.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.684', 'seconds']
Parameter learned model CLL:-0.3327 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.64, 343, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.908, 200, 91], 'false,false,false,false': [7.196, 154, 78]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.705, 141, 66], 'false,false,false,false': [8.332, 213, 103]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.467, 89, 45], 'false,false,false,false': [9.169, 261, 124]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.618, 339, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.718, 359, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.393, 2, 66], 'true,false': [0.006, 124, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.557, 94, 46], 'false,false,false,false': [5.933, 92, 57]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.385, 150, 66], 'false,false,false,false': [8.164, 189, 103]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.847, 348, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.839, 341, 169]}]
{'': [nan, 0.22112655639648748], 'false': [nan, 0.22112655639648565], 'false,false': [nan, 0.22112655639648748], 'false,false,false': [nan, 0.22112655639648565]}
{'': [nan, 0.2187190389318866], 'false': [nan, 0.2187190389318881], 'false,false': [nan, 0.2187190389318866], 'false,false,false': [0.21492424510811328, 0.22317181926278415]}
{'': [nan, 0.21869825910993262], 'false': [nan, 0.21869825910993262], 'false,false': [nan, 0.21869825910993257], 'false,false,false': [0.2171856058425746, 0.2196733422482324]}
{'': [nan, 0.21962910850431316], 'false': [nan, 0.21962910850431316], 'false,false': [nan, 0.21962910850431416], 'false,false,false': [0.22304522165292995, 0.21836464795850952]}
{'': [nan, 0.22193685570996796], 'false': [nan, 0.22193685570996796], 'false,false': [nan, 0.22193685570996868], 'false,false,false': [nan, 0.22193685570996868]}
{'': [nan, 0.2175728534302766], 'false': [nan, 0.2175728534302766], 'false,false': [nan, 0.21757285343027646], 'false,false,false': [nan, 0.21757285343027655]}
{'': [0.22559030625249601, 0.2292620018409902], 'false': [nan, 0.2292620018409902], 'false,false': [nan, 0.2292620018409902], 'false,false,false': [0.22061224489795953, 0.23620557632538985], 'true': [0.028524533117575124, 3.3973809441686485e-07], 'true,true': [nan, 0.028524533117575124], 'true,true,false': [nan, 0.028524533117575124]}
{'': [nan, 0.18873349136211887], 'false': [nan, 0.18873349136211887], 'false,false': [nan, 0.18873349136211712], 'false,false,false': [0.13425246815322522, 0.22824045138058235]}
{'': [nan, 0.18756254652416332], 'false': [nan, 0.18756254652416046], 'false,false': [nan, 0.18756254652416046], 'false,false,false': [nan, 0.18756254652416046]}
{'': [nan, 0.18983214768484816], 'false': [nan, 0.18983214768484816], 'false,false': [nan, 0.18983214768484716], 'false,false,false': [nan, 0.18983214768484716]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 31.113
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7043027812533584;  // std dev = 0.361, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.029866106816684064;  // std dev = 0.377, 99.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=17 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then if ( recursion_proteinclass(H, B), phenotype(H, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11968739663797391;  // std dev = 3.543, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | | else return 0.3015451615146057;  // std dev = 5.115, 106.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=47 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then return 0.04862512557570276;  // std dev = 0.393, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.19344305274657042;  // std dev = 6.155, 170.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(C, E) )
%   | then return 0.5074970045140561;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7832084916120308;  // std dev = 0.198, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( phenotype(A, F), location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, F) )
%   | | | then return 0.7342770945886443;  // std dev = 2.818, 98.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=89 */
%   | | | else return -0.17248907850913497;  // std dev = 0.085, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.16247158644577528;  // std dev = 0.182, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(K, J), enzyme(I, L) )
%   | | | then return -0.10002368312405865;  // std dev = 1.331, 31.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=2 */
%   | | | else return 0.055319536732325265;  // std dev = 4.804, 135.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=30 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return 0.41359346047349393;  // std dev = 1.314, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.19580378640786975;  // std dev = 3.578, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), enzyme(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.6369540526559455;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.09986881745949287;  // std dev = 0.399, 132.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=38 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.5400010436319368;  // std dev = 0.324, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.053389602121168625;  // std dev = 0.390, 141.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=35 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7042150310896648;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7410144725287764;  // std dev = 0.221, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.16285547517979773;  // std dev = 0.145, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.12098554937215403;  // std dev = 2.745, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.22479047799636487;  // std dev = 4.387, 91.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.3952544197770577;  // std dev = 0.312, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else return 0.5852211416232781;  // std dev = 0.109, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.32321668041171164;  // std dev = 0.788, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, H), phenotype(E, I) )
%   | | | then return 0.06306902666631782;  // std dev = 1.881, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return -0.07870793723326103;  // std dev = 2.127, 69.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=6 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.01712295214853642;  // std dev = 3.285, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | | | else return 0.08315967822603004;  // std dev = 6.113, 221.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=67 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.041664246919175904;  // std dev = 2.070, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.17272996759856177;  // std dev = 3.774, 71.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return 0.034242907721417463;  // std dev = 0.325, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(F, F), complex(F, G) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.14644480688011843;  // std dev = 1.516, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.040293645853025806;  // std dev = 1.579, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5478920130411892;  // std dev = 0.807, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.071199455153103;  // std dev = 6.749, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7112075879865637;  // std dev = 0.227, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2093598121559328;  // std dev = 0.119, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.1801875047693509;  // std dev = 1.580, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.07522076807640705;  // std dev = 2.162, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3701251541341891;  // std dev = 0.195, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.4568642716964658;  // std dev = 1.449, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.11241898738244946;  // std dev = 0.695, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.5328823275145066;  // std dev = 0.234, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.055977000576291146;  // std dev = 3.792, 171.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=26 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J), complex(I, H) )
%   | | | then return 0.12712793566982172;  // std dev = 1.315, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 3.022202528272763E-4;  // std dev = 2.727, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4961334391066184;  // std dev = 0.236, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0821520739751357;  // std dev = 6.249, 221.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=73 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49666534439478155;  // std dev = 0.189, 67.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=66 */
%   | else return -0.17846293035252453;  // std dev = 0.051, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.2864720631961202;  // std dev = 0.234, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.09993088158241066;  // std dev = 1.521, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | | else return 0.06159129192764561;  // std dev = 4.923, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5824924148028509;  // std dev = 0.358, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.21279549556727334;  // std dev = 0.301, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.3637406073965415;  // std dev = 1.325, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.16887282160454598;  // std dev = 2.901, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2148695803890234;  // std dev = 0.196, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), interaction(D, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(G, D) )
%   | | | then return 0.31545256376336733;  // std dev = 1.011, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.10832281383166582;  // std dev = 1.924, 101.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=7 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.16636200285655617;  // std dev = 2.109, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return -0.10369286591704188;  // std dev = 1.441, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4622995543231566;  // std dev = 1.755, 65.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=60 */
%   | | | else return -0.19058059822947662;  // std dev = 0.448, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return 0.08644591481970895;  // std dev = 1.956, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return -0.006305850596857363;  // std dev = 4.400, 128.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2109692599486161;  // std dev = 0.084, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(E, E), complex(E, G) )
%   | | | then return -0.04125244274156531;  // std dev = 1.145, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return -0.19779363714239342;  // std dev = 0.529, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(A, H), interaction(E, E) )
%   | | | then return 0.11415165193817249;  // std dev = 1.189, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return -0.01817266544354641;  // std dev = 4.076, 169.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=45 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.344471948894384;  // std dev = 0.285, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1778567221275404;  // std dev = 0.554, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.390438348862689;  // std dev = 0.250, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06844673367897405;  // std dev = 5.103, 172.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=62 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then if ( interaction(E, C), location(A, F) )
%   | | then return 0.17729437122709074;  // std dev = 0.060, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( enzyme(E, G) )
%   | | | then return -0.016840219170289744;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14585997162349562;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2202350400563747;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, A) )
%   | then return -0.14617835026332118;  // std dev = 0.141, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.12802835098133541;  // std dev = 2.729, 81.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=46 */
%   | | | else return -0.1353588544580577;  // std dev = 0.286, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.06574311454160964;  // std dev = 1.782, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.04139543594795086;  // std dev = 5.921, 244.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=85 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '13.867', 'seconds']
Refined model CLL: -0.221093


******************************************
Best model found
******************************************
Results 

CLL : -0.215088 

AUC ROC : 0.925886 

AUC PR : 0.318572 

Precision : 0.376238 

Recall : 0.436782 

F1 : 0.404255 

Total Learning Time : 31.113 

Total Inference Time : 32.8634397983551 

Total revision time: 68.1114434967041
Best scored revision CLL: -0.221093


Results 

CLL : -0.215088 

AUC ROC : 0.925886 

AUC PR : 0.318572 

Precision : 0.376238 

Recall : 0.436782 

F1 : 0.404255 

Total Learning Time : 78.83221814727783 

Total Inference Time : 32.8634397983551 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.727
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1985422785185715;  // std dev = 12.182, 661.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=225 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1603060127221351;  // std dev = 9.165, 381.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=125 */
%   | | | else return 0.1611693916418755;  // std dev = 8.192, 304.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=100 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14717089197088673;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
%   | | | else return 0.1363918929328579;  // std dev = 9.666, 424.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=139 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12586068396597314;  // std dev = 6.235, 173.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=59 */
%   | | | else return 0.10425714083799507;  // std dev = 10.640, 522.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=166 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11570997825032896;  // std dev = 12.103, 645.000 (wgt'ed) examples reached here.  /* #neg=420 #pos=225 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08020579295016578;  // std dev = 12.235, 672.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=225 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7268491530947564;  // std dev = 0.018, 86.000 (wgt'ed) examples reached here.  /* #pos=86 */
%   | else return -0.27312289063768647;  // std dev = 0.024, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06361775373345883;  // std dev = 6.642, 199.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=66 */
%   | | | else return 0.09862420874926017;  // std dev = 6.799, 199.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=73 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.028540820788409447;  // std dev = 6.005, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
%   | | | else return 0.041232593226027736;  // std dev = 9.679, 427.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=139 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04429360954477692;  // std dev = 11.241, 662.000 (wgt'ed) examples reached here.  /* #neg=437 #pos=225 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03475680987378664;  // std dev = 11.245, 660.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=225 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.551', 'seconds']
Parameter learned model CLL:-0.337893 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.182, 436, 225]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.165, 256, 125], 'false,false,false,false': [8.192, 204, 100]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.542, 168, 86], 'false,false,false,false': [9.666, 285, 139]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.235, 114, 59], 'false,false,false,false': [10.64, 356, 166]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.103, 420, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.235, 447, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.018, 0, 86], 'true,false': [0.024, 159, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.642, 133, 66], 'false,false,false,false': [6.799, 126, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.005, 183, 86], 'false,false,false,false': [9.679, 288, 139]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.241, 437, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.245, 435, 225]}]
{'': [nan, 0.22452571517505696], 'false': [nan, 0.22452571517505657], 'false,false': [nan, 0.22452571517505696], 'false,false,false': [nan, 0.22452571517505657]}
{'': [nan, 0.22057648249773165], 'false': [nan, 0.2205764824977387], 'false,false': [nan, 0.22057648249773165], 'false,false,false': [0.22044488533421983, 0.22074099722992158]}
{'': [nan, 0.22172967380094083], 'false': [nan, 0.22172967380094083], 'false,false': [nan, 0.2217296738009411], 'false,false,false': [0.22394632442991041, 0.22035824738754786]}
{'': [nan, 0.21892257392453116], 'false': [nan, 0.21892257392453116], 'false,false': [nan, 0.21892257392453188], 'false,false,false': [0.22473186541481335, 0.21688109771695516]}
{'': [nan, 0.22709911013882497], 'false': [nan, 0.22709911013882497], 'false,false': [nan, 0.22709911013882017], 'false,false,false': [nan, 0.22709911013882017]}
{'': [nan, 0.22277809709881669], 'false': [nan, 0.22277809709881669], 'false,false': [nan, 0.22277809709881238], 'false,false,false': [nan, 0.22277809709881757]}
{'': [0.22779601064812766, 0.22727032852962029], 'true': [3.639171341865486e-06, 3.681148296285417e-06], 'false': [nan, 0.22727032852962029], 'false,false': [nan, 0.22727032852962029], 'false,false,false': [0.22166106916491865, 0.2322668619479305], 'true,true': [nan, 3.639171341865486e-06], 'true,true,false': [nan, 3.639171341865486e-06]}
{'': [nan, 0.18646263423764722], 'false': [nan, 0.18646263423764722], 'false,false': [nan, 0.1864626342376466], 'false,false,false': [0.13405834030227626, 0.2194138552354858]}
{'': [nan, 0.19088577379606292], 'false': [nan, 0.19088577379606472], 'false,false': [nan, 0.19088577379606472], 'false,false,false': [nan, 0.19088577379606472]}
{'': [nan, 0.19158332188590993], 'false': [nan, 0.19158332188590993], 'false,false': [nan, 0.19158332188590935], 'false,false,false': [nan, 0.19158332188590935]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 80.974
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7993254056877476;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, C), location(C, D) )
%   | | then return -0.00392003041772905;  // std dev = 0.345, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
%   | | else return 0.11211718906776633;  // std dev = 0.435, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8427643197148973;  // std dev = 0.123, 65.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=64 */
%   | | else return -0.14185106490048793;  // std dev = 0.000, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(H, A), enzyme(A, I) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.030739953789376676;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.31846639541697147;  // std dev = 3.956, 63.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=29 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.1763307532813291;  // std dev = 4.885, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.22416200699493619;  // std dev = 5.958, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(A, E) )
%   | then if ( phenotype(C, E) )
%   | | then return 0.7541214223065557;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.14887734674366812;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.7580488162975579;  // std dev = 0.231, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), interaction(H, F) )
%   | | then return 0.44481301098540205;  // std dev = 1.058, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.7627648791654077;  // std dev = 0.135, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), phenotype(I, L) )
%   | | | then return 0.06930368239132809;  // std dev = 3.286, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | | else return -0.0276603950226559;  // std dev = 2.515, 64.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=8 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.1188117773803429;  // std dev = 8.368, 373.000 (wgt'ed) examples reached here.  /* #neg=267 #pos=106 */
%   | | | else return 0.20392464647868175;  // std dev = 5.190, 121.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then return 0.6596629871947529;  // std dev = 0.294, 137.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=124 */
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.6544283967768079;  // std dev = 2.493, 84.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=77 */
%   | | | else return -0.019781772123213574;  // std dev = 3.171, 89.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=15 */
%   | else return -0.16954528778173392;  // std dev = 0.452, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), location(H, I) )
%   | | then if ( phenotype(G, J) )
%   | | | then return -0.003706759219288324;  // std dev = 1.558, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.15188035714831233;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, K), recursion_proteinclass(K, B) )
%   | | | then return 0.738598815204577;  // std dev = 0.205, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1973172209300489;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.052964603290312474;  // std dev = 0.936, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(E, D) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.4161963123627267;  // std dev = 0.260, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.562427986754776;  // std dev = 0.741, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | else return -0.15895329270614314;  // std dev = 0.298, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return -0.12069906807010322;  // std dev = 0.119, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.5117379890265082;  // std dev = 0.092, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.45768643240608503;  // std dev = 1.682, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.004325456785376514;  // std dev = 3.640, 111.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=22 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5313117436178808;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11879284204814232;  // std dev = 6.746, 263.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=89 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(E, D) )
%   | | then return 0.39061468655761533;  // std dev = 0.137, 85.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=84 */
%   | | else return -0.13591591656023558;  // std dev = 0.286, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else return -0.10834141458167929;  // std dev = 0.107, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G) )
%   | | then return 0.37547748987925456;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.0544651521224778;  // std dev = 0.952, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( location(A, I), location(H, I) )
%   | | | then return -0.010005657424591639;  // std dev = 2.161, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return 0.1651957505567092;  // std dev = 1.679, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4405488313029146;  // std dev = 0.152, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.11110146148728345;  // std dev = 7.227, 306.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=108 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(F, A), enzyme(F, D) )
%   | | then return 0.22245316854082664;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.23244316896950623;  // std dev = 0.562, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A), interaction(C, C) )
%   | | then return 0.22165347265699564;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.3126165827314387;  // std dev = 0.068, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, A) )
%   | then return -0.12250352780583242;  // std dev = 0.160, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.12915224253564092;  // std dev = 2.666, 112.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=62 */
%   | | | else return -0.09890997848056624;  // std dev = 0.102, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.03476433172403571;  // std dev = 3.977, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | | | else return 0.08702481512007822;  // std dev = 6.724, 277.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=97 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.28447776729166324;  // std dev = 0.158, 87.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=86 */
%   | else return -0.10298329760822712;  // std dev = 0.356, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.23998507932829474;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return -0.05158157158343821;  // std dev = 1.892, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.032664271595491984;  // std dev = 3.180, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.30367248234330346;  // std dev = 1.582, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.19649395968840494;  // std dev = 0.345, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.17766570549120275;  // std dev = 3.580, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.06980155936841563;  // std dev = 5.173, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.13985918052349236;  // std dev = 0.054, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.2452232800067556;  // std dev = 0.104, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, E) )
%   | | | then return 0.2590568970195954;  // std dev = 0.600, 63.000 (wgt'ed) examples reached here.  /* #pos=63 */
%   | | | else return -0.1266892995414242;  // std dev = 0.298, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.08203287510006789;  // std dev = 0.083, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return -0.0652441024879468;  // std dev = 1.480, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.0339233628817511;  // std dev = 2.340, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.03922372600369271;  // std dev = 5.879, 228.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=76 */
%   | | | else return 0.09522807834994297;  // std dev = 4.021, 92.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then if ( enzyme(A, D) )
%   | | then return 0.14942816850586005;  // std dev = 0.037, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.323473831235379;  // std dev = 0.811, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.1540889275724742;  // std dev = 0.045, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.07744609503844242;  // std dev = 0.174, 105.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=62 */
%   | | else return -0.07668931827708846;  // std dev = 0.079, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3579782735304818;  // std dev = 1.707, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.0041136772815782005;  // std dev = 5.867, 247.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=72 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.012419612990660921;  // std dev = 2.246, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.08799237069306703;  // std dev = 3.717, 76.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19922278271839186;  // std dev = 0.236, 61.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=53 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return -0.059592914009582255;  // std dev = 0.236, 175.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=30 */
%   | | else if ( enzyme(A, G), interaction(C, H) )
%   | | | then return -0.04772649944227869;  // std dev = 1.997, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.01771789221606985;  // std dev = 3.205, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   else if ( complex(A, I) )
%   | then return -0.008601993098215228;  // std dev = 0.125, 91.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=27 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.45429233413876074;  // std dev = 1.346, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return -0.26498727406628214;  // std dev = 0.202, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.010390805936826125;  // std dev = 2.270, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.044411680514575745;  // std dev = 4.221, 111.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=41 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '14.140', 'seconds']
Refined model CLL: -0.204615


******************************************
Best model found
******************************************
Results 

CLL : -0.193568 

AUC ROC : 0.991917 

AUC PR : 0.539972 

Precision : 0.429688 

Recall : 0.632184 

F1 : 0.511628 

Total Learning Time : 80.974 

Total Inference Time : 78.59407687187195 

Total revision time: 164.46744754409792
Best scored revision CLL: -0.204615


Results 

CLL : -0.193568 

AUC ROC : 0.991917 

AUC PR : 0.539972 

Precision : 0.429688 

Recall : 0.632184 

F1 : 0.511628 

Total Learning Time : 175.18822219467165 

Total Inference Time : 78.59407687187195 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.91
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17896804772749453;  // std dev = 13.839, 879.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=282 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16971061761612188;  // std dev = 10.154, 463.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=155 */
%   | | | else return 0.1605784251145986;  // std dev = 9.254, 390.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=127 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13172170729789168;  // std dev = 8.759, 352.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=113 */
%   | | | else return 0.1274232261451721;  // std dev = 10.748, 534.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=169 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11367649074462154;  // std dev = 7.070, 228.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=74 */
%   | | | else return 0.13332432449090525;  // std dev = 11.692, 607.000 (wgt'ed) examples reached here.  /* #neg=399 #pos=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08864842076280484;  // std dev = 13.843, 880.000 (wgt'ed) examples reached here.  /* #neg=598 #pos=282 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07318500309976815;  // std dev = 13.836, 878.000 (wgt'ed) examples reached here.  /* #neg=596 #pos=282 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7389376832144087;  // std dev = 0.010, 113.000 (wgt'ed) examples reached here.  /* #pos=113 */
%   | else return -0.261023052257393;  // std dev = 0.014, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0400424020249419;  // std dev = 7.512, 267.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=81 */
%   | | | else return 0.052725019431402564;  // std dev = 7.768, 280.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=88 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06200324953349099;  // std dev = 6.761, 323.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=113 */
%   | | | else return 0.05854120197589512;  // std dev = 10.640, 512.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=169 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041434764377938395;  // std dev = 12.649, 854.000 (wgt'ed) examples reached here.  /* #neg=572 #pos=282 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023730850697024103;  // std dev = 12.723, 884.000 (wgt'ed) examples reached here.  /* #neg=602 #pos=282 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.605', 'seconds']
Parameter learned model CLL:-0.324268 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.839, 597, 282]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [10.154, 308, 155], 'false,false,false,false': [9.254, 263, 127]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.759, 239, 113], 'false,false,false,false': [10.748, 365, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.07, 154, 74], 'false,false,false,false': [11.692, 399, 208]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.843, 598, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.836, 596, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.01, 0, 113], 'true,false': [0.014, 221, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.512, 186, 81], 'false,false,false,false': [7.768, 192, 88]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.761, 210, 113], 'false,false,false,false': [10.64, 343, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.649, 572, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.723, 602, 282]}]
{'': [nan, 0.2178942096005795], 'false': [nan, 0.21789420960058048], 'false,false': [nan, 0.2178942096005795], 'false,false,false': [nan, 0.21789420960058048]}
{'': [nan, 0.22130292506002658], 'false': [nan, 0.22130292506002852], 'false,false': [nan, 0.22130292506002658], 'false,false,false': [0.2227001105570331, 0.21959894806048966]}
{'': [nan, 0.216970896126362], 'false': [nan, 0.216970896126362], 'false,false': [nan, 0.21697089612636436], 'false,false,false': [0.21795861136433575, 0.21631247719137917]}
{'': [nan, 0.2236605945287793], 'false': [nan, 0.2236605945287793], 'false,false': [nan, 0.2236605945287787], 'false,false,false': [0.21922129886118755, 0.2252226639606758]}
{'': [nan, 0.2177610813324384], 'false': [nan, 0.2177610813324384], 'false,false': [nan, 0.21776108133244204], 'false,false,false': [nan, 0.21776108133244204]}
{'': [nan, 0.21804448828765605], 'false': [nan, 0.21804448828765605], 'false,false': [nan, 0.21804448828766274], 'false,false,false': [nan, 0.21804448828765607]}
{'': [0.22384399684135287, 0.21351335846867697], 'true': [9.315096944729437e-07, 9.052783973471703e-07], 'false': [nan, 0.21351335846867697], 'false,false': [nan, 0.21351335846867697], 'false,false,false': [0.2113369524049989, 0.21551020408163094], 'true,true': [nan, 9.315096944729437e-07], 'true,true,false': [nan, 9.315096944729437e-07]}
{'': [nan, 0.1903311761423088], 'false': [nan, 0.1903311761423088], 'false,false': [nan, 0.1903311761423067], 'false,false,false': [0.1415066593614134, 0.2211279438704763]}
{'': [nan, 0.18736179909655032], 'false': [nan, 0.18736179909655098], 'false,false': [nan, 0.18736179909655098], 'false,false,false': [nan, 0.18736179909655098]}
{'': [nan, 0.1831274881930379], 'false': [nan, 0.1831274881930379], 'false,false': [nan, 0.18312748819303834], 'false,false,false': [nan, 0.18312748819303834]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 46.578
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8368723393548312;  // std dev = 0.144, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, D), interaction(D, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048768;  // std dev = 4.08e-08, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.28672036367094095;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.0986552642134369;  // std dev = 6.580, 237.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=57 */
%   | else if ( interaction(A, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.20766349820630706;  // std dev = 4.839, 103.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=36 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.23745927992709787;  // std dev = 3.695, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | | | else return 0.15782320220048962;  // std dev = 8.027, 307.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(A, E) )
%   | then if ( interaction(C, A), enzyme(C, E) )
%   | | then return 0.7237475776875624;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.40128715930224107;  // std dev = 0.830, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7296213986044713;  // std dev = 0.050, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(A, A) )
%   | then return -0.1303094057472316;  // std dev = 0.148, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( interaction(H, A), complex(A, G) )
%   | | | then return 0.03931831952789469;  // std dev = 3.395, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | | | else return 0.12218590189095123;  // std dev = 6.355, 199.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=57 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.18001156146699904;  // std dev = 6.030, 164.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=57 */
%   | | | else return 0.13807575480121548;  // std dev = 8.542, 352.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=107 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, C) )
%   | | then return 0.5583760490873781;  // std dev = 0.003, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.054503188030628404;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.4363513157562241;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.667886316112398;  // std dev = 0.055, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, A) )
%   | then return -0.12204744254481566;  // std dev = 0.159, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), interaction(A, I) )
%   | | | then return 0.7340131050176225;  // std dev = 1.428, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | | else return 0.0685855517009036;  // std dev = 9.597, 498.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=126 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.22193215968151003;  // std dev = 3.239, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.14071618387850413;  // std dev = 6.038, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.426453544774455;  // std dev = 0.166, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return 0.2574437071012383;  // std dev = 0.422, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10027182757178543;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( enzyme(A, F), complex(E, G) )
%   | | | then return -0.04876927045245849;  // std dev = 1.617, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.06645105372455125;  // std dev = 3.556, 80.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5589447666887566;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.025749656493207134;  // std dev = 4.562, 122.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=27 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.10153884183663486;  // std dev = 8.770, 369.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=114 */
%   | | | else return 0.16351625648144844;  // std dev = 6.187, 170.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=64 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.34937875449999845;  // std dev = 0.223, 49.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=46 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.37329157587448075;  // std dev = 2.156, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return -0.09318129908412046;  // std dev = 2.581, 105.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=9 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.6070167639177176;  // std dev = 0.593, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.030853037106266884;  // std dev = 5.170, 162.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=39 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5786753667383396;  // std dev = 0.324, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1437716238373848;  // std dev = 4.470, 88.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=34 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.07390127735501911;  // std dev = 4.134, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return 0.1232628278609666;  // std dev = 7.811, 270.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=93 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.23456379093520066;  // std dev = 0.152, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( phenotype(C, D), complex(A, E) )
%   | | then return -0.05184124628469985;  // std dev = 0.236, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | else return 0.03569560212907342;  // std dev = 0.408, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.38212967508079904;  // std dev = 0.266, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.17796531583011418;  // std dev = 0.080, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.0742560810757285;  // std dev = 8.612, 372.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=118 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.40639966708581293;  // std dev = 0.062, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.008357682415922756;  // std dev = 3.209, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.13752565909044553;  // std dev = 5.659, 135.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.20520340211360816;  // std dev = 0.200, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return 0.6487688792776649;  // std dev = 0.181, 85.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=84 */
%   | else return -0.2185467585249084;  // std dev = 0.068, 255.000 (wgt'ed) examples reached here.  /* #neg=255 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H), phenotype(A, H) )
%   | | | then return 0.5195130980456428;  // std dev = 3.748, 103.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=87 */
%   | | | else return 0.2043069985165212;  // std dev = 5.658, 143.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=71 */
%   | | else return -0.23536345575443599;  // std dev = 0.700, 220.000 (wgt'ed) examples reached here.  /* #neg=220 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then return 0.2492322744761104;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.12311534098846294;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.0025011014432835435;  // std dev = 1.991, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.22444262734552406;  // std dev = 0.261, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1324529299143693;  // std dev = 0.051, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0.01486091729004385;  // std dev = 0.343, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H), phenotype(A, H) )
%   | | | then return 0.4621728112437827;  // std dev = 3.187, 126.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=114 */
%   | | | else return 0.2008490136506688;  // std dev = 5.638, 168.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=91 */
%   | | else return -0.20039584458922846;  // std dev = 0.627, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then return 0.2569471677997334;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.07691328563832495;  // std dev = 1.333, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.029491484281120018;  // std dev = 1.954, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.12198081284876272;  // std dev = 0.234, 50.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=46 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D), interaction(D, A) )
%   | | | then return 0.329879908547715;  // std dev = 0.340, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.15584537471227547;  // std dev = 1.237, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( enzyme(A, F), interaction(D, D) )
%   | | | then return 0.02993720094218987;  // std dev = 2.241, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return -0.045284885004317654;  // std dev = 5.952, 361.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=68 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.40659481514652096;  // std dev = 2.332, 73.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=66 */
%   | | | else return -0.2204926696402378;  // std dev = 0.818, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.007488960630778316;  // std dev = 2.183, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.10093446538164076;  // std dev = 4.734, 124.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=46 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.13938448190836486;  // std dev = 0.157, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.05159766521126866;  // std dev = 0.404, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.16181952651723458;  // std dev = 0.516, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( phenotype(D, G), phenotype(A, H) )
%   | | | then return -0.04263554322580046;  // std dev = 1.520, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | | | else return 0.008304289984917026;  // std dev = 0.964, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.18223433976296394;  // std dev = 5.092, 166.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=111 */
%   | | | else return -0.16248311614553734;  // std dev = 0.389, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else if ( location(A, L) )
%   | | | then return 0.03403888179781507;  // std dev = 6.383, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
%   | | | else return 0.09901317308800167;  // std dev = 2.569, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.788', 'seconds']
Refined model CLL: -0.230416


******************************************
Best model found
******************************************
Results 

CLL : -0.213377 

AUC ROC : 0.973312 

AUC PR : 0.329029 

Precision : 0.24 

Recall : 0.482759 

F1 : 0.320611 

Total Learning Time : 46.578 

Total Inference Time : 56.230579137802124 

Total revision time: 108.42344673919678
Best scored revision CLL: -0.230416


Results 

CLL : -0.213377 

AUC ROC : 0.973312 

AUC PR : 0.329029 

Precision : 0.24 

Recall : 0.482759 

F1 : 0.320611 

Total Learning Time : 119.14422138977051 

Total Inference Time : 56.230579137802124 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.03
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15590174408827542;  // std dev = 6.101, 178.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15907947098956518;  // std dev = 4.202, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.18874116731792798;  // std dev = 4.187, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.25784192256131694;  // std dev = 3.940, 63.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=28 */
%   | | | else return 0.10727268264722059;  // std dev = 4.202, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13696044085893996;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.13337524489198463;  // std dev = 5.159, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10838632981466206;  // std dev = 5.861, 153.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08123137416113962;  // std dev = 5.893, 156.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.707994398892588;  // std dev = 0.014, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.29077030101240436;  // std dev = 0.016, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06726798535743347;  // std dev = 3.073, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return -0.024906398840579512;  // std dev = 2.893, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.11313991516598054;  // std dev = 3.088, 62.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=28 */
%   | | | else return 0.036107703082027195;  // std dev = 4.174, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04334434894850474;  // std dev = 5.228, 151.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.011855452454922252;  // std dev = 5.428, 177.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=53 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.883', 'seconds']
Parameter learned model CLL:-0.323205 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.101, 125, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.202, 55, 26], 'false,false,false,false': [4.187, 50, 27]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.94, 35, 28], 'false,false,false,false': [4.202, 60, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.763, 21, 12], 'false,false,false,false': [5.159, 78, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.861, 100, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.893, 103, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 28], 'true,false': [0.016, 38, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.073, 29, 14], 'false,false,false,false': [2.893, 35, 11]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.088, 34, 28], 'false,false,false,false': [4.174, 58, 25]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.228, 98, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.428, 124, 53]}]
{'': [nan, 0.2090960737280653], 'false': [nan, 0.2090960737280658], 'false,false': [nan, 0.2090960737280653], 'false,false,false': [nan, 0.2090960737280658]}
{'': [nan, 0.2229210062489972], 'false': [nan, 0.2229210062489998], 'false,false': [nan, 0.2229210062489972], 'false,false,false': [0.21795458009449895, 0.22769438353854066]}
{'': [nan, 0.22971038814544653], 'false': [nan, 0.22971038814544653], 'false,false': [nan, 0.22971038814544412], 'false,false,false': [0.24634612314513338, 0.20772983868108835]}
{'': [nan, 0.22532586356567616], 'false': [nan, 0.22532586356567616], 'false,false': [nan, 0.22532586356567705], 'false,false,false': [0.2314049586776859, 0.2236372734900846]}
{'': [nan, 0.22455125033402518], 'false': [nan, 0.22455125033402518], 'false,false': [nan, 0.22455125033402512], 'false,false,false': [nan, 0.22455125033402512]}
{'': [nan, 0.22262294974436975], 'false': [nan, 0.22262294974436975], 'false,false': [nan, 0.22262294974436977], 'false,false,false': [nan, 0.22262294974436975]}
{'': [0.24366446656454357, 0.20224999436579832], 'true': [7.106139337409445e-06, 6.530774985539398e-06], 'false': [nan, 0.20224999436579832], 'false,false': [nan, 0.20224999436579832], 'false,false,false': [0.21957815035154168, 0.181947069943289], 'true,true': [nan, 7.106139337409445e-06], 'true,true,false': [nan, 7.106139337409445e-06]}
{'': [nan, 0.1874071234092068], 'false': [nan, 0.1874071234092068], 'false,false': [nan, 0.18740712340920654], 'false,false,false': [0.1538394034583103, 0.20994452560761398]}
{'': [nan, 0.18101317356520533], 'false': [nan, 0.1810131735652053], 'false,false': [nan, 0.1810131735652053], 'false,false,false': [nan, 0.1810131735652053]}
{'': [nan, 0.16646861312947867], 'false': [nan, 0.16646861312947867], 'false,false': [nan, 0.16646861312947894], 'false,false,false': [nan, 0.16646861312947894]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 24.94
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, H) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return -0.016851064900487777;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.11968739663797388;  // std dev = 3.543, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.7319045176838225;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5786537370877302;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7855201488896335;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(F, E), interaction(G, A) )
%   | | | then return -0.1377434846002306;  // std dev = 0.067, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.09582743900697092;  // std dev = 2.478, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.766962838481811;  // std dev = 0.217, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14214732843474015;  // std dev = 0.061, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.258609020898584;  // std dev = 1.395, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.04343854708964631;  // std dev = 2.365, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( location(A, D), complex(C, E) )
%   | then return 0.5683507683044925;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.675963010292639;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, F), location(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.5758089841524501;  // std dev = 0.208, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.7245871831147402;  // std dev = 0.239, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.12718253690886225;  // std dev = 0.095, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5804343201624738;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.17923762791721493;  // std dev = 1.715, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.005379582636918068;  // std dev = 2.867, 62.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.16968417041830147;  // std dev = 0.406, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.4302215588643007;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), complex(A, I) )
%   | | then return -0.036977123908965966;  // std dev = 0.202, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(J, G), recursion_proteinclass(J, B) )
%   | | | then return 0.5065434240576537;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10710559745736718;  // std dev = 1.950, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( complex(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.5734566605313345;  // std dev = 0.250, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.15870917135148613;  // std dev = 0.105, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, N) )
%   | | | then return -0.056780161443340936;  // std dev = 1.827, 40.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=4 */
%   | | | else return 0.042256616781196694;  // std dev = 2.358, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(D, F), location(E, C) )
%   | | | then return 0.38884174640629476;  // std dev = 0.360, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.6249579261781814;  // std dev = 0.909, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.13730482369571567;  // std dev = 0.117, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.17411441452877333;  // std dev = 1.265, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return -0.1447863908338734;  // std dev = 0.404, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then return 0.03544124802657688;  // std dev = 0.351, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.15668273229529772;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.34557596451955913;  // std dev = 0.412, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.14035412114529944;  // std dev = 0.406, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( enzyme(E, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.005938963396830601;  // std dev = 0.770, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.35015328180190824;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return -0.07508950220901464;  // std dev = 0.155, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.264906790149943;  // std dev = 0.943, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return -0.1255414330238013;  // std dev = 0.103, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.08121110883102299;  // std dev = 0.365, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.1538979018270584;  // std dev = 2.222, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2916475391577518;  // std dev = 0.112, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.10862280383659972;  // std dev = 0.170, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.35283547254657155;  // std dev = 0.398, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return -0.03320744213294032;  // std dev = 0.779, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.21436211030279456;  // std dev = 1.116, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return -0.02877993417474706;  // std dev = 0.291, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.31313888925298555;  // std dev = 0.475, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.06296926326611069;  // std dev = 1.996, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return -0.1424426648498623;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1798241391060166;  // std dev = 0.139, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.32256193159578994;  // std dev = 1.605, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | | else return -0.05616450704396468;  // std dev = 1.262, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | else return -0.12474656450069632;  // std dev = 0.313, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else return -0.13028829830562216;  // std dev = 0.099, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), enzyme(E, F) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then return 0.1646959692099679;  // std dev = 0.314, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( phenotype(E, I), enzyme(A, D) )
%   | | | then return -0.10791465106244003;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.05933728108133811;  // std dev = 0.734, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return 0.3283732486121238;  // std dev = 0.586, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, J), complex(J, K) )
%   | then if ( interaction(J, L), location(A, M) )
%   | | then return -0.10300589920902482;  // std dev = 0.103, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else return -0.015000362490927843;  // std dev = 0.135, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(A, N), interaction(N, N) )
%   | | then return -0.11447991537385836;  // std dev = 0.114, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.0325814856103844;  // std dev = 1.614, 58.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=23 */
%   | | | else return 0.11645669994016965;  // std dev = 1.420, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( complex(A, E) )
%   | then return -0.02018267909701156;  // std dev = 0.125, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( complex(D, F) )
%   | | then return 0.005101420786644814;  // std dev = 0.327, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.2726057088214635;  // std dev = 0.233, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( location(A, H), phenotype(G, I) )
%   | | then return 0.24448634186533894;  // std dev = 0.399, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.04978607276265176;  // std dev = 0.296, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.11047596133878371;  // std dev = 0.561, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.08233834022478584;  // std dev = 1.206, 56.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.03208385766336875;  // std dev = 0.935, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return -0.030161358587649467;  // std dev = 1.845, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.508', 'seconds']
Refined model CLL: -0.139303


******************************************
Best model found
******************************************
Results 

CLL : -0.141506 

AUC ROC : 0.979652 

AUC PR : 0.347262 

Precision : 0.28169 

Recall : 0.576923 

F1 : 0.378549 

Total Learning Time : 24.94 

Total Inference Time : 15.614452123641968 

Total revision time: 42.999788970947264
Best scored revision CLL: -0.139303


Results 

CLL : -0.141506 

AUC ROC : 0.979652 

AUC PR : 0.347262 

Precision : 0.28169 

Recall : 0.576923 

F1 : 0.378549 

Total Learning Time : 53.720563621520995 

Total Inference Time : 15.614452123641968 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.355
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20230477925535756;  // std dev = 8.338, 308.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16865253563961455;  // std dev = 6.412, 184.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=62 */
%   | | | else return 0.18653472357790515;  // std dev = 5.328, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18063907938745438;  // std dev = 5.644, 136.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=51 */
%   | | | else return 0.09802299180787662;  // std dev = 6.240, 188.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07809866417252939;  // std dev = 4.424, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | else return 0.0952794794353957;  // std dev = 7.333, 252.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=78 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1280932860639472;  // std dev = 8.230, 294.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09208033559383429;  // std dev = 8.305, 305.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=106 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6987680398905625;  // std dev = 0.987, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | else return -0.2814637303573253;  // std dev = 0.032, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0518651355864399;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
%   | | | else return -0.028017628294724626;  // std dev = 3.991, 87.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08542034991444347;  // std dev = 4.357, 128.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=51 */
%   | | | else return 0.001402372495888455;  // std dev = 6.322, 202.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=55 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03132438600365269;  // std dev = 7.658, 325.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025535255934424454;  // std dev = 7.639, 326.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=106 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.898', 'seconds']
Parameter learned model CLL:-0.321716 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.338, 202, 106]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.412, 122, 62], 'false,false,false,false': [5.328, 80, 44]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.644, 85, 51], 'false,false,false,false': [6.24, 133, 55]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.424, 65, 28], 'false,false,false,false': [7.333, 174, 78]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.23, 188, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.305, 199, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.987, 1, 51], 'true,false': [0.032, 90, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.816, 73, 34], 'false,false,false,false': [3.991, 66, 21]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.357, 77, 51], 'false,false,false,false': [6.322, 147, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.658, 219, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.639, 220, 106]}]
{'': [nan, 0.22571259908922478], 'false': [nan, 0.22571259908922284], 'false,false': [nan, 0.22571259908922478], 'false,false,false': [nan, 0.22571259908922284]}
{'': [nan, 0.22571259908922142], 'false': [nan, 0.22571259908922134], 'false,false': [nan, 0.22571259908922142], 'false,false,false': [0.22341682419659642, 0.22892819979188359]}
{'': [nan, 0.22015962264091168], 'false': [nan, 0.22015962264091168], 'false,false': [nan, 0.22015962264091152], 'false,false,false': [0.2342635168506067, 0.2070918153121022]}
{'': [nan, 0.21265931974066668], 'false': [nan, 0.21265931974066668], 'false,false': [nan, 0.2126593197406681], 'false,false,false': [0.21042895132385248, 0.21340286152226498]}
{'': [nan, 0.23036353270703083], 'false': [nan, 0.23036353270703083], 'false,false': [nan, 0.23036353270702978], 'false,false,false': [nan, 0.23036353270702978]}
{'': [nan, 0.226137519344103], 'false': [nan, 0.226137519344103], 'false,false': [nan, 0.22613751934410267], 'false,false,false': [nan, 0.22613751934410345]}
{'': [0.22988577208210856, 0.203265452433607], 'true': [0.01875252435631997, 1.1724169725368938e-05], 'false': [nan, 0.203265452433607], 'false,false': [nan, 0.203265452433607], 'false,false,false': [0.216787492357411, 0.18311533888228307], 'true,true': [nan, 0.01875252435631997], 'true,true,false': [nan, 0.01875252435631997]}
{'': [nan, 0.18031553004023354], 'false': [nan, 0.18031553004023354], 'false,false': [nan, 0.18031553004023387], 'false,false,false': [0.14831708500037147, 0.197853728115135]}
{'': [nan, 0.18046060936770764], 'false': [nan, 0.18046060936770633], 'false,false': [nan, 0.18046060936770633], 'false,false,false': [nan, 0.18046060936770633]}
{'': [nan, 0.17900874481487591], 'false': [nan, 0.17900874481487591], 'false,false': [nan, 0.17900874481487594], 'false,false,false': [nan, 0.17900874481487594]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.301
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, C) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.018148935099512268;  // std dev = 1.833, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.2692600462106221;  // std dev = 4.668, 90.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=37 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.00740266644279592;  // std dev = 2.917, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return 0.16516647895916145;  // std dev = 4.925, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8073446224501647;  // std dev = 0.280, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1571999415596106;  // std dev = 0.143, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7310371889342244;  // std dev = 0.056, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.052463825757613075;  // std dev = 3.441, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return 0.15768781377516497;  // std dev = 5.497, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6555102533604978;  // std dev = 0.122, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A), interaction(C, E) )
%   | | then return -0.11075273537933689;  // std dev = 0.004, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(C, F), complex(A, F) )
%   | | | then return 0.026512314496492294;  // std dev = 1.534, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.15268766414461515;  // std dev = 4.413, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.46702564007519365;  // std dev = 0.290, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.687563635069836;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.13982654533599942;  // std dev = 0.068, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1356336155202245;  // std dev = 3.476, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.0153059533051638;  // std dev = 3.579, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6768651378663049;  // std dev = 0.181, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.17625307063583695;  // std dev = 0.317, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.44649183283773797;  // std dev = 0.201, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.20198314313078844;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6327516311015122;  // std dev = 0.303, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(I, J), phenotype(A, K) )
%   | | | then return 0.14356541837978407;  // std dev = 1.360, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.08872557320918481;  // std dev = 1.445, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.12894162201110818;  // std dev = 2.668, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.051866187895767454;  // std dev = 4.178, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.4485151204218944;  // std dev = 0.160, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(F, C), complex(F, D) )
%   | | then return -0.10997555544920137;  // std dev = 0.162, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | else if ( enzyme(C, G) )
%   | | | then return 0.013922898665792143;  // std dev = 1.108, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.18843088160840288;  // std dev = 2.644, 50.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.4007492111717773;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.694235260462932;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10931557994974304;  // std dev = 2.160, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.08776967565182527;  // std dev = 3.099, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return -0.006658101203581355;  // std dev = 3.985, 117.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.24706278685078567;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.47028105717541013;  // std dev = 0.265, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), complex(F, H) )
%   | | | then return 0.37909102467490485;  // std dev = 0.330, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.6048405854630616;  // std dev = 0.445, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return -0.13507847511147025;  // std dev = 0.127, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return -0.18644400635407654;  // std dev = 0.414, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3402667664258413;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.07063075279509085;  // std dev = 3.437, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | | else return -0.002838028043609412;  // std dev = 3.895, 104.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.056680809396603485;  // std dev = 0.285, 133.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=51 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), interaction(F, G) )
%   | | then if ( enzyme(F, H), complex(G, E) )
%   | | | then return 0.3872785227632615;  // std dev = 1.049, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.0018162116339768954;  // std dev = 1.287, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.6937137135568596;  // std dev = 0.315, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.21316687047835692;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.39281216752144904;  // std dev = 1.365, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.16913042147444504;  // std dev = 0.234, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.17205008724792104;  // std dev = 1.707, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.06498020435739169;  // std dev = 2.904, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.2270153547751721;  // std dev = 0.079, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.07161713968270088;  // std dev = 0.603, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), complex(A, F) )
%   | then if ( complex(E, F), interaction(E, G) )
%   | | then return -0.11130013652259935;  // std dev = 0.169, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | else if ( interaction(E, H), enzyme(A, I) )
%   | | | then return 0.1198531407826797;  // std dev = 1.135, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return -0.01358772896585637;  // std dev = 1.906, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( enzyme(J, L), phenotype(J, M) )
%   | | | then return 0.2891369120468534;  // std dev = 0.894, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.051835845569808824;  // std dev = 2.096, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return -0.08331716955339057;  // std dev = 1.007, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.029746007900078864;  // std dev = 4.525, 175.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=54 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), phenotype(A, D) )
%   | then return 0.08983903415611695;  // std dev = 0.245, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.22081516889687358;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.19665645420186711;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(A, G), enzyme(E, H) )
%   | | | then return -0.09833286130954963;  // std dev = 0.675, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.007263907086635112;  // std dev = 5.090, 228.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=65 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), enzyme(K, L) )
%   | | | then return -0.037584074228802715;  // std dev = 1.128, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.13972108227611066;  // std dev = 1.577, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.02489411595481111;  // std dev = 0.324, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3493354543527543;  // std dev = 1.240, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.156151497058446;  // std dev = 0.037, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(A, F), complex(D, G) )
%   | | then if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.01525565205516318;  // std dev = 0.550, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1785208201014068;  // std dev = 0.902, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( interaction(D, J), phenotype(D, K) )
%   | | | then return -0.00980298213321377;  // std dev = 1.273, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.12683841558351322;  // std dev = 1.212, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( phenotype(A, L) )
%   | | then if ( phenotype(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.37601751581603926;  // std dev = 1.588, 34.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=30 */
%   | | | else return -0.14305451499861538;  // std dev = 0.280, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.035983055436788695;  // std dev = 1.533, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.08659454921764849;  // std dev = 3.799, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.269', 'seconds']
Refined model CLL: -0.217115


******************************************
Best model found
******************************************
Results 

CLL : -0.239517 

AUC ROC : 0.945188 

AUC PR : 0.173393 

Precision : 0.216535 

Recall : 0.528846 

F1 : 0.307263 

Total Learning Time : 11.301 

Total Inference Time : 3.7395853996276855 

Total revision time: 18.44744287109375
Best scored revision CLL: -0.217115


Results 

CLL : -0.239517 

AUC ROC : 0.945188 

AUC PR : 0.173393 

Precision : 0.216535 

Recall : 0.528846 

F1 : 0.307263 

Total Learning Time : 29.16821752166748 

Total Inference Time : 3.7395853996276855 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.551
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2023047792553562;  // std dev = 10.212, 462.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=159 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14955315675762668;  // std dev = 7.792, 280.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=89 */
%   | | | else return 0.15727740924932113;  // std dev = 6.871, 215.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=70 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18019261579524845;  // std dev = 6.588, 186.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=69 */
%   | | | else return 0.13405357895013043;  // std dev = 7.795, 277.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=90 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15539152518922672;  // std dev = 4.937, 104.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=39 */
%   | | | else return 0.10149829173847212;  // std dev = 9.058, 380.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=120 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10111586606353225;  // std dev = 10.268, 472.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=159 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07375897967427761;  // std dev = 10.332, 485.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=159 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7226490069125782;  // std dev = 0.038, 69.000 (wgt'ed) examples reached here.  /* #pos=69 */
%   | else return -0.27792065202057575;  // std dev = 0.052, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05892176087470377;  // std dev = 5.829, 156.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=50 */
%   | | | else return 0.05187479934440432;  // std dev = 5.235, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0732521277192933;  // std dev = 5.124, 181.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=69 */
%   | | | else return 0.051709092728306136;  // std dev = 7.795, 277.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=90 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05896641542267573;  // std dev = 9.219, 444.000 (wgt'ed) examples reached here.  /* #neg=285 #pos=159 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021716972278279498;  // std dev = 9.403, 481.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=159 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.853', 'seconds']
Parameter learned model CLL:-0.336178 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.212, 303, 159]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.792, 191, 89], 'false,false,false,false': [6.871, 145, 70]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.588, 117, 69], 'false,false,false,false': [7.795, 187, 90]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.937, 65, 39], 'false,false,false,false': [9.058, 260, 120]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.268, 313, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.332, 326, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.038, 0, 69], 'true,false': [0.052, 134, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.829, 106, 50], 'false,false,false,false': [5.235, 87, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.124, 112, 69], 'false,false,false,false': [7.795, 187, 90]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.219, 285, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.403, 322, 159]}]
{'': [nan, 0.2257125990892256], 'false': [nan, 0.22571259908922317], 'false,false': [nan, 0.2257125990892256], 'false,false,false': [nan, 0.22571259908922317]}
{'': [nan, 0.2180348943985309], 'false': [nan, 0.2180348943985299], 'false,false': [nan, 0.2180348943985309], 'false,false,false': [0.21682397959183586, 0.21957815035154052]}
{'': [nan, 0.22548808364563144], 'false': [nan, 0.22548808364563144], 'false,false': [nan, 0.22548808364563], 'false,false,false': [0.23332784745336546, 0.21936863533285528]}
{'': [nan, 0.22038840961228193], 'false': [nan, 0.22038840961228193], 'false,false': [nan, 0.22038840961228098], 'false,false,false': [0.2343749999999991, 0.21593639739211104]}
{'': [nan, 0.2233656518816611], 'false': [nan, 0.2233656518816611], 'false,false': [nan, 0.22336565188166474], 'false,false,false': [nan, 0.22336565188166474]}
{'': [nan, 0.22009903534768152], 'false': [nan, 0.22009903534768152], 'false,false': [nan, 0.2200990353476806], 'false,false,false': [nan, 0.22009903534768155]}
{'': [0.2246444789632468, 0.21688837563652427], 'true': [2.0983386083587185e-05, 1.997227719124668e-05], 'false': [nan, 0.21688837563652427], 'false,false': [nan, 0.21688837563652427], 'false,false,false': [0.21778435239973667, 0.2157604315208635], 'true,true': [nan, 2.0983386083587185e-05], 'true,true,false': [nan, 2.0983386083587185e-05]}
{'': [nan, 0.19011150048968256], 'false': [nan, 0.19011150048968256], 'false,false': [nan, 0.19011150048968195], 'false,false,false': [0.14508508351652996, 0.21934968262190296]}
{'': [nan, 0.191411523708413], 'false': [nan, 0.1914115237084139], 'false,false': [nan, 0.1914115237084139], 'false,false,false': [nan, 0.1914115237084139]}
{'': [nan, 0.18380782899486622], 'false': [nan, 0.18380782899486622], 'false,false': [nan, 0.18380782899486764], 'false,false,false': [nan, 0.18380782899486764]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.605
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, H), complex(E, H) )
%   | | | then return -0.019044047356628045;  // std dev = 2.478, 57.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=7 */
%   | | | else return 0.16151972161636527;  // std dev = 6.133, 178.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=54 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12229987849573878;  // std dev = 3.210, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.20382794744519003;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, E), interaction(A, F) )
%   | then return -1.0894357621490868E-4;  // std dev = 0.343, 41.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=7 */
%   | else return 0.127932561203013;  // std dev = 0.429, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   else if ( enzyme(A, G), interaction(H, A) )
%   | then if ( interaction(I, H), complex(I, J) )
%   | | then if ( phenotype(H, K), interaction(A, L) )
%   | | | then return 0.3638877710439398;  // std dev = 2.028, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.19423737829110516;  // std dev = 3.419, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | else if ( interaction(A, M), phenotype(H, N) )
%   | | | then return 0.2817724870023126;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.06221700906279905;  // std dev = 2.363, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | else if ( interaction(P, A), recursion_proteinclass(P, B) )
%   | | then return 0.7384599852855906;  // std dev = 0.162, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, Q), recursion_proteinclass(Q, B) )
%   | | | then return 0.6089281331150419;  // std dev = 0.952, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.06891649085057555;  // std dev = 6.993, 288.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=66 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return 0.7119092526623884;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5496736792903651;  // std dev = 0.207, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15957773239901551;  // std dev = 0.047, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( location(E, F), interaction(A, G) )
%   | | | then return 0.24464801579953813;  // std dev = 2.521, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return -0.010498891988320201;  // std dev = 2.485, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return 0.26757691444432385;  // std dev = 3.551, 58.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=27 */
%   | | | else return 0.13001565994769368;  // std dev = 4.693, 113.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=36 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.08397205329629806;  // std dev = 0.937, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.12203159956482024;  // std dev = 5.765, 169.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.46985517172584085;  // std dev = 0.192, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.7644823866118027;  // std dev = 0.222, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.15645636728340107;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.1770925818272037;  // std dev = 0.342, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.057867196265681806;  // std dev = 4.469, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, H) )
%   | | | then return 0.19890882005009566;  // std dev = 0.528, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5315202538606755;  // std dev = 0.149, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.20266437606828938;  // std dev = 2.780, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.10073920283755801;  // std dev = 6.577, 224.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3644381714402453;  // std dev = 0.067, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.008463590617169317;  // std dev = 0.367, 105.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=22 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.4220026793318605;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6002451038400346;  // std dev = 0.162, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.03818960843845609;  // std dev = 4.452, 127.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=33 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.40255272471891473;  // std dev = 1.080, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.1499628730349868;  // std dev = 4.225, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.05972195580365584;  // std dev = 3.113, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.14090949396217123;  // std dev = 3.545, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then if ( enzyme(D, E) )
%   | | then return 0.35729964351184296;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23789980026627752;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), phenotype(F, G) )
%   | | then return 0.37279483367118393;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.46592966521396;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.12073019142833233;  // std dev = 0.031, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.655936813495706;  // std dev = 1.289, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return -0.21907657148891474;  // std dev = 0.448, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( location(A, J) )
%   | | | then return 0.050038733074609355;  // std dev = 6.838, 268.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=79 */
%   | | | else return -0.07945323404342299;  // std dev = 1.188, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.14113540166591035;  // std dev = 0.593, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.2571116738998003;  // std dev = 0.139, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5569240413442859;  // std dev = 0.147, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | else return -0.18714274735810138;  // std dev = 0.053, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.28013968818248325;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( phenotype(I, J) )
%   | | | then return -0.04001592798419239;  // std dev = 2.591, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return 0.05607661264476772;  // std dev = 1.971, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.17696343131341175;  // std dev = 2.156, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.043881886701241726;  // std dev = 5.527, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.19693528088631915;  // std dev = 0.040, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(C, D) )
%   | | then if ( phenotype(A, E), phenotype(C, F) )
%   | | | then return -0.059616083465409406;  // std dev = 1.403, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | | else return 0.1435567278752641;  // std dev = 1.983, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else return -0.09154373140942472;  // std dev = 0.243, 48.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=5 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.5106026079351313;  // std dev = 1.973, 101.000 (wgt'ed) examples reached here.  /* #pos=101 */
%   | | | else return 0.004335768772232301;  // std dev = 3.652, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | else return -0.20309027344917613;  // std dev = 0.050, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.033185401015844655;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.12265925634603433;  // std dev = 0.256, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), location(A, F) )
%   | then return -0.04009785891285432;  // std dev = 0.298, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
%   | else if ( complex(A, D), interaction(C, G) )
%   | | then if ( interaction(G, C) )
%   | | | then return 0.36569882034623424;  // std dev = 0.760, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.09157902110291782;  // std dev = 0.378, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(C, H), enzyme(H, I) )
%   | | | then return 0.10196585790853385;  // std dev = 1.663, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.02438245446275377;  // std dev = 1.985, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   else if ( location(A, J), interaction(K, A) )
%   | then return 0.03487507480599806;  // std dev = 0.320, 268.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=93 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then return 0.3689066584509989;  // std dev = 1.024, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, M) )
%   | | | then return -0.0030492650743038216;  // std dev = 1.340, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.3718823618103502;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then return -0.02837567810913861;  // std dev = 0.271, 103.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=29 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( complex(F, G), location(A, H) )
%   | | then if ( phenotype(A, I), phenotype(F, I) )
%   | | | then return 0.3326664827600008;  // std dev = 0.343, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0025652323754309938;  // std dev = 1.764, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.08118532146429532;  // std dev = 0.644, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.37998921538201524;  // std dev = 0.650, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( interaction(N, L), recursion_proteinclass(N, B) )
%   | | | then return 0.3087190480163742;  // std dev = 0.551, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.026245650157517675;  // std dev = 3.150, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return -0.030449006044125412;  // std dev = 2.492, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   | | | else return 0.033447755745652154;  // std dev = 4.166, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.201', 'seconds']
Refined model CLL: -0.217996


******************************************
Best model found
******************************************
Results 

CLL : -0.244305 

AUC ROC : 0.974346 

AUC PR : 0.286591 

Precision : 0.232932 

Recall : 0.557692 

F1 : 0.328612 

Total Learning Time : 23.605 

Total Inference Time : 18.337738752365112 

Total revision time: 45.90794311141968
Best scored revision CLL: -0.217996


Results 

CLL : -0.244305 

AUC ROC : 0.974346 

AUC PR : 0.286591 

Precision : 0.232932 

Recall : 0.557692 

F1 : 0.328612 

Total Learning Time : 56.62871776199341 

Total Inference Time : 18.337738752365112 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.662
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17456684554727067;  // std dev = 12.038, 670.000 (wgt'ed) examples reached here.  /* #neg=458 #pos=212 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.22424738481335457;  // std dev = 8.457, 301.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=117 */
%   | | | else return 0.19539155072496012;  // std dev = 7.798, 264.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=95 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16571224418126532;  // std dev = 7.582, 249.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=90 */
%   | | | else return 0.13601372362878528;  // std dev = 9.030, 368.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=122 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08958994802267525;  // std dev = 5.911, 162.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=51 */
%   | | | else return 0.11928742071962052;  // std dev = 10.325, 477.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=161 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07468725164958305;  // std dev = 12.054, 674.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=212 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09052113338348629;  // std dev = 11.789, 616.000 (wgt'ed) examples reached here.  /* #neg=404 #pos=212 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7161815947949828;  // std dev = 0.994, 91.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=90 */
%   | else return -0.2728329723631353;  // std dev = 0.001, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07461079763283181;  // std dev = 6.563, 190.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=66 */
%   | | | else return 0.07232250484471613;  // std dev = 6.082, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.059209797923087545;  // std dev = 5.992, 252.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=90 */
%   | | | else return 0.04055460481218172;  // std dev = 9.071, 375.000 (wgt'ed) examples reached here.  /* #neg=253 #pos=122 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03240787764257552;  // std dev = 10.917, 637.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=212 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04283628874970712;  // std dev = 10.749, 604.000 (wgt'ed) examples reached here.  /* #neg=392 #pos=212 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.918', 'seconds']
Parameter learned model CLL:-0.339761 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.038, 458, 212]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.457, 184, 117], 'false,false,false,false': [7.798, 169, 95]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.582, 159, 90], 'false,false,false,false': [9.03, 246, 122]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.911, 111, 51], 'false,false,false,false': [10.325, 316, 161]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.054, 462, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.789, 404, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.994, 1, 90], 'true,false': [0.001, 180, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.563, 124, 66], 'false,false,false,false': [6.082, 109, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.992, 162, 90], 'false,false,false,false': [9.071, 253, 122]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.917, 425, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.749, 392, 212]}]
{'': [nan, 0.21629761639563616], 'false': [nan, 0.2162976163956356], 'false,false': [nan, 0.21629761639563616], 'false,false,false': [nan, 0.2162976163956356]}
{'': [nan, 0.23443026078785334], 'false': [nan, 0.23443026078784238], 'false,false': [nan, 0.23443026078785334], 'false,false,false': [0.2376132713766915, 0.23035755280073122]}
{'': [nan, 0.22554597238833227], 'false': [nan, 0.22554597238833227], 'false,false': [nan, 0.2255459723883254], 'false,false,false': [0.2308590892201385, 0.22159501008494104]}
{'': [nan, 0.22168496097390775], 'false': [nan, 0.22168496097390775], 'false,false': [nan, 0.22168496097390636], 'false,false,false': [0.21570644718792764, 0.22349180922492276]}
{'': [nan, 0.21558971476412025], 'false': [nan, 0.21558971476412025], 'false,false': [nan, 0.21558971476411776], 'false,false,false': [nan, 0.21558971476411776]}
{'': [nan, 0.2256280222146906], 'false': [nan, 0.2256280222146906], 'false,false': [nan, 0.22562802221469194], 'false,false,false': [nan, 0.22562802221468914]}
{'': [0.22181176250433682, 0.2255439042815724], 'false': [nan, 0.2255439042815724], 'false,false': [nan, 0.2255439042815724], 'false,false,false': [0.22670360110803287, 0.22420569329660303], 'true': [0.010866686642909724, 6.900890644108889e-09], 'true,true': [nan, 0.010866686642909724], 'true,true,false': [nan, 0.010866686642909724]}
{'': [nan, 0.1885881709602177], 'false': [nan, 0.1885881709602177], 'false,false': [nan, 0.18858817096021663], 'false,false,false': [0.14249038455763308, 0.21942601087098035]}
{'': [nan, 0.18709114442197342], 'false': [nan, 0.18709114442197294], 'false,false': [nan, 0.18709114442197294], 'false,false,false': [nan, 0.18709114442197294]}
{'': [nan, 0.19128790901638643], 'false': [nan, 0.19128790901638643], 'false,false': [nan, 0.19128790901638604], 'false,false,false': [nan, 0.19128790901638604]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.369
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E), phenotype(C, F) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2152917922423695;  // std dev = 0.479, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | else return 0.08706459775011477;  // std dev = 0.420, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, I), complex(G, I) )
%   | | | then return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.2616577070293369;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.12285481745245355;  // std dev = 0.441, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.2291166770349965;  // std dev = 5.379, 124.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=46 */
%   | | | else return 0.18484216219114577;  // std dev = 7.430, 251.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=82 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), complex(C, E) )
%   | then if ( interaction(C, F), enzyme(A, D) )
%   | | then return 0.783345022045147;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.052806745544287804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8257640449889094;  // std dev = 0.164, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(A, A) )
%   | then return -0.16499934856261853;  // std dev = 0.047, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.8172955472644542;  // std dev = 0.151, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.0960165508521964;  // std dev = 4.761, 118.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=31 */
%   | | | else return 0.15188457093057206;  // std dev = 9.662, 431.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=137 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), enzyme(C, F) )
%   | then return 0.09697615655923096;  // std dev = 0.418, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7521453945838793;  // std dev = 0.250, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16650910964531532;  // std dev = 2.785, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( enzyme(A, J), complex(C, K) )
%   | | | then return 0.09002066565467215;  // std dev = 3.258, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | | | else return 0.15808277608145035;  // std dev = 6.777, 213.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=75 */
%   else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | then return 0.600708043479446;  // std dev = 0.282, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, M), interaction(N, A) )
%   | | then return -0.02698775273379871;  // std dev = 0.351, 74.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=11 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.06994775829609673;  // std dev = 3.933, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | | else return 0.12454900958214611;  // std dev = 5.253, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(A, E) )
%   | then if ( phenotype(A, F), complex(C, G) )
%   | | then return 0.509722142293075;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6054945327607963;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6467851194282421;  // std dev = 0.188, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(A, A) )
%   | then return -0.14971893566581393;  // std dev = 0.071, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.10168601794642528;  // std dev = 7.000, 233.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=73 */
%   | | | else return 0.021728257423242237;  // std dev = 4.581, 119.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=28 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.07171847713333604;  // std dev = 3.284, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.15053983946128424;  // std dev = 6.169, 169.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4764565720777104;  // std dev = 0.050, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.5480514244877405;  // std dev = 1.352, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.09916429594067747;  // std dev = 2.918, 101.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=10 */
%   | | else if ( complex(E, H), phenotype(E, D) )
%   | | | then return 0.19371785580140474;  // std dev = 2.157, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.0401478500509501;  // std dev = 5.207, 140.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=37 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.577040783312232;  // std dev = 0.913, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.03073876243566864;  // std dev = 5.083, 149.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=36 */
%   | | else if ( location(A, L) )
%   | | | then return 0.13302329252431272;  // std dev = 6.410, 187.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=69 */
%   | | | else return 0.011613290564176332;  // std dev = 1.955, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( location(A, E), location(C, E) )
%   | then return 0.04937982088409234;  // std dev = 0.402, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | else return -0.025602450499522714;  // std dev = 0.388, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( complex(G, H), interaction(I, G) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.18543121874376028;  // std dev = 3.150, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | | | else return 0.5589730078041077;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12521360047015923;  // std dev = 2.938, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.035077621647736756;  // std dev = 3.253, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.3151734907443249;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return 0.01906000150442508;  // std dev = 4.499, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return 0.07466443440094397;  // std dev = 6.877, 228.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=74 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.34741814341659844;  // std dev = 0.082, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.6592744345091595;  // std dev = 1.393, 56.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | | else return 0.7534430322050233;  // std dev = 0.060, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.23663316843043264;  // std dev = 0.059, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.3005351948973079;  // std dev = 0.164, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.47769929134784544;  // std dev = 0.252, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13527326667761855;  // std dev = 0.053, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.03464130219043521;  // std dev = 6.161, 200.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=60 */
%   | | | else return 0.09606759729961328;  // std dev = 5.661, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(D, E) )
%   | then return -0.011183365059334167;  // std dev = 0.345, 170.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=48 */
%   | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.4678936092045655;  // std dev = 0.161, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(G, D), interaction(H, G) )
%   | | | then return -0.057971736122552964;  // std dev = 2.680, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return 0.0866182997015405;  // std dev = 3.137, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.23260758345746277;  // std dev = 0.254, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, J), interaction(A, L) )
%   | | | then return 0.41456311472644;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08760170100040822;  // std dev = 4.981, 130.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=46 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.034441354978051314;  // std dev = 3.590, 90.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=20 */
%   | | | else return 0.09650198771297858;  // std dev = 4.506, 99.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.22125180347446594;  // std dev = 0.055, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return 0.32568566931084725;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12364115654085725;  // std dev = 0.046, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return -0.17254764381803825;  // std dev = 0.105, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.02104278049052716;  // std dev = 2.655, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.035011665467795515;  // std dev = 2.620, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.07752011512643518;  // std dev = 1.887, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.0076143522476841904;  // std dev = 3.002, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return 0.08548495444298518;  // std dev = 8.218, 341.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=130 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17297097142770365;  // std dev = 0.174, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), complex(F, E) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.3645947927016163;  // std dev = 0.448, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.14138649670050712;  // std dev = 1.331, 65.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=3 */
%   | | else if ( interaction(G, A), interaction(D, D) )
%   | | | then return 0.22928358570429333;  // std dev = 1.182, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.034434461389131185;  // std dev = 2.793, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.640713194061495;  // std dev = 0.538, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.2418220305009722;  // std dev = 0.333, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return -0.027691635362832173;  // std dev = 3.026, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.061044138081814435;  // std dev = 7.539, 278.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=102 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.538', 'seconds']
Refined model CLL: -0.293146


******************************************
Best model found
******************************************
Results 

CLL : -0.280933 

AUC ROC : 0.900777 

AUC PR : 0.164322 

Precision : 0.217172 

Recall : 0.413462 

F1 : 0.284768 

Total Learning Time : 17.369 

Total Inference Time : 9.272494316101074 

Total revision time: 31.340008121490477
Best scored revision CLL: -0.293146


Results 

CLL : -0.280933 

AUC ROC : 0.900777 

AUC PR : 0.164322 

Precision : 0.217172 

Recall : 0.413462 

F1 : 0.284768 

Total Learning Time : 42.06078277206421 

Total Inference Time : 9.272494316101074 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.889
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19832865268615787;  // std dev = 13.223, 779.000 (wgt'ed) examples reached here.  /* #neg=514 #pos=265 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18392649051260884;  // std dev = 9.762, 418.000 (wgt'ed) examples reached here.  /* #neg=271 #pos=147 */
%   | | | else return 0.13481595192838605;  // std dev = 9.072, 390.000 (wgt'ed) examples reached here.  /* #neg=272 #pos=118 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14970070467108576;  // std dev = 8.394, 313.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=107 */
%   | | | else return 0.1454987659982198;  // std dev = 10.237, 469.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=158 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1070409210044653;  // std dev = 6.616, 199.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=65 */
%   | | | else return 0.11905968133003322;  // std dev = 11.550, 600.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=200 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08933999907914347;  // std dev = 13.375, 815.000 (wgt'ed) examples reached here.  /* #neg=550 #pos=265 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08787230230976811;  // std dev = 13.226, 779.000 (wgt'ed) examples reached here.  /* #neg=514 #pos=265 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7307191995804605;  // std dev = 0.037, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.2693465685825162;  // std dev = 0.051, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.058292467091154584;  // std dev = 7.401, 247.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=82 */
%   | | | else return 0.1066935502833634;  // std dev = 6.916, 205.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=76 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03905621796113921;  // std dev = 6.662, 325.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=107 */
%   | | | else return 0.033830385862402196;  // std dev = 10.371, 495.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=158 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04230142873005362;  // std dev = 12.169, 786.000 (wgt'ed) examples reached here.  /* #neg=521 #pos=265 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025247551360988735;  // std dev = 12.249, 806.000 (wgt'ed) examples reached here.  /* #neg=541 #pos=265 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.916', 'seconds']
Parameter learned model CLL:-0.33361 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.223, 514, 265]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.762, 271, 147], 'false,false,false,false': [9.072, 272, 118]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.394, 206, 107], 'false,false,false,false': [10.237, 311, 158]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.616, 134, 65], 'false,false,false,false': [11.55, 400, 200]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.375, 550, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.226, 514, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.037, 0, 107], 'true,false': [0.051, 206, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.401, 165, 82], 'false,false,false,false': [6.916, 129, 76]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.662, 218, 107], 'false,false,false,false': [10.371, 337, 158]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.169, 521, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.249, 541, 265]}]
{'': [nan, 0.22445747732931892], 'false': [nan, 0.22445747732931964], 'false,false': [nan, 0.22445747732931892], 'false,false,false': [nan, 0.22445747732931964]}
{'': [nan, 0.22040578129594227], 'false': [nan, 0.22040578129595395], 'false,false': [nan, 0.22040578129594227], 'false,false,false': [0.22799958792152464, 0.2110190664036845]}
{'': [nan, 0.22409370556567138], 'false': [nan, 0.22409370556567138], 'false,false': [nan, 0.22409370556566052], 'false,false,false': [0.22508370153164733, 0.2234259376020172]}
{'': [nan, 0.22176335034816486], 'false': [nan, 0.22176335034816486], 'false,false': [nan, 0.22176335034816522], 'false,false,false': [0.21994394080957771, 0.2223308107871162]}
{'': [nan, 0.21949179722790602], 'false': [nan, 0.21949179722790602], 'false,false': [nan, 0.21949179722790632], 'false,false,false': [nan, 0.21949179722790632]}
{'': [nan, 0.22453908217952046], 'false': [nan, 0.22453908217952046], 'false,false': [nan, 0.2245390821795238], 'false,false,false': [nan, 0.2245390821795201]}
{'': [0.22503171599168123, 0.2275755611826334], 'false': [nan, 0.2275755611826334], 'false,false': [nan, 0.2275755611826334], 'false,false,false': [0.22177055844219587, 0.23328970850684042], 'true': [1.2653840555912059e-05, 1.2546530237743691e-05], 'true,true': [nan, 1.2653840555912059e-05], 'true,true,false': [nan, 1.2653840555912059e-05]}
{'': [nan, 0.18531205433923392], 'false': [nan, 0.18531205433923392], 'false,false': [nan, 0.18531205433923345], 'false,false,false': [0.13656201028612053, 0.21730883520427097]}
{'': [nan, 0.18841275987956516], 'false': [nan, 0.18841275987956138], 'false,false': [nan, 0.18841275987956138], 'false,false,false': [nan, 0.18841275987956138]}
{'': [nan, 0.18615892167506493], 'false': [nan, 0.18615892167506493], 'false,false': [nan, 0.18615892167506098], 'false,false,false': [nan, 0.18615892167506098]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 41.747
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( phenotype(E, F), phenotype(A, F) )
%   | | | then return 0.29564893509951234;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.13183314562582815;  // std dev = 4.346, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.12593136187775622;  // std dev = 6.846, 239.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=64 */
%   | | | else return 0.18756069980539072;  // std dev = 8.666, 340.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6104374972313952;  // std dev = 0.359, 61.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=51 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.8160739258160703;  // std dev = 0.142, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return -0.13985112700924895;  // std dev = 1.006, 95.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=1 */
%   | | | else return 0.15502918342953043;  // std dev = 9.104, 389.000 (wgt'ed) examples reached here.  /* #neg=264 #pos=125 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7431393300361964;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(H, J), interaction(K, A) )
%   | | | then return 0.4354233251686354;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10551201229939665;  // std dev = 4.012, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.1752670015007658;  // std dev = 3.450, 53.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=18 */
%   | | | else return 0.25345300249846753;  // std dev = 3.658, 55.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, E), complex(A, F) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.5805340321472227;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), complex(G, F) )
%   | | | then return -0.09372440334185606;  // std dev = 0.949, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.2325854748227069;  // std dev = 2.415, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5901836829085434;  // std dev = 0.101, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.022108473426037088;  // std dev = 0.375, 129.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=27 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.6217651675132684;  // std dev = 0.061, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1108880332264181;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.10109555959760093;  // std dev = 7.570, 288.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=84 */
%   | | | else return 0.1495862671444914;  // std dev = 7.970, 291.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=100 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4328200345907643;  // std dev = 0.019, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.006388049442229052;  // std dev = 0.303, 134.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=22 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5106831341495279;  // std dev = 0.159, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.5037125683944298;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4902549691651072;  // std dev = 0.066, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( interaction(J, H), interaction(J, A) )
%   | | | then return 0.02820407008867398;  // std dev = 3.750, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | | | else return 0.09800183936326455;  // std dev = 6.175, 183.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=57 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.20758063428133114;  // std dev = 2.206, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.12683419244991725;  // std dev = 8.723, 349.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=119 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.40585797363740445;  // std dev = 0.144, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E), location(A, F) )
%   | | then if ( interaction(D, G), interaction(H, A) )
%   | | | then return -0.07924092988679254;  // std dev = 2.098, 56.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=6 */
%   | | | else return 0.025143116494098974;  // std dev = 2.294, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(I, A), complex(I, E) )
%   | | | then return 0.18551814377019704;  // std dev = 1.362, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.08620192486583811;  // std dev = 4.055, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6703817457034698;  // std dev = 1.675, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.21238148489080083;  // std dev = 0.065, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.1677463620623032;  // std dev = 3.436, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | | else return 0.08356532996489718;  // std dev = 8.727, 374.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=118 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.27911911327513556;  // std dev = 0.082, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.005608853174078741;  // std dev = 0.392, 163.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=37 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.3952760303116936;  // std dev = 0.127, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(D, D), location(A, E) )
%   | | | then return 0.1878569253726986;  // std dev = 2.969, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.054248293016040935;  // std dev = 9.326, 484.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=148 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6295011344574153;  // std dev = 0.535, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.24856593194787704;  // std dev = 0.107, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.11836940984598762;  // std dev = 1.968, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.2795888366387706;  // std dev = 2.285, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.554145721405809;  // std dev = 0.208, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.19839669946978708;  // std dev = 0.702, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B), interaction(F, G) )
%   | | then return 0.4502769262920957;  // std dev = 0.230, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( complex(F, H), enzyme(F, I) )
%   | | | then return -0.12964347874173826;  // std dev = 1.514, 41.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=4 */
%   | | | else return 0.016194382181227047;  // std dev = 4.900, 132.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=38 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7214117914299055;  // std dev = 0.459, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.2601848427956468;  // std dev = 0.137, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.11588708675087032;  // std dev = 3.554, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.06562553701593314;  // std dev = 5.041, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then return 0.10198871928983938;  // std dev = 0.162, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return 0.21861528450726847;  // std dev = 0.113, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1140482105161414;  // std dev = 0.172, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( recursion_proteinclass(G, B), interaction(G, F) )
%   | | | then return 0.4833108035513287;  // std dev = 0.680, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.03788042279447358;  // std dev = 6.484, 316.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=68 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.16038635762578546;  // std dev = 0.012, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.024177734066736952;  // std dev = 3.037, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.13326987883961147;  // std dev = 2.594, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.037923313192826526;  // std dev = 6.980, 308.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=98 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( phenotype(A, E), phenotype(C, F) )
%   | then return -0.0037961431965002814;  // std dev = 0.331, 288.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=86 */
%   | else if ( location(C, D) )
%   | | then return 0.04613382033729218;  // std dev = 0.373, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else return -0.015162649512116037;  // std dev = 0.398, 97.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=26 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4954119625261686;  // std dev = 0.326, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | else return -0.2325367168460103;  // std dev = 0.204, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.2327004298886656;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.008732393733860167;  // std dev = 2.440, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | else if ( location(A, L) )
%   | | | then return 0.15120726931385103;  // std dev = 1.834, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.08635747819762003;  // std dev = 1.609, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.16015988305624482;  // std dev = 1.536, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | | else return 0.48508430243313466;  // std dev = 2.711, 116.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=109 */
%   | | else return -0.2077438050219756;  // std dev = 0.093, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else return -0.19542470396307304;  // std dev = 0.056, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.11569591725475649;  // std dev = 0.209, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(H, J), complex(H, K) )
%   | | | then return 0.023791205347501104;  // std dev = 2.074, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.09022248174811068;  // std dev = 1.978, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.04526982222041228;  // std dev = 3.428, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | | else return 0.001439359393755756;  // std dev = 6.239, 228.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=66 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '16.803', 'seconds']
Refined model CLL: -0.241152


******************************************
Best model found
******************************************
Results 

CLL : -0.235682 

AUC ROC : 0.96811 

AUC PR : 0.243757 

Precision : 0.233607 

Recall : 0.548077 

F1 : 0.327586 

Total Learning Time : 41.747 

Total Inference Time : 49.28672528266907 

Total revision time: 96.3332017288208
Best scored revision CLL: -0.241152


Results 

CLL : -0.235682 

AUC ROC : 0.96811 

AUC PR : 0.243757 

Precision : 0.233607 

Recall : 0.548077 

F1 : 0.327586 

Total Learning Time : 107.05397637939453 

Total Inference Time : 49.28672528266907 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.078
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22977055672113286;  // std dev = 5.879, 148.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.11517263659869302;  // std dev = 4.221, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   | | | else return 0.16489496644500581;  // std dev = 4.460, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1053518968712888;  // std dev = 3.748, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | | else return 0.1112163893409264;  // std dev = 4.929, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.04989533386523739;  // std dev = 2.861, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | else return 0.12874340521075472;  // std dev = 5.385, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11589806865885935;  // std dev = 5.994, 159.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10122855106048959;  // std dev = 5.965, 156.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=55 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7357244266905336;  // std dev = 0.056, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.262166876211974;  // std dev = 0.077, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.02232601313834588;  // std dev = 3.149, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | | | else return 0.054096046137537095;  // std dev = 3.742, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08720874018285994;  // std dev = 2.764, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.11403478008330054;  // std dev = 4.592, 88.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0344505459098034;  // std dev = 5.581, 161.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -1.2310948850748253E-4;  // std dev = 5.696, 177.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=55 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.664', 'seconds']
Parameter learned model CLL:-0.340573 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.879, 93, 55]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.221, 62, 25], 'false,false,false,false': [4.46, 59, 30]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.748, 47, 20], 'false,false,false,false': [4.929, 80, 35]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.861, 32, 11], 'false,false,false,false': [5.385, 85, 44]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.994, 104, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.965, 101, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.056, 0, 20], 'true,false': [0.077, 41, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.149, 34, 14], 'false,false,false,false': [3.742, 42, 21]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.764, 32, 20], 'false,false,false,false': [4.592, 53, 35]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.581, 106, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.696, 122, 55]}]
{'': [nan, 0.23351899196493814], 'false': [nan, 0.23351899196493883], 'false,false': [nan, 0.23351899196493814], 'false,false,false': [nan, 0.23351899196493883]}
{'': [nan, 0.21484374999999833], 'false': [nan, 0.21484375000000105], 'false,false': [nan, 0.21484374999999833], 'false,false,false': [0.20478266613819668, 0.22345663426335197]}
{'': [nan, 0.2107022011530612], 'false': [nan, 0.2107022011530612], 'false,false': [nan, 0.21070220115306082], 'false,false,false': [0.20968150577092518, 0.21128420626699146]}
{'': [nan, 0.21733994217519967], 'false': [nan, 0.21733994217519967], 'false,false': [nan, 0.21733994217520075], 'false,false,false': [0.19037317468902132, 0.22477461008186694]}
{'': [nan, 0.22596291020099085], 'false': [nan, 0.22596291020099085], 'false,false': [nan, 0.22596291020098994], 'false,false,false': [nan, 0.22596291020098994]}
{'': [nan, 0.2280562738218649], 'false': [nan, 0.2280562738218649], 'false,false': [nan, 0.2280562738218655], 'false,false,false': [nan, 0.2280562738218649]}
{'': [0.21959134602300456, 0.21571319122069918], 'true': [0.0001554293844520771, 0.00014569841168649147], 'false': [nan, 0.21571319122069918], 'false,false': [nan, 0.21571319122069918], 'false,false,false': [0.2065972222222224, 0.2222222222222225], 'true,true': [nan, 0.0001554293844520771], 'true,true,false': [nan, 0.0001554293844520771]}
{'': [nan, 0.20534990743371342], 'false': [nan, 0.20534990743371342], 'false,false': [nan, 0.2053499074337137], 'false,false,false': [0.14687612576508802, 0.23963530307532024]}
{'': [nan, 0.19345073054199355], 'false': [nan, 0.19345073054199344], 'false,false': [nan, 0.19345073054199344], 'false,false,false': [nan, 0.19345073054199344]}
{'': [nan, 0.18330790517900195], 'false': [nan, 0.18330790517900195], 'false,false': [nan, 0.18330790517900203], 'false,false,false': [nan, 0.18330790517900203]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 33.449
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.013645936695359588;  // std dev = 2.088, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.2116842886348645;  // std dev = 4.757, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7387463734164045;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13528025176381142;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, E), interaction(E, A) )
%   | | | then return 0.2757145281063458;  // std dev = 2.032, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.13958801065432705;  // std dev = 4.925, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), location(E, C) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.5718565029780496;  // std dev = 1.557, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return -0.17445401680078415;  // std dev = 0.145, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return 0.740128984709996;  // std dev = 1.000, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.3238001298572987;  // std dev = 2.355, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | else return -0.17741588605228234;  // std dev = 0.205, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else return 0.4840816841182584;  // std dev = 1.157, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.430770408637203;  // std dev = 0.105, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, D), interaction(H, H) )
%   | | | then return 0.6758126575976071;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.05724438946720224;  // std dev = 0.833, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.30631751561986414;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10292566600324228;  // std dev = 1.255, 34.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(J, L), interaction(L, L) )
%   | | | then return -0.08728912059053345;  // std dev = 1.143, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.21745111938361555;  // std dev = 1.582, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.6248612757404657;  // std dev = 0.261, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14088187852151995;  // std dev = 3.696, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F), phenotype(C, G) )
%   | | then return 0.11735707291767948;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.49434368649650207;  // std dev = 0.141, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.3496945230137688;  // std dev = 0.124, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(C, H), phenotype(C, I) )
%   | | | then return -0.03063666029006665;  // std dev = 1.916, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return -0.16239900377299663;  // std dev = 0.865, 31.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=1 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), complex(L, M) )
%   | | | then return 0.17956304489191433;  // std dev = 1.857, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.48983249150213654;  // std dev = 1.778, 23.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=18 */
%   | | else return -0.1688811172933257;  // std dev = 0.211, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else return 0.7249025056851979;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, C) )
%   | then return 0.09820758588491792;  // std dev = 0.229, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( location(A, E), location(C, F) )
%   | | then return -0.07330512094329636;  // std dev = 0.241, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | else return 0.24191960836740725;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( phenotype(A, G), complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5022758307591296;  // std dev = 0.142, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.14912011465087405;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.414022620426801;  // std dev = 0.956, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.18810141389992796;  // std dev = 0.419, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.25354295711989355;  // std dev = 1.699, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.014057528294442683;  // std dev = 1.725, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.39843157368909;  // std dev = 0.134, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.21205039688124505;  // std dev = 0.097, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), complex(H, I) )
%   | | | then return 0.5753265731267707;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3224622184693651;  // std dev = 0.285, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.2064560906240894;  // std dev = 0.133, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.1632849834643058;  // std dev = 1.038, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.07447890050112574;  // std dev = 0.710, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.07294689152263653;  // std dev = 1.922, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.28920032103642507;  // std dev = 1.128, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( phenotype(E, F), phenotype(A, G) )
%   | | | then return 0.1987915956276826;  // std dev = 1.502, 31.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=24 */
%   | | | else return 0.4005802109415697;  // std dev = 0.717, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.28264532216428634;  // std dev = 0.650, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.3463610257121537;  // std dev = 0.565, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return -0.1364900350688014;  // std dev = 0.409, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | then return 0.485063603366428;  // std dev = 0.153, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.5155768170139402;  // std dev = 0.142, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.27907866782246527;  // std dev = 0.967, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.1188967032337741;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.29671461140013294;  // std dev = 0.069, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, F) )
%   | | then return -0.08836311745291513;  // std dev = 0.081, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.16621431317132143;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), interaction(J, H) )
%   | | | then return -0.04828855391730595;  // std dev = 1.244, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.13690402670547114;  // std dev = 2.055, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else return -0.13901686196497842;  // std dev = 0.376, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 0.37057622507369486;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.10599378013939686;  // std dev = 0.838, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(D, D), phenotype(D, E) )
%   | then return -0.0876432244937642;  // std dev = 0.165, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else if ( interaction(F, D), interaction(F, F) )
%   | | then if ( phenotype(D, G), complex(D, H) )
%   | | | then return -0.021855536515675313;  // std dev = 0.885, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.13777326817400287;  // std dev = 1.173, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | else if ( phenotype(D, I) )
%   | | | then return -0.008363121643182342;  // std dev = 1.592, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return -0.12027796467853413;  // std dev = 1.090, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   else if ( interaction(J, A), phenotype(J, K) )
%   | then return 0.381999862259056;  // std dev = 0.341, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( location(A, L) )
%   | | then if ( complex(A, M), phenotype(A, N) )
%   | | | then return -0.10686110964919866;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.40295256741554025;  // std dev = 0.132, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1903389138955719;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.687', 'seconds']
Refined model CLL: -0.186708


******************************************
Best model found
******************************************
Results 

CLL : -0.176112 

AUC ROC : 0.987753 

AUC PR : 0.685361 

Precision : 0.482143 

Recall : 0.880435 

F1 : 0.623077 

Total Learning Time : 33.449 

Total Inference Time : 26.64742398262024 

Total revision time: 62.83914141845703
Best scored revision CLL: -0.186708


Results 

CLL : -0.176112 

AUC ROC : 0.987753 

AUC PR : 0.685361 

Precision : 0.482143 

Recall : 0.880435 

F1 : 0.623077 

Total Learning Time : 73.55991606903076 

Total Inference Time : 26.64742398262024 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.316
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18749025246478274;  // std dev = 8.589, 334.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16892437551450934;  // std dev = 6.368, 182.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=61 */
%   | | | else return 0.19142377392631557;  // std dev = 5.610, 137.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.20583101283552735;  // std dev = 5.320, 118.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=47 */
%   | | | else return 0.13701938559722626;  // std dev = 6.498, 191.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11608197701815212;  // std dev = 4.447, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
%   | | | else return 0.1413877700506249;  // std dev = 7.157, 223.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=80 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07456461551590245;  // std dev = 8.658, 346.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0632869864008806;  // std dev = 8.641, 343.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7244036302302337;  // std dev = 0.032, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.2762903883804256;  // std dev = 0.041, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07335379785456951;  // std dev = 4.534, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | | else return -0.005698310367897976;  // std dev = 4.859, 122.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08334148359888882;  // std dev = 4.192, 120.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=47 */
%   | | | else return 0.07988056979081433;  // std dev = 6.387, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03648116255578745;  // std dev = 7.793, 329.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050176523083866297;  // std dev = 7.652, 307.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=110 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.648', 'seconds']
Parameter learned model CLL:-0.343192 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.589, 224, 110]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.368, 121, 61], 'false,false,false,false': [5.61, 88, 49]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.32, 71, 47], 'false,false,false,false': [6.498, 128, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.447, 58, 30], 'false,false,false,false': [7.157, 143, 80]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.658, 236, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.641, 233, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.032, 0, 47], 'true,false': [0.041, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.534, 61, 31], 'false,false,false,false': [4.859, 90, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.192, 73, 47], 'false,false,false,false': [6.387, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.793, 219, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.652, 197, 110]}]
{'': [nan, 0.22087561404138065], 'false': [nan, 0.2208756140413788], 'false,false': [nan, 0.22087561404138065], 'false,false,false': [nan, 0.2208756140413788]}
{'': [nan, 0.22592152199761806], 'false': [nan, 0.22592152199762294], 'false,false': [nan, 0.22592152199761806], 'false,false,false': [0.22282936843376502, 0.22974052959667662]}
{'': [nan, 0.22936298350166093], 'false': [nan, 0.22936298350166093], 'false,false': [nan, 0.22936298350166234], 'false,false,false': [0.23983410731132143, 0.22108570925369056]}
{'': [nan, 0.22839293344473535], 'false': [nan, 0.22839293344473535], 'false,false': [nan, 0.22839293344473888], 'false,false,false': [0.22469008264462909, 0.22967294644411682]}
{'': [nan, 0.21664458051917074], 'false': [nan, 0.21664458051917074], 'false,false': [nan, 0.21664458051917332], 'false,false,false': [nan, 0.21664458051917332]}
{'': [nan, 0.21768889822689536], 'false': [nan, 0.21768889822689536], 'false,false': [nan, 0.217688898226897], 'false,false,false': [nan, 0.21768889822689544]}
{'': [0.23645267122411046, 0.20789097598594078], 'true': [2.1151446133219595e-05, 2.2507166115713846e-05], 'false': [nan, 0.20789097598594078], 'false,false': [nan, 0.20789097598594078], 'false,false,false': [0.2234168241965968, 0.19349637194302644], 'true,true': [nan, 2.1151446133219595e-05], 'true,true,false': [nan, 2.1151446133219595e-05]}
{'': [nan, 0.1952058172993511], 'false': [nan, 0.1952058172993511], 'false,false': [nan, 0.19520581729935127], 'false,false,false': [0.14644457250562185, 0.22789011276063154]}
{'': [nan, 0.18459889860145523], 'false': [nan, 0.18459889860145612], 'false,false': [nan, 0.18459889860145612], 'false,false,false': [nan, 0.18459889860145612]}
{'': [nan, 0.19070737783366837], 'false': [nan, 0.19070737783366837], 'false,false': [nan, 0.1907073778336682], 'false,false,false': [nan, 0.1907073778336682]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 28.384
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), enzyme(G, H) )
%   | | | then return 0.18167834686421824;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.028361701056959086;  // std dev = 2.576, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.11814893509951237;  // std dev = 3.102, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.23314893509951187;  // std dev = 5.969, 152.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.25055117589312487;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7325587863929208;  // std dev = 0.110, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return 0.6505976109083472;  // std dev = 3.093, 65.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=53 */
%   | | | else return 0.14727711591877407;  // std dev = 4.445, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | else return -0.16243960275782768;  // std dev = 0.176, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8326059885003049;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15690666825686914;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5076644318937836;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5854950435591468;  // std dev = 0.296, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | else return 0.03826506957743014;  // std dev = 0.374, 238.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=52 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(E, F) )
%   | | | then return 0.4382974352259119;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08048472566208689;  // std dev = 0.995, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.7534563862756384;  // std dev = 0.149, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I) )
%   | | | then return 0.2752842771717285;  // std dev = 1.505, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.16699456641767627;  // std dev = 0.069, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.2711066230825804;  // std dev = 1.924, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.1479059255027446;  // std dev = 1.131, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.4613562740055409;  // std dev = 0.244, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15017209491725814;  // std dev = 0.131, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return 0.030907081875496414;  // std dev = 0.356, 73.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=16 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.40704306943943414;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.002178668956875889;  // std dev = 0.322, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.6603775990369205;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2008897939284915;  // std dev = 3.042, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.22677267276721072;  // std dev = 2.132, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.10153171516522413;  // std dev = 4.252, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6036163073699787;  // std dev = 0.174, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | else return -0.1958244402329787;  // std dev = 0.052, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, E) )
%   | | | then return 0.5398588052003455;  // std dev = 0.804, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.21135993351075416;  // std dev = 0.244, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.16438132941369998;  // std dev = 0.316, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.07797533926844448;  // std dev = 1.084, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2997781559191432;  // std dev = 1.488, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.06906224837476828;  // std dev = 3.951, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   | | | else return -0.03160224668003196;  // std dev = 1.202, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then if ( interaction(C, A), recursion_proteinclass(D, B) )
%   | | then return 0.22335615533761638;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.20272504291264765;  // std dev = 0.923, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.31322220094948583;  // std dev = 0.223, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B), interaction(F, G) )
%   | | then return 0.3970226959444194;  // std dev = 0.264, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else return -0.0519085462784962;  // std dev = 0.273, 116.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=19 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2540661201253522;  // std dev = 2.664, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | | | else return -0.16013815711426843;  // std dev = 0.164, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.31373999758746446;  // std dev = 1.230, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.12318917129865417;  // std dev = 3.247, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4035006080970593;  // std dev = 0.140, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.16572361313031053;  // std dev = 0.061, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( phenotype(F, G), interaction(H, F) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.0848578715146189;  // std dev = 2.038, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return -0.022302003515977886;  // std dev = 2.878, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | else if ( interaction(A, K), location(K, L) )
%   | | | then return 0.010402766583440849;  // std dev = 1.232, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.13160779324935906;  // std dev = 2.485, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | else if ( interaction(A, M) )
%   | | then if ( location(A, N), location(M, N) )
%   | | | then return 0.07434391347451401;  // std dev = 0.978, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3336845649435181;  // std dev = 0.859, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.43585947878903664;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(A, D) )
%   | then if ( location(A, E), location(C, E) )
%   | | then return -0.007206042077220498;  // std dev = 0.252, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4024674451262654;  // std dev = 0.253, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1797624117889492;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.12238672554483741;  // std dev = 0.124, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.32009125876211586;  // std dev = 0.152, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B), location(A, J) )
%   | | | then return 0.3290147341210554;  // std dev = 0.513, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.03383769420237432;  // std dev = 2.581, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.15448833815189547;  // std dev = 1.676, 30.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | else return -0.03294328891433375;  // std dev = 3.840, 114.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19518190265914556;  // std dev = 0.088, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), location(A, E) )
%   | | | then return 0.2895737769831502;  // std dev = 0.357, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.04029816160870154;  // std dev = 0.659, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( location(A, E) )
%   | | | then return -0.08642229999784201;  // std dev = 2.366, 115.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=13 */
%   | | | else return 0.08834834245405604;  // std dev = 1.589, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3652620908424526;  // std dev = 0.830, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.16737448110087805;  // std dev = 0.364, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.026871034911647478;  // std dev = 2.359, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.12121194590812033;  // std dev = 2.787, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), complex(A, D) )
%   | then return 0.016271546362299126;  // std dev = 0.424, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2186936084473643;  // std dev = 0.120, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(F, E), complex(A, G) )
%   | | then return -0.05644428144206771;  // std dev = 0.138, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2533609310318867;  // std dev = 0.237, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.00672587682317757;  // std dev = 2.593, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.0031339617423736203;  // std dev = 1.327, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.18214375765715773;  // std dev = 1.259, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.2269908558529378;  // std dev = 0.750, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.08596916303878822;  // std dev = 3.527, 99.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.669', 'seconds']
Refined model CLL: -0.211152


******************************************
Best model found
******************************************
Results 

CLL : -0.222854 

AUC ROC : 0.966268 

AUC PR : 0.485381 

Precision : 0.237885 

Recall : 0.586957 

F1 : 0.338558 

Total Learning Time : 28.384 

Total Inference Time : 20.680476665496826 

Total revision time: 52.56938786506653
Best scored revision CLL: -0.211152


Results 

CLL : -0.222854 

AUC ROC : 0.966268 

AUC PR : 0.485381 

Precision : 0.237885 

Recall : 0.586957 

F1 : 0.338558 

Total Learning Time : 63.29016251564026 

Total Inference Time : 20.680476665496826 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.574
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1941813237634789;  // std dev = 10.499, 494.000 (wgt'ed) examples reached here.  /* #neg=328 #pos=166 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1686791116313445;  // std dev = 7.688, 265.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=89 */
%   | | | else return 0.17203710348572063;  // std dev = 7.133, 227.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=77 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1411760074658085;  // std dev = 6.683, 201.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=67 */
%   | | | else return 0.16256592205192036;  // std dev = 7.992, 279.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=99 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12661828719453008;  // std dev = 5.259, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
%   | | | else return 0.10474815342970066;  // std dev = 9.164, 384.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=124 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10849767734232062;  // std dev = 10.427, 481.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=166 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06555967711707962;  // std dev = 10.606, 515.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=166 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7314863607684552;  // std dev = 0.014, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.2684867742522944;  // std dev = 0.019, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0862863363422123;  // std dev = 5.501, 132.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=47 */
%   | | | else return 0.06943298879920341;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08700255448041187;  // std dev = 5.031, 172.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=67 */
%   | | | else return 0.029584160298292316;  // std dev = 8.234, 314.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=99 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03825397412843079;  // std dev = 9.637, 492.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=166 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008322426814848821;  // std dev = 9.799, 530.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=166 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.609', 'seconds']
Parameter learned model CLL:-0.33351 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.499, 328, 166]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.688, 176, 89], 'false,false,false,false': [7.133, 150, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.683, 134, 67], 'false,false,false,false': [7.992, 180, 99]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.259, 81, 42], 'false,false,false,false': [9.164, 260, 124]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.427, 315, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.606, 349, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 67], 'true,false': [0.019, 113, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.501, 85, 47], 'false,false,false,false': [5.859, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.031, 105, 67], 'false,false,false,false': [8.234, 215, 99]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.637, 326, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.799, 364, 166]}]
{'': [nan, 0.22311462243275892], 'false': [nan, 0.22311462243275693], 'false,false': [nan, 0.22311462243275892], 'false,false,false': [nan, 0.22311462243275693]}
{'': [nan, 0.22356071121687063], 'false': [nan, 0.22356071121686905], 'false,false': [nan, 0.22356071121687063], 'false,false,false': [0.2230544677821295, 0.2241456267344609]}
{'': [nan, 0.22622846032201457], 'false': [nan, 0.22622846032201457], 'false,false': [nan, 0.22622846032201419], 'false,false,false': [0.22220498616834392, 0.22893550220241152]}
{'': [nan, 0.2202751064854649], 'false': [nan, 0.2202751064854649], 'false,false': [nan, 0.22027510648546178], 'false,false,false': [0.22486615110053548, 0.2186884995617123]}
{'': [nan, 0.22601652091573057], 'false': [nan, 0.22601652091573057], 'false,false': [nan, 0.22601652091572963], 'false,false,false': [nan, 0.22601652091572963]}
{'': [nan, 0.21843952236499709], 'false': [nan, 0.21843952236499709], 'false,false': [nan, 0.21843952236499858], 'false,false,false': [nan, 0.21843952236499664]}
{'': [0.23366338515722043, 0.22670904049383356], 'true': [3.0856250455034326e-06, 3.109661135742179e-06], 'false': [nan, 0.22670904049383356], 'false,false': [nan, 0.22670904049383356], 'false,false,false': [0.22928145087236082, 0.22435815284719468], 'true,true': [nan, 3.0856250455034326e-06], 'true,true,false': [nan, 3.0856250455034326e-06]}
{'': [nan, 0.19234025278749076], 'false': [nan, 0.19234025278749076], 'false,false': [nan, 0.1923402527874906], 'false,false,false': [0.14718144834310845, 0.21591012853553382]}
{'': [nan, 0.1887688300305587], 'false': [nan, 0.18876883003055855], 'false,false': [nan, 0.18876883003055855], 'false,false,false': [nan, 0.18876883003055855]}
{'': [nan, 0.18117503230784218], 'false': [nan, 0.18117503230784218], 'false,false': [nan, 0.18117503230784388], 'false,false,false': [nan, 0.18117503230784388]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.338
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then if ( complex(C, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.0010060779566551672;  // std dev = 2.268, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   | | | else return 0.14628452831985136;  // std dev = 3.479, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | else if ( complex(A, H), interaction(A, I) )
%   | | | then return 0.12737970433028126;  // std dev = 3.917, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
%   | | | else return 0.22078629773687555;  // std dev = 7.943, 273.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=99 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7422989706255615;  // std dev = 0.194, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E) )
%   | | then if ( complex(D, F), interaction(A, G) )
%   | | | then return 0.03770453957898538;  // std dev = 2.303, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.2658914412314263;  // std dev = 2.638, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( location(D, H), location(A, H) )
%   | | | then return -0.09309725015132878;  // std dev = 1.367, 36.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=2 */
%   | | | else return 0.17583154943115623;  // std dev = 1.149, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.16769199655051284;  // std dev = 2.335, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.32510259752061044;  // std dev = 2.514, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.19003696185252694;  // std dev = 3.957, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | | else return 0.12048275183816157;  // std dev = 7.120, 247.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=72 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.549723130749718;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.12939687784809004;  // std dev = 0.079, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(A, E) )
%   | | then return 0.21638979741638478;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5497231307497181;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7019785483879293;  // std dev = 0.028, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.7011102825047072;  // std dev = 0.115, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.336177220445816;  // std dev = 1.164, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.21709928461520753;  // std dev = 3.825, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   | | | else return 0.10253764257809328;  // std dev = 8.622, 363.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=105 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(D, D), phenotype(A, E) )
%   | | then return 0.26471486725182114;  // std dev = 0.760, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.42511947834973624;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5401627489876782;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.13368295368219632;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.557726122031202;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.10016043781268957;  // std dev = 3.163, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.00782105644303734;  // std dev = 3.787, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.026232828843874956;  // std dev = 4.832, 136.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=31 */
%   | | | else return 0.11521740095841206;  // std dev = 6.689, 206.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3526851727714396;  // std dev = 0.186, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), location(D, F) )
%   | | then if ( interaction(G, D), location(G, F) )
%   | | | then return -0.10662590682819463;  // std dev = 1.748, 51.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=4 */
%   | | | else return 0.08026965388052203;  // std dev = 1.189, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.6262408182743046;  // std dev = 1.615, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.028379449551665138;  // std dev = 6.336, 224.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=56 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( phenotype(A, K), interaction(A, L) )
%   | | | then return -0.09776155612864001;  // std dev = 0.531, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4303192693000657;  // std dev = 1.961, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.046807985304979725;  // std dev = 2.674, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.11576328583300723;  // std dev = 4.836, 110.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return -0.12127628377820462;  // std dev = 0.472, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.3003847096232585;  // std dev = 0.224, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   else if ( location(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), phenotype(G, H) )
%   | | then if ( recursion_proteinclass(G, B), phenotype(A, H) )
%   | | | then return 0.5911783487618317;  // std dev = 1.216, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.04536063107975318;  // std dev = 4.580, 157.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=29 */
%   | | else return -0.06845586936193739;  // std dev = 0.350, 83.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=13 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5383616545288529;  // std dev = 2.620, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | | else return -0.23498204173409173;  // std dev = 0.241, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.08659475246604255;  // std dev = 3.770, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.1702543262638674;  // std dev = 3.390, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5564424856943202;  // std dev = 0.205, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | else return -0.2079959560272233;  // std dev = 0.065, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | then return 0.5141707640283583;  // std dev = 0.174, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.18939326052384062;  // std dev = 0.323, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | | else return 0.04091717133903216;  // std dev = 5.974, 203.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=61 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7359106448474432;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.24420732429364136;  // std dev = 0.079, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.43558431199614306;  // std dev = 1.101, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.11572016183447882;  // std dev = 2.122, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(A, E), complex(E, D) )
%   | | then return 0.12684083608754892;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.19052183638919748;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, C) )
%   | | then return 0.20000956085641164;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2836901200508014;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.0960688999295815;  // std dev = 0.084, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( phenotype(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2926506977240702;  // std dev = 4.268, 122.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=82 */
%   | | | else return -0.1965884940090615;  // std dev = 0.509, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.056148599615755246;  // std dev = 1.656, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.1004217825025221;  // std dev = 5.381, 142.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=56 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.017443377249874565;  // std dev = 0.273, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), complex(F, G) )
%   | | then if ( complex(A, H), recursion_proteinclass(F, B) )
%   | | | then return 0.3244308041244075;  // std dev = 0.410, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.020067638145111207;  // std dev = 5.409, 215.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=66 */
%   | | else if ( phenotype(A, E) )
%   | | | then return -0.21005207025689057;  // std dev = 0.594, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.21384433651132745;  // std dev = 2.199, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( enzyme(I, K), interaction(L, J) )
%   | | | then return 0.02384934109977215;  // std dev = 1.269, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.28799792749122244;  // std dev = 1.132, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.009244459018200014;  // std dev = 1.783, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.05987738824545884;  // std dev = 3.235, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4257814529767362;  // std dev = 0.283, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | else return -0.19926311185625026;  // std dev = 0.073, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.07467534081434117;  // std dev = 0.947, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3311997908675605;  // std dev = 2.207, 69.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=61 */
%   | | else return -0.19495301514224678;  // std dev = 0.059, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), location(A, I) )
%   | | | then return 0.06039651512337308;  // std dev = 3.653, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return -0.05928328361290681;  // std dev = 2.713, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.10966144140124434;  // std dev = 1.254, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.3756162649953519;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.594', 'seconds']
Refined model CLL: -0.237278


******************************************
Best model found
******************************************
Results 

CLL : -0.253607 

AUC ROC : 0.940175 

AUC PR : 0.440386 

Precision : 0.5 

Recall : 0.565217 

F1 : 0.530612 

Total Learning Time : 19.338 

Total Inference Time : 18.07502007484436 

Total revision time: 42.07109481048584
Best scored revision CLL: -0.237278


Results 

CLL : -0.253607 

AUC ROC : 0.940175 

AUC PR : 0.440386 

Precision : 0.5 

Recall : 0.565217 

F1 : 0.530612 

Total Learning Time : 52.79186946105957 

Total Inference Time : 18.07502007484436 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.818
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18898725845280268;  // std dev = 12.161, 668.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=221 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1605274216345281;  // std dev = 8.987, 367.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=120 */
%   | | | else return 0.1646994857788992;  // std dev = 8.219, 305.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=101 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1444517827647423;  // std dev = 7.695, 266.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=89 */
%   | | | else return 0.1210376430065557;  // std dev = 9.535, 424.000 (wgt'ed) examples reached here.  /* #neg=292 #pos=132 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12412677270428846;  // std dev = 6.146, 169.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=57 */
%   | | | else return 0.1197168100053336;  // std dev = 10.480, 497.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=164 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11122668054706283;  // std dev = 12.048, 644.000 (wgt'ed) examples reached here.  /* #neg=423 #pos=221 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07711266163599381;  // std dev = 12.172, 671.000 (wgt'ed) examples reached here.  /* #neg=450 #pos=221 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7298088454172438;  // std dev = 0.000212, 89.000 (wgt'ed) examples reached here.  /* #pos=89 */
%   | else return -0.27019309519029605;  // std dev = 0.000290, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07214195869398916;  // std dev = 6.463, 187.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=63 */
%   | | | else return 0.06616139957741146;  // std dev = 6.790, 208.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=69 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06058860520206802;  // std dev = 5.943, 249.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=89 */
%   | | | else return 0.019795190095082245;  // std dev = 9.622, 442.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=132 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03688631541854475;  // std dev = 11.216, 670.000 (wgt'ed) examples reached here.  /* #neg=449 #pos=221 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031115468290750518;  // std dev = 11.184, 667.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=221 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.670', 'seconds']
Parameter learned model CLL:-0.329661 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.161, 447, 221]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.987, 247, 120], 'false,false,false,false': [8.219, 204, 101]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.695, 177, 89], 'false,false,false,false': [9.535, 292, 132]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.146, 112, 57], 'false,false,false,false': [10.48, 333, 164]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.048, 423, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.172, 450, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000212, 0, 89], 'true,false': [0.00029, 176, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.463, 124, 63], 'false,false,false,false': [6.79, 139, 69]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.943, 160, 89], 'false,false,false,false': [9.622, 310, 132]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.216, 449, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.184, 446, 221]}]
{'': [nan, 0.22138432715407746], 'false': [nan, 0.22138432715407722], 'false,false': [nan, 0.22138432715407746], 'false,false,false': [nan, 0.22138432715407722]}
{'': [nan, 0.22071419713718415], 'false': [nan, 0.22071419713719131], 'false,false': [nan, 0.22071419713718415], 'false,false,false': [0.22006251438499494, 0.22148884708412064]}
{'': [nan, 0.21770774421520067], 'false': [nan, 0.21770774421520067], 'false,false': [nan, 0.21770774421519984], 'false,false,false': [0.22262286567389855, 0.21441285750519176]}
{'': [nan, 0.22162806986743072], 'false': [nan, 0.22162806986743072], 'false,false': [nan, 0.22162806986743416], 'false,false,false': [0.2235215853786659, 0.2209792634509122]}
{'': [nan, 0.2253880940581395], 'false': [nan, 0.2253880940581395], 'false,false': [nan, 0.22538809405813964], 'false,false,false': [nan, 0.22538809405813964]}
{'': [nan, 0.22080330695337683], 'false': [nan, 0.22080330695337683], 'false,false': [nan, 0.220803306953378], 'false,false,false': [nan, 0.22080330695337747]}
{'': [0.2230553339925763, 0.2225050633148855], 'true': [5.067289808731617e-10, 4.773915404402115e-10], 'false': [nan, 0.2225050633148855], 'false,false': [nan, 0.2225050633148855], 'false,false,false': [0.22339786668191705, 0.22168546597633126], 'true,true': [nan, 5.067289808731617e-10], 'true,true,false': [nan, 5.067289808731617e-10]}
{'': [nan, 0.18547928785535694], 'false': [nan, 0.18547928785535694], 'false,false': [nan, 0.18547928785535822], 'false,false,false': [0.1418533975402898, 0.20945620911509993]}
{'': [nan, 0.18774575601964483], 'false': [nan, 0.187745756019644], 'false,false': [nan, 0.187745756019644], 'false,false,false': [nan, 0.187745756019644]}
{'': [nan, 0.18754417737822532], 'false': [nan, 0.18754417737822532], 'false,false': [nan, 0.18754417737822537], 'false,false,false': [nan, 0.18754417737822537]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.4
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(C, E) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.46192252000516903;  // std dev = 7.962, 265.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=160 */
%   | | | else return -0.14185106490048766;  // std dev = 1.91e-07, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3126943896449669;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7517846094261841;  // std dev = 0.153, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1545589742992901;  // std dev = 0.168, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.18306250930414356;  // std dev = 4.613, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.04399174377073605;  // std dev = 0.380, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5660285649958897;  // std dev = 0.365, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.0807402131833719;  // std dev = 2.601, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.16520402837499495;  // std dev = 8.323, 348.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=117 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5591677541023703;  // std dev = 0.070, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, C) )
%   | | then return -0.04115584886862641;  // std dev = 0.290, 70.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=8 */
%   | | else if ( phenotype(C, D), complex(A, E) )
%   | | | then return 0.11774901475896966;  // std dev = 2.301, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.038466984598568205;  // std dev = 2.844, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.60136026892926;  // std dev = 0.107, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.757423130891483;  // std dev = 0.184, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.15879398635429998;  // std dev = 0.226, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( phenotype(A, J), complex(A, K) )
%   | | | then return 0.04461023517191767;  // std dev = 3.321, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.12897417927827096;  // std dev = 8.233, 358.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=115 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.5422848406058685;  // std dev = 0.245, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.16967063648949035;  // std dev = 0.254, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.09801445419681852;  // std dev = 4.408, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | else if ( location(A, H), complex(C, I) )
%   | | then return 0.07870461714448115;  // std dev = 0.364, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else return -0.04896210076300316;  // std dev = 0.316, 42.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.05067531897053085;  // std dev = 0.232, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3269783932513417;  // std dev = 0.334, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.19318028770470402;  // std dev = 3.905, 82.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=35 */
%   | | | else return 0.1279404682373864;  // std dev = 7.333, 281.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=94 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.06398712064098751;  // std dev = 0.410, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return 0.3522101249597556;  // std dev = 0.197, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( complex(A, H), complex(F, H) )
%   | | then return -0.13853356355069985;  // std dev = 0.221, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.0889484209011309;  // std dev = 3.906, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | | | else return -0.01573024192174293;  // std dev = 3.249, 83.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6588239456837615;  // std dev = 0.493, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return -0.1799584846134552;  // std dev = 0.470, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.11416487601734525;  // std dev = 6.520, 225.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=79 */
%   | | | else return 0.17242563810104575;  // std dev = 3.562, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), location(A, E) )
%   | then if ( interaction(A, D), interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B), interaction(F, C) )
%   | | | then return 0.32867575477440386;  // std dev = 0.321, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.47337660682890087;  // std dev = 0.420, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.5527219992167196;  // std dev = 0.192, 42.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=40 */
%   | else return -0.013366559005365297;  // std dev = 0.335, 229.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=50 */
%   else if ( enzyme(A, G), interaction(A, H) )
%   | then return -0.04479520378114056;  // std dev = 0.234, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.0031236740147267423;  // std dev = 1.404, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.23566182480412992;  // std dev = 1.473, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.05855063855192079;  // std dev = 5.073, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | | else return 0.029964406388481402;  // std dev = 5.178, 175.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.049254319159248536;  // std dev = 0.329, 255.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=89 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G), phenotype(F, E) )
%   | | | then return -0.08632102770146509;  // std dev = 1.044, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.38219333476499345;  // std dev = 1.105, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.16973164126950832;  // std dev = 0.233, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.1276771016731158;  // std dev = 3.839, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( phenotype(H, J), interaction(K, H) )
%   | | | then return -0.0026001030412806945;  // std dev = 5.104, 175.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=46 */
%   | | | else return 0.06790789601196318;  // std dev = 4.251, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.0021159896205876078;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.0621633602324605;  // std dev = 1.157, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(A, E) )
%   | then if ( interaction(A, D), interaction(F, A) )
%   | | then return 0.2236301345719794;  // std dev = 0.126, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.037018691122496464;  // std dev = 0.841, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(C, G), location(A, H) )
%   | | then return 0.42550692504714366;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.2640024271968237;  // std dev = 0.269, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.29258307207724643;  // std dev = 0.154, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.05865115467581906;  // std dev = 2.268, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return -0.014100037873468948;  // std dev = 7.529, 432.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=102 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return -0.009431667296738524;  // std dev = 2.741, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.06900391212983825;  // std dev = 4.233, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.20778072028039127;  // std dev = 0.198, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else return -0.03094951306079232;  // std dev = 0.320, 163.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=42 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( interaction(G, F), interaction(G, G) )
%   | | then return 0.023635534575595786;  // std dev = 0.316, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | else if ( recursion_proteinclass(G, B) )
%   | | | then return 0.44323851641314693;  // std dev = 0.194, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.09685738235459926;  // std dev = 2.834, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5333236352379023;  // std dev = 0.782, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.24342436842908363;  // std dev = 0.799, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.1538214981676286;  // std dev = 2.593, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | else return 0.03182366513220441;  // std dev = 6.181, 236.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=76 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.20660191161446068;  // std dev = 0.147, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.04696776926726254;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), complex(G, H) )
%   | | | then return 0.46317247293712316;  // std dev = 0.555, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.14958312370824675;  // std dev = 1.820, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.15852226371899608;  // std dev = 0.905, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return 3.9628835041382725E-4;  // std dev = 7.777, 448.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=122 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.38303796068741935;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.11473118949901917;  // std dev = 2.142, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.020843807506341096;  // std dev = 2.964, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.859', 'seconds']
Refined model CLL: -0.253557


******************************************
Best model found
******************************************
Results 

CLL : -0.247035 

AUC ROC : 0.961715 

AUC PR : 0.289258 

Precision : 0.3875 

Recall : 0.336957 

F1 : 0.360465 

Total Learning Time : 23.4 

Total Inference Time : 20.592280864715576 

Total revision time: 48.97949678230285
Best scored revision CLL: -0.253557


Results 

CLL : -0.247035 

AUC ROC : 0.961715 

AUC PR : 0.289258 

Precision : 0.3875 

Recall : 0.336957 

F1 : 0.360465 

Total Learning Time : 59.70027143287658 

Total Inference Time : 20.592280864715576 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.049
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20012424374148371;  // std dev = 13.501, 810.000 (wgt'ed) examples reached here.  /* #neg=533 #pos=277 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14556034167506668;  // std dev = 10.079, 472.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=148 */
%   | | | else return 0.1569380473489769;  // std dev = 9.332, 397.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=129 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12048691219058345;  // std dev = 8.469, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
%   | | | else return 0.1289380501283005;  // std dev = 10.852, 542.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=173 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.17349568074883545;  // std dev = 6.482, 178.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=68 */
%   | | | else return 0.1392438451734419;  // std dev = 11.655, 597.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=209 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08580364836017289;  // std dev = 13.709, 861.000 (wgt'ed) examples reached here.  /* #neg=584 #pos=277 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07499979729704341;  // std dev = 13.657, 848.000 (wgt'ed) examples reached here.  /* #neg=571 #pos=277 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7325148934532476;  // std dev = 0.022, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else return -0.2674851065467532;  // std dev = 0.031, 208.000 (wgt'ed) examples reached here.  /* #neg=208 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05346984952373617;  // std dev = 7.389, 252.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=80 */
%   | | | else return 0.04482971059331297;  // std dev = 8.005, 299.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=93 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.033205108677743664;  // std dev = 6.618, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
%   | | | else return 0.057245446502834064;  // std dev = 10.750, 521.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=173 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031990247025017245;  // std dev = 12.698, 859.000 (wgt'ed) examples reached here.  /* #neg=582 #pos=277 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019317537335715673;  // std dev = 12.742, 880.000 (wgt'ed) examples reached here.  /* #neg=603 #pos=277 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.688', 'seconds']
Parameter learned model CLL:-0.325175 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.501, 533, 277]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [10.079, 324, 148], 'false,false,false,false': [9.332, 268, 129]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.469, 231, 104], 'false,false,false,false': [10.852, 369, 173]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.482, 110, 68], 'false,false,false,false': [11.655, 388, 209]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.709, 584, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.657, 571, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 104], 'true,false': [0.031, 208, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.389, 172, 80], 'false,false,false,false': [8.005, 206, 93]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.618, 221, 104], 'false,false,false,false': [10.75, 348, 173]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.698, 582, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.742, 603, 277]}]
{'': [nan, 0.22502819692120296], 'false': [nan, 0.22502819692120388], 'false,false': [nan, 0.22502819692120296], 'false,false,false': [nan, 0.22502819692120388]}
{'': [nan, 0.21715104461168402], 'false': [nan, 0.21715104461168025], 'false,false': [nan, 0.21715104461168402], 'false,false,false': [0.21523987359954116, 0.21935295573222427]}
{'': [nan, 0.21607998117279337], 'false': [nan, 0.21607998117279337], 'false,false': [nan, 0.21607998117278868], 'false,false,false': [0.21408052168919936, 0.2172885274897396]}
{'': [nan, 0.22969235889610146], 'false': [nan, 0.22969235889610146], 'false,false': [nan, 0.22969235889610615], 'false,false,false': [0.23608130286580073, 0.22751799278131324]}
{'': [nan, 0.21826163241301771], 'false': [nan, 0.21826163241301771], 'false,false': [nan, 0.21826163241301547], 'false,false,false': [nan, 0.21826163241301547]}
{'': [nan, 0.2199468593024808], 'false': [nan, 0.2199468593024808], 'false,false': [nan, 0.21994685930247956], 'false,false,false': [nan, 0.21994685930248073]}
{'': [0.22222675357670615, 0.2154028342835553], 'true': [4.531354482887414e-06, 4.531354483527927e-06], 'false': [nan, 0.2154028342835553], 'false,false': [nan, 0.2154028342835553], 'false,false,false': [0.21667926429831358, 0.21429290500106163], 'true,true': [nan, 4.531354482887414e-06], 'true,true,false': [nan, 4.531354482887414e-06]}
{'': [nan, 0.18849289705888425], 'false': [nan, 0.18849289705888425], 'false,false': [nan, 0.18849289705887962], 'false,false,false': [0.13474705474460777, 0.22179755308744428]}
{'': [nan, 0.18770683968464547], 'false': [nan, 0.1877068396846412], 'false,false': [nan, 0.1877068396846412], 'false,false,false': [nan, 0.1877068396846412]}
{'': [nan, 0.18450623623162635], 'false': [nan, 0.18450623623162635], 'false,false': [nan, 0.18450623623162482], 'false,false,false': [nan, 0.18450623623162482]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 52.836
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995116;  // std dev = 2.15e-07, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.16370449065506648;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.07288554765910848;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( location(A, H), complex(A, I) )
%   | | | then return 0.13040024400003628;  // std dev = 6.152, 191.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=52 */
%   | | | else return 0.19406624776100742;  // std dev = 9.291, 387.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=130 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6631928017812935;  // std dev = 0.341, 66.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=57 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15584473996385473;  // std dev = 0.131, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( phenotype(A, F), interaction(C, C) )
%   | | | then return 0.26647177525792265;  // std dev = 2.348, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.15974965303394464;  // std dev = 9.270, 401.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=132 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.7218316713857634;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.109721787310886;  // std dev = 0.436, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6083623010998432;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.1371824684209192;  // std dev = 4.016, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | | else return 0.22402514294614284;  // std dev = 4.654, 92.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(C, C) )
%   | | then return 0.5765788407062827;  // std dev = 0.166, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.11293579404840651;  // std dev = 0.926, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.6772853627971038;  // std dev = 0.176, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.5826080038940757;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, A) )
%   | then return -0.12716603262343587;  // std dev = 0.099, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( enzyme(A, I), complex(G, J) )
%   | | | then return 0.16098733925397346;  // std dev = 2.712, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.06059310933813965;  // std dev = 4.523, 126.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=31 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5360813930673973;  // std dev = 1.287, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.12352068195675336;  // std dev = 10.891, 563.000 (wgt'ed) examples reached here.  /* #neg=386 #pos=177 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4222114544833708;  // std dev = 0.248, 46.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=43 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), location(D, F) )
%   | | then if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.14543341918318722;  // std dev = 1.273, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.03499784639830771;  // std dev = 2.725, 72.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=11 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.5679750371117421;  // std dev = 1.885, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.03888668731164402;  // std dev = 8.324, 396.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=96 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(J, B) )
%   | | | then return 0.4380402960042571;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04715617363658648;  // std dev = 4.083, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.02996144262130007;  // std dev = 2.105, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.13819761996418525;  // std dev = 6.459, 185.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=65 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3810692364233287;  // std dev = 0.120, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.5742519923441651;  // std dev = 0.863, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.03631233779682549;  // std dev = 1.286, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.14725132214700642;  // std dev = 0.396, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return 0.044476345902821145;  // std dev = 5.367, 163.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=42 */
%   | else if ( interaction(H, A) )
%   | | then if ( enzyme(H, I), enzyme(A, I) )
%   | | | then return -0.0759635581070344;  // std dev = 1.431, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.12313363116918566;  // std dev = 9.749, 429.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=154 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.440866399433754;  // std dev = 1.144, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.21597282217740105;  // std dev = 1.319, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2149626448821674;  // std dev = 0.213, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11372039015385764;  // std dev = 0.060, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return 0.03610063060044893;  // std dev = 0.339, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.03372919998367254;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.4112106531955511;  // std dev = 0.097, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( complex(A, H), complex(F, H) )
%   | | | then return -0.033367560799733326;  // std dev = 2.327, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.0679747393959823;  // std dev = 9.598, 438.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=138 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.158629496768418;  // std dev = 3.236, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.076594357313394;  // std dev = 4.224, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.556485970259175;  // std dev = 0.231, 105.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=104 */
%   | else return -0.21770504021862302;  // std dev = 0.093, 216.000 (wgt'ed) examples reached here.  /* #neg=216 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( location(G, E), interaction(A, H) )
%   | | | then return 0.4099786175469318;  // std dev = 1.340, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return -0.18915351140260675;  // std dev = 1.305, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.14846328969616995;  // std dev = 0.238, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return 0.07762212857755303;  // std dev = 8.572, 331.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=116 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then return -0.049476521914264604;  // std dev = 0.347, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.004100923237732634;  // std dev = 2.475, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | | else return 0.09091541929668065;  // std dev = 2.430, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(D, E) )
%   | then if ( phenotype(C, F), phenotype(A, G) )
%   | | then return 0.1557034606927043;  // std dev = 0.129, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return -0.5616662468969021;  // std dev = 0.331, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.01295319869171482;  // std dev = 0.857, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.21645590276581944;  // std dev = 0.150, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(A, A) )
%   | then return -0.09932377205465437;  // std dev = 0.088, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( complex(K, J), location(A, L) )
%   | | | then return -0.06887358530836178;  // std dev = 2.447, 92.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=14 */
%   | | | else return 0.06838547933859497;  // std dev = 3.166, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.05283170489661939;  // std dev = 9.972, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
%   | | | else return -0.02429251399494692;  // std dev = 2.955, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.12825943556219002;  // std dev = 1.774, 43.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=34 */
%   | | | else return 0.5113939213404916;  // std dev = 3.713, 143.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=124 */
%   | | else return -0.22491003057283113;  // std dev = 0.068, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.21492032317180473;  // std dev = 0.075, 236.000 (wgt'ed) examples reached here.  /* #neg=236 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.5544255364828027;  // std dev = 0.224, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else return -0.23366679724190598;  // std dev = 0.061, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.18070847653981262;  // std dev = 0.075, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.04245295136016677;  // std dev = 3.283, 114.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=20 */
%   | | | else return -0.006458344169114764;  // std dev = 5.509, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.10385763641366307;  // std dev = 0.176, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.18483291287616851;  // std dev = 0.312, 61.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=48 */
%   | | else return -0.04909566621108761;  // std dev = 0.292, 357.000 (wgt'ed) examples reached here.  /* #neg=296 #pos=61 */
%   else if ( location(A, G), phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.43245216191630914;  // std dev = 0.297, 76.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=67 */
%   | | else return -0.22627253410418122;  // std dev = 0.036, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5232896341411772;  // std dev = 0.764, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.21238058295653411;  // std dev = 0.327, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.19942502772451132;  // std dev = 1.340, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.08201408479982437;  // std dev = 4.694, 102.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.916', 'seconds']
Refined model CLL: -0.238636


******************************************
Best model found
******************************************
Results 

CLL : -0.237763 

AUC ROC : 0.959492 

AUC PR : 0.464148 

Precision : 0.447917 

Recall : 0.467391 

F1 : 0.457447 

Total Learning Time : 52.836 

Total Inference Time : 74.32548642158508 

Total revision time: 132.76633215904235
Best scored revision CLL: -0.238636


Results 

CLL : -0.237763 

AUC ROC : 0.959492 

AUC PR : 0.464148 

Precision : 0.447917 

Recall : 0.467391 

F1 : 0.457447 

Total Learning Time : 143.48710680961608 

Total Inference Time : 74.32548642158508 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.102
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1745331158904718;  // std dev = 6.187, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14554770064486258;  // std dev = 4.625, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.16022302532018678;  // std dev = 4.109, 77.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11934267417994929;  // std dev = 3.908, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | | | else return 0.14684571903600296;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13795864276168243;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.16133493103504276;  // std dev = 5.204, 116.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09264109671869213;  // std dev = 6.137, 171.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08102160238839783;  // std dev = 6.114, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7375562368156026;  // std dev = 0.017, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return -0.26249965161705413;  // std dev = 0.025, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09068009653473183;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return -0.0010311288796925155;  // std dev = 3.415, 59.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04052206124104864;  // std dev = 3.039, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.13089377843523434;  // std dev = 4.469, 83.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02262353184951432;  // std dev = 5.674, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03399310864335401;  // std dev = 5.589, 165.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.600', 'seconds']
Parameter learned model CLL:-0.337005 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.187, 121, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.625, 69, 31], 'false,false,false,false': [4.109, 52, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.908, 50, 22], 'false,false,false,false': [4.761, 68, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.924, 25, 13], 'false,false,false,false': [5.204, 73, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.137, 115, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.114, 112, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 22], 'true,false': [0.025, 48, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.394, 32, 18], 'false,false,false,false': [3.415, 43, 16]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.039, 46, 22], 'false,false,false,false': [4.469, 49, 34]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.674, 117, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.589, 109, 56]}]
{'': [nan, 0.2162852309361937], 'false': [nan, 0.21628523093619448], 'false,false': [nan, 0.2162852309361937], 'false,false,false': [nan, 0.21628523093619448]}
{'': [nan, 0.21628523093619487], 'false': [nan, 0.21628523093619223], 'false,false': [nan, 0.21628523093619487], 'false,false,false': [0.21389999999999862, 0.21926125822229586]}
{'': [nan, 0.2182213512784148], 'false': [nan, 0.2182213512784148], 'false,false': [nan, 0.21822135127841616], 'false,false,false': [0.21210828325202047, 0.22222345778553473]}
{'': [nan, 0.23149048675753997], 'false': [nan, 0.23149048675753997], 'false,false': [nan, 0.2314904867575396], 'false,false,false': [0.22506925207756256, 0.2334591561476683]}
{'': [nan, 0.22026971393838982], 'false': [nan, 0.22026971393838982], 'false,false': [nan, 0.2202697139383918], 'false,false,false': [nan, 0.2202697139383918]}
{'': [nan, 0.22253454910784973], 'false': [nan, 0.22253454910784973], 'false,false': [nan, 0.22253454910785], 'false,false,false': [nan, 0.2225345491078503]}
{'': [0.21554749932536424, 0.2147582818462517], 'true': [1.3156253203386568e-05, 1.3228094091904952e-05], 'false': [nan, 0.2147582818462517], 'false,false': [nan, 0.2147582818462517], 'false,false,false': [0.23040000000000024, 0.197644355070382], 'true,true': [nan, 1.3156253203386568e-05], 'true,true,false': [nan, 1.3156253203386568e-05]}
{'': [nan, 0.19548213400252348], 'false': [nan, 0.19548213400252348], 'false,false': [nan, 0.1954821340025237], 'false,false,false': [0.13582810177975188, 0.24067744143723976]}
{'': [nan, 0.1861026076148916], 'false': [nan, 0.18610260761489153], 'false,false': [nan, 0.18610260761489153], 'false,false,false': [nan, 0.18610260761489153]}
{'': [nan, 0.1892987690241414], 'false': [nan, 0.1892987690241414], 'false,false': [nan, 0.18929876902414136], 'false,false,false': [nan, 0.18929876902414136]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.433
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(C, E), interaction(C, F) )
%   | then return 0.1438632208137979;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, L), interaction(L, I) )
%   | | | then return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.32873717039362993;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(M, A) )
%   | | then return 0.16997689208875832;  // std dev = 0.463, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7615684589938124;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( complex(A, E), phenotype(A, F) )
%   | then if ( complex(G, E), interaction(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.7863267075847387;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.13375300372173066;  // std dev = 0.986, 39.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=1 */
%   | | else return 0.33617280430421;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.7025999221952257;  // std dev = 0.924, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.08649909012926371;  // std dev = 4.144, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.12190425274303243;  // std dev = 1.808, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return -0.05452376862553757;  // std dev = 1.333, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.57511917103806;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(C, E), interaction(A, F) )
%   | | then return 0.6212133740543926;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7019655227813858;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.6336797851325174;  // std dev = 2.296, 47.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=41 */
%   | | | else return -0.03408897702653935;  // std dev = 1.764, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else return -0.17171685186125313;  // std dev = 0.310, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return -0.19792587746693796;  // std dev = 0.116, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.16381951132287184;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.38968321386339094;  // std dev = 0.289, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16850204178696343;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(D, D), interaction(C, D) )
%   | | | then return 0.26146841997622305;  // std dev = 2.087, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.033181728083022756;  // std dev = 2.836, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( complex(A, G) )
%   | | then return 0.0654017612878607;  // std dev = 0.747, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.14769198714431245;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then return 0.7995441218118828;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.4053148997429375;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11540861469617007;  // std dev = 1.115, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.33091597768021597;  // std dev = 0.221, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(C, A) )
%   | | then return -0.18528925135304283;  // std dev = 0.093, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(E, A), interaction(E, C) )
%   | | | then return 0.4835410137666491;  // std dev = 0.738, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.09764971377226628;  // std dev = 1.458, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.4309919263552242;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.44858047874787155;  // std dev = 1.588, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return -0.17561131517156653;  // std dev = 0.075, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.4107404463677188;  // std dev = 0.977, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.19349923500639732;  // std dev = 2.120, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.31518173291869833;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(D, A), phenotype(A, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(D, D), complex(D, G) )
%   | | | then return 0.05259606353312113;  // std dev = 0.718, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10894640493961072;  // std dev = 1.395, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( phenotype(D, E) )
%   | | | then return -0.005088344688401767;  // std dev = 1.076, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.0923887191882566;  // std dev = 1.506, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.49665230577569885;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16330818645689552;  // std dev = 0.215, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.18877023142522614;  // std dev = 2.108, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.005040750820518882;  // std dev = 1.546, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(A, G), complex(G, F) )
%   | | | then return 0.26824336893734685;  // std dev = 0.202, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3833544298855263;  // std dev = 0.340, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5436271516951818;  // std dev = 0.184, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.15812086359096397;  // std dev = 0.093, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, J), phenotype(A, J) )
%   | | | then return 0.3852451768243609;  // std dev = 1.033, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.10800900021550212;  // std dev = 2.321, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | else return -0.1832244677925785;  // std dev = 0.064, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then return -0.20153153465914866;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.05190156187315755;  // std dev = 0.831, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2012283745382833;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( complex(D, F), interaction(E, G) )
%   | | then if ( interaction(G, G), interaction(H, A) )
%   | | | then return -0.03883721154736228;  // std dev = 1.183, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.15127644203366294;  // std dev = 1.041, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(I, A), phenotype(D, J) )
%   | | | then return -0.04405325321986743;  // std dev = 0.798, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.21373748791139455;  // std dev = 0.335, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( phenotype(A, M), enzyme(K, N) )
%   | | | then return 0.17102419907583824;  // std dev = 0.802, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.022529704025220424;  // std dev = 1.615, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return 0.054908209967448066;  // std dev = 1.275, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.19551475005277408;  // std dev = 1.511, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.171150048262127;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( phenotype(A, D) )
%   | then if ( enzyme(A, E), interaction(A, F) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.3289382246693559;  // std dev = 0.671, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.019997247748043626;  // std dev = 0.782, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.292956040708285;  // std dev = 0.888, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.1719992799569366;  // std dev = 0.490, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(J, K), location(A, L) )
%   | | | then return 0.03508904376260279;  // std dev = 2.097, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return -0.1472715378918239;  // std dev = 0.761, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.14495356188089092;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.22136879507324778;  // std dev = 1.160, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), phenotype(C, D) )
%   | then return 0.1256447279357123;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.16364083150734324;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.20174051381359528;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(E, H), phenotype(A, I) )
%   | | | then return -0.016692711658174177;  // std dev = 1.202, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.15004780470752874;  // std dev = 1.127, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then if ( enzyme(K, L) )
%   | | | then return -0.16038461491992773;  // std dev = 0.632, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.015575170911274243;  // std dev = 1.117, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(M, A), interaction(A, N) )
%   | | | then return 0.10722987501049452;  // std dev = 1.067, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.022884430621710364;  // std dev = 2.334, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.007', 'seconds']
Refined model CLL: -0.198342


******************************************
Best model found
******************************************
Results 

CLL : -0.216696 

AUC ROC : 0.975472 

AUC PR : 0.350174 

Precision : 0.2397 

Recall : 0.744186 

F1 : 0.362606 

Total Learning Time : 18.433 

Total Inference Time : 10.552498817443848 

Total revision time: 31.636495265960694
Best scored revision CLL: -0.198342


Results 

CLL : -0.216696 

AUC ROC : 0.975472 

AUC PR : 0.350174 

Precision : 0.2397 

Recall : 0.744186 

F1 : 0.362606 

Total Learning Time : 42.35726991653442 

Total Inference Time : 10.552498817443848 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.246
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19647228839292663;  // std dev = 8.647, 334.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=113 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14133438357422892;  // std dev = 6.599, 204.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=63 */
%   | | | else return 0.1614582225835168;  // std dev = 5.792, 152.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13341943858435515;  // std dev = 5.878, 158.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=51 */
%   | | | else return 0.1748635500610567;  // std dev = 6.277, 170.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=62 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1699480942288918;  // std dev = 4.526, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
%   | | | else return 0.10174267241327568;  // std dev = 7.384, 251.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=80 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09453953944199857;  // std dev = 8.699, 342.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09010046406834037;  // std dev = 8.614, 329.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=113 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7292922021958091;  // std dev = 0.032, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.27138069195591724;  // std dev = 0.045, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1016151198102418;  // std dev = 4.346, 81.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=30 */
%   | | | else return 0.09090790281368687;  // std dev = 4.513, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03467863086401107;  // std dev = 4.610, 157.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=51 */
%   | | | else return 0.046714651161802755;  // std dev = 6.412, 184.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=62 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06769065884988738;  // std dev = 7.667, 304.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=113 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016459343503483485;  // std dev = 7.905, 341.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=113 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.576', 'seconds']
Parameter learned model CLL:-0.342926 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.647, 221, 113]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.599, 141, 63], 'false,false,false,false': [5.792, 102, 50]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.878, 107, 51], 'false,false,false,false': [6.277, 108, 62]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.526, 54, 33], 'false,false,false,false': [7.384, 171, 80]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.699, 229, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.614, 216, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.032, 0, 51], 'true,false': [0.045, 110, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.346, 51, 30], 'false,false,false,false': [4.513, 56, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.61, 106, 51], 'false,false,false,false': [6.412, 122, 62]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.667, 191, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.905, 228, 113]}]
{'': [nan, 0.223860661909716], 'false': [nan, 0.22386066190971385], 'false,false': [nan, 0.223860661909716], 'false,false,false': [nan, 0.22386066190971385]}
{'': [nan, 0.2166629844716568], 'false': [nan, 0.21666298447165672], 'false,false': [nan, 0.2166629844716568], 'false,false,false': [0.2134515570934247, 0.22074099722991597]}
{'': [nan, 0.2259030360847301], 'false': [nan, 0.2259030360847301], 'false,false': [nan, 0.22590303608473034], 'false,false,false': [0.2186885067641517, 0.23178091709921753]}
{'': [nan, 0.22279644746759028], 'false': [nan, 0.22279644746759028], 'false,false': [nan, 0.2227964474675913], 'false,false,false': [0.23543400713436355, 0.21721869507688193]}
{'': [nan, 0.2212409409067785], 'false': [nan, 0.2212409409067785], 'false,false': [nan, 0.2212409409067768], 'false,false,false': [nan, 0.2212409409067768]}
{'': [nan, 0.2255212419449898], 'false': [nan, 0.2255212419449898], 'false,false': [nan, 0.22552124194498965], 'false,false,false': [nan, 0.22552124194498954]}
{'': [0.21673705124766035, 0.23229207498487214], 'false': [nan, 0.23229207498487214], 'false,false': [nan, 0.23229207498487214], 'false,false,false': [0.2331961591220843, 0.23140495867768618], 'true': [2.0441818665810106e-05, 1.8116606587945872e-05], 'true,true': [nan, 2.0441818665810106e-05], 'true,true,false': [nan, 2.0441818665810106e-05]}
{'': [nan, 0.1829388654045447], 'false': [nan, 0.1829388654045447], 'false,false': [nan, 0.18293886540454457], 'false,false,false': [0.13537857264351283, 0.22345350442599007]}
{'': [nan, 0.19334533458062414], 'false': [nan, 0.1933453345806242], 'false,false': [nan, 0.1933453345806242], 'false,false,false': [nan, 0.1933453345806242]}
{'': [nan, 0.18323076942780933], 'false': [nan, 0.18323076942780933], 'false,false': [nan, 0.1832307694278087], 'false,false,false': [nan, 0.1832307694278087]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 42.217
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.019439257680157508;  // std dev = 2.896, 62.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=10 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.21635789032339198;  // std dev = 3.925, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.14148226843284573;  // std dev = 6.046, 180.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7261635345062833;  // std dev = 0.110, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15333910931301542;  // std dev = 0.034, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(A, H), interaction(A, F) )
%   | | | then return -0.04856678486089683;  // std dev = 1.334, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.1573817738671022;  // std dev = 7.071, 233.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=75 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(I, K), enzyme(A, K) )
%   | | | then return 0.0012490203338442973;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.45435176413167694;  // std dev = 2.205, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.158158423518221;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.24003892579332184;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6579532002639503;  // std dev = 0.210, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else if ( interaction(F, D), interaction(G, F) )
%   | | then return 0.008614813449444193;  // std dev = 0.380, 92.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=18 */
%   | | else if ( complex(D, C) )
%   | | | then return 0.30631796393405875;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8135467434322257;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return 0.0031742666479056586;  // std dev = 0.368, 75.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=15 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( phenotype(K, L), enzyme(K, M) )
%   | | | then return -0.08523056125188146;  // std dev = 1.664, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.16274534591728432;  // std dev = 2.909, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.21415765090576008;  // std dev = 4.126, 71.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=29 */
%   | | | else return 0.08891268745971327;  // std dev = 1.465, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.5962747924606344;  // std dev = 0.244, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(F, A), phenotype(F, C) )
%   | | then return -0.09092303215257345;  // std dev = 0.268, 38.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=3 */
%   | | else if ( interaction(G, A), complex(A, H) )
%   | | | then return 0.4749680267202877;  // std dev = 1.374, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.11387062219917862;  // std dev = 2.477, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.3664626497493295;  // std dev = 0.288, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(J, A) )
%   | | then if ( enzyme(J, K), phenotype(A, L) )
%   | | | then return 0.14558082991936827;  // std dev = 2.170, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.029278770871534188;  // std dev = 5.839, 202.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=48 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.5729582389205045;  // std dev = 0.809, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.060875977059712885;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, E) )
%   | | then return 0.2906215505457522;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4317537802283037;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, A) )
%   | | then return 0.45290848677237194;  // std dev = 0.139, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5768244759805502;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.35257721858116425;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(G, I), complex(A, I) )
%   | | | then return -0.04399868692939144;  // std dev = 1.828, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.10762774709423906;  // std dev = 6.336, 198.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=65 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.13167417071998216;  // std dev = 1.784, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.044915475745474845;  // std dev = 2.964, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(E, A) )
%   | then return 0.20236228373703544;  // std dev = 0.257, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.35913999465874086;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( phenotype(A, F), location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, F) )
%   | | | then return 0.6241764420397564;  // std dev = 1.856, 53.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=50 */
%   | | | else return -0.22475441609206825;  // std dev = 0.260, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.2163287788598838;  // std dev = 0.052, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.3642292333980139;  // std dev = 0.722, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.12118355432516249;  // std dev = 1.695, 47.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=4 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return -0.1476149420964046;  // std dev = 1.206, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.06436025409486029;  // std dev = 4.775, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.02967721220509611;  // std dev = 0.348, 145.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=51 */
%   else if ( interaction(D, A) )
%   | then if ( complex(D, E), interaction(F, D) )
%   | | then if ( interaction(D, F), location(A, G) )
%   | | | then return 0.015452195789112331;  // std dev = 3.464, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | | else return 0.22477894565701462;  // std dev = 1.904, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.13817369645240762;  // std dev = 1.017, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.001627825109142396;  // std dev = 3.272, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5810365545623728;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.3199136431656957;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return -0.020356475626239323;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1462016959566325;  // std dev = 1.485, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.23142482059103914;  // std dev = 0.231, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.5794577899889931;  // std dev = 2.056, 81.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=77 */
%   | | else if ( interaction(D, F), interaction(A, F) )
%   | | | then return 0.3657851833610776;  // std dev = 1.327, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.24007146564227222;  // std dev = 0.580, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then return -0.1662634009293682;  // std dev = 0.280, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.21965995105905425;  // std dev = 0.317, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( enzyme(A, I) )
%   | then return 0.3163662871345317;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then return -0.1935103417239644;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.045413608143205775;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, C) )
%   | then return 0.2636408187667983;  // std dev = 0.167, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else if ( interaction(C, A) )
%   | | then return -0.15600626917434748;  // std dev = 0.127, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.04871727390515357;  // std dev = 0.312, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.4011733076036292;  // std dev = 0.176, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.15491669068639863;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3567879497532501;  // std dev = 1.359, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return -0.17809022964064983;  // std dev = 0.313, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return -0.19138193821686472;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07817563374685374;  // std dev = 3.590, 87.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=33 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14167682858603575;  // std dev = 0.173, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(G, E) )
%   | | | then return 0.220960109235304;  // std dev = 0.145, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.0862409978955677;  // std dev = 1.574, 65.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=6 */
%   | | else if ( interaction(H, E), enzyme(H, I) )
%   | | | then return 0.07636566259231511;  // std dev = 1.783, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return -0.043342593462027325;  // std dev = 1.345, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( interaction(K, K), interaction(L, A) )
%   | | | then return 0.1836425126440053;  // std dev = 0.865, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.12359771706786149;  // std dev = 0.793, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return -0.04217006839594073;  // std dev = 1.352, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.0974779616032183;  // std dev = 3.838, 100.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.544', 'seconds']
Refined model CLL: -0.221997


******************************************
Best model found
******************************************
Results 

CLL : -0.203344 

AUC ROC : 0.977938 

AUC PR : 0.368816 

Precision : 0.335484 

Recall : 0.604651 

F1 : 0.431535 

Total Learning Time : 42.217 

Total Inference Time : 45.36104226112366 

Total revision time: 90.9195999507904
Best scored revision CLL: -0.221997


Results 

CLL : -0.203344 

AUC ROC : 0.977938 

AUC PR : 0.368816 

Precision : 0.335484 

Recall : 0.604651 

F1 : 0.431535 

Total Learning Time : 101.64037460136413 

Total Inference Time : 45.36104226112366 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.483
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19547428440090875;  // std dev = 10.583, 501.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=169 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1511684847209342;  // std dev = 7.656, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
%   | | | else return 0.17848329953574932;  // std dev = 7.369, 240.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=83 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1725911566452372;  // std dev = 6.768, 198.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=72 */
%   | | | else return 0.1294652274169101;  // std dev = 8.113, 302.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=97 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10142073069967347;  // std dev = 5.475, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | | else return 0.1231554887623425;  // std dev = 9.096, 370.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=125 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11407184295973186;  // std dev = 10.479, 483.000 (wgt'ed) examples reached here.  /* #neg=314 #pos=169 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05568571804783213;  // std dev = 10.777, 540.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=169 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.715516487180897;  // std dev = 0.990, 73.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=72 */
%   | else return -0.27055895688410386;  // std dev = 0.054, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08136793748474849;  // std dev = 5.248, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | | | else return 0.05722216882758371;  // std dev = 6.091, 169.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=55 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07357472797439495;  // std dev = 5.302, 193.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=72 */
%   | | | else return 0.03768228531938716;  // std dev = 8.139, 306.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=97 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04703323277288531;  // std dev = 9.637, 493.000 (wgt'ed) examples reached here.  /* #neg=324 #pos=169 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023886178528888406;  // std dev = 9.733, 515.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.533', 'seconds']
Parameter learned model CLL:-0.332327 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.583, 332, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.656, 184, 86], 'false,false,false,false': [7.369, 157, 83]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.768, 126, 72], 'false,false,false,false': [8.113, 205, 97]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.475, 94, 44], 'false,false,false,false': [9.096, 245, 125]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.479, 314, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.777, 371, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.99, 1, 72], 'true,false': [0.054, 136, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.248, 80, 42], 'false,false,false,false': [6.091, 114, 55]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.302, 121, 72], 'false,false,false,false': [8.139, 209, 97]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.637, 324, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.733, 346, 169]}]
{'': [nan, 0.22353695802009074], 'false': [nan, 0.22353695802008852], 'false,false': [nan, 0.22353695802009074], 'false,false,false': [nan, 0.22353695802008852]}
{'': [nan, 0.2215647827758533], 'false': [nan, 0.22156478277585376], 'false,false': [nan, 0.2215647827758533], 'false,false,false': [0.21706447187928718, 0.2262326388888899]}
{'': [nan, 0.2236886005774478], 'false': [nan, 0.2236886005774478], 'false,false': [nan, 0.22368860057744788], 'false,false,false': [0.2313469663663088, 0.21793105388295664]}
{'': [nan, 0.2219531175189402], 'false': [nan, 0.2219531175189402], 'false,false': [nan, 0.22195311751894042], 'false,false,false': [0.21718126444024274, 0.22360456069374238]}
{'': [nan, 0.22733063126888647], 'false': [nan, 0.22733063126888647], 'false,false': [nan, 0.22733063126888647], 'false,false,false': [nan, 0.22733063126888647]}
{'': [nan, 0.21506580687949312], 'false': [nan, 0.21506580687949312], 'false,false': [nan, 0.21506580687949423], 'false,false,false': [nan, 0.21506580687949295]}
{'': [0.22570401267002282, 0.22227795003544193], 'true': [0.013431232973431018, 2.173045115739987e-05], 'false': [nan, 0.22227795003544193], 'false,false': [nan, 0.22227795003544193], 'false,false,false': [0.22574576726686435, 0.21953012849690223], 'true,true': [nan, 0.013431232973431018], 'true,true,false': [nan, 0.013431232973431018]}
{'': [nan, 0.1894094490473077], 'false': [nan, 0.1894094490473077], 'false,false': [nan, 0.18940944904730825], 'false,false,false': [0.1456674145330496, 0.21650011154556204]}
{'': [nan, 0.18836303833349394], 'false': [nan, 0.18836303833349088], 'false,false': [nan, 0.18836303833349088], 'false,false,false': [nan, 0.18836303833349088]}
{'': [nan, 0.1839619202093386], 'false': [nan, 0.1839619202093386], 'false,false': [nan, 0.18396192020933474], 'false,false,false': [nan, 0.18396192020933474]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 26.296
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.98e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return 0.11305089588382522;  // std dev = 4.401, 102.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | | | else return 0.18131966680682995;  // std dev = 8.470, 328.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.6736934902322311;  // std dev = 0.316, 41.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=36 */
%   | else if ( interaction(C, A) )
%   | | then return -0.15402217773261123;  // std dev = 0.119, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( interaction(D, D), interaction(E, A) )
%   | | | then return 0.3110217846355015;  // std dev = 2.265, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.09244767928216839;  // std dev = 4.163, 93.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=24 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.6480448407823828;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( phenotype(A, G), interaction(A, H) )
%   | | then if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.8407526943348548;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2286247661224648;  // std dev = 1.506, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.0030703810262165798;  // std dev = 1.520, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.1617426625274448;  // std dev = 7.138, 232.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=76 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(C, E), interaction(C, C) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.5873435578626934;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.15713933255510318;  // std dev = 0.430, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | else if ( interaction(F, C), enzyme(F, G) )
%   | | then if ( phenotype(C, H), complex(F, I) )
%   | | | then return 0.08221942082490208;  // std dev = 3.476, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.20884725493480505;  // std dev = 3.187, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | else return 0.019764757851769194;  // std dev = 0.402, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.617455242875943;  // std dev = 0.060, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.5729277032086343;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.03839030097998042;  // std dev = 1.626, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | | else return 0.14385791435114736;  // std dev = 6.789, 210.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=69 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( enzyme(C, D), location(C, E) )
%   | then if ( complex(C, F) )
%   | | then return 0.3335454437360318;  // std dev = 1.012, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.09369102090509256;  // std dev = 0.395, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0.036581006075943195;  // std dev = 0.372, 114.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=30 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I), enzyme(A, I) )
%   | | | then return 0.6936396835306599;  // std dev = 1.226, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | | else return 0.3175529946054657;  // std dev = 5.741, 145.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=80 */
%   | | else return -0.20273152843099304;  // std dev = 0.399, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return -0.21197194578376752;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1353806614400902;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.05681310631014108;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(C, E), phenotype(A, F) )
%   | then return 0.1022096773177081;  // std dev = 0.401, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | else return -0.025786392398303663;  // std dev = 0.314, 93.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=22 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then if ( interaction(H, A), enzyme(G, I) )
%   | | then return 0.3744555404694043;  // std dev = 0.976, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( recursion_proteinclass(G, B) )
%   | | | then return 0.41015479461071847;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08106216790367643;  // std dev = 2.918, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.568828879006819;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.009384645673673947;  // std dev = 3.090, 70.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=16 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.11148593419999848;  // std dev = 6.268, 215.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=75 */
%   | | | else return -0.04667005029820891;  // std dev = 0.984, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.5929368989373798;  // std dev = 0.126, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else return -0.21585458847444822;  // std dev = 0.068, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( enzyme(A, F), interaction(A, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(G, I), enzyme(H, F) )
%   | | | then return 0.4697824086682731;  // std dev = 0.195, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14050041750817355;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.034060170734414155;  // std dev = 0.301, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( enzyme(J, L), phenotype(J, M) )
%   | | | then return 0.028722552578177202;  // std dev = 3.090, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | | else return 0.12206441669353456;  // std dev = 5.939, 190.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=74 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.2428463569991504;  // std dev = 2.152, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.4949052748406526;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.28315408786052654;  // std dev = 0.211, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.025773398344308307;  // std dev = 0.976, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.521829270149148;  // std dev = 0.130, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.18903173836644893;  // std dev = 0.063, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3305513759353269;  // std dev = 0.125, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5276186066930039;  // std dev = 1.244, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return -0.21136643398918487;  // std dev = 0.468, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( location(A, K) )
%   | | | then return 0.07025150467537766;  // std dev = 6.198, 216.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=72 */
%   | | | else return -0.05639907821633925;  // std dev = 1.546, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then if ( complex(A, D) )
%   | | then return 0.2157619294812053;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.0058915644340380435;  // std dev = 0.648, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.29841516248995936;  // std dev = 0.087, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( complex(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3499944754816726;  // std dev = 0.103, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.16392008776486386;  // std dev = 0.405, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( phenotype(J, K), complex(J, L) )
%   | | | then return 0.039238552691429646;  // std dev = 3.158, 101.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=30 */
%   | | | else return -0.11490407192834146;  // std dev = 2.038, 55.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=7 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.038017414605417056;  // std dev = 5.868, 213.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=70 */
%   | | | else return 0.11348617359181368;  // std dev = 2.589, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.18577907352430748;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.17415158385726776;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, E), interaction(E, F) )
%   | | then return 0.2188478369286447;  // std dev = 0.109, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.20395893111772842;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.32869342229814247;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.21735598373463513;  // std dev = 0.060, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11728533003077937;  // std dev = 0.104, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.042580314326537645;  // std dev = 1.732, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | | | else return 0.04098208538984906;  // std dev = 7.244, 359.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=114 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, C), complex(A, F) )
%   | | then return -0.15019516834306068;  // std dev = 0.818, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16434063232411605;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20079329521979516;  // std dev = 0.059, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.28079920605202374;  // std dev = 0.099, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.143315709229275;  // std dev = 0.047, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.31810870314669387;  // std dev = 1.334, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return -0.007480555089567385;  // std dev = 6.290, 316.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=79 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.17601514833017573;  // std dev = 1.869, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return 0.007438040415967992;  // std dev = 2.297, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.212', 'seconds']
Refined model CLL: -0.238805


******************************************
Best model found
******************************************
Results 

CLL : -0.240411 

AUC ROC : 0.958796 

AUC PR : 0.310004 

Precision : 0.331126 

Recall : 0.581395 

F1 : 0.421941 

Total Learning Time : 26.296 

Total Inference Time : 17.89904475212097 

Total revision time: 48.354317859649655
Best scored revision CLL: -0.238805


Results 

CLL : -0.240411 

AUC ROC : 0.958796 

AUC PR : 0.310004 

Precision : 0.331126 

Recall : 0.581395 

F1 : 0.421941 

Total Learning Time : 59.075092510223385 

Total Inference Time : 17.89904475212097 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.711
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18473853047523148;  // std dev = 12.337, 692.000 (wgt'ed) examples reached here.  /* #neg=466 #pos=226 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1536998200379573;  // std dev = 8.884, 363.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=116 */
%   | | | else return 0.14140316122022112;  // std dev = 8.729, 358.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=110 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15171493072176162;  // std dev = 7.964, 283.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=96 */
%   | | | else return 0.1679292058847875;  // std dev = 9.157, 366.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=130 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10327697893416853;  // std dev = 6.407, 190.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=60 */
%   | | | else return 0.14758448879427288;  // std dev = 10.300, 460.000 (wgt'ed) examples reached here.  /* #neg=294 #pos=166 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10575481850133195;  // std dev = 12.190, 660.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=226 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.061610673993416146;  // std dev = 12.418, 710.000 (wgt'ed) examples reached here.  /* #neg=484 #pos=226 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7363617224151654;  // std dev = 0.030, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else return -0.2637818360186021;  // std dev = 0.044, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05242810520294302;  // std dev = 6.146, 172.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=56 */
%   | | | else return 0.07346732023206497;  // std dev = 6.966, 215.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=74 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05453428403585566;  // std dev = 6.257, 280.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=96 */
%   | | | else return 0.052078643398585214;  // std dev = 9.286, 386.000 (wgt'ed) examples reached here.  /* #neg=256 #pos=130 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04150197743070249;  // std dev = 11.176, 671.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=226 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026702686385286546;  // std dev = 11.216, 686.000 (wgt'ed) examples reached here.  /* #neg=460 #pos=226 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.461', 'seconds']
Parameter learned model CLL:-0.333467 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.337, 466, 226]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.884, 247, 116], 'false,false,false,false': [8.729, 248, 110]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.964, 187, 96], 'false,false,false,false': [9.157, 236, 130]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.407, 130, 60], 'false,false,false,false': [10.3, 294, 166]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.19, 434, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.418, 484, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.03, 0, 96], 'true,false': [0.044, 206, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.146, 116, 56], 'false,false,false,false': [6.966, 141, 74]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.257, 184, 96], 'false,false,false,false': [9.286, 256, 130]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.176, 445, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.216, 460, 226]}]
{'': [nan, 0.21992883156804666], 'false': [nan, 0.2199288315680466], 'false,false': [nan, 0.21992883156804666], 'false,false,false': [nan, 0.2199288315680466]}
{'': [nan, 0.21520041705059678], 'false': [nan, 0.21520041705059487], 'false,false': [nan, 0.21520041705059678], 'false,false,false': [0.21744112803466323, 0.21285228301238718]}
{'': [nan, 0.22700206639070847], 'false': [nan, 0.22700206639070847], 'false,false': [nan, 0.22700206639071288], 'false,false,false': [0.22413856157853046, 0.22910155699207552]}
{'': [nan, 0.22679276475810517], 'false': [nan, 0.22679276475810517], 'false,false': [nan, 0.22679276475811166], 'false,false,false': [0.21606648199446118, 0.23064934046623287]}
{'': [nan, 0.22512730352508759], 'false': [nan, 0.22512730352508759], 'false,false': [nan, 0.22512730352509022], 'false,false,false': [nan, 0.22512730352509022]}
{'': [nan, 0.21720186076350187], 'false': [nan, 0.21720186076350187], 'false,false': [nan, 0.2172018607635008], 'false,false,false': [nan, 0.2172018607635023]}
{'': [0.2169040789959441, 0.2231007027093948], 'false': [nan, 0.2231007027093948], 'false,false': [nan, 0.2231007027093948], 'false,false,false': [0.21957815035154035, 0.22572201189832175], 'true': [9.084811686784397e-06, 9.287647871122125e-06], 'true,true': [nan, 9.084811686784397e-06], 'true,true,false': [nan, 9.084811686784397e-06]}
{'': [nan, 0.18824605137868966], 'false': [nan, 0.18824605137868966], 'false,false': [nan, 0.18824605137868858], 'false,false,false': [0.13982230863548367, 0.22336954717712063]}
{'': [nan, 0.18614418497555782], 'false': [nan, 0.18614418497555899], 'false,false': [nan, 0.18614418497555899], 'false,false,false': [nan, 0.18614418497555899]}
{'': [nan, 0.18338419698789282], 'false': [nan, 0.18338419698789282], 'false,false': [nan, 0.18338419698789343], 'false,false,false': [nan, 0.18338419698789343]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.002
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, D), complex(A, E) )
%   | | then if ( enzyme(C, F) )
%   | | | then return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, G), location(A, H) )
%   | | | then return 0.20297652130640864;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.006297083247660414;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.6981489350995119;  // std dev = 0.367, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then return 0.13771882757263104;  // std dev = 0.449, 186.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=52 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2280119487981412;  // std dev = 4.125, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | | else return 0.1655419312084629;  // std dev = 7.397, 257.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=79 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6697902786918002;  // std dev = 0.331, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16436928901294365;  // std dev = 0.076, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(F, C), phenotype(F, D) )
%   | | | then return 0.21512065745164086;  // std dev = 7.001, 210.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=80 */
%   | | | else return 0.10781340882975853;  // std dev = 4.620, 110.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7779040357927092;  // std dev = 0.172, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, H), complex(A, I) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.33007209641305874;  // std dev = 3.030, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return -0.17655206132330062;  // std dev = 0.231, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.2928568638238382;  // std dev = 2.444, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.12878391653221713;  // std dev = 4.817, 113.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(C, E), complex(A, F) )
%   | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.505928726569579;  // std dev = 0.336, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.049919080056307366;  // std dev = 2.531, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | | else return 0.4133564145541423;  // std dev = 1.208, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then return 0.05585155553297108;  // std dev = 0.381, 97.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=25 */
%   | | else return -0.09040671210981831;  // std dev = 0.265, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | then return 0.6661616301162689;  // std dev = 0.061, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.75188987363744;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, N), complex(A, P) )
%   | | | then return 0.028776036258521483;  // std dev = 3.880, 91.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=20 */
%   | | | else return 0.11925829547762735;  // std dev = 9.390, 426.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=131 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, D) )
%   | then return 0.3964530177764892;  // std dev = 0.303, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else return 0.6045866415906611;  // std dev = 0.101, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1622934304539931;  // std dev = 0.074, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6548453151638902;  // std dev = 1.201, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return 0.012555044482262315;  // std dev = 6.311, 256.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=55 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7119840727141845;  // std dev = 1.693, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return -0.18952689987831894;  // std dev = 0.146, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.09553341097947181;  // std dev = 5.679, 154.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=49 */
%   | | | else return 0.19036888098766733;  // std dev = 3.735, 62.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( interaction(F, C), phenotype(F, G) )
%   | | then return 0.09283657433249187;  // std dev = 0.630, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3966875157424948;  // std dev = 0.222, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return 0.4082249943998761;  // std dev = 0.065, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.4628211764845405;  // std dev = 0.085, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.14942018726457762;  // std dev = 0.218, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.22018759737031984;  // std dev = 2.444, 32.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=17 */
%   | | | else return 0.10134056821696916;  // std dev = 3.278, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return 0.004050705766422725;  // std dev = 2.536, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return 0.0697083364625649;  // std dev = 9.364, 473.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=139 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( enzyme(C, D), complex(C, E) )
%   | then return 0.10954703656810816;  // std dev = 0.288, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else if ( enzyme(A, F), complex(A, G) )
%   | | then return -0.11450649352258584;  // std dev = 0.692, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(C, H) )
%   | | | then return -0.002380641087786263;  // std dev = 2.686, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | else return 0.05990253093975996;  // std dev = 2.222, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.3019940761569891;  // std dev = 0.211, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6741212042082266;  // std dev = 1.364, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | | else return -0.20996121320686334;  // std dev = 0.490, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.15587956608133863;  // std dev = 5.588, 143.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=58 */
%   | | | else return 0.0609995899715685;  // std dev = 5.583, 160.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.47677961082929304;  // std dev = 0.136, 96.000 (wgt'ed) examples reached here.  /* #pos=96 */
%   | else return -0.182237735117383;  // std dev = 0.071, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B), interaction(F, E) )
%   | | then return 0.38823290016047524;  // std dev = 0.267, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.18273722281238466;  // std dev = 0.309, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0.005617853474312913;  // std dev = 4.280, 100.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=26 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return -0.022666280011824715;  // std dev = 2.705, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.1668298316333194;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.06405342552959324;  // std dev = 6.096, 189.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=62 */
%   | | | else return 0.2582196406608907;  // std dev = 1.208, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.19136861315644588;  // std dev = 0.309, 50.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=40 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1427535573882264;  // std dev = 0.231, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.09314709282232078;  // std dev = 4.743, 157.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=60 */
%   | | | else return 0.03193305140642074;  // std dev = 5.032, 160.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=50 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then return -0.05640575987280656;  // std dev = 0.278, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.1873348634012309;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.057174020669634534;  // std dev = 2.423, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return -0.06305203580873422;  // std dev = 1.245, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.058893542673417405;  // std dev = 4.620, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.14927749852414585;  // std dev = 0.188, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0.3779481997130856;  // std dev = 0.174, 75.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=74 */
%   | else return -0.1558778615301444;  // std dev = 0.056, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   else if ( location(A, F), phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), complex(H, J) )
%   | | | then return -0.12666476056962378;  // std dev = 0.425, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.599368539999981;  // std dev = 1.465, 56.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=55 */
%   | | else return -0.25983106751178653;  // std dev = 0.064, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2549500193871332;  // std dev = 0.098, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.03597481661329059;  // std dev = 1.168, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.050167330956377425;  // std dev = 6.150, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16171041305530168;  // std dev = 0.165, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, F), complex(D, G) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.10667169180977898;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.015180843812375177;  // std dev = 1.414, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return -0.038805296384795115;  // std dev = 2.237, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | | else return -0.11494321828100773;  // std dev = 0.715, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.28456264247503193;  // std dev = 1.209, 63.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=62 */
%   | | | else return -0.1330383754982118;  // std dev = 0.398, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return 0.15706503641216152;  // std dev = 2.085, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.03137132344051142;  // std dev = 6.947, 275.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=91 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.958', 'seconds']
Refined model CLL: -0.225721


******************************************
Best model found
******************************************
Results 

CLL : -0.215651 

AUC ROC : 0.977595 

AUC PR : 0.423365 

Precision : 0.413793 

Recall : 0.55814 

F1 : 0.475248 

Total Learning Time : 22.002 

Total Inference Time : 12.080909490585327 

Total revision time: 38.99105018424988
Best scored revision CLL: -0.225721


Results 

CLL : -0.215651 

AUC ROC : 0.977595 

AUC PR : 0.423365 

Precision : 0.413793 

Recall : 0.55814 

F1 : 0.475248 

Total Learning Time : 49.71182483482361 

Total Inference Time : 12.080909490585327 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.982
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17864723634526114;  // std dev = 13.867, 883.000 (wgt'ed) examples reached here.  /* #neg=600 #pos=283 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1690725170563396;  // std dev = 9.894, 440.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=147 */
%   | | | else return 0.17413372766617854;  // std dev = 9.480, 401.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=136 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16934599344979603;  // std dev = 8.768, 334.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=120 */
%   | | | else return 0.1432523032347222;  // std dev = 10.424, 489.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=163 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11628217058988134;  // std dev = 7.071, 225.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=75 */
%   | | | else return 0.11870409680866546;  // std dev = 11.779, 625.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0847319618839438;  // std dev = 13.869, 884.000 (wgt'ed) examples reached here.  /* #neg=601 #pos=283 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0704965999285777;  // std dev = 13.856, 880.000 (wgt'ed) examples reached here.  /* #neg=597 #pos=283 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7327488761021301;  // std dev = 0.008, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return -0.2671666670900648;  // std dev = 0.010, 230.000 (wgt'ed) examples reached here.  /* #neg=230 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09611148512982548;  // std dev = 6.798, 201.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=72 */
%   | | | else return 0.06903929008260239;  // std dev = 7.796, 274.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=91 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.033601651847132145;  // std dev = 7.114, 374.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=120 */
%   | | | else return 0.040362898031037465;  // std dev = 10.536, 511.000 (wgt'ed) examples reached here.  /* #neg=348 #pos=163 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04312749448517492;  // std dev = 12.563, 847.000 (wgt'ed) examples reached here.  /* #neg=564 #pos=283 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04029513768905676;  // std dev = 12.479, 833.000 (wgt'ed) examples reached here.  /* #neg=550 #pos=283 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.586', 'seconds']
Parameter learned model CLL:-0.329955 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.867, 600, 283]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.894, 293, 147], 'false,false,false,false': [9.48, 265, 136]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.768, 214, 120], 'false,false,false,false': [10.424, 326, 163]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.071, 150, 75], 'false,false,false,false': [11.779, 417, 208]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.869, 601, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.856, 597, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.008, 0, 120], 'true,false': [0.01, 230, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.798, 129, 72], 'false,false,false,false': [7.796, 183, 91]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.114, 254, 120], 'false,false,false,false': [10.536, 348, 163]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.563, 564, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.479, 550, 283]}]
{'': [nan, 0.21777914014434135], 'false': [nan, 0.2177791401443424], 'false,false': [nan, 0.21777914014434135], 'false,false,false': [nan, 0.2177791401443424]}
{'': [nan, 0.2232691108625798], 'false': [nan, 0.22326911086257922], 'false,false': [nan, 0.2232691108625798], 'false,false,false': [0.22247417355371304, 0.2241279594032317]}
{'': [nan, 0.2256193916272584], 'false': [nan, 0.2256193916272584], 'false,false': [nan, 0.2256193916272678], 'false,false,false': [0.23019297967982716, 0.22221918601705012]}
{'': [nan, 0.22206411929663603], 'false': [nan, 0.22206411929663603], 'false,false': [nan, 0.22206411929663747], 'false,false,false': [0.22222222222222357, 0.22200564955108953]}
{'': [nan, 0.2175824635484782], 'false': [nan, 0.2175824635484782], 'false,false': [nan, 0.21758246354848038], 'false,false,false': [nan, 0.21758246354848038]}
{'': [nan, 0.2181652588645359], 'false': [nan, 0.2181652588645359], 'false,false': [nan, 0.21816525886453592], 'false,false,false': [nan, 0.2181652588645357]}
{'': [0.22526854549331443, 0.22541327200884567], 'false': [nan, 0.22541327200884567], 'false,false': [nan, 0.22541327200884567], 'false,false,false': [0.22989529962129476, 0.22181522723639896], 'true': [5.037377817984634e-07, 4.6565050832809803e-07], 'true,true': [nan, 5.037377817984634e-07], 'true,true,false': [nan, 5.037377817984634e-07]}
{'': [nan, 0.1826208371074104], 'false': [nan, 0.1826208371074104], 'false,false': [nan, 0.18262083710741248], 'false,false,false': [0.13531038485790295, 0.21722795490828062]}
{'': [nan, 0.18633707228649024], 'false': [nan, 0.18633707228648816], 'false,false': [nan, 0.18633707228648816], 'false,false,false': [nan, 0.18633707228648816]}
{'': [nan, 0.1869466161985356], 'false': [nan, 0.1869466161985356], 'false,false': [nan, 0.18694661619853634], 'false,false,false': [nan, 0.18694661619853634]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 29.961
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7956489350995108;  // std dev = 0.242, 112.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=105 */
%   | else return -0.14185106490048852;  // std dev = 0.000, 224.000 (wgt'ed) examples reached here.  /* #neg=224 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(E, G), interaction(A, E) )
%   | | | then return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.4036034805540577;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | | else return 0.18203557477562604;  // std dev = 7.355, 247.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=80 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.09624417319475045;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.23219473662622908;  // std dev = 5.538, 131.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7636841152588723;  // std dev = 0.232, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( complex(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.7649636782445461;  // std dev = 0.482, 94.000 (wgt'ed) examples reached here.  /* #pos=94 */
%   | | else return -0.14165196523969295;  // std dev = 0.277, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5622472242620684;  // std dev = 0.366, 34.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=27 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.1383966963497976;  // std dev = 0.133, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0.15530935748924546;  // std dev = 8.442, 354.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=115 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3924414593130033;  // std dev = 0.824, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10458988337593228;  // std dev = 3.370, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | else return -0.0017540012350927142;  // std dev = 0.372, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(A, E), phenotype(D, F) )
%   | then return 0.12447569225459959;  // std dev = 0.352, 164.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=57 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.6537182647097804;  // std dev = 0.086, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.013019290740867393;  // std dev = 2.383, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
%   | | | else return 0.07536954383129715;  // std dev = 5.572, 183.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=49 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then if ( phenotype(H, I), complex(A, J) )
%   | | then return 0.13226248150436873;  // std dev = 0.334, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else return 0.0545442698665153;  // std dev = 0.370, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.6511267151463099;  // std dev = 0.090, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.06668856366027671;  // std dev = 3.433, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else return 0.12806119187536483;  // std dev = 7.222, 302.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=98 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5179703631348409;  // std dev = 0.167, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( complex(E, D), location(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12570056579996383;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.006412152185312375;  // std dev = 2.548, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5060077110778478;  // std dev = 0.669, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.032281096919725805;  // std dev = 4.403, 196.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=46 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.40894033426689164;  // std dev = 1.779, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return 0.08925026937199686;  // std dev = 8.347, 379.000 (wgt'ed) examples reached here.  /* #neg=269 #pos=110 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.20311416425902168;  // std dev = 2.706, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return 0.1445524103152337;  // std dev = 2.793, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.36413739392971195;  // std dev = 0.215, 53.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=47 */
%   | else if ( interaction(C, A) )
%   | | then return -0.12949796427135246;  // std dev = 0.278, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else return 0.06264124015366952;  // std dev = 0.382, 213.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=64 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5020439996951881;  // std dev = 0.444, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, I), location(F, I) )
%   | | | then return 0.00641440468219684;  // std dev = 3.164, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | | else return 0.1501733227262729;  // std dev = 2.721, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.4569594403853699;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.08785261014030331;  // std dev = 4.859, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | | | else return 0.14663118329830857;  // std dev = 6.053, 194.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=74 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.28363426084876664;  // std dev = 0.223, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | else return -0.06041289580907448;  // std dev = 0.241, 118.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=15 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.36928298688605127;  // std dev = 0.124, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.0756686448411076;  // std dev = 1.950, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.01323541265100708;  // std dev = 4.404, 163.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=41 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.36787914945791356;  // std dev = 0.073, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1551937294311915;  // std dev = 0.115, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.02412379748717159;  // std dev = 3.485, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | | else return 0.0782993282658901;  // std dev = 8.407, 407.000 (wgt'ed) examples reached here.  /* #neg=274 #pos=133 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.42730005805304544;  // std dev = 0.176, 122.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=120 */
%   | else return -0.1571821408015971;  // std dev = 0.056, 242.000 (wgt'ed) examples reached here.  /* #neg=242 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( recursion_proteinclass(F, B), interaction(G, A) )
%   | | | then return 0.3662306357395988;  // std dev = 0.627, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.032806037752665725;  // std dev = 4.049, 133.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=23 */
%   | | else if ( complex(E, H) )
%   | | | then return 0.22861938827753223;  // std dev = 1.639, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.005169199176780171;  // std dev = 1.610, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.34238065210663843;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09213401235479202;  // std dev = 4.702, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
%   | | | else return 0.06306587213985265;  // std dev = 5.984, 183.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=60 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.08775198730642182;  // std dev = 0.274, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return 0.23974450237247552;  // std dev = 0.084, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(A, F), complex(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.19248408219001842;  // std dev = 0.196, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | else if ( interaction(F, I), complex(I, G) )
%   | | | then return -0.09337094766476854;  // std dev = 1.174, 94.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=5 */
%   | | | else return -0.0037687460817680146;  // std dev = 2.577, 104.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=25 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.31238819953844044;  // std dev = 6.784, 273.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=174 */
%   | | | else return -0.21106349573036384;  // std dev = 1.044, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.10578031888426956;  // std dev = 1.458, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return -0.020203069373801685;  // std dev = 2.039, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.16331368783622158;  // std dev = 0.198, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return 0.30565745525830956;  // std dev = 0.172, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10316814849671035;  // std dev = 0.215, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(E, E), phenotype(E, F) )
%   | | | then return 0.017528689511743915;  // std dev = 0.537, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return -0.01926763774773734;  // std dev = 1.979, 100.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=28 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.15997863656767175;  // std dev = 3.068, 122.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=75 */
%   | | | else return -0.12662456071784894;  // std dev = 0.186, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.12431410957323054;  // std dev = 2.279, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.04621494041220053;  // std dev = 7.743, 365.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=122 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, A) )
%   then return -0.04797132234838141;  // std dev = 0.163, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.1704752070786985;  // std dev = 0.790, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.07908344289912835;  // std dev = 0.817, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.09838823288812187;  // std dev = 0.202, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0.04683903721493404;  // std dev = 4.606, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), location(I, K) )
%   | | | then return 0.017807331312680058;  // std dev = 4.683, 188.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=62 */
%   | | | else return 0.17616444139292176;  // std dev = 1.231, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.040868059656523834;  // std dev = 1.881, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return -0.013827281302098395;  // std dev = 6.055, 306.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=89 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.677', 'seconds']
Refined model CLL: -0.220816


******************************************
Best model found
******************************************
Results 

CLL : -0.227604 

AUC ROC : 0.982091 

AUC PR : 0.4133 

Precision : 0.384058 

Recall : 0.616279 

F1 : 0.473214 

Total Learning Time : 29.961 

Total Inference Time : 26.701480865478516 

Total revision time: 62.38519994544983
Best scored revision CLL: -0.220816


Results 

CLL : -0.227604 

AUC ROC : 0.982091 

AUC PR : 0.4133 

Precision : 0.384058 

Recall : 0.616279 

F1 : 0.473214 

Total Learning Time : 73.10597459602356 

Total Inference Time : 26.701480865478516 

Run: 4
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.016
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16415986406125999;  // std dev = 6.234, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13999841199002255;  // std dev = 4.573, 99.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=30 */
%   | | | else return 0.1790733721176141;  // std dev = 4.136, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1378460913522927;  // std dev = 3.768, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.16352229896095938;  // std dev = 4.774, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09543374237516564;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.17745548867107244;  // std dev = 5.185, 113.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09277697751539009;  // std dev = 6.116, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0687073195995537;  // std dev = 6.153, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7404515871422733;  // std dev = 0.053, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.25548359493830164;  // std dev = 0.075, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06308828063614529;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | | | else return 0.10834369556642644;  // std dev = 3.230, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0819899469189771;  // std dev = 2.868, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | | else return 0.07023898915315374;  // std dev = 4.725, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01740455695435987;  // std dev = 5.703, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029942491136741228;  // std dev = 5.611, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.686', 'seconds']
Parameter learned model CLL:-0.340746 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.234, 127, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.573, 69, 30], 'false,false,false,false': [4.136, 50, 26]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.768, 44, 21], 'false,false,false,false': [4.774, 65, 35]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.898, 28, 12], 'false,false,false,false': [5.185, 69, 44]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.116, 114, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.153, 117, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.053, 0, 21], 'true,false': [0.075, 55, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.464, 36, 18], 'false,false,false,false': [3.23, 27, 17]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.868, 35, 21], 'false,false,false,false': [4.725, 62, 35]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.703, 120, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.611, 113, 56]}]
{'': [nan, 0.21236824031771676], 'false': [nan, 0.2123682403177172], 'false,false': [nan, 0.21236824031771676], 'false,false,false': [nan, 0.2123682403177172]}
{'': [nan, 0.21760000000000118], 'false': [nan, 0.21760000000000004], 'false,false': [nan, 0.21760000000000118], 'false,false,false': [0.21120293847566624, 0.2250692520775628]}
{'': [nan, 0.224345687160329], 'false': [nan, 0.224345687160329], 'false,false': [nan, 0.22434568716032874], 'false,false,false': [0.21847954476779577, 0.22789896822204714]}
{'': [nan, 0.2319093724087583], 'false': [nan, 0.2319093724087583], 'false,false': [nan, 0.23190937240876017], 'false,false,false': [0.21000000000000005, 0.23790606145438806]}
{'': [nan, 0.220043081745349], 'false': [nan, 0.220043081745349], 'false,false': [nan, 0.22004308174534878], 'false,false,false': [nan, 0.22004308174534878]}
{'': [nan, 0.21881608884840295], 'false': [nan, 0.21881608884840295], 'false,false': [nan, 0.21881608884840306], 'false,false,false': [nan, 0.2188160888484033]}
{'': [0.19845486944181467, 0.22940278579232443], 'false': [nan, 0.22940278579232443], 'false,false': [nan, 0.22940278579232443], 'false,false,false': [0.22222222222222213, 0.23708677685950397], 'true': [0.00013361007646818193, 0.00010352388459357346], 'true,true': [nan, 0.00013361007646818193], 'true,true,false': [nan, 0.00013361007646818193]}
{'': [nan, 0.1997162155078194], 'false': [nan, 0.1997162155078194], 'false,false': [nan, 0.19971621550781968], 'false,false,false': [0.14687484486143507, 0.23017203290102214]}
{'': [nan, 0.18480457779672105], 'false': [nan, 0.1848045777967208], 'false,false': [nan, 0.1848045777967208], 'false,false,false': [nan, 0.1848045777967208]}
{'': [nan, 0.1863050394629149], 'false': [nan, 0.1863050394629149], 'false,false': [nan, 0.1863050394629152], 'false,false,false': [nan, 0.1863050394629152]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 8.742
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, D), phenotype(A, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(C, A), complex(C, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3396304165809938;  // std dev = 2.596, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( recursion_proteinclass(I, B), interaction(J, I) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return -0.038402789038418816;  // std dev = 1.640, 29.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=3 */
%   | | | else return 0.23519811542738056;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | else if ( complex(A, M) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.06648226843284567;  // std dev = 0.406, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7979407686272624;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.4475506008024539;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, G), phenotype(D, H) )
%   | | | then return 0.15932128259491773;  // std dev = 1.396, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.11913078716496647;  // std dev = 0.958, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.7655313036545791;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09651708528757744;  // std dev = 4.041, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.494434052172043;  // std dev = 1.372, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.19203685482749314;  // std dev = 2.398, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E), location(A, F) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.5999176941001133;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.03849471335625034;  // std dev = 0.394, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then return 0.16588366607575952;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.6609260765549158;  // std dev = 0.293, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( phenotype(A, I), interaction(J, A) )
%   | then if ( complex(A, K) )
%   | | then return 0.01902484541365695;  // std dev = 0.371, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( interaction(L, J), interaction(L, L) )
%   | | | then return 0.46833201487651926;  // std dev = 1.794, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return 0.1756834827651997;  // std dev = 1.775, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( complex(A, M), interaction(A, N) )
%   | | then return 0.45908812895717555;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.017706507332778416;  // std dev = 0.389, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(C, E), complex(A, F) )
%   | then return 0.05006262807196871;  // std dev = 0.385, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then return 0.4327910125453028;  // std dev = 0.290, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( phenotype(A, H), phenotype(C, I) )
%   | | | then return 0.3100126940615295;  // std dev = 1.435, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return -0.07175328884125057;  // std dev = 0.930, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(A, J), location(A, K) )
%   | then return -0.012149044956719682;  // std dev = 0.327, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( complex(L, N), phenotype(A, M) )
%   | | | then return -0.1456375128287565;  // std dev = 0.996, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.27153617753759496;  // std dev = 2.973, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | else if ( complex(A, P) )
%   | | | then return 0.26517358210597436;  // std dev = 1.531, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.06880469719934533;  // std dev = 1.527, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.47186409433437776;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( phenotype(D, F), interaction(G, A) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.09315755418856345;  // std dev = 1.800, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.4369653198308293;  // std dev = 0.859, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.28891523849531775;  // std dev = 0.284, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1053988733057023;  // std dev = 1.553, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.026998685284484146;  // std dev = 3.173, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.2628308447259866;  // std dev = 2.430, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( location(A, M), interaction(A, N) )
%   | | | then return 0.14905943628149101;  // std dev = 1.376, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.0883670385971563;  // std dev = 1.299, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), phenotype(F, D) )
%   | | then return 0.2971128360216412;  // std dev = 0.613, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6802495256048923;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.23744810573770478;  // std dev = 0.072, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( phenotype(A, H), phenotype(G, H) )
%   | | then return 0.44177395208624065;  // std dev = 0.220, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15157439571736678;  // std dev = 0.940, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( location(A, K) )
%   | | | then return -0.10744608801807058;  // std dev = 1.313, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.2713530555140152;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04922168744378135;  // std dev = 3.974, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return -0.05050883031093726;  // std dev = 1.855, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5236613985735998;  // std dev = 0.186, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.18187482644141575;  // std dev = 0.056, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( phenotype(E, G), interaction(H, E) )
%   | | then return -0.15774589724469038;  // std dev = 0.246, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else if ( interaction(I, E), phenotype(I, J) )
%   | | | then return 0.33266989878859543;  // std dev = 0.665, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.049658868672553126;  // std dev = 1.103, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, K), enzyme(K, L) )
%   | | then if ( interaction(M, A), interaction(K, N) )
%   | | | then return 0.08830183788798802;  // std dev = 1.368, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.37201990808211644;  // std dev = 0.813, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return -0.06905051677662258;  // std dev = 1.291, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.10781847920649798;  // std dev = 2.903, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then if ( enzyme(A, G), interaction(H, E) )
%   | | then return -0.0952739347395961;  // std dev = 0.285, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( complex(A, I), interaction(J, E) )
%   | | | then return -1.146911915904407E-4;  // std dev = 1.200, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.2358920758921861;  // std dev = 2.479, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | else return -0.11283271366305667;  // std dev = 0.253, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( interaction(A, K), phenotype(A, L) )
%   | then if ( interaction(M, A), enzyme(K, N) )
%   | | then return -0.2792224976546384;  // std dev = 0.821, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.06079420804702949;  // std dev = 0.326, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( interaction(P, A), complex(P, Q) )
%   | | then return 0.32682202880797484;  // std dev = 0.319, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( interaction(R, A), enzyme(A, S) )
%   | | | then return 0.3751796546030027;  // std dev = 0.672, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08263094247542659;  // std dev = 1.496, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( complex(A, D), location(A, E) )
%   | then return -0.10386589590896808;  // std dev = 0.184, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else if ( phenotype(C, F), enzyme(C, G) )
%   | | then if ( interaction(A, H), interaction(C, H) )
%   | | | then return -0.17204801670524475;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12542112981280676;  // std dev = 1.896, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, I), interaction(I, C) )
%   | | | then return 0.1973368145720636;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.0772597496946754;  // std dev = 2.499, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   else if ( interaction(J, A), phenotype(A, K) )
%   | then if ( phenotype(J, L) )
%   | | then if ( interaction(M, J), interaction(N, M) )
%   | | | then return 0.20841879935210436;  // std dev = 1.146, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return -0.23084097636501522;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.3999785926574145;  // std dev = 0.762, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 5.281479956915774E-4;  // std dev = 0.346, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.3386312829394302;  // std dev = 0.159, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4393625629292283;  // std dev = 0.096, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( complex(A, F), phenotype(A, G) )
%   | | then return -0.12726237987615382;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return -0.25537023985039936;  // std dev = 0.101, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.21569155649729987;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( location(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.17760359920672952;  // std dev = 1.340, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return -0.1581092635524221;  // std dev = 0.317, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.18937177025556207;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.01650424991677964;  // std dev = 3.056, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.474', 'seconds']
Refined model CLL: -0.282439


******************************************
Best model found
******************************************
Results 

CLL : -0.294963 

AUC ROC : 0.846414 

AUC PR : 0.154969 

Precision : 0.066922 

Recall : 0.402299 

F1 : 0.114754 

Total Learning Time : 8.742 

Total Inference Time : 3.7064332962036133 

Total revision time: 14.95187984275818
Best scored revision CLL: -0.282439


Results 

CLL : -0.294963 

AUC ROC : 0.846414 

AUC PR : 0.154969 

Precision : 0.066922 

Recall : 0.402299 

F1 : 0.114754 

Total Learning Time : 25.6727584438324 

Total Inference Time : 3.7064332962036133 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.324
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18373033044835027;  // std dev = 8.691, 344.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=112 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1730778431492927;  // std dev = 6.403, 183.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=62 */
%   | | | else return 0.18393037859199313;  // std dev = 5.702, 143.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14158056466537539;  // std dev = 5.417, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.11442845762427868;  // std dev = 6.868, 222.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=68 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11551779556922279;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.09871719853806817;  // std dev = 7.613, 271.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=84 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10360697458331442;  // std dev = 8.642, 336.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=112 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09202212739172964;  // std dev = 8.594, 329.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=112 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7074005447351116;  // std dev = 0.988, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.2703821026442397;  // std dev = 0.005, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.033423513971454495;  // std dev = 4.894, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.08260512096577152;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.01638699002509439;  // std dev = 4.394, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   | | | else return 0.04314243529589438;  // std dev = 6.811, 214.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=68 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08533421793846664;  // std dev = 7.720, 298.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=112 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023100952160413663;  // std dev = 7.998, 342.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=112 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.646', 'seconds']
Parameter learned model CLL:-0.335568 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.691, 232, 112]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.403, 121, 62], 'false,false,false,false': [5.702, 93, 50]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.417, 88, 44], 'false,false,false,false': [6.868, 154, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.333, 57, 28], 'false,false,false,false': [7.613, 187, 84]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.642, 224, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.594, 217, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.988, 1, 44], 'true,false': [0.005, 91, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.894, 81, 34], 'false,false,false,false': [4.712, 64, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.394, 103, 44], 'false,false,false,false': [6.811, 146, 68]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.72, 186, 112]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.998, 230, 112]}]
{'': [nan, 0.21957815035154374], 'false': [nan, 0.21957815035154188], 'false,false': [nan, 0.21957815035154374], 'false,false,false': [nan, 0.21957815035154188]}
{'': [nan, 0.22552598893447134], 'false': [nan, 0.22552598893447223], 'false,false': [nan, 0.22552598893447134], 'false,false,false': [0.22401385529576873, 0.22739498263973756]}
{'': [nan, 0.21630387657348654], 'false': [nan, 0.21630387657348654], 'false,false': [nan, 0.21630387657348196], 'false,false,false': [0.22228240686679435, 0.21247417287628947]}
{'': [nan, 0.21558808015685407], 'false': [nan, 0.21558808015685407], 'false,false': [nan, 0.2155880801568547], 'false,false,false': [0.2208996539792382, 0.21385469481374936]}
{'': [nan, 0.22227819544754077], 'false': [nan, 0.22227819544754077], 'false,false': [nan, 0.22227819544754046], 'false,false,false': [nan, 0.22227819544754046]}
{'': [nan, 0.22448402517700883], 'false': [nan, 0.22448402517700883], 'false,false': [nan, 0.22448402517700897], 'false,false,false': [nan, 0.22448402517700836]}
{'': [0.2188498289638685, 0.21727647873294054], 'true': [0.021696279942056248, 3.220088555848606e-07], 'false': [nan, 0.21727647873294054], 'false,false': [nan, 0.21727647873294054], 'false,false,false': [0.20824196597353592, 0.22657226155768498], 'true,true': [nan, 0.021696279942056248], 'true,true,false': [nan, 0.021696279942056248]}
{'': [nan, 0.18213617799969664], 'false': [nan, 0.18213617799969664], 'false,false': [nan, 0.1821361779996974], 'false,false,false': [0.13131842119837517, 0.2167522052566797]}
{'': [nan, 0.1999812130971217], 'false': [nan, 0.19998121309712116], 'false,false': [nan, 0.19998121309712116], 'false,false,false': [nan, 0.19998121309712116]}
{'': [nan, 0.18704614846999004], 'false': [nan, 0.18704614846999004], 'false,false': [nan, 0.18704614846999015], 'false,false,false': [nan, 0.18704614846999015]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.735
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), interaction(F, H) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16037115732173574;  // std dev = 6.888, 225.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=68 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(C, E) )
%   | | then return 0.7647299913932367;  // std dev = 0.054, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.3501361312612236;  // std dev = 0.450, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14010058910756293;  // std dev = 0.119, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( complex(C, F), complex(A, F) )
%   | | | then return -0.030481847794751157;  // std dev = 1.733, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.17769863883169623;  // std dev = 6.455, 198.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=69 */
%   else if ( phenotype(A, G) )
%   | then return -0.007115349094925288;  // std dev = 0.324, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then return -0.05140446123518458;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.504151094320371;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14517673534601203;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6115746861862967;  // std dev = 0.071, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.11583796196584634;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7230885207952072;  // std dev = 0.130, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.12714666068013458;  // std dev = 0.200, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0.07340411595538071;  // std dev = 4.407, 115.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=29 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.700712678035377;  // std dev = 0.956, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.18259070513673503;  // std dev = 0.148, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.2791410068694074;  // std dev = 3.849, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | | | else return 0.1336602793374548;  // std dev = 2.190, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5008682717444972;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, C), enzyme(F, D) )
%   | | then return -0.11133874798083285;  // std dev = 0.152, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.21640937880122618;  // std dev = 2.046, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 4.23843750768005E-4;  // std dev = 2.293, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return 0.0883989654992137;  // std dev = 0.345, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( enzyme(A, L) )
%   | | | then return 0.5267908414953149;  // std dev = 0.768, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20118236197274267;  // std dev = 2.103, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.09985071796391076;  // std dev = 2.761, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.1893773565152893;  // std dev = 4.402, 87.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, C), phenotype(A, E) )
%   | | then return 0.17703561905523632;  // std dev = 0.676, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( recursion_proteinclass(D, B), location(C, F) )
%   | | | then return 0.37334012693798696;  // std dev = 0.185, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.578307398850581;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.08693978983857505;  // std dev = 0.564, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.49850591702308866;  // std dev = 0.052, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(H, J), phenotype(J, I) )
%   | | | then return 0.053889950125988906;  // std dev = 2.788, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return -0.08158182120213965;  // std dev = 1.602, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.04467995466495089;  // std dev = 5.868, 206.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=57 */
%   | | | else return 0.17757472424379153;  // std dev = 1.937, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then return -0.006363234493068749;  // std dev = 0.313, 100.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=25 */
%   | else if ( complex(C, F), phenotype(A, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.11236487256607229;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.16871456990638192;  // std dev = 2.556, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3360957155757722;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.00770057117626103;  // std dev = 3.938, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   else if ( interaction(J, A), complex(A, K) )
%   | then return 0.16262955661237788;  // std dev = 0.359, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( phenotype(A, L), interaction(M, A) )
%   | | then if ( interaction(A, N), interaction(M, N) )
%   | | | then return 0.4365904513423406;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13847625101768019;  // std dev = 2.028, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return 0.006233507392712228;  // std dev = 0.372, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5026409392810268;  // std dev = 0.166, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.18242062225327715;  // std dev = 0.060, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(E, F), enzyme(E, G) )
%   | | then return -0.151510777875975;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.6733156862304434;  // std dev = 0.205, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22320815082544077;  // std dev = 1.109, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4715876049611454;  // std dev = 0.318, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.07418710554760363;  // std dev = 5.044, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.03139284041833231;  // std dev = 1.537, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.19094939390411655;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, E) )
%   | then return 0.20011856904267453;  // std dev = 0.130, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.2045929984237903;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.33395971326012586;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14089924455599181;  // std dev = 0.070, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(A, H), phenotype(G, H) )
%   | | | then return -0.07657402834793685;  // std dev = 0.902, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.006199028763830638;  // std dev = 0.996, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3148104264029244;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.07176898553328158;  // std dev = 4.113, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   | | | else return 0.0031972696806672842;  // std dev = 4.739, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B), interaction(D, A) )
%   | then return 0.17957651669710364;  // std dev = 0.070, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(C, E), enzyme(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.4058002613584119;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.03543754979667796;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.09491716221103184;  // std dev = 0.279, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.43312759848882887;  // std dev = 0.215, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else return -0.1889845900652976;  // std dev = 0.084, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.24117749612203063;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.13786028380301635;  // std dev = 1.880, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.03151969738947552;  // std dev = 4.940, 144.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(C, D), interaction(E, C) )
%   | then return -0.03984139446054149;  // std dev = 0.306, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else if ( complex(A, F) )
%   | | then return 0.018912157558203864;  // std dev = 0.251, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( phenotype(C, G), interaction(H, C) )
%   | | | then return 0.09089924967529223;  // std dev = 2.039, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.2526214241476754;  // std dev = 2.081, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   else if ( phenotype(A, I) )
%   | then return -0.08109001978052242;  // std dev = 0.300, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | else if ( interaction(A, J), location(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.22854006937128965;  // std dev = 0.505, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.011700014786774019;  // std dev = 3.029, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.017676796508874524;  // std dev = 2.897, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | else return -0.10624697993970306;  // std dev = 1.349, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.710', 'seconds']
Refined model CLL: -0.256023


******************************************
Best model found
******************************************
Results 

CLL : -0.237327 

AUC ROC : 0.940373 

AUC PR : 0.238512 

Precision : 0.344262 

Recall : 0.482759 

F1 : 0.401914 

Total Learning Time : 10.735 

Total Inference Time : 4.965558052062988 

Total revision time: 19.360734447479246
Best scored revision CLL: -0.256023


Results 

CLL : -0.237327 

AUC ROC : 0.940373 

AUC PR : 0.238512 

Precision : 0.344262 

Recall : 0.482759 

F1 : 0.401914 

Total Learning Time : 30.081613048553464 

Total Inference Time : 4.965558052062988 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.457
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20375220708315175;  // std dev = 10.516, 489.000 (wgt'ed) examples reached here.  /* #neg=320 #pos=169 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16596429868014292;  // std dev = 8.076, 293.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=98 */
%   | | | else return 0.15131312873887068;  // std dev = 6.949, 222.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14706208277844543;  // std dev = 6.993, 218.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=74 */
%   | | | else return 0.12258338943919493;  // std dev = 8.070, 302.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=95 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15509065621768692;  // std dev = 5.490, 129.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=48 */
%   | | | else return 0.12392526637807963;  // std dev = 8.961, 360.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=121 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11520612525630042;  // std dev = 10.466, 480.000 (wgt'ed) examples reached here.  /* #neg=311 #pos=169 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05860112725806834;  // std dev = 10.742, 534.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=169 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6987819853456063;  // std dev = 1.400, 76.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=74 */
%   | else return -0.27456357417923194;  // std dev = 0.048, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1089536553244367;  // std dev = 5.586, 133.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=50 */
%   | | | else return 0.02619388081915782;  // std dev = 5.651, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07594631052697948;  // std dev = 5.385, 194.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=74 */
%   | | | else return 0.04771673337162864;  // std dev = 7.991, 291.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=95 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035522914278569705;  // std dev = 9.705, 504.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=169 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020716935887869416;  // std dev = 9.763, 515.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.600', 'seconds']
Parameter learned model CLL:-0.332788 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.516, 320, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.076, 195, 98], 'false,false,false,false': [6.949, 151, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.993, 144, 74], 'false,false,false,false': [8.07, 207, 95]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.49, 81, 48], 'false,false,false,false': [8.961, 239, 121]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.466, 311, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.742, 365, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.4, 2, 74], 'true,false': [0.048, 116, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.586, 83, 50], 'false,false,false,false': [5.651, 110, 45]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.385, 120, 74], 'false,false,false,false': [7.991, 196, 95]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.705, 335, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.763, 346, 169]}]
{'': [nan, 0.22616165037784544], 'false': [nan, 0.2261616503778431], 'false,false': [nan, 0.22616165037784544], 'false,false,false': [nan, 0.2261616503778431]}
{'': [nan, 0.22046941276274623], 'false': [nan, 0.22046941276274792], 'false,false': [nan, 0.22046941276274623], 'false,false,false': [0.22260014676932494, 0.21753510267023965]}
{'': [nan, 0.21941162836315234], 'false': [nan, 0.21941162836315234], 'false,false': [nan, 0.2194116283631556], 'false,false,false': [0.22431374045156627, 0.2156218118787598]}
{'': [nan, 0.22603548554952316], 'false': [nan, 0.22603548554952316], 'false,false': [nan, 0.2260354855495245], 'false,false,false': [0.2336398053001618, 0.22305437666428413]}
{'': [nan, 0.2281825605779095], 'false': [nan, 0.2281825605779095], 'false,false': [nan, 0.2281825605779094], 'false,false,false': [nan, 0.2281825605779094]}
{'': [nan, 0.21609899437215876], 'false': [nan, 0.21609899437215876], 'false,false': [nan, 0.2160989943721562], 'false,false,false': [nan, 0.21609899437215893]}
{'': [0.23679701320939162, 0.22093317625922823], 'true': [0.025805807450440997, 1.950605294076918e-05], 'false': [nan, 0.22093317625922823], 'false,false': [nan, 0.22093317625922823], 'false,false,false': [0.2346090790886999, 0.2060353798126953], 'true,true': [nan, 0.025805807450440997], 'true,true,false': [nan, 0.025805807450440997]}
{'': [nan, 0.19164783016012998], 'false': [nan, 0.19164783016012998], 'false,false': [nan, 0.19164783016012862], 'false,false,false': [0.149473215536312, 0.21944547629879177]}
{'': [nan, 0.18686362644223115], 'false': [nan, 0.18686362644223], 'false,false': [nan, 0.18686362644223], 'false,false,false': [nan, 0.18686362644223]}
{'': [nan, 0.18506661980044195], 'false': [nan, 0.18506661980044195], 'false,false': [nan, 0.1850666198004397], 'false,false,false': [nan, 0.1850666198004397]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.264
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( phenotype(F, G), interaction(F, A) )
%   | | | then return -0.00548742853685133;  // std dev = 2.276, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | | else return 0.13007875966091587;  // std dev = 4.751, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.15749104036266903;  // std dev = 7.985, 304.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=91 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109543;  // std dev = 7.30e-08, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1336892732550076;  // std dev = 0.036, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.6089875396590806;  // std dev = 1.951, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.07560196596770405;  // std dev = 6.418, 232.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=55 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.7985751819960153;  // std dev = 0.173, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.15702529969184129;  // std dev = 4.416, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08787604292562892;  // std dev = 3.464, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.1796094046748712;  // std dev = 3.035, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5689131608275106;  // std dev = 0.200, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12141756999251246;  // std dev = 0.063, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.1322466223492997;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( phenotype(D, E), interaction(F, A) )
%   | | | then return 0.21073661555769635;  // std dev = 2.040, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.03956035999360295;  // std dev = 2.915, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.5629389271885396;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.22203310341295115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.21822821922706592;  // std dev = 3.209, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.09815993775719727;  // std dev = 7.852, 314.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=87 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5484253685526745;  // std dev = 0.210, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else if ( interaction(A, F), complex(F, D) )
%   | | then return -0.08169612437758461;  // std dev = 0.271, 78.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
%   | | else if ( enzyme(C, G), interaction(H, C) )
%   | | | then return 0.2013180269999169;  // std dev = 3.190, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.050417095562586986;  // std dev = 4.894, 134.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=33 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.48455160879081693;  // std dev = 0.073, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( phenotype(J, L), interaction(J, M) )
%   | | | then return 0.08732938838687189;  // std dev = 3.011, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.021385344905113075;  // std dev = 1.719, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.2177983768789844;  // std dev = 3.787, 61.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=27 */
%   | | | else return 0.12522382258376027;  // std dev = 3.765, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(D, E) )
%   | then if ( enzyme(D, F), phenotype(C, E) )
%   | | then return -0.09555413798468981;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.3252831949276329;  // std dev = 0.099, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.4301425412453353;  // std dev = 0.092, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), interaction(J, I) )
%   | | | then return 0.7162072234167111;  // std dev = 0.808, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.43769105406544184;  // std dev = 1.358, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return -0.21567253468747324;  // std dev = 0.518, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10311636513326919;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.033739151717192245;  // std dev = 3.563, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
%   | | | else return 0.11824175330554217;  // std dev = 6.747, 214.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=74 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A), phenotype(C, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.10543983197915281;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.23018028986018005;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A) )
%   | | then return 0.322091169087384;  // std dev = 0.107, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.11544156716948695;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.09970180388972248;  // std dev = 0.107, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.32661636950152945;  // std dev = 6.461, 213.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=130 */
%   | | | else return -0.20208024258154578;  // std dev = 0.561, 193.000 (wgt'ed) examples reached here.  /* #neg=193 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.5363548431739844;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1167302317065553;  // std dev = 1.799, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49335543250896835;  // std dev = 0.204, 74.000 (wgt'ed) examples reached here.  /* #pos=74 */
%   | else return -0.17996877424743452;  // std dev = 0.063, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.3577464387830887;  // std dev = 0.191, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( enzyme(F, G), interaction(F, H) )
%   | | | then return -0.029951623210289317;  // std dev = 1.927, 45.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=9 */
%   | | | else return 0.09763913409059398;  // std dev = 3.316, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3627023049742492;  // std dev = 1.078, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.19357800246507031;  // std dev = 0.221, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.09410018228276207;  // std dev = 3.216, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.0034751983121267586;  // std dev = 3.297, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15131422611493495;  // std dev = 0.165, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), interaction(F, G) )
%   | | | then return 0.35693278549192;  // std dev = 0.904, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.0031291315446043515;  // std dev = 1.061, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(D, H), phenotype(A, E) )
%   | | | then return 0.04516962626605693;  // std dev = 1.486, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.034625696566762024;  // std dev = 3.939, 157.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=34 */
%   | else if ( interaction(I, A) )
%   | | then if ( location(I, J), phenotype(A, K) )
%   | | | then return 0.06432921543394994;  // std dev = 4.228, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.014347225437364575;  // std dev = 3.686, 108.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=28 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.0027771703470431453;  // std dev = 0.910, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.19715004031214992;  // std dev = 1.975, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return 0.022011872803858412;  // std dev = 0.276, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.20315929694432194;  // std dev = 0.081, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(A, E) )
%   | | then return -0.09279181254933509;  // std dev = 0.135, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( phenotype(A, G), complex(E, H) )
%   | | | then return 0.06427799066422696;  // std dev = 1.878, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return -0.028125649838625012;  // std dev = 2.623, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.21655272544773896;  // std dev = 1.426, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.021168940677688184;  // std dev = 4.328, 162.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=33 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.12390849236387334;  // std dev = 4.063, 95.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=40 */
%   | | | else return 0.0076069892187996015;  // std dev = 2.224, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.18326749082662974;  // std dev = 0.159, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | else if ( interaction(A, C) )
%   | | then return -0.12371732707323517;  // std dev = 0.312, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( phenotype(C, F), enzyme(C, G) )
%   | | | then return 0.10784554616570197;  // std dev = 2.467, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return -0.012795952745084086;  // std dev = 4.352, 174.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=43 */
%   else if ( phenotype(A, H), complex(A, I) )
%   | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.40349597342923127;  // std dev = 0.189, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.18250187689428338;  // std dev = 0.062, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2356004122327377;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -4.902832400503765E-4;  // std dev = 1.627, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.07316422846155024;  // std dev = 4.508, 140.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=55 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.322', 'seconds']
Refined model CLL: -0.236449


******************************************
Best model found
******************************************
Results 

CLL : -0.21976 

AUC ROC : 0.975516 

AUC PR : 0.225161 

Precision : 0.241573 

Recall : 0.494253 

F1 : 0.324528 

Total Learning Time : 16.264 

Total Inference Time : 12.071057558059692 

Total revision time: 32.45124225234986
Best scored revision CLL: -0.236449


Results 

CLL : -0.21976 

AUC ROC : 0.975516 

AUC PR : 0.225161 

Precision : 0.241573 

Recall : 0.494253 

F1 : 0.324528 

Total Learning Time : 43.172120853424076 

Total Inference Time : 12.071057558059692 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.755
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.194975282404898;  // std dev = 12.215, 668.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=225 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16520030600935165;  // std dev = 9.315, 391.000 (wgt'ed) examples reached here.  /* #neg=261 #pos=130 */
%   | | | else return 0.16372994055670478;  // std dev = 7.972, 287.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=95 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15247011937875776;  // std dev = 7.977, 282.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=97 */
%   | | | else return 0.14101441601425366;  // std dev = 9.243, 385.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=128 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1468275306601134;  // std dev = 6.434, 179.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=65 */
%   | | | else return 0.12222927782769404;  // std dev = 10.301, 475.000 (wgt'ed) examples reached here.  /* #neg=315 #pos=160 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10368785929642987;  // std dev = 12.173, 659.000 (wgt'ed) examples reached here.  /* #neg=434 #pos=225 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08747513085557866;  // std dev = 12.145, 653.000 (wgt'ed) examples reached here.  /* #neg=428 #pos=225 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.722707210548862;  // std dev = 0.024, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else return -0.2773167503117339;  // std dev = 0.031, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06849602435877107;  // std dev = 6.548, 191.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=65 */
%   | | | else return -0.0011409094539170021;  // std dev = 6.780, 233.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=63 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07074877276584628;  // std dev = 6.089, 257.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=97 */
%   | | | else return 0.045005199156639614;  // std dev = 9.304, 396.000 (wgt'ed) examples reached here.  /* #neg=268 #pos=128 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024582019907591655;  // std dev = 11.268, 699.000 (wgt'ed) examples reached here.  /* #neg=474 #pos=225 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018036743437699017;  // std dev = 11.278, 702.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=225 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.544', 'seconds']
Parameter learned model CLL:-0.328549 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.215, 443, 225]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.315, 261, 130], 'false,false,false,false': [7.972, 192, 95]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.977, 185, 97], 'false,false,false,false': [9.243, 257, 128]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.434, 114, 65], 'false,false,false,false': [10.301, 315, 160]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.173, 434, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.145, 428, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.024, 0, 97], 'true,false': [0.031, 166, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.548, 126, 65], 'false,false,false,false': [6.78, 170, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.089, 160, 97], 'false,false,false,false': [9.304, 268, 128]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.268, 474, 225]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.278, 477, 225]}]
{'': [nan, 0.22337435906630093], 'false': [nan, 0.2233743590663009], 'false,false': [nan, 0.22337435906630093], 'false,false,false': [nan, 0.2233743590663009]}
{'': [nan, 0.22172840473020083], 'false': [nan, 0.2217284047302097], 'false,false': [nan, 0.22172840473020083], 'false,false,false': [0.22193732380086864, 0.22144253299178432]}
{'': [nan, 0.22353698911928446], 'false': [nan, 0.22353698911928446], 'false,false': [nan, 0.22353698911928246], 'false,false,false': [0.22565795278926298, 0.22192796821737615]}
{'': [nan, 0.22566250440790242], 'false': [nan, 0.22566250440790242], 'false,false': [nan, 0.22566250440790547], 'false,false,false': [0.23126619019381586, 0.22338519070866603]}
{'': [nan, 0.2248594549809384], 'false': [nan, 0.2248594549809384], 'false,false': [nan, 0.2248594549809353], 'false,false,false': [nan, 0.2248594549809353]}
{'': [nan, 0.22588184562573013], 'false': [nan, 0.22588184562573013], 'false,false': [nan, 0.22588184562572505], 'false,false,false': [nan, 0.22588184562573027]}
{'': [0.2328092847757434, 0.21074110548617106], 'true': [6.009258638205187e-06, 5.9661839084331475e-06], 'false': [nan, 0.21074110548617106], 'false,false': [nan, 0.21074110548617106], 'false,false,false': [0.22450042487870295, 0.1972775332019381], 'true,true': [nan, 6.009258638205187e-06], 'true,true,false': [nan, 6.009258638205187e-06]}
{'': [nan, 0.18949516657563945], 'false': [nan, 0.18949516657563945], 'false,false': [nan, 0.18949516657564094], 'false,false,false': [0.14425908282093416, 0.2185920979615435]}
{'': [nan, 0.18162957196532334], 'false': [nan, 0.18162957196532292], 'false,false': [nan, 0.18162957196532292], 'false,false,false': [nan, 0.18162957196532292]}
{'': [nan, 0.18118937456687947], 'false': [nan, 0.18118937456687947], 'false,false': [nan, 0.1811893745668783], 'false,false,false': [nan, 0.1811893745668783]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.302
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.8068668838174602;  // std dev = 0.221, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return 0.004302781253358501;  // std dev = 0.353, 130.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=19 */
%   | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, I), enzyme(I, J) )
%   | | | then return 0.1637044906550679;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.3465210281227682;  // std dev = 3.278, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.7993254056877476;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( phenotype(A, L) )
%   | | then if ( phenotype(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.6870963035205655;  // std dev = 3.283, 76.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=63 */
%   | | | else return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return 0.1130508958838263;  // std dev = 0.436, 204.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7761442614955634;  // std dev = 0.051, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else return -0.1485588694033963;  // std dev = 0.321, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(E, F), complex(E, G) )
%   | | then return -0.03331096864937789;  // std dev = 0.332, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.7441673943094501;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.04532779898885653;  // std dev = 2.675, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(A, K), complex(I, L) )
%   | | | then return 0.1859326553538245;  // std dev = 3.595, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return 0.1008376055503007;  // std dev = 5.963, 208.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=55 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.124992630014967;  // std dev = 2.307, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.28240747772131036;  // std dev = 3.398, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( complex(A, E), location(A, F) )
%   | then return 0.12017893463152836;  // std dev = 0.353, 144.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=49 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0.6243483914949693;  // std dev = 0.287, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.16195424617322332;  // std dev = 0.087, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.1898470915163459;  // std dev = 3.983, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   else if ( interaction(H, A), interaction(H, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.7269130953851172;  // std dev = 0.083, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.1630829611101874;  // std dev = 0.276, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6715013818411899;  // std dev = 0.206, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.12876181101530185;  // std dev = 6.585, 255.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=83 */
%   | | | else return 0.05949155342338392;  // std dev = 4.135, 106.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.5135489598071887;  // std dev = 0.206, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | else if ( complex(C, F), interaction(A, A) )
%   | | then return -0.10775180277852989;  // std dev = 0.138, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( interaction(C, G), enzyme(G, H) )
%   | | | then return 0.026745525268642975;  // std dev = 3.558, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | | else return 0.14067484207797012;  // std dev = 4.161, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   else if ( interaction(I, A), location(A, J) )
%   | then if ( location(I, J), recursion_proteinclass(I, B) )
%   | | then return 0.5436473798024278;  // std dev = 0.095, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.06157853944532306;  // std dev = 0.373, 349.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=92 */
%   | else if ( complex(A, K) )
%   | | then return 0.043810530466490305;  // std dev = 0.349, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04125300607554014;  // std dev = 1.070, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2189972354217559;  // std dev = 2.690, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then if ( recursion_proteinclass(D, B), interaction(E, A) )
%   | | then return 0.4023660134526704;  // std dev = 0.082, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return 0.1599786124278622;  // std dev = 0.814, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(C, F) )
%   | | then return 0.459634791377418;  // std dev = 0.196, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6380834269212519;  // std dev = 0.079, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, A) )
%   | then return -0.13285066963186612;  // std dev = 0.081, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.008991017359422157;  // std dev = 2.926, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | | | else return 0.07034065528786652;  // std dev = 2.824, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.48720770753701875;  // std dev = 0.383, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.06597877545737206;  // std dev = 8.503, 469.000 (wgt'ed) examples reached here.  /* #neg=330 #pos=139 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.29036435987220055;  // std dev = 0.156, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | else return 0.43628587085214443;  // std dev = 0.105, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( enzyme(A, F), enzyme(E, F) )
%   | | then return -0.1492976465494699;  // std dev = 0.062, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.043069072051856006;  // std dev = 1.259, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.04071513407098641;  // std dev = 2.075, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.05355253471578296;  // std dev = 1.602, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
%   | | | else return 0.09948274438200642;  // std dev = 1.971, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.03908332220830265;  // std dev = 4.754, 140.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=39 */
%   | | | else return 0.07641573227177727;  // std dev = 7.352, 339.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=109 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4526163768877148;  // std dev = 0.149, 97.000 (wgt'ed) examples reached here.  /* #pos=97 */
%   | else return -0.16500406501398399;  // std dev = 0.452, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.25454988297593706;  // std dev = 0.102, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.09953702207801246;  // std dev = 0.614, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else return 0.010957326352891804;  // std dev = 2.724, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5352341535468074;  // std dev = 2.014, 59.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=55 */
%   | | | else return -0.18769455080436784;  // std dev = 0.375, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.010550418516076113;  // std dev = 2.961, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.09514954087540008;  // std dev = 4.851, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, C) )
%   | then return 0.16278681722018834;  // std dev = 0.209, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | else return 0.28230903373395316;  // std dev = 0.109, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10325065442682832;  // std dev = 0.097, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( complex(F, G), enzyme(A, H) )
%   | | | then return -0.06303360354859573;  // std dev = 0.594, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.01870148300587683;  // std dev = 1.929, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, K), location(A, L) )
%   | | | then return 0.03572776641481964;  // std dev = 2.568, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.10119179416889025;  // std dev = 4.885, 140.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=51 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return -0.018035952949870565;  // std dev = 3.608, 116.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | else return 0.07185572726194019;  // std dev = 4.733, 146.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=56 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20453605935233607;  // std dev = 0.089, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), interaction(D, G) )
%   | | | then return 0.24686937936314504;  // std dev = 1.546, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | | else return -0.2895082995196869;  // std dev = 0.627, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return -0.09457329075836905;  // std dev = 2.953, 150.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=14 */
%   | | | else return 0.035837986772502856;  // std dev = 3.076, 72.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=22 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4954477710524372;  // std dev = 1.232, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.190494264532297;  // std dev = 0.606, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.02619658031319078;  // std dev = 1.958, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.06944198886574829;  // std dev = 5.454, 207.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=77 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, A), complex(C, E) )
%   | then return -0.08697891475393638;  // std dev = 0.219, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.3282809281655638;  // std dev = 0.339, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(C, G), enzyme(G, D) )
%   | | | then return -0.036787445521937634;  // std dev = 1.031, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.11378961548879013;  // std dev = 2.836, 62.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=28 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(H, I), phenotype(I, J) )
%   | | then return 0.04270971598307398;  // std dev = 0.246, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else return 0.2185879638915871;  // std dev = 0.109, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, K), complex(A, L) )
%   | | then return -0.043400829257391145;  // std dev = 0.213, 109.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=22 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.026519688714702703;  // std dev = 3.019, 116.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=30 */
%   | | | else return 0.02984752883373505;  // std dev = 6.459, 299.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=100 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.035', 'seconds']
Refined model CLL: -0.220714


******************************************
Best model found
******************************************
Results 

CLL : -0.205765 

AUC ROC : 0.963658 

AUC PR : 0.393739 

Precision : 0.367188 

Recall : 0.54023 

F1 : 0.437209 

Total Learning Time : 19.302 

Total Inference Time : 12.083682775497437 

Total revision time: 36.38795955848694
Best scored revision CLL: -0.220714


Results 

CLL : -0.205765 

AUC ROC : 0.963658 

AUC PR : 0.393739 

Precision : 0.367188 

Recall : 0.54023 

F1 : 0.437209 

Total Learning Time : 47.10883815956116 

Total Inference Time : 12.083682775497437 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.912
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1834084506704423;  // std dev = 13.794, 867.000 (wgt'ed) examples reached here.  /* #neg=585 #pos=282 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15656984848688105;  // std dev = 10.249, 481.000 (wgt'ed) examples reached here.  /* #neg=326 #pos=155 */
%   | | | else return 0.16248990091856158;  // std dev = 9.237, 387.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=127 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15892127810937381;  // std dev = 8.585, 325.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=113 */
%   | | | else return 0.12695248378715596;  // std dev = 10.752, 535.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=169 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1105815276425353;  // std dev = 7.070, 228.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=74 */
%   | | | else return 0.13761004835381024;  // std dev = 11.646, 598.000 (wgt'ed) examples reached here.  /* #neg=390 #pos=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10350612622005487;  // std dev = 13.671, 836.000 (wgt'ed) examples reached here.  /* #neg=554 #pos=282 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0821051001749958;  // std dev = 13.695, 842.000 (wgt'ed) examples reached here.  /* #neg=560 #pos=282 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7039707483475293;  // std dev = 1.706, 116.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=113 */
%   | else return -0.27019586704533805;  // std dev = 0.047, 229.000 (wgt'ed) examples reached here.  /* #neg=229 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0690899753113121;  // std dev = 7.333, 241.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=81 */
%   | | | else return 0.08242775696691639;  // std dev = 7.560, 251.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=88 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04322254281627075;  // std dev = 6.886, 339.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=113 */
%   | | | else return 0.0678739994700357;  // std dev = 10.475, 482.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=169 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04363569762194311;  // std dev = 12.548, 827.000 (wgt'ed) examples reached here.  /* #neg=545 #pos=282 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.021513203589892994;  // std dev = 12.701, 854.000 (wgt'ed) examples reached here.  /* #neg=572 #pos=282 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.592', 'seconds']
Parameter learned model CLL:-0.337704 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.794, 585, 282]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [10.249, 326, 155], 'false,false,false,false': [9.237, 260, 127]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.585, 212, 113], 'false,false,false,false': [10.752, 366, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.07, 154, 74], 'false,false,false,false': [11.646, 390, 208]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.671, 554, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.695, 560, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.706, 3, 113], 'true,false': [0.047, 229, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.333, 160, 81], 'false,false,false,false': [7.56, 163, 88]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.886, 226, 113], 'false,false,false,false': [10.475, 313, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.548, 545, 282]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.701, 572, 282]}]
{'': [nan, 0.2194657631014972], 'false': [nan, 0.21946576310149826], 'false,false': [nan, 0.2194657631014972], 'false,false,false': [nan, 0.21946576310149826]}
{'': [nan, 0.21933466414660927], 'false': [nan, 0.21933466414661656], 'false,false': [nan, 0.21933466414660927], 'false,false,false': [0.218403274536331, 0.22047286154010506]}
{'': [nan, 0.22038467588387545], 'false': [nan, 0.22038467588387545], 'false,false': [nan, 0.2203846758838671], 'false,false,false': [0.22679834295262088, 0.216102300621418]}
{'': [nan, 0.22487075460097208], 'false': [nan, 0.22487075460097208], 'false,false': [nan, 0.22487075460097147], 'false,false,false': [0.21922129886118827, 0.22682307716883668]}
{'': [nan, 0.22355713956241283], 'false': [nan, 0.22355713956241283], 'false,false': [nan, 0.22355713956241352], 'false,false,false': [nan, 0.22355713956241352]}
{'': [nan, 0.222735153689217], 'false': [nan, 0.222735153689217], 'false,false': [nan, 0.22273515368921723], 'false,false,false': [nan, 0.22273515368921715]}
{'': [0.2202401473720256, 0.2254984068875438], 'false': [nan, 0.2254984068875438], 'false,false': [nan, 0.2254984068875438], 'false,false,false': [0.2231366539832286, 0.2276789257313374], 'true': [0.025089434122706054, 9.525901463929016e-06], 'true,true': [nan, 0.025089434122706054], 'true,true,false': [nan, 0.025089434122706054]}
{'': [nan, 0.19156447933437318], 'false': [nan, 0.19156447933437318], 'false,false': [nan, 0.19156447933437462], 'false,false,false': [0.13987536169662315, 0.2276675200956011]}
{'': [nan, 0.1903928094916444], 'false': [nan, 0.19039280949164442], 'false,false': [nan, 0.19039280949164442], 'false,false,false': [nan, 0.19039280949164442]}
{'': [nan, 0.18890244060468991], 'false': [nan, 0.18890244060468991], 'false,false': [nan, 0.18890244060469136], 'false,false,false': [nan, 0.18890244060469136]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.744
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), complex(A, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, E), complex(C, F) )
%   | | | then return -0.011416282291792127;  // std dev = 1.615, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.2732432747221538;  // std dev = 3.587, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   | else if ( complex(A, H), phenotype(C, I) )
%   | | then return 0.04564893509951222;  // std dev = 0.390, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(J, C), recursion_proteinclass(J, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.16249676118646833;  // std dev = 4.934, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.8040948810454575;  // std dev = 0.226, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then return 0.0713842292171585;  // std dev = 0.410, 136.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=29 */
%   | | else return 0.17709377922421304;  // std dev = 0.466, 417.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=133 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.7661835504774602;  // std dev = 0.051, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else return 0.5566640309269066;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15132176855602641;  // std dev = 0.030, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( enzyme(A, F), complex(E, G) )
%   | | | then return -0.0014066732710686666;  // std dev = 1.795, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.13004057315033618;  // std dev = 4.071, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7290550145152697;  // std dev = 0.010, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.08022515437006227;  // std dev = 6.067, 202.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=49 */
%   | | else if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.18696827646799785;  // std dev = 7.037, 217.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=77 */
%   | | | else return 0.14173428581396666;  // std dev = 6.994, 232.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5765740987157066;  // std dev = 0.145, 47.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=46 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(D, G), complex(A, H) )
%   | | | then return 0.4103989241777837;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8080283553420999;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.061273512740241176;  // std dev = 2.658, 78.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=8 */
%   | | | else return 0.09480499190686682;  // std dev = 4.061, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( interaction(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.6484796350545909;  // std dev = 1.691, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.08429808887925984;  // std dev = 9.970, 509.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=139 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.42346700897716927;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17183500519748596;  // std dev = 4.243, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4686189185424517;  // std dev = 0.196, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), location(D, F) )
%   | | then if ( interaction(A, G), location(G, F) )
%   | | | then return -0.027290068973952093;  // std dev = 2.995, 83.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=13 */
%   | | | else return 0.06587426579247883;  // std dev = 2.105, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4240233245699743;  // std dev = 0.944, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.07815927424390197;  // std dev = 8.166, 343.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=98 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14920357952651717;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.09869335238414642;  // std dev = 4.138, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.10223402335979169;  // std dev = 5.009, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   | | | else return 0.17981156832052733;  // std dev = 5.178, 118.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=47 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( phenotype(C, D), enzyme(C, E) )
%   | | then return 0.4015603799634613;  // std dev = 0.327, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.46468753895633624;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.37221209293011037;  // std dev = 0.174, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), phenotype(F, H) )
%   | | then return 0.14403989736783349;  // std dev = 1.005, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.4541838721989888;  // std dev = 0.076, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( enzyme(A, J), enzyme(I, K) )
%   | | | then return -0.10829922099412927;  // std dev = 1.021, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.014925098353887535;  // std dev = 3.710, 103.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=24 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.06880602078080765;  // std dev = 7.617, 284.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=82 */
%   | | | else return 0.10745795270276778;  // std dev = 8.522, 334.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=108 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.248317914149777;  // std dev = 0.220, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, E), interaction(D, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13198695358547255;  // std dev = 0.064, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return 0.002506860439784051;  // std dev = 2.671, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | else if ( phenotype(D, F), enzyme(D, G) )
%   | | | then return 0.08550668464016291;  // std dev = 3.419, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return -1.6170701853351034E-4;  // std dev = 5.272, 180.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=43 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( interaction(H, H), enzyme(H, J) )
%   | | | then return 0.39370985427428457;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11537807444845327;  // std dev = 2.529, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.33703336543315754;  // std dev = 1.035, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.07680004971588449;  // std dev = 9.696, 435.000 (wgt'ed) examples reached here.  /* #neg=298 #pos=137 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5619298681767027;  // std dev = 0.268, 114.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=113 */
%   | else return -0.2168451972156205;  // std dev = 0.051, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.07329912795110434;  // std dev = 0.767, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.5199639402052381;  // std dev = 1.113, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.17276518137725605;  // std dev = 0.220, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.07168809612960834;  // std dev = 4.809, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then return -0.03255188712416923;  // std dev = 0.324, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.024514416439110433;  // std dev = 6.813, 237.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=68 */
%   | | | else return 0.055302195389059755;  // std dev = 4.694, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return 0.004146237859601683;  // std dev = 0.280, 164.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=53 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( complex(D, F), enzyme(A, G) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.10846909059326938;  // std dev = 2.243, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return -0.01002764480866223;  // std dev = 4.403, 125.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=33 */
%   | | else if ( phenotype(D, J) )
%   | | | then return 0.09970647508508079;  // std dev = 7.231, 262.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=100 */
%   | | | else return 0.05086256501070499;  // std dev = 4.684, 122.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=42 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.2833404138257253;  // std dev = 0.859, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.02177197260879555;  // std dev = 3.930, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return 0.11505309443035841;  // std dev = 2.461, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.006378872121660273;  // std dev = 1.094, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(D, D) )
%   | then return 0.06015675040543998;  // std dev = 0.251, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else return 0.2341856072493449;  // std dev = 0.165, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10531778937263432;  // std dev = 0.085, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( complex(E, F), complex(A, G) )
%   | | | then return 0.05219059014838588;  // std dev = 2.169, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return -0.04180113919687738;  // std dev = 2.661, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), interaction(J, H) )
%   | | | then return 0.15486847220244682;  // std dev = 1.516, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.025837129209638456;  // std dev = 3.947, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.02563361353096806;  // std dev = 8.412, 390.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=115 */
%   | | | else return 0.08432180800310758;  // std dev = 5.669, 148.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.15225372970485443;  // std dev = 0.171, 48.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=46 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then if ( phenotype(A, F), complex(D, G) )
%   | | | then return -0.06360388488419373;  // std dev = 1.343, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return -0.1469896837200504;  // std dev = 0.356, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(H, D) )
%   | | | then return 0.018056418311798522;  // std dev = 4.637, 133.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=37 */
%   | | | else return -0.05894741491371235;  // std dev = 2.463, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6015767660144853;  // std dev = 1.887, 69.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=67 */
%   | | | else return -0.24710741059725153;  // std dev = 0.653, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return -0.0330891944531954;  // std dev = 3.114, 120.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=26 */
%   | | | else return 0.04370712887007614;  // std dev = 7.509, 278.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=93 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.569', 'seconds']
Refined model CLL: -0.270871


******************************************
Best model found
******************************************
Results 

CLL : -0.266403 

AUC ROC : 0.923698 

AUC PR : 0.200758 

Precision : 0.238532 

Recall : 0.298851 

F1 : 0.265306 

Total Learning Time : 20.744 

Total Inference Time : 9.545521259307861 

Total revision time: 35.84171853637695
Best scored revision CLL: -0.270871


Results 

CLL : -0.266403 

AUC ROC : 0.923698 

AUC PR : 0.200758 

Precision : 0.238532 

Recall : 0.298851 

F1 : 0.265306 

Total Learning Time : 46.56259713745117 

Total Inference Time : 9.545521259307861 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.04
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19359197307419485;  // std dev = 5.935, 158.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.22180097967387552;  // std dev = 4.625, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   | | | else return 0.19291209078498534;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15164108725246747;  // std dev = 3.691, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return 0.1652427019045805;  // std dev = 4.512, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14019092354784576;  // std dev = 3.084, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | else return 0.13091285506668388;  // std dev = 4.942, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11652437505643419;  // std dev = 5.794, 145.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08179276195376353;  // std dev = 5.850, 150.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=53 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7120373375097127;  // std dev = 0.016, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.2877912726145087;  // std dev = 0.022, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05374548379353086;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return -0.08176712672930128;  // std dev = 3.092, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.015460895936123414;  // std dev = 2.957, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.06119241128637754;  // std dev = 4.549, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042031865078589144;  // std dev = 5.395, 153.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.051096404574199054;  // std dev = 5.306, 145.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=53 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.935', 'seconds']
Parameter learned model CLL:-0.351212 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.935, 105, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.625, 55, 35], 'false,false,false,false': [3.394, 32, 18]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.691, 39, 21], 'false,false,false,false': [4.512, 56, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.084, 26, 15], 'false,false,false,false': [4.942, 69, 38]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.794, 92, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.85, 97, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.016, 0, 21], 'true,false': [0.022, 39, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.62, 38, 20], 'false,false,false,false': [3.092, 47, 12]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.957, 45, 21], 'false,false,false,false': [4.549, 60, 32]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.395, 100, 53]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.306, 92, 53]}]
{'': [nan, 0.22292100624899897], 'false': [nan, 0.22292100624899946], 'false,false': [nan, 0.22292100624899897], 'false,false,false': [nan, 0.22292100624899946]}
{'': [nan, 0.23525510204081682], 'false': [nan, 0.23525510204081657], 'false,false': [nan, 0.23525510204081682], 'false,false,false': [0.23765432098765468, 0.23039999999999985]}
{'': [nan, 0.22963348257641428], 'false': [nan, 0.22963348257641428], 'false,false': [nan, 0.229633482576414], 'false,false,false': [0.22708465101879163, 0.23129632068513964]}
{'': [nan, 0.2293231719301933], 'false': [nan, 0.2293231719301933], 'false,false': [nan, 0.22932317193019416], 'false,false,false': [0.23200475907198118, 0.22827180069099126]}
{'': [nan, 0.2315092928114607], 'false': [nan, 0.2315092928114607], 'false,false': [nan, 0.23150929281146057], 'false,false,false': [nan, 0.23150929281146057]}
{'': [nan, 0.22816687367890273], 'false': [nan, 0.22816687367890273], 'false,false': [nan, 0.22816687367890193], 'false,false,false': [nan, 0.22816687367890248]}
{'': [0.22743478823927565, 0.19828947306639058], 'true': [1.2410721821914145e-05, 1.2954149878062447e-05], 'false': [nan, 0.19828947306639058], 'false,false': [nan, 0.19828947306639058], 'false,false,false': [0.22592152199762228, 0.16202240735420861], 'true,true': [nan, 1.2410721821914145e-05], 'true,true,false': [nan, 1.2410721821914145e-05]}
{'': [nan, 0.18682845921934343], 'false': [nan, 0.18682845921934343], 'false,false': [nan, 0.1868284592193436], 'false,false,false': [0.1324452595278319, 0.22496888290247324]}
{'': [nan, 0.19022962288135675], 'false': [nan, 0.19022962288135709], 'false,false': [nan, 0.19022962288135709], 'false,false,false': [nan, 0.19022962288135709]}
{'': [nan, 0.19419623667767175], 'false': [nan, 0.19419623667767175], 'false,false': [nan, 0.194196236677672], 'false,false,false': [nan, 0.194196236677672]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.48
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7152917922423694;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( enzyme(C, F), complex(A, G) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(H, C), enzyme(H, I) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.0423594614153018;  // std dev = 2.390, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   else if ( enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, M), location(M, N) )
%   | | | then return 0.10814893509951237;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7485905719497067;  // std dev = 0.166, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(D, E) )
%   | | then return -0.17216439868710082;  // std dev = 0.090, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.7789852279274081;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1752790493643481;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.807323330121253;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1632789579337273;  // std dev = 2.727, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.007698957029052874;  // std dev = 2.030, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.17815551171979;  // std dev = 2.931, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(D, A), complex(D, E) )
%   | | then return 0.620643903573608;  // std dev = 0.130, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5481653035002315;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.7141901281258299;  // std dev = 0.160, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.4122767837544477;  // std dev = 0.961, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, G) )
%   | | | then return -0.15586612290565555;  // std dev = 0.105, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.07698074610989943;  // std dev = 3.465, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | else if ( interaction(A, I), location(I, J) )
%   | | | then return 0.07899069155533413;  // std dev = 2.570, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.2677708981771553;  // std dev = 1.894, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5246184813998016;  // std dev = 0.196, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4283781710123715;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( complex(A, E), enzyme(A, F) )
%   | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.6856406690949687;  // std dev = 0.249, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return -0.2021981920371938;  // std dev = 0.162, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.16805857961404524;  // std dev = 0.119, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11299217600308196;  // std dev = 0.078, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( location(A, J) )
%   | | | then return 0.10662821185560109;  // std dev = 4.292, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | | | else return 0.3326001660973184;  // std dev = 0.987, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3502301937675094;  // std dev = 0.063, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), enzyme(F, G) )
%   | | then if ( interaction(D, D) )
%   | | | then return -0.11175729738190146;  // std dev = 0.490, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.09242434379909648;  // std dev = 2.982, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | else if ( interaction(H, D), interaction(H, H) )
%   | | | then return -0.1640629693576773;  // std dev = 0.219, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.02024468400568316;  // std dev = 2.838, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( phenotype(A, J), interaction(I, K) )
%   | | | then return -0.20702482480429782;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.39178202017585;  // std dev = 1.436, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.3219480019161478;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.10350020816083032;  // std dev = 0.739, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.556112112001678;  // std dev = 0.266, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return -0.18391122186185568;  // std dev = 0.057, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.39952866907711926;  // std dev = 0.162, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(F, G) )
%   | | | then return -0.11359445522925483;  // std dev = 1.348, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.2517705443536689;  // std dev = 1.062, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5563158084900403;  // std dev = 0.452, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1554154344154014;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.22850887273881643;  // std dev = 0.227, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.007355126992227662;  // std dev = 1.686, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.19850611643199212;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5362009287338522;  // std dev = 0.157, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.15407327015408953;  // std dev = 0.065, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.2834597376849409;  // std dev = 0.322, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return -0.20236448167828006;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2334835605358779;  // std dev = 0.975, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3574679205095195;  // std dev = 0.369, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.07429506975225855;  // std dev = 1.858, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.030045347161792045;  // std dev = 2.320, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(A, E), interaction(A, C) )
%   | then return -0.18543758316228795;  // std dev = 0.207, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(C, C), phenotype(C, F) )
%   | | then return -0.13214523408587955;  // std dev = 0.037, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(C, G), complex(A, H) )
%   | | | then return -0.08644827279168252;  // std dev = 0.397, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.042159866564244114;  // std dev = 2.154, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then if ( interaction(A, K), interaction(K, K) )
%   | | then return 0.04899372831460911;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3344242592378823;  // std dev = 0.592, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.3407442692238809;  // std dev = 0.282, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.08781279484283672;  // std dev = 0.574, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.028849271856436192;  // std dev = 2.881, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then return -0.05035545946728697;  // std dev = 0.248, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3670984707309749;  // std dev = 0.229, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -6.28703395338565E-4;  // std dev = 1.138, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( phenotype(A, I), phenotype(D, J) )
%   | | | then return 0.05971045206118658;  // std dev = 1.204, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.09266382625454406;  // std dev = 0.982, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( phenotype(K, M), interaction(K, N) )
%   | | | then return 0.1472801296342728;  // std dev = 0.677, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return -0.08741973140039243;  // std dev = 0.699, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( location(A, P), interaction(Q, A) )
%   | | | then return 0.08898810738740277;  // std dev = 2.188, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.5076576832490164;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then return -0.1217463632032691;  // std dev = 0.214, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else return 0.05207214171485202;  // std dev = 0.221, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   else if ( interaction(G, A), location(A, H) )
%   | then if ( location(G, H), phenotype(G, I) )
%   | | then if ( phenotype(A, J), interaction(A, G) )
%   | | | then return -0.10268599648044771;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.17992202465003784;  // std dev = 1.570, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( interaction(K, G), interaction(G, K) )
%   | | | then return 0.0827870133904377;  // std dev = 1.571, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return -0.014505549624427929;  // std dev = 1.602, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( enzyme(L, N), enzyme(A, N) )
%   | | | then return -0.14098286810568877;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.11593192056669588;  // std dev = 1.349, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else return -0.11581086440775497;  // std dev = 0.203, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.939', 'seconds']
Refined model CLL: -0.220603


******************************************
Best model found
******************************************
Results 

CLL : -0.253283 

AUC ROC : 0.903963 

AUC PR : 0.154012 

Precision : 0.073003 

Recall : 0.509615 

F1 : 0.127711 

Total Learning Time : 6.48 

Total Inference Time : 2.4420127868652344 

Total revision time: 11.463434953689575
Best scored revision CLL: -0.220603


Results 

CLL : -0.253283 

AUC ROC : 0.903963 

AUC PR : 0.154012 

Precision : 0.073003 

Recall : 0.509615 

F1 : 0.127711 

Total Learning Time : 22.184313554763794 

Total Inference Time : 2.4420127868652344 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.305
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1946568716074493;  // std dev = 8.386, 315.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=106 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20852141255910867;  // std dev = 6.221, 165.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=62 */
%   | | | else return 0.16609717013486627;  // std dev = 5.416, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12151751809521769;  // std dev = 5.225, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | | else return 0.17100924436564247;  // std dev = 6.469, 180.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=66 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1478465699792185;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.11259073845240233;  // std dev = 7.296, 240.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=80 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0820826184738384;  // std dev = 8.463, 327.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05922753831802178;  // std dev = 8.508, 335.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=106 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7094586251908879;  // std dev = 0.979, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | else return -0.268176071259852;  // std dev = 0.058, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05577558082687109;  // std dev = 4.910, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | | else return 0.07094646985854546;  // std dev = 4.460, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07929883253548412;  // std dev = 3.966, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | | | else return 0.08979097050680414;  // std dev = 6.432, 177.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=66 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03281021241310832;  // std dev = 7.746, 321.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=106 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019353628020125295;  // std dev = 7.799, 325.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=106 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.957', 'seconds']
Parameter learned model CLL:-0.339914 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.386, 209, 106]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.221, 103, 62], 'false,false,false,false': [5.416, 88, 44]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.225, 86, 40], 'false,false,false,false': [6.469, 114, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.059, 45, 26], 'false,false,false,false': [7.296, 160, 80]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.463, 221, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.508, 229, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.979, 1, 40], 'true,false': [0.058, 82, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.91, 73, 36], 'false,false,false,false': [4.46, 59, 30]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.966, 67, 40], 'false,false,false,false': [6.432, 111, 66]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.746, 215, 106]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.799, 219, 106]}]
{'': [nan, 0.2232703451751093], 'false': [nan, 0.22327034517510766], 'false,false': [nan, 0.2232703451751093], 'false,false,false': [nan, 0.22327034517510766]}
{'': [nan, 0.229523064539903], 'false': [nan, 0.22952306453989862], 'false,false': [nan, 0.229523064539903], 'false,false,false': [0.23456382001836448, 0.22222222222222143]}
{'': [nan, 0.2265701628509853], 'false': [nan, 0.2265701628509853], 'false,false': [nan, 0.22657016285098494], 'false,false,false': [0.21665924567577965, 0.23249921565100592]}
{'': [nan, 0.22438272643434756], 'false': [nan, 0.22438272643434756], 'false,false': [nan, 0.22438272643434712], 'false,false,false': [0.23209680618924808, 0.2218168788167522]}
{'': [nan, 0.2190272058457056], 'false': [nan, 0.2190272058457056], 'false,false': [nan, 0.2190272058457059], 'false,false,false': [nan, 0.2190272058457059]}
{'': [nan, 0.2160824575020661], 'false': [nan, 0.2160824575020661], 'false,false': [nan, 0.21608245750206465], 'false,false,false': [nan, 0.21608245750206537]}
{'': [0.2202140451772203, 0.222267720545357], 'false': [nan, 0.222267720545357], 'false,false': [nan, 0.222267720545357], 'false,false,false': [0.22119350223045323, 0.22345663426335027], 'true': [0.023381275800887016, 4.0563297276402914e-05], 'true,true': [nan, 0.023381275800887016], 'true,true,false': [nan, 0.023381275800887016]}
{'': [nan, 0.20107594547669985], 'false': [nan, 0.20107594547669985], 'false,false': [nan, 0.20107594547670035], 'false,false,false': [0.14697000433083926, 0.23374258111961357]}
{'': [nan, 0.18690824616366217], 'false': [nan, 0.18690824616366175], 'false,false': [nan, 0.18690824616366175], 'false,false,false': [nan, 0.18690824616366175]}
{'': [nan, 0.18716632902548141], 'false': [nan, 0.18716632902548141], 'false,false': [nan, 0.18716632902548078], 'false,false,false': [nan, 0.18716632902548078]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.214
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(C, F), interaction(F, A) )
%   | | then return -0.08921948595311938;  // std dev = 0.223, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( phenotype(C, G), location(A, H) )
%   | | | then return 0.3262340414824902;  // std dev = 3.421, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return 0.06867525088898598;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7672398441904213;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(A, L), location(J, M) )
%   | | | then return 0.00740266644279592;  // std dev = 2.917, 67.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=10 */
%   | | | else return 0.13863673997756065;  // std dev = 4.068, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | else if ( enzyme(A, N), phenotype(A, P) )
%   | | | then return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.35814893509951234;  // std dev = 2.915, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(C, E) )
%   | then return 0.6272411674605882;  // std dev = 0.335, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7405446705539359;  // std dev = 0.117, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(G, A), interaction(F, G) )
%   | | then if ( complex(A, H), phenotype(A, I) )
%   | | | then return -0.01895384059219458;  // std dev = 1.197, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.14445789963520161;  // std dev = 0.055, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(F, J), interaction(K, A) )
%   | | | then return -0.1863708815540769;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.15392723144042922;  // std dev = 2.756, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.7470278141843131;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.12852845407905386;  // std dev = 6.555, 214.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=63 */
%   | | | else return 0.5536164396730149;  // std dev = 1.213, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6174725601132734;  // std dev = 0.085, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then if ( phenotype(E, G), location(E, D) )
%   | | | then return -0.08341565868208578;  // std dev = 1.493, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else return 0.07473462490983429;  // std dev = 1.393, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7455357499687182;  // std dev = 0.181, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.015147256502150569;  // std dev = 4.178, 114.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=23 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8051237531804051;  // std dev = 0.248, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.17638565556633756;  // std dev = 0.116, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.5725384336812988;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.17166105322284722;  // std dev = 4.405, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4626392249891334;  // std dev = 0.080, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.5284427150079739;  // std dev = 0.202, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.03713199256130061;  // std dev = 3.155, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | else if ( phenotype(A, G), complex(A, E) )
%   | | | then return 0.24616197608953305;  // std dev = 1.250, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.05851416330680797;  // std dev = 2.374, 60.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=8 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7366057378360986;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.169882780766691;  // std dev = 0.130, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.24670395005947682;  // std dev = 3.123, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | | else return 0.09483768110101264;  // std dev = 4.250, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.38262767094684647;  // std dev = 0.220, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else if ( interaction(C, F), interaction(F, G) )
%   | | then return -0.054900239846763614;  // std dev = 0.329, 122.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=19 */
%   | | else if ( interaction(C, H), phenotype(C, I) )
%   | | | then return 0.28056535173751584;  // std dev = 1.570, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.012218100666001904;  // std dev = 2.507, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then if ( complex(A, L), phenotype(J, M) )
%   | | then return 0.1339639735069294;  // std dev = 0.418, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | else return -0.03422090964547256;  // std dev = 0.333, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | else if ( enzyme(A, N), complex(A, P) )
%   | | then return -0.06843109899104036;  // std dev = 0.189, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(Q, A), enzyme(Q, R) )
%   | | | then return -0.006793110100434715;  // std dev = 1.183, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2751676095086779;  // std dev = 3.252, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then if ( complex(E, F), phenotype(E, G) )
%   | | then return 0.05064887913415195;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, H), interaction(E, D) )
%   | | | then return 0.3543185014883128;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23242455923292363;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4678479694194902;  // std dev = 0.301, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1369010454789486;  // std dev = 0.080, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.31526747312113945;  // std dev = 5.067, 133.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=83 */
%   | | | else return -0.20783321525240944;  // std dev = 0.582, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.3175674184928205;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.13696124655277223;  // std dev = 1.658, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.046679332831113175;  // std dev = 0.340, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(G, D), location(G, E) )
%   | | | then return -0.006285747791765776;  // std dev = 3.636, 115.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=32 */
%   | | | else return 0.0757752094443813;  // std dev = 3.020, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | else if ( location(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.27620171261856274;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.30693768041031877;  // std dev = 0.328, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.09947359502697024;  // std dev = 1.425, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.6912690808828499;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return -0.20862301322997664;  // std dev = 0.079, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.21742111762114616;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.17159477702188503;  // std dev = 0.305, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.5195525906455204;  // std dev = 1.508, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return 0.06516865834494441;  // std dev = 1.818, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else return -0.2023397015107302;  // std dev = 0.076, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then return 0.008607108536321373;  // std dev = 0.288, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( location(H, I) )
%   | | | then return 0.43313810384731055;  // std dev = 1.405, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.12891849978247236;  // std dev = 0.411, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.22704467097469566;  // std dev = 1.541, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.04329646644001845;  // std dev = 3.245, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), interaction(A, F) )
%   | then if ( recursion_proteinclass(E, B), enzyme(F, D) )
%   | | then return 0.22797002276979042;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.07664432476828693;  // std dev = 0.267, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( phenotype(A, G), phenotype(C, G) )
%   | | then return -0.04261291207901542;  // std dev = 0.465, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, H), interaction(A, I) )
%   | | | then return 0.07684541152473091;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.4470795555633016;  // std dev = 0.833, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.22513465387574091;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2213660370763614;  // std dev = 0.317, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.07434184155165252;  // std dev = 1.223, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.019477440333266014;  // std dev = 5.057, 194.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=57 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.18116749213098826;  // std dev = 0.153, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( location(A, F), interaction(C, G) )
%   | | then return -0.029257249444904068;  // std dev = 0.295, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return -0.15688365051559386;  // std dev = 0.652, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.4076573344880176;  // std dev = 1.212, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(A, J), location(J, K) )
%   | then return -0.042114663822346896;  // std dev = 0.308, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | else if ( interaction(L, A), phenotype(L, M) )
%   | | then if ( phenotype(A, M), location(L, N) )
%   | | | then return -0.15432569095000995;  // std dev = 0.169, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.010509658342813408;  // std dev = 3.008, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
%   | | else if ( interaction(P, A), complex(P, Q) )
%   | | | then return -0.05187779111943852;  // std dev = 1.134, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.1340109418733655;  // std dev = 2.181, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.893', 'seconds']
Refined model CLL: -0.244226


******************************************
Best model found
******************************************
Results 

CLL : -0.229497 

AUC ROC : 0.947743 

AUC PR : 0.140279 

Precision : 0.103053 

Recall : 0.519231 

F1 : 0.171975 

Total Learning Time : 13.214 

Total Inference Time : 7.902313232421875 

Total revision time: 24.406188911437987
Best scored revision CLL: -0.244226


Results 

CLL : -0.229497 

AUC ROC : 0.947743 

AUC PR : 0.140279 

Precision : 0.103053 

Recall : 0.519231 

F1 : 0.171975 

Total Learning Time : 35.127067512512205 

Total Inference Time : 7.902313232421875 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.55
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284463;  // std dev = 10.296, 477.000 (wgt'ed) examples reached here.  /* #neg=318 #pos=159 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17411458214063916;  // std dev = 7.702, 264.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=90 */
%   | | | else return 0.1385152257448206;  // std dev = 6.923, 226.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=69 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13397531689383618;  // std dev = 6.420, 188.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
%   | | | else return 0.1283085227238501;  // std dev = 8.175, 308.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=98 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11363807018889929;  // std dev = 5.120, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
%   | | | else return 0.11786276658567915;  // std dev = 8.982, 366.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=120 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10358377564762009;  // std dev = 10.287, 475.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=159 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07854740977180304;  // std dev = 10.333, 484.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=159 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.73417726310064;  // std dev = 0.023, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | else return -0.2658330107416033;  // std dev = 0.032, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06778266775379756;  // std dev = 5.821, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
%   | | | else return 0.10636539501147974;  // std dev = 5.454, 128.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=47 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04412679922341609;  // std dev = 5.023, 184.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=61 */
%   | | | else return 0.045166954460145375;  // std dev = 8.123, 300.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=98 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06156500121100686;  // std dev = 9.353, 443.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=159 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016555462310628752;  // std dev = 9.579, 494.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=159 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.909', 'seconds']
Parameter learned model CLL:-0.334105 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.296, 318, 159]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.702, 174, 90], 'false,false,false,false': [6.923, 157, 69]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.42, 127, 61], 'false,false,false,false': [8.175, 210, 98]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.12, 80, 39], 'false,false,false,false': [8.982, 246, 120]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.287, 316, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.333, 325, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.023, 0, 61], 'true,false': [0.032, 117, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.821, 101, 51], 'false,false,false,false': [5.454, 81, 47]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.023, 123, 61], 'false,false,false,false': [8.123, 202, 98]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.353, 284, 159]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.579, 335, 159]}]
{'': [nan, 0.22222222222222526], 'false': [nan, 0.22222222222222335], 'false,false': [nan, 0.22222222222222526], 'false,false,false': [nan, 0.22222222222222335]}
{'': [nan, 0.21919616826322205], 'false': [nan, 0.2191961682632224], 'false,false': [nan, 0.21919616826322205], 'false,false,false': [0.22469008264462673, 0.2120957005247074]}
{'': [nan, 0.21785437387684073], 'false': [nan, 0.21785437387684073], 'false,false': [nan, 0.2178543738768385], 'false,false,false': [0.21922942306110857, 0.2170028864463099]}
{'': [nan, 0.22041389289268706], 'false': [nan, 0.22041389289268706], 'false,false': [nan, 0.2204138928926859], 'false,false,false': [0.2203234234870427, 0.22043892859409506]}
{'': [nan, 0.22277473511469353], 'false': [nan, 0.22277473511469353], 'false,false': [nan, 0.22277473511469478], 'false,false,false': [nan, 0.22277473511469478]}
{'': [nan, 0.22061293858002629], 'false': [nan, 0.22061293858002629], 'false,false': [nan, 0.22061293858002742], 'false,false,false': [nan, 0.2206129385800265]}
{'': [0.22526887566618686, 0.2276206560507249], 'false': [nan, 0.2276206560507249], 'false,false': [nan, 0.2276206560507249], 'false,false,false': [0.22294840720221654, 0.2323608398437494], 'true': [8.609190241607573e-06, 8.591589472454567e-06], 'true,true': [nan, 8.609190241607573e-06], 'true,true,false': [nan, 8.609190241607573e-06]}
{'': [nan, 0.18846295416035866], 'false': [nan, 0.18846295416035866], 'false,false': [nan, 0.1884629541603573], 'false,false,false': [0.13714738397082707, 0.219936092567064]}
{'': [nan, 0.197476710758414], 'false': [nan, 0.19747671075841342], 'false,false': [nan, 0.19747671075841342], 'false,false,false': [nan, 0.19747671075841342]}
{'': [nan, 0.18574161590983262], 'false': [nan, 0.18574161590983262], 'false,false': [nan, 0.18574161590983368], 'false,false,false': [nan, 0.18574161590983368]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 34.656
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( location(A, F), complex(A, G) )
%   | | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3938632208137987;  // std dev = 4.571, 84.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=45 */
%   | | | else return -0.14185106490048763;  // std dev = 8.43e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.16047451649486003;  // std dev = 5.216, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | | | else return 0.273403172387648;  // std dev = 5.353, 118.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7613857378347847;  // std dev = 0.238, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( location(A, D), complex(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.792854808550815;  // std dev = 0.180, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.19684410284333248;  // std dev = 2.58e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.12544463852839136;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(H, H), enzyme(H, I) )
%   | | | then return -0.14347114246581216;  // std dev = 0.051, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.09420881140750285;  // std dev = 4.204, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.40205785275820655;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.13771512917300452;  // std dev = 6.376, 193.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=60 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.5457029383487828;  // std dev = 0.052, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5589917258642402;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6699616321337519;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.6558266489259951;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6963145957307827;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.27403179154760854;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12496893032871338;  // std dev = 0.078, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.054861355630175065;  // std dev = 5.541, 211.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=50 */
%   | | | else return 0.11597092232044168;  // std dev = 6.792, 237.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=73 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4114440566674921;  // std dev = 0.052, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return 0.048168072219506336;  // std dev = 0.375, 229.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=56 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.47545210854665426;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(E, G) )
%   | | | then return 0.09117342169359055;  // std dev = 4.094, 94.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | else return -0.02817472873575544;  // std dev = 2.215, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6914822552663719;  // std dev = 0.348, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1731825244026099;  // std dev = 0.177, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.12723896504685506;  // std dev = 2.570, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.22809753305346855;  // std dev = 3.618, 57.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.2472249547640483;  // std dev = 0.298, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.6090177725089356;  // std dev = 0.252, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(C, A) )
%   | | then return -0.14800381421310116;  // std dev = 0.045, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( location(A, F), location(C, F) )
%   | | | then return 0.06977774318069022;  // std dev = 3.911, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | | else return 0.18032698636467145;  // std dev = 2.595, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3027600807899649;  // std dev = 0.224, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then return -0.020324862221163677;  // std dev = 0.276, 51.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return -0.022962655821392553;  // std dev = 2.573, 55.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=9 */
%   | | | else return 0.07361387319224592;  // std dev = 5.915, 177.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), enzyme(C, D) )
%   | then return 0.04030671948147805;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.28878619742989475;  // std dev = 0.066, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10408951667710138;  // std dev = 0.066, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.13051244174744547;  // std dev = 2.010, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return -0.01942408706696731;  // std dev = 2.400, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.22137201319525684;  // std dev = 0.877, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.027235784840105418;  // std dev = 3.353, 111.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=27 */
%   | | else if ( interaction(K, A), interaction(A, K) )
%   | | | then return 0.32808523733743494;  // std dev = 1.554, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.10029158643052165;  // std dev = 6.690, 211.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=74 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.45751599554089767;  // std dev = 0.169, 61.000 (wgt'ed) examples reached here.  /* #pos=61 */
%   | else return -0.1506776661135603;  // std dev = 0.041, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.14914338601371332;  // std dev = 0.784, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.6239445652679612;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.1847385991509147;  // std dev = 0.232, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.09693225206732456;  // std dev = 3.670, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.30368925631405164;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.054933217280627625;  // std dev = 2.180, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.03730032362156858;  // std dev = 5.720, 160.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=49 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1866468638222658;  // std dev = 0.064, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.3535547902571535;  // std dev = 0.210, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17806120379927326;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.0985163540697718;  // std dev = 0.149, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | | else return 0.008113003100119155;  // std dev = 2.906, 124.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=30 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.46519493146150165;  // std dev = 2.785, 51.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=40 */
%   | | | else return -0.23238015568426063;  // std dev = 0.534, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0894052518502752;  // std dev = 5.151, 135.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=51 */
%   | | | else return 0.2778680880486229;  // std dev = 1.449, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then return 0.10088122887366487;  // std dev = 0.285, 108.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=60 */
%   | else return -0.11033023844156353;  // std dev = 0.209, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), location(A, I) )
%   | | | then return 0.20655455278112067;  // std dev = 1.022, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.6338822718307825;  // std dev = 0.262, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.20776307846934225;  // std dev = 0.096, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.18296089428525228;  // std dev = 1.543, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.6280727258954748;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, M), enzyme(A, N) )
%   | | | then return 0.13677522799158517;  // std dev = 2.925, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.049496796116216865;  // std dev = 5.055, 140.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=51 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), interaction(D, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(D, B) )
%   | | then return 0.20507218813095926;  // std dev = 0.150, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | else if ( enzyme(D, G), interaction(C, E) )
%   | | | then return -0.05518686166436345;  // std dev = 2.522, 85.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=14 */
%   | | | else return 0.01272895201513796;  // std dev = 4.471, 158.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=49 */
%   | else return -0.061237815675664255;  // std dev = 0.307, 87.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=19 */
%   else if ( interaction(A, H), phenotype(A, I) )
%   | then return -0.005998196366384719;  // std dev = 0.317, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( enzyme(K, J) )
%   | | | then return -0.04388618856822696;  // std dev = 0.326, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3314634469548899;  // std dev = 1.029, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.016046696748298426;  // std dev = 1.404, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.11505372730998271;  // std dev = 3.073, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '19.919', 'seconds']
Refined model CLL: -0.243483


******************************************
Best model found
******************************************
Results 

CLL : -0.26584 

AUC ROC : 0.941898 

AUC PR : 0.195216 

Precision : 0.078912 

Recall : 0.557692 

F1 : 0.13826 

Total Learning Time : 34.656 

Total Inference Time : 28.606297492980957 

Total revision time: 67.26634564971923
Best scored revision CLL: -0.243483


Results 

CLL : -0.26584 

AUC ROC : 0.941898 

AUC PR : 0.195216 

Precision : 0.078912 

Recall : 0.557692 

F1 : 0.13826 

Total Learning Time : 77.98722425079345 

Total Inference Time : 28.606297492980957 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.802
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19734893509950943;  // std dev = 11.836, 625.000 (wgt'ed) examples reached here.  /* #neg=413 #pos=212 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20175795132154298;  // std dev = 8.807, 333.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=123 */
%   | | | else return 0.1595944643051148;  // std dev = 7.738, 272.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=89 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11899953505372392;  // std dev = 7.633, 271.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=85 */
%   | | | else return 0.12952193876029275;  // std dev = 9.262, 392.000 (wgt'ed) examples reached here.  /* #neg=265 #pos=127 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12487719614040746;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.13878532917127878;  // std dev = 10.169, 453.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=160 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09001016726002427;  // std dev = 11.923, 645.000 (wgt'ed) examples reached here.  /* #neg=433 #pos=212 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07677325786181714;  // std dev = 11.893, 638.000 (wgt'ed) examples reached here.  /* #neg=426 #pos=212 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.719633414673258;  // std dev = 0.997, 86.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=85 */
%   | else return -0.2689289704792792;  // std dev = 0.034, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07403573561301567;  // std dev = 6.795, 203.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=71 */
%   | | | else return 0.04722862700930469;  // std dev = 6.195, 178.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=56 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04272185967100028;  // std dev = 5.947, 256.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=85 */
%   | | | else return 0.05259300484540327;  // std dev = 9.174, 377.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=127 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02535053899595684;  // std dev = 11.062, 657.000 (wgt'ed) examples reached here.  /* #neg=445 #pos=212 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04148778173041204;  // std dev = 10.844, 617.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=212 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.866', 'seconds']
Parameter learned model CLL:-0.335676 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.836, 413, 212]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.807, 210, 123], 'false,false,false,false': [7.738, 183, 89]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.633, 186, 85], 'false,false,false,false': [9.262, 265, 127]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.849, 100, 52], 'false,false,false,false': [10.169, 293, 160]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.923, 433, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.893, 426, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.997, 1, 85], 'true,false': [0.034, 166, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.795, 132, 71], 'false,false,false,false': [6.195, 122, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.947, 171, 85], 'false,false,false,false': [9.174, 250, 127]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.062, 445, 212]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.844, 405, 212]}]
{'': [nan, 0.22414336000000257], 'false': [nan, 0.22414336000000198], 'false,false': [nan, 0.22414336000000257], 'false,false,false': [nan, 0.22414336000000198]}
{'': [nan, 0.22762379618878473], 'false': [nan, 0.2276237961887877], 'false,false': [nan, 0.22762379618878473], 'false,false,false': [0.23293563834104652, 0.22014219290657716]}
{'': [nan, 0.21729044533579492], 'false': [nan, 0.21729044533579492], 'false,false': [nan, 0.21729044533579894], 'false,false,false': [0.21499854050332598, 0.2188296429603974]}
{'': [nan, 0.22749929564903115], 'false': [nan, 0.22749929564903115], 'false,false': [nan, 0.22749929564903257], 'false,false,false': [0.225069252077563, 0.22826607566945328]}
{'': [nan, 0.22040454920426844], 'false': [nan, 0.22040454920426844], 'false,false': [nan, 0.22040454920427047], 'false,false,false': [nan, 0.22040454920427047]}
{'': [nan, 0.2216845640242123], 'false': [nan, 0.2216845640242123], 'false,false': [nan, 0.22168456402421208], 'false,false,false': [nan, 0.22168456402421233]}
{'': [0.2236377641806722, 0.22209360657121485], 'true': [0.01154944158219384, 6.987119047539362e-06], 'false': [nan, 0.22209360657121485], 'false,false': [nan, 0.22209360657121485], 'false,false,false': [0.22742604770802433, 0.2156293397298332], 'true,true': [nan, 0.01154944158219384], 'true,true,false': [nan, 0.01154944158219384]}
{'': [nan, 0.18885999729009004], 'false': [nan, 0.18885999729009004], 'false,false': [nan, 0.1888599972900896], 'false,false,false': [0.13816765964770047, 0.22324297359579173]}
{'': [nan, 0.18625234180908803], 'false': [nan, 0.18625234180908773], 'false,false': [nan, 0.18625234180908773], 'false,false,false': [nan, 0.18625234180908773]}
{'': [nan, 0.19057108955432964], 'false': [nan, 0.19057108955432964], 'false,false': [nan, 0.19057108955433047], 'false,false,false': [nan, 0.19057108955433047]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.881
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048768;  // std dev = 4.34e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.09526233716136803;  // std dev = 4.189, 97.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=23 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return 0.16370449065506756;  // std dev = 5.528, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | | | else return 0.21109011157010027;  // std dev = 8.124, 289.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=102 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7236967933385082;  // std dev = 0.052, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return 0.827839963908255;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7237906462524539;  // std dev = 0.043, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.06837526524853628;  // std dev = 4.191, 100.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=23 */
%   | | else if ( location(A, G) )
%   | | | then return 0.13435373615304871;  // std dev = 9.511, 432.000 (wgt'ed) examples reached here.  /* #neg=302 #pos=130 */
%   | | | else return 0.36527983481188253;  // std dev = 1.938, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5741679424764298;  // std dev = 0.180, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(F, E) )
%   | | then if ( complex(A, G), phenotype(D, H) )
%   | | | then return 0.36074564047576996;  // std dev = 1.253, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.7973473992940582;  // std dev = 0.140, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1529017705426473;  // std dev = 0.255, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | | else return 0.07778155882508084;  // std dev = 8.254, 354.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=95 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.150378692121236;  // std dev = 3.648, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
%   | | | else return 0.007943723811959;  // std dev = 2.182, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.32359541593207075;  // std dev = 2.459, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | | else return 0.15567220090695047;  // std dev = 3.615, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.4682822520033251;  // std dev = 0.054, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return 0.314348070434293;  // std dev = 0.332, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09795135472686209;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( location(A, F), location(E, F) )
%   | | | then return 0.030647623821032467;  // std dev = 2.603, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.2946935314523728;  // std dev = 1.028, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return 0.5546369967744309;  // std dev = 0.035, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.21716178056539678;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.14445605132714898;  // std dev = 4.487, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return 0.07819373618439224;  // std dev = 9.019, 404.000 (wgt'ed) examples reached here.  /* #neg=290 #pos=114 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3271142338922727;  // std dev = 0.078, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( phenotype(C, E), interaction(F, C) )
%   | | then if ( location(C, G), interaction(H, F) )
%   | | | then return 0.42322127654859115;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.46817964068294976;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41292249010452237;  // std dev = 0.013, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.08963099517283539;  // std dev = 1.49e-08, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.186253972271203;  // std dev = 1.992, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.0012847714177564526;  // std dev = 3.616, 94.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=21 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.04228314296287288;  // std dev = 5.350, 159.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=42 */
%   | | | else return 0.10783766935349666;  // std dev = 8.093, 313.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=106 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.19913224649140596;  // std dev = 0.218, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else return 0.39169394921998874;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08570677628718772;  // std dev = 0.018, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.12867426333583018;  // std dev = 2.205, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.008720736723902917;  // std dev = 3.292, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return -0.07997179695463028;  // std dev = 1.233, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.04354128493584473;  // std dev = 6.545, 217.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=62 */
%   | | else if ( interaction(K, A), interaction(A, L) )
%   | | | then return 0.16723291853646555;  // std dev = 2.751, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.06265092527009573;  // std dev = 6.695, 216.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=69 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.2177224473136796;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | | then return 0.290396964607119;  // std dev = 0.190, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.7054723531968197;  // std dev = 1.124, 64.000 (wgt'ed) examples reached here.  /* #pos=64 */
%   | else return -0.21167793170300145;  // std dev = 0.063, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.2603972887287189;  // std dev = 0.047, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5976049726661707;  // std dev = 0.081, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.02812491341207131;  // std dev = 4.328, 123.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=25 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return -0.002511612657268108;  // std dev = 3.964, 102.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=26 */
%   | | | else return 0.09923731281599102;  // std dev = 5.860, 158.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=55 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2979507834368497;  // std dev = 0.236, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.48928722008186804;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 1.3569706168443092E-4;  // std dev = 0.371, 397.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=94 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5223871533158675;  // std dev = 0.145, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.2019915204126745;  // std dev = 0.028, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.06031488536247624;  // std dev = 2.358, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.102089603681575;  // std dev = 1.293, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.2223751283388585;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08722552952312115;  // std dev = 3.995, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14790038652839085;  // std dev = 0.170, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.1823779907486038;  // std dev = 0.664, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4331677520146634;  // std dev = 0.566, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.132408614118095;  // std dev = 0.438, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.002827623421739705;  // std dev = 6.184, 243.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=64 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4926568440205911;  // std dev = 0.588, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.19284912559688497;  // std dev = 0.132, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.0015412464108324284;  // std dev = 2.762, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.057937906244942536;  // std dev = 6.056, 190.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=65 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.018674916140478743;  // std dev = 0.209, 109.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=39 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(E, F), phenotype(A, F) )
%   | | then if ( phenotype(D, G), location(D, H) )
%   | | | then return -0.030191330887102828;  // std dev = 2.884, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.09274405151673545;  // std dev = 1.642, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( phenotype(E, I), phenotype(A, J) )
%   | | | then return 0.19197456707811567;  // std dev = 2.775, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | | else return 0.06038801256484307;  // std dev = 5.759, 180.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=63 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.06063231301598865;  // std dev = 1.773, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.06317372110638056;  // std dev = 2.714, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.06821558480924046;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.02681139986597594;  // std dev = 4.515, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.236', 'seconds']
Refined model CLL: -0.269313


******************************************
Best model found
******************************************
Results 

CLL : -0.273158 

AUC ROC : 0.872467 

AUC PR : 0.121114 

Precision : 0.120513 

Recall : 0.451923 

F1 : 0.190283 

Total Learning Time : 15.881 

Total Inference Time : 9.264318227767944 

Total revision time: 29.876758726119995
Best scored revision CLL: -0.269313


Results 

CLL : -0.273158 

AUC ROC : 0.872467 

AUC PR : 0.121114 

Precision : 0.120513 

Recall : 0.451923 

F1 : 0.190283 

Total Learning Time : 40.597637327194214 

Total Inference Time : 9.264318227767944 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.068
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21529179224236536;  // std dev = 13.052, 742.000 (wgt'ed) examples reached here.  /* #neg=477 #pos=265 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14131095983405523;  // std dev = 10.061, 472.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=147 */
%   | | | else return 0.15315795310082908;  // std dev = 8.936, 365.000 (wgt'ed) examples reached here.  /* #neg=247 #pos=118 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13054432813454675;  // std dev = 8.516, 332.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=107 */
%   | | | else return 0.15009655645084916;  // std dev = 10.196, 462.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=158 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14318141783430052;  // std dev = 6.474, 183.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=65 */
%   | | | else return 0.11475284650781649;  // std dev = 11.572, 605.000 (wgt'ed) examples reached here.  /* #neg=405 #pos=200 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10190960267722968;  // std dev = 13.245, 784.000 (wgt'ed) examples reached here.  /* #neg=519 #pos=265 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09931890094858264;  // std dev = 13.081, 748.000 (wgt'ed) examples reached here.  /* #neg=483 #pos=265 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7261024171544254;  // std dev = 0.017, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.2738205964420832;  // std dev = 0.024, 214.000 (wgt'ed) examples reached here.  /* #neg=214 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.057221152659460914;  // std dev = 7.409, 248.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=82 */
%   | | | else return 0.05039637899754894;  // std dev = 7.156, 233.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=76 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03725370656700042;  // std dev = 6.654, 321.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=107 */
%   | | | else return 0.034417012936360604;  // std dev = 10.366, 494.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=158 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0365226884353121;  // std dev = 12.213, 796.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=265 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02591359277442148;  // std dev = 12.243, 801.000 (wgt'ed) examples reached here.  /* #neg=536 #pos=265 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.852', 'seconds']
Parameter learned model CLL:-0.334002 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.052, 477, 265]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [10.061, 325, 147], 'false,false,false,false': [8.936, 247, 118]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.516, 225, 107], 'false,false,false,false': [10.196, 304, 158]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.474, 118, 65], 'false,false,false,false': [11.572, 405, 200]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.245, 519, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.081, 483, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 107], 'true,false': [0.024, 214, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.409, 166, 82], 'false,false,false,false': [7.156, 157, 76]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.654, 214, 107], 'false,false,false,false': [10.366, 336, 158]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.213, 531, 265]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.243, 536, 265]}]
{'': [nan, 0.229591836734696], 'false': [nan, 0.22959183673469682], 'false,false': [nan, 0.229591836734696], 'false,false,false': [nan, 0.22959183673469682]}
{'': [nan, 0.2163669816963105], 'false': [nan, 0.21636698169630958], 'false,false': [nan, 0.2163669816963105], 'false,false,false': [0.21444538207411912, 0.21877275286170286]}
{'': [nan, 0.2223588708185493], 'false': [nan, 0.2223588708185493], 'false,false': [nan, 0.22235887081855918], 'false,false,false': [0.21842209648883595, 0.22502804573043786]}
{'': [nan, 0.2232584396104925], 'false': [nan, 0.2232584396104925], 'false,false': [nan, 0.22325843961049602], 'false,false,false': [0.22903042790170028, 0.22132484508452543]}
{'': [nan, 0.22376133149591174], 'false': [nan, 0.22376133149591174], 'false,false': [nan, 0.2237613314959065], 'false,false,false': [nan, 0.2237613314959065]}
{'': [nan, 0.22875847220242765], 'false': [nan, 0.22875847220242765], 'false,false': [nan, 0.22875847220242734], 'false,false,false': [nan, 0.22875847220242723]}
{'': [0.22219062863308553, 0.22058834242218112], 'true': [2.588872681787834e-06, 2.6374733133776257e-06], 'false': [nan, 0.22058834242218112], 'false,false': [nan, 0.22058834242218112], 'false,false,false': [0.22131893860562127, 0.21978669712096197], 'true,true': [nan, 2.588872681787834e-06], 'true,true,false': [nan, 2.588872681787834e-06]}
{'': [nan, 0.1861779213687689], 'false': [nan, 0.1861779213687689], 'false,false': [nan, 0.18617792136876637], 'false,false,false': [0.1379151137891695, 0.21753580713115733]}
{'': [nan, 0.18737318002467424], 'false': [nan, 0.18737318002467424], 'false,false': [nan, 0.18737318002467424], 'false,false,false': [nan, 0.18737318002467424]}
{'': [nan, 0.18713719494582712], 'false': [nan, 0.18713719494582712], 'false,false': [nan, 0.18713719494582737], 'false,false,false': [nan, 0.18713719494582737]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.912
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8337586911970727;  // std dev = 0.154, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.14185106490048766;  // std dev = 7.60e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | | else return 0.13314893509951375;  // std dev = 6.917, 240.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=66 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( complex(G, I), phenotype(G, J) )
%   | | | then return 0.2010060779566543;  // std dev = 3.971, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | | else return 0.09191516886574612;  // std dev = 3.714, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.24564893509951102;  // std dev = 4.357, 80.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=31 */
%   | | | else return 0.1841157859282429;  // std dev = 6.306, 181.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=59 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, E) )
%   | then return 0.6884217493927345;  // std dev = 0.185, 52.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( interaction(D, F), enzyme(F, G) )
%   | | | then return 0.09475591688643692;  // std dev = 5.254, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
%   | | | else return 0.18898162160856427;  // std dev = 4.568, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8205454110751765;  // std dev = 0.299, 54.000 (wgt'ed) examples reached here.  /* #pos=54 */
%   | | else return -0.16224372365145898;  // std dev = 0.074, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.7243696773246422;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.1182596364167206;  // std dev = 4.546, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | | | else return 0.16676193780006032;  // std dev = 6.157, 170.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=57 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.5970589065299431;  // std dev = 0.078, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | else if ( interaction(E, A), interaction(E, C) )
%   | | then return -0.004312102534720068;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, F), location(C, F) )
%   | | | then return 0.7172740982158892;  // std dev = 0.321, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15680490772834974;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360642;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), enzyme(I, H) )
%   | | | then return 0.021289900197354734;  // std dev = 3.336, 76.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | else return 0.1091641748711263;  // std dev = 3.371, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.0891651468297902;  // std dev = 5.238, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
%   | | | else return 0.1333617984386053;  // std dev = 9.200, 434.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=143 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6753021057231869;  // std dev = 0.129, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | else return -0.15796447602306646;  // std dev = 0.211, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( phenotype(A, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.4909497993703287;  // std dev = 0.082, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( phenotype(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5987808757154802;  // std dev = 3.340, 101.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=87 */
%   | | | else return -0.18092758220281227;  // std dev = 0.608, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.47067629476624606;  // std dev = 0.366, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.26011786530987163;  // std dev = 0.650, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.033819369363568316;  // std dev = 2.332, 54.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=7 */
%   | | | else return 0.08247985633922728;  // std dev = 7.526, 294.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=87 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(C, E) )
%   | then return 0.2438430904378951;  // std dev = 0.133, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.394093317809719;  // std dev = 0.121, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(F, G), enzyme(A, G) )
%   | | then return -0.0933917045324633;  // std dev = 0.023, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09092466980173147;  // std dev = 0.027, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.02695336265469132;  // std dev = 2.259, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.47058523046691375;  // std dev = 0.217, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.25184124902590593;  // std dev = 0.924, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.05804308273602801;  // std dev = 9.100, 534.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=150 */
%   | | | else return 0.1103869131828798;  // std dev = 4.710, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.21164689916385157;  // std dev = 0.187, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return 0.3809623460834869;  // std dev = 0.122, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.08593805166726078;  // std dev = 0.081, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.43155226161501303;  // std dev = 0.805, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.015470121392402706;  // std dev = 5.287, 213.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=48 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(A, I), phenotype(H, J) )
%   | | | then return 0.10615042592527196;  // std dev = 1.831, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.0019470952944681986;  // std dev = 2.431, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.06959933146249417;  // std dev = 5.063, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   | | | else return 0.1452707283285818;  // std dev = 6.154, 202.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=83 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4531801077514153;  // std dev = 0.177, 107.000 (wgt'ed) examples reached here.  /* #pos=107 */
%   | else return -0.16425425404194843;  // std dev = 0.670, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.20835506074347096;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, A), interaction(G, F) )
%   | | | then return -0.04336393608444323;  // std dev = 1.720, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return 0.0805467450756049;  // std dev = 2.345, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.423887422413026;  // std dev = 0.519, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.07223516082518398;  // std dev = 3.804, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.09780985618363372;  // std dev = 4.173, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.04624726406203222;  // std dev = 5.956, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.1307903088393434;  // std dev = 0.140, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return 0.24112790794891623;  // std dev = 0.094, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07760980386083424;  // std dev = 0.149, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( location(A, G), location(F, G) )
%   | | | then return -0.012731119378275228;  // std dev = 1.402, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.09346369574154852;  // std dev = 0.522, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.31094121362014615;  // std dev = 0.335, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.07181772199594914;  // std dev = 4.726, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return -9.300975720917497E-4;  // std dev = 4.156, 171.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=46 */
%   | | | else return 0.03608860481566432;  // std dev = 7.360, 324.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=103 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then return 0.010110927179281146;  // std dev = 0.248, 337.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=106 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( phenotype(F, G), location(A, H) )
%   | | then if ( interaction(F, F), interaction(A, I) )
%   | | | then return -0.07668009192755915;  // std dev = 1.103, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.07089216690085445;  // std dev = 3.476, 93.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=37 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.04537736004195573;  // std dev = 1.444, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.05494497060484059;  // std dev = 2.488, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | else if ( enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.6195046286027909;  // std dev = 1.026, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.23035236021823702;  // std dev = 0.497, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.11510385924688539;  // std dev = 2.603, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.026541038338528698;  // std dev = 5.753, 174.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=54 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.1240216929364075;  // std dev = 0.115, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(A, E), interaction(F, C) )
%   | | then return 0.32444948949172936;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2117918902274382;  // std dev = 0.160, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, A) )
%   | then return -0.06190483628870723;  // std dev = 0.033, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.011814162608646908;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2080480699053878;  // std dev = 0.338, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( location(A, J), complex(A, K) )
%   | | | then return 0.0048906139997216555;  // std dev = 4.408, 274.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=75 */
%   | | | else return 0.032525226470038845;  // std dev = 8.317, 418.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=134 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.146', 'seconds']
Refined model CLL: -0.234696


******************************************
Best model found
******************************************
Results 

CLL : -0.240823 

AUC ROC : 0.970209 

AUC PR : 0.175826 

Precision : 0.164671 

Recall : 0.528846 

F1 : 0.251142 

Total Learning Time : 19.912 

Total Inference Time : 12.316284894943237 

Total revision time: 37.79523013114929
Best scored revision CLL: -0.234696


Results 

CLL : -0.240823 

AUC ROC : 0.970209 

AUC PR : 0.175826 

Precision : 0.164671 

Recall : 0.528846 

F1 : 0.251142 

Total Learning Time : 48.51610873222351 

Total Inference Time : 12.316284894943237 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.009
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2062502009222962;  // std dev = 5.988, 158.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17134920522702907;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | | else return 0.15950122861524363;  // std dev = 3.844, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11972652238899346;  // std dev = 3.797, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | | else return 0.09986934678986838;  // std dev = 4.901, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.18102152300449229;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.11807274633417732;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08011792159651518;  // std dev = 6.140, 175.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07597193016864756;  // std dev = 6.096, 169.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=55 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7284299347783144;  // std dev = 0.030, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.27136027679236274;  // std dev = 0.043, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.15906616314299657;  // std dev = 3.235, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.1637845721336921;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03275832167175029;  // std dev = 2.961, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.0830508264088982;  // std dev = 4.615, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05409458191098381;  // std dev = 5.458, 154.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=55 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031905332921850806;  // std dev = 5.523, 157.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=55 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.669', 'seconds']
Parameter learned model CLL:-0.354724 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.988, 103, 55]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.666, 64, 33], 'false,false,false,false': [3.844, 45, 22]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.797, 46, 21], 'false,false,false,false': [4.901, 82, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.013, 23, 15], 'false,false,false,false': [5.185, 82, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.14, 120, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.096, 114, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.03, 0, 21], 'true,false': [0.043, 40, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.235, 25, 18], 'false,false,false,false': [3.044, 22, 16]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.961, 44, 21], 'false,false,false,false': [4.615, 57, 34]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.458, 99, 55]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.523, 102, 55]}]
{'': [nan, 0.22692677455536], 'false': [nan, 0.2269267745553606], 'false,false': [nan, 0.22692677455536], 'false,false,false': [nan, 0.2269267745553606]}
{'': [nan, 0.2228955978584185], 'false': [nan, 0.22289559785841795], 'false,false': [nan, 0.2228955978584185], 'false,false,false': [0.22446593686895622, 0.22053909556694143]}
{'': [nan, 0.21013536777450845], 'false': [nan, 0.21013536777450845], 'false,false': [nan, 0.21013536777450845], 'false,false,false': [0.2151613184710678, 0.20708808405582002]}
{'': [nan, 0.2254865794604532], 'false': [nan, 0.2254865794604532], 'false,false': [nan, 0.22548657946045408], 'false,false,false': [0.23891966759002803, 0.22036139756491296]}
{'': [nan, 0.21545977965956448], 'false': [nan, 0.21545977965956448], 'false,false': [nan, 0.21545977965956503], 'false,false,false': [nan, 0.21545977965956503]}
{'': [nan, 0.21989576144871945], 'false': [nan, 0.21989576144871945], 'false,false': [nan, 0.21989576144872036], 'false,false,false': [nan, 0.21989576144871945]}
{'': [0.22569590762140954, 0.24356448505514655], 'false': [nan, 0.24356448505514655], 'false,false': [nan, 0.24356448505514655], 'false,false,false': [0.24337479718766908, 0.24376731301939064], 'true': [4.401118507781275e-05, 4.528750944505777e-05], 'true,true': [nan, 4.401118507781275e-05], 'true,true,false': [nan, 4.401118507781275e-05]}
{'': [nan, 0.19333302816237938], 'false': [nan, 0.19333302816237938], 'false,false': [nan, 0.19333302816237913], 'false,false,false': [0.13486756834387384, 0.23404018087624293]}
{'': [nan, 0.1934573540292491], 'false': [nan, 0.1934573540292493], 'false,false': [nan, 0.1934573540292493], 'false,false,false': [nan, 0.1934573540292493]}
{'': [nan, 0.19431552896797671], 'false': [nan, 0.19431552896797671], 'false,false': [nan, 0.19431552896797707], 'false,false,false': [nan, 0.19431552896797707]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 11.033
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then if ( enzyme(C, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( location(A, G), location(C, G) )
%   | | then return 0.6273797043302815;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.451369274082562;  // std dev = 0.491, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7685472627404144;  // std dev = 0.105, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.13998237104352082;  // std dev = 0.219, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7838098922776907;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7646714757441622;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.09717232444483052;  // std dev = 2.027, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(J, A), interaction(A, J) )
%   | | | then return -0.23638168013603225;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.14455048208319257;  // std dev = 3.684, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( complex(C, E), interaction(A, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.2390496441333804;  // std dev = 0.218, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return 0.12474870225941274;  // std dev = 0.577, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.7142661171642987;  // std dev = 0.145, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), complex(C, I) )
%   | | | then return 0.14078327971913002;  // std dev = 2.793, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.039107417663457225;  // std dev = 3.790, 100.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=23 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.6375672527307745;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, K) )
%   | | then return -0.06684364334396845;  // std dev = 0.254, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.0049864376827899294;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.7704289139247875;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6119640208078533;  // std dev = 0.196, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.16530206492671964;  // std dev = 0.219, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.28593391969131865;  // std dev = 0.640, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.5506349640178508;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J), interaction(K, A) )
%   | | | then return 0.2433197533316824;  // std dev = 1.074, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.130995918437982;  // std dev = 0.999, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return -0.022337946773752795;  // std dev = 1.279, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.15563685143451797;  // std dev = 4.161, 92.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, D) )
%   | then return 0.018190355084722547;  // std dev = 0.322, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | else if ( interaction(C, E), interaction(E, E) )
%   | | then if ( complex(C, F), interaction(E, C) )
%   | | | then return -0.034960273551672284;  // std dev = 1.101, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.27444125014432946;  // std dev = 2.638, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | else if ( interaction(G, C), interaction(C, G) )
%   | | | then return -0.1572801598913958;  // std dev = 0.846, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.10359808343097433;  // std dev = 1.713, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3752175827186351;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return -0.2034955340270214;  // std dev = 0.054, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.05569420393914898;  // std dev = 1.439, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.09964029842639563;  // std dev = 1.690, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(C, E) )
%   | then return 0.09455385389314382;  // std dev = 0.626, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3338686489514653;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.4901162426111856;  // std dev = 0.228, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.652950806347258;  // std dev = 0.131, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), interaction(F, I) )
%   | | | then return -0.17712595411037993;  // std dev = 0.894, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | | | else return 0.06425065326973281;  // std dev = 3.898, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( enzyme(K, L) )
%   | | | then return -0.1624557780051569;  // std dev = 0.255, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.031406542916681296;  // std dev = 0.864, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.32721029161964055;  // std dev = 0.273, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.44995414180221766;  // std dev = 0.148, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.15306906506135998;  // std dev = 0.061, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( interaction(G, A), interaction(E, H) )
%   | | then if ( interaction(G, H), phenotype(G, I) )
%   | | | then return -0.10004059235454031;  // std dev = 0.731, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.225224235275879;  // std dev = 0.827, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.27704158428297376;  // std dev = 0.181, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.67901139567582;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.21246937100863847;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, M), location(M, N) )
%   | | | then return 0.10049527004538715;  // std dev = 1.886, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return -0.009683704088364725;  // std dev = 2.515, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( phenotype(C, D), interaction(E, A) )
%   | then if ( enzyme(A, F), complex(C, G) )
%   | | then return -0.12310283904611627;  // std dev = 0.268, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3211022380482185;  // std dev = 0.238, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.03164203212731101;  // std dev = 1.739, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | else return -0.056283647689589954;  // std dev = 0.277, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( phenotype(J, K) )
%   | | then if ( complex(J, L), location(A, M) )
%   | | | then return 0.03435813704976974;  // std dev = 2.402, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.45009594755102444;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.16870515374569167;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(N, A), phenotype(N, P) )
%   | | then return 0.2172428013051988;  // std dev = 0.714, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.438635163350913;  // std dev = 0.738, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, C), complex(C, E) )
%   | then return -0.2735376369044188;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( complex(A, F), phenotype(C, G) )
%   | | then return 0.26386362186689755;  // std dev = 0.241, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | | then return 0.27531249869234353;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0026736409078872664;  // std dev = 1.737, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.13853753168175237;  // std dev = 0.374, 56.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | else return -0.17734680269391342;  // std dev = 0.066, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return -0.2672270709375372;  // std dev = 0.171, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return 0.1971886002696207;  // std dev = 0.835, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.19857711743159526;  // std dev = 0.736, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.24603645597687848;  // std dev = 0.090, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return -0.1621602421927141;  // std dev = 0.127, 35.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=1 */
%   | | else if ( enzyme(C, F), interaction(C, D) )
%   | | | then return 0.21613649507127716;  // std dev = 1.226, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.022340194081301713;  // std dev = 2.700, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3763690984497662;  // std dev = 0.297, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2658097258728836;  // std dev = 0.302, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, I) )
%   | | then return -0.018265523106297255;  // std dev = 0.293, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.04140731331519863;  // std dev = 0.883, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.2883937499322692;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.052', 'seconds']
Refined model CLL: -0.224315


******************************************
Best model found
******************************************
Results 

CLL : -0.19925 

AUC ROC : 0.971215 

AUC PR : 0.386352 

Precision : 0.328467 

Recall : 0.48913 

F1 : 0.393013 

Total Learning Time : 11.033 

Total Inference Time : 7.378036975860596 

Total revision time: 21.03276533317566
Best scored revision CLL: -0.224315


Results 

CLL : -0.19925 

AUC ROC : 0.971215 

AUC PR : 0.386352 

Precision : 0.328467 

Recall : 0.48913 

F1 : 0.393013 

Total Learning Time : 31.75364393424988 

Total Inference Time : 7.378036975860596 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.412
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17064893509951296;  // std dev = 8.696, 352.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=110 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16586795582248223;  // std dev = 6.446, 188.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=62 */
%   | | | else return 0.16711520453854972;  // std dev = 5.667, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1507084726755891;  // std dev = 5.270, 124.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=42 */
%   | | | else return 0.13272613087218554;  // std dev = 6.796, 212.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=68 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07829966320093833;  // std dev = 4.377, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   | | | else return 0.08787796113125786;  // std dev = 7.635, 279.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=83 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09596406506928225;  // std dev = 8.643, 343.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=110 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13096201514807468;  // std dev = 8.305, 295.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=110 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7317807869445145;  // std dev = 0.007, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else return -0.26806358235556643;  // std dev = 0.009, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.12307242022920344;  // std dev = 4.625, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   | | | else return 0.05746946136240479;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03912714003943727;  // std dev = 4.178, 128.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=42 */
%   | | | else return 0.04961606097503916;  // std dev = 6.729, 204.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=68 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046747918136915104;  // std dev = 7.848, 321.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=110 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040421634345515677;  // std dev = 7.800, 320.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=110 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.784', 'seconds']
Parameter learned model CLL:-0.342156 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.696, 242, 110]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.446, 126, 62], 'false,false,false,false': [5.667, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.27, 82, 42], 'false,false,false,false': [6.796, 144, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.377, 66, 27], 'false,false,false,false': [7.635, 196, 83]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.643, 233, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.305, 185, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 42], 'true,false': [0.009, 81, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.625, 55, 35], 'false,false,false,false': [4.725, 69, 33]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.178, 86, 42], 'false,false,false,false': [6.729, 136, 68]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.848, 211, 110]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.8, 210, 110]}]
{'': [nan, 0.2148437500000021], 'false': [nan, 0.2148437500000006], 'false,false': [nan, 0.2148437500000021], 'false,false,false': [nan, 0.2148437500000006]}
{'': [nan, 0.22121220319418392], 'false': [nan, 0.22121220319418636], 'false,false': [nan, 0.22121220319418392], 'false,false,false': [0.2210276143051175, 0.22145065398335498]}
{'': [nan, 0.220202815006988], 'false': [nan, 0.220202815006988], 'false,false': [nan, 0.22020281500698802], 'false,false,false': [0.2239841025328693, 0.21787178158769566]}
{'': [nan, 0.20823344282320796], 'false': [nan, 0.20823344282320796], 'false,false': [nan, 0.2082334428232059], 'false,false,false': [0.20603537981269396, 0.2089431945455664]}
{'': [nan, 0.21779992670005602], 'false': [nan, 0.21779992670005602], 'false,false': [nan, 0.2177999267000541], 'false,false,false': [nan, 0.2177999267000541]}
{'': [nan, 0.23379561997180304], 'false': [nan, 0.23379561997180304], 'false,false': [nan, 0.23379561997180412], 'false,false,false': [nan, 0.23379561997180306]}
{'': [0.22479712422636056, 0.22874057948981108], 'false': [nan, 0.22874057948981108], 'false,false': [nan, 0.22874057948981108], 'false,false,false': [0.23765432098765543, 0.21885813148788894], 'true': [1.0380467375828824e-06, 9.192767102710687e-07], 'true,true': [nan, 1.0380467375828824e-06], 'true,true,false': [nan, 1.0380467375828824e-06]}
{'': [nan, 0.18899265587297026], 'false': [nan, 0.18899265587297026], 'false,false': [nan, 0.1889926558729706], 'false,false,false': [0.1363743465172285, 0.22196564929376555]}
{'': [nan, 0.1918645860959739], 'false': [nan, 0.1918645860959739], 'false,false': [nan, 0.1918645860959739], 'false,false,false': [nan, 0.1918645860959739]}
{'': [nan, 0.19013918358530246], 'false': [nan, 0.19013918358530246], 'false,false': [nan, 0.19013918358530285], 'false,false,false': [nan, 0.19013918358530285]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 32.819
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.8155957436101502;  // std dev = 1.384, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else return -0.05094197399139681;  // std dev = 0.287, 44.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=4 */
%   | else return -0.14185106490048763;  // std dev = 8.16e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( location(A, L), interaction(M, A) )
%   | | | then return 0.16151972161636516;  // std dev = 4.337, 89.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=27 */
%   | | | else return 0.3318331456258281;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7151553113036235;  // std dev = 0.214, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else return -0.13145010423853234;  // std dev = 0.130, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.40264789310128285;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7359812264346162;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.5504898020630853;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.12785919177808033;  // std dev = 1.876, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.6474869925934303;  // std dev = 0.309, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.08480507412881799;  // std dev = 1.273, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | | else return 0.17414612537182758;  // std dev = 5.999, 184.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=64 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( interaction(C, E), phenotype(A, F) )
%   | | then return 0.6096941129023312;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6635426912225393;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5813639696078582;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, A) )
%   | then return -0.1357170597013026;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), interaction(J, I) )
%   | | | then return 0.1279601742461235;  // std dev = 5.672, 191.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=63 */
%   | | | else return 0.24368514796832155;  // std dev = 2.307, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( location(A, K) )
%   | | | then return 0.021508673363330653;  // std dev = 3.183, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | | else return 0.28611255675994596;  // std dev = 1.222, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.36147614759873714;  // std dev = 0.423, 20.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | else return -0.02765467555092866;  // std dev = 0.281, 93.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=13 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.6372643922220864;  // std dev = 0.164, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(F, I), interaction(I, F) )
%   | | | then return 0.010186421669830662;  // std dev = 1.538, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.28881936059919017;  // std dev = 1.797, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.4482332635652599;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.11109267825893161;  // std dev = 1.382, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( location(A, L), enzyme(A, M) )
%   | | | then return 0.06831758663790846;  // std dev = 2.854, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.13700772874697464;  // std dev = 4.063, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.4706540493309376;  // std dev = 0.274, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1650765094133146;  // std dev = 0.090, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.5796922179793375;  // std dev = 0.304, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04231333852315293;  // std dev = 5.217, 180.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=51 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4160275712251404;  // std dev = 0.261, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.3179360608379322;  // std dev = 1.121, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.049335542540115275;  // std dev = 0.912, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.08226186926845737;  // std dev = 0.915, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2651760898860391;  // std dev = 2.115, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(C, E) )
%   | then return 0.008256659312555398;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2884158238731205;  // std dev = 0.089, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.43746853613453773;  // std dev = 0.231, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return -0.039421605222132866;  // std dev = 2.666, 81.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=14 */
%   | | | else return 0.06408511311823875;  // std dev = 3.773, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.6456464548721371;  // std dev = 0.399, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.17796277602608399;  // std dev = 0.143, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.11423003367760959;  // std dev = 3.287, 61.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=24 */
%   | | | else return -0.0321301688604064;  // std dev = 1.220, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.20831317747889833;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.40113428563038045;  // std dev = 0.324, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.5745057900038115;  // std dev = 0.552, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.15476738844183757;  // std dev = 0.063, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.26618538470582565;  // std dev = 0.090, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B), interaction(J, K) )
%   | | | then return 0.3357102773313913;  // std dev = 1.078, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.007700269801801742;  // std dev = 2.624, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.1270928669717118;  // std dev = 1.848, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.041601810022686175;  // std dev = 4.214, 115.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(C, E) )
%   | then return -0.10855725654644614;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.19493401935449714;  // std dev = 0.068, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( complex(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.40725850096502253;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3155254125245745;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.1442209656924066;  // std dev = 0.066, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.313614348657333;  // std dev = 0.590, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.03568681907535151;  // std dev = 2.798, 101.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=15 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return 0.20362545766533996;  // std dev = 1.625, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.05541644888485774;  // std dev = 4.326, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.40282660284352106;  // std dev = 0.179, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.17130308207736547;  // std dev = 0.070, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), enzyme(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.24991076422574104;  // std dev = 0.243, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.033729304979342886;  // std dev = 3.023, 99.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | | else if ( interaction(A, J), interaction(F, J) )
%   | | | then return -0.0061159694832036956;  // std dev = 1.270, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.13876220477805037;  // std dev = 2.788, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | else if ( complex(A, K) )
%   | | then return -0.031803325671342864;  // std dev = 0.210, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.1318508839537516;  // std dev = 1.493, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.4302883968614759;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.11843820114506406;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.18561678123699815;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( phenotype(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.4238234072003178;  // std dev = 0.378, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(F, G), location(A, G) )
%   | | | then return -0.021856751206489413;  // std dev = 3.036, 124.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=35 */
%   | | | else return 0.08081106933121206;  // std dev = 1.599, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.36428668073269527;  // std dev = 0.779, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.15066908394386108;  // std dev = 0.377, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return -0.07434811431930681;  // std dev = 1.945, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.027259935233594802;  // std dev = 3.342, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.531', 'seconds']
Refined model CLL: -0.213812


******************************************
Best model found
******************************************
Results 

CLL : -0.210537 

AUC ROC : 0.918537 

AUC PR : 0.483362 

Precision : 0.60241 

Recall : 0.543478 

F1 : 0.571429 

Total Learning Time : 32.819 

Total Inference Time : 29.96896243095398 

Total revision time: 66.31519227600097
Best scored revision CLL: -0.213812


Results 

CLL : -0.210537 

AUC ROC : 0.918537 

AUC PR : 0.483362 

Precision : 0.60241 

Recall : 0.543478 

F1 : 0.571429 

Total Learning Time : 77.03607087707519 

Total Inference Time : 29.96896243095398 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.531
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1773797043302796;  // std dev = 10.631, 520.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=166 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18315618365953468;  // std dev = 7.532, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
%   | | | else return 0.1562943950416485;  // std dev = 7.323, 246.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=79 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11148734146413575;  // std dev = 6.310, 189.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=57 */
%   | | | else return 0.1565649750076876;  // std dev = 8.443, 315.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=109 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11457984605509504;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.13246271880266985;  // std dev = 9.260, 379.000 (wgt'ed) examples reached here.  /* #neg=248 #pos=131 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09071984032278366;  // std dev = 10.579, 511.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=166 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08217153407852723;  // std dev = 10.518, 498.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=166 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7396146228655549;  // std dev = 0.006, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.260406084789918;  // std dev = 0.009, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10618287167163654;  // std dev = 5.680, 137.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=52 */
%   | | | else return 0.05214885083351958;  // std dev = 6.225, 178.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=57 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05415660576181382;  // std dev = 4.842, 168.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=57 */
%   | | | else return 0.06066975176542298;  // std dev = 8.432, 315.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=109 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03181727594355592;  // std dev = 9.827, 507.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=166 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02974051873054357;  // std dev = 9.770, 503.000 (wgt'ed) examples reached here.  /* #neg=337 #pos=166 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.595', 'seconds']
Parameter learned model CLL:-0.338086 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.631, 354, 166]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.532, 163, 87], 'false,false,false,false': [7.323, 167, 79]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.31, 132, 57], 'false,false,false,false': [8.443, 206, 109]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.864, 73, 35], 'false,false,false,false': [9.26, 248, 131]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.579, 345, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.518, 332, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.006, 0, 57], 'true,false': [0.009, 123, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.68, 85, 52], 'false,false,false,false': [6.225, 121, 57]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.842, 111, 57], 'false,false,false,false': [8.432, 206, 109]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.827, 341, 166]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.77, 337, 166]}]
{'': [nan, 0.21732248520710354], 'false': [nan, 0.21732248520710218], 'false,false': [nan, 0.21732248520710354], 'false,false,false': [nan, 0.21732248520710218]}
{'': [nan, 0.22266844432882327], 'false': [nan, 0.22266844432882313], 'false,false': [nan, 0.22266844432882327], 'false,false,false': [0.22689599999999893, 0.2180084605724095]}
{'': [nan, 0.2209141497193376], 'false': [nan, 0.2209141497193376], 'false,false': [nan, 0.2209141497193381], 'false,false,false': [0.2106751884446709, 0.2262955290919309]}
{'': [nan, 0.22472105350555294], 'false': [nan, 0.22472105350555294], 'false,false': [nan, 0.22472105350555208], 'false,false,false': [0.21905006858710632, 0.22626613965753578]}
{'': [nan, 0.2190157955268936], 'false': [nan, 0.2190157955268936], 'false,false': [nan, 0.21901579552689338], 'false,false,false': [nan, 0.21901579552689338]}
{'': [nan, 0.22214188351832195], 'false': [nan, 0.22214188351832195], 'false,false': [nan, 0.22214188351832195], 'false,false,false': [nan, 0.22214188351832173]}
{'': [0.2163985528766609, 0.22614601255394146], 'false': [nan, 0.22614601255394146], 'false,false': [nan, 0.22614601255394146], 'false,false,false': [0.23549469870531162, 0.21768084837773033], 'true': [7.079526924925224e-07, 6.993612375828761e-07], 'true,true': [nan, 7.079526924925224e-07], 'true,true,false': [nan, 7.079526924925224e-07]}
{'': [nan, 0.1957512862681698], 'false': [nan, 0.1957512862681698], 'false,false': [nan, 0.19575128626817054], 'false,false,false': [0.13957676312572312, 0.22569627678905924]}
{'': [nan, 0.19047469810442175], 'false': [nan, 0.19047469810442164], 'false,false': [nan, 0.19047469810442164], 'false,false,false': [nan, 0.19047469810442164]}
{'': [nan, 0.18976596312587204], 'false': [nan, 0.18976596312587204], 'false,false': [nan, 0.18976596312587093], 'false,false,false': [nan, 0.18976596312587093]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 40.843
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   else if ( location(A, F), complex(A, G) )
%   | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, G) )
%   | | | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.14185106490048766;  // std dev = 7.30e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.14386322081379807;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20460562801289806;  // std dev = 7.584, 254.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=88 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then return 0.22756822603876645;  // std dev = 0.984, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7268323338726016;  // std dev = 0.064, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5859823715812079;  // std dev = 2.221, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | | else return 0.1321296421282242;  // std dev = 7.371, 287.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=86 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.1765945334752322;  // std dev = 2.157, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.050843280425941266;  // std dev = 4.077, 107.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then return 0.4812942467370626;  // std dev = 0.689, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.5797259292794655;  // std dev = 0.147, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.7153606494882696;  // std dev = 0.116, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5609541692502824;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.629918298632498;  // std dev = 1.233, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return -0.03094339494927746;  // std dev = 4.499, 191.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=27 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.2100592981787273;  // std dev = 3.100, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.12743435336826314;  // std dev = 6.339, 205.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=64 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.412585651371207;  // std dev = 0.256, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), interaction(D, F) )
%   | | then if ( enzyme(D, G), location(F, H) )
%   | | | then return -0.11248828202492904;  // std dev = 1.153, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.030944857615768918;  // std dev = 2.889, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | else if ( phenotype(D, I) )
%   | | | then return 0.10240713252473672;  // std dev = 5.920, 190.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=61 */
%   | | | else return -0.027125927382402357;  // std dev = 1.556, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.759768107552554;  // std dev = 0.256, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.1818974445190113;  // std dev = 0.085, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10926808935575061;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.13853820000729544;  // std dev = 4.811, 121.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30252598982065065;  // std dev = 0.242, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( location(D, E), interaction(D, D) )
%   | | then if ( phenotype(D, F), enzyme(A, G) )
%   | | | then return 0.13981832232456626;  // std dev = 1.027, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.07426907832365176;  // std dev = 2.098, 88.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4593674404061119;  // std dev = 1.263, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.0041949612106412255;  // std dev = 3.993, 136.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=26 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6537851450508164;  // std dev = 0.999, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.19325499026781762;  // std dev = 0.289, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.14847077424704047;  // std dev = 5.652, 150.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=58 */
%   | | | else return 0.3765417196302022;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), complex(A, E) )
%   | then return 0.048612756599710094;  // std dev = 0.676, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.30217806798751773;  // std dev = 0.189, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), complex(A, H) )
%   | | then return 0.07764812063683442;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4460867417468454;  // std dev = 0.185, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10133807313661598;  // std dev = 0.026, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.01845003875607142;  // std dev = 3.823, 157.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | | | else return 0.0809192658917293;  // std dev = 7.192, 283.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=95 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.46171681035045264;  // std dev = 0.153, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | else return -0.1503998047534896;  // std dev = 0.462, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3684433533415089;  // std dev = 0.287, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.21071370707078405;  // std dev = 0.456, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.07593449529669774;  // std dev = 5.864, 181.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=65 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.525777238596077;  // std dev = 1.219, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.25097835556521003;  // std dev = 0.626, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.004176025525956758;  // std dev = 1.244, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.07278122937048198;  // std dev = 2.571, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15807267721714635;  // std dev = 0.170, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.07738375936403316;  // std dev = 1.109, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.36940310014962213;  // std dev = 0.666, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.13220346781125938;  // std dev = 0.491, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -4.437165521997978E-4;  // std dev = 5.807, 247.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=65 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4493110259594412;  // std dev = 0.457, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.15032901457264342;  // std dev = 0.201, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.3068092195332307;  // std dev = 0.193, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.016843091029176003;  // std dev = 4.551, 135.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, C) )
%   | | then if ( interaction(A, F), location(F, D) )
%   | | | then return 0.25134254902030523;  // std dev = 1.758, 51.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=42 */
%   | | | else return 0.5008768022778991;  // std dev = 1.910, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | else return -0.1872311623949366;  // std dev = 0.090, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.16918630294449968;  // std dev = 0.069, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( enzyme(A, G), complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.3600299124906669;  // std dev = 0.148, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.13718747701040476;  // std dev = 0.111, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.17208857807796896;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.0652752197469663;  // std dev = 2.193, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.007361824520192215;  // std dev = 4.720, 151.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.1489522654325443;  // std dev = 0.326, 154.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=94 */
%   | else return -0.15260486795883466;  // std dev = 0.064, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( phenotype(F, H), complex(A, I) )
%   | | then if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.39982085642248705;  // std dev = 0.375, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12286677860247176;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.16351594028865504;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.06752171429589626;  // std dev = 2.305, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( enzyme(A, L), complex(A, M) )
%   | | then return -0.010271318821927949;  // std dev = 0.202, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return -0.026802051478306346;  // std dev = 0.783, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.10392735099806133;  // std dev = 4.181, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.464', 'seconds']
Refined model CLL: -0.213141


******************************************
Best model found
******************************************
Results 

CLL : -0.19277 

AUC ROC : 0.952758 

AUC PR : 0.476183 

Precision : 0.489796 

Recall : 0.521739 

F1 : 0.505263 

Total Learning Time : 40.843 

Total Inference Time : 55.345834493637085 

Total revision time: 100.32712666893005
Best scored revision CLL: -0.213141


Results 

CLL : -0.19277 

AUC ROC : 0.952758 

AUC PR : 0.476183 

Precision : 0.489796 

Recall : 0.521739 

F1 : 0.505263 

Total Learning Time : 111.04800527000427 

Total Inference Time : 55.345834493637085 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.735
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19047976216717874;  // std dev = 12.147, 665.000 (wgt'ed) examples reached here.  /* #neg=444 #pos=221 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14243567619362535;  // std dev = 9.067, 385.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=119 */
%   | | | else return 0.16131904363004754;  // std dev = 8.279, 311.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=102 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14629991923215974;  // std dev = 7.431, 248.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=83 */
%   | | | else return 0.15605194914812578;  // std dev = 9.508, 400.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=138 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12467807460904838;  // std dev = 6.046, 164.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=55 */
%   | | | else return 0.11080882258299316;  // std dev = 10.587, 511.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=166 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09790221738053985;  // std dev = 12.161, 668.000 (wgt'ed) examples reached here.  /* #neg=447 #pos=221 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09439659634345167;  // std dev = 12.029, 640.000 (wgt'ed) examples reached here.  /* #neg=419 #pos=221 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7195733936081833;  // std dev = 0.994, 84.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=83 */
%   | else return -0.2685464316321928;  // std dev = 0.006, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08816942299219092;  // std dev = 6.422, 180.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | | else return 0.062231913908942955;  // std dev = 7.024, 222.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=74 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05496762316840794;  // std dev = 5.810, 239.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=83 */
%   | | | else return 0.03155032698689808;  // std dev = 9.717, 437.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=138 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04760754507363672;  // std dev = 11.149, 646.000 (wgt'ed) examples reached here.  /* #neg=425 #pos=221 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03165066699231194;  // std dev = 11.200, 657.000 (wgt'ed) examples reached here.  /* #neg=436 #pos=221 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.748', 'seconds']
Parameter learned model CLL:-0.338917 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.147, 444, 221]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.067, 266, 119], 'false,false,false,false': [8.279, 209, 102]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.431, 165, 83], 'false,false,false,false': [9.508, 262, 138]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.046, 109, 55], 'false,false,false,false': [10.587, 345, 166]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.161, 447, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.029, 419, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.994, 1, 83], 'true,false': [0.006, 187, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.422, 116, 64], 'false,false,false,false': [7.024, 148, 74]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.81, 156, 83], 'false,false,false,false': [9.717, 299, 138]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.149, 425, 221]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.2, 436, 221]}]
{'': [nan, 0.22188704844819052], 'false': [nan, 0.22188704844819018], 'false,false': [nan, 0.22188704844819052], 'false,false,false': [nan, 0.22188704844819018]}
{'': [nan, 0.2167042376800032], 'false': [nan, 0.21670423768001276], 'false,false': [nan, 0.2167042376800032], 'false,false,false': [0.2135537190082666, 0.22040715046370732]}
{'': [nan, 0.22474263725128368], 'false': [nan, 0.22474263725128368], 'false,false': [nan, 0.22474263725128318], 'false,false,false': [0.22268076914875035, 0.22598459837964444]}
{'': [nan, 0.22025626943246296], 'false': [nan, 0.22025626943246296], 'false,false': [nan, 0.22025626943246523], 'false,false,false': [0.22289559785841692, 0.21936246970297152]}
{'': [nan, 0.22137410130127685], 'false': [nan, 0.22137410130127685], 'false,false': [nan, 0.22137410130126975], 'false,false,false': [nan, 0.22137410130126975]}
{'': [nan, 0.2260828145769417], 'false': [nan, 0.2260828145769417], 'false,false': [nan, 0.22608281457694276], 'false,false,false': [nan, 0.22608281457694118]}
{'': [0.21247806353264567, 0.22548420788835416], 'false': [nan, 0.22548420788835416], 'false,false': [nan, 0.22548420788835416], 'false,false,false': [0.22913580246913645, 0.2222222222222197], 'true': [0.011755434879082757, 2.2318175988465116e-07], 'true,true': [nan, 0.011755434879082757], 'true,true,false': [nan, 0.011755434879082757]}
{'': [nan, 0.18973205982324315], 'false': [nan, 0.18973205982324315], 'false,false': [nan, 0.18973205982324332], 'false,false,false': [0.14122414129851218, 0.21606768588325004]}
{'': [nan, 0.19240341683139814], 'false': [nan, 0.1924034168313984], 'false,false': [nan, 0.1924034168313984], 'false,false,false': [nan, 0.1924034168313984]}
{'': [nan, 0.1909319689887302], 'false': [nan, 0.1909319689887302], 'false,false': [nan, 0.19093196898873083], 'false,false,false': [nan, 0.19093196898873083]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.894
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( complex(C, E), interaction(F, C) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( phenotype(A, G), complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8337586911970727;  // std dev = 0.154, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6968586125188665;  // std dev = 2.048, 31.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=26 */
%   | | | else return 0.12381309550051417;  // std dev = 8.823, 399.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=106 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22178529873587596;  // std dev = 2.763, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6872819219874584;  // std dev = 0.203, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | else if ( interaction(A, F), interaction(C, F) )
%   | | then return 0.057664977861637455;  // std dev = 0.372, 121.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=27 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2177181670872873;  // std dev = 4.046, 77.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=30 */
%   | | | else return 0.1227123557495955;  // std dev = 5.222, 146.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=42 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.6561685607124254;  // std dev = 0.261, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, J), interaction(K, A) )
%   | | | then return 0.1757322873105632;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7451901411588556;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.09014450122591758;  // std dev = 4.692, 126.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=33 */
%   | | | else return 0.1871949103792028;  // std dev = 5.756, 147.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then return 0.12454051631249279;  // std dev = 0.410, 337.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=111 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F) )
%   | | then if ( complex(A, G), interaction(E, E) )
%   | | | then return 0.30133705385221854;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.10302358535708987;  // std dev = 4.926, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
%   | | else if ( phenotype(A, H), interaction(E, F) )
%   | | | then return 0.26699086811477357;  // std dev = 2.755, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | | else return 0.16050422773190312;  // std dev = 4.668, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8190896182130741;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18217545778841632;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.23027931098881005;  // std dev = 1.706, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.3668361657948156;  // std dev = 2.037, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.3967506344065375;  // std dev = 0.380, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | else if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | | then if ( location(A, F), location(E, F) )
%   | | | then return 0.5908473593706581;  // std dev = 3.704, 124.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=106 */
%   | | | else return -0.11463679806540036;  // std dev = 0.921, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return -0.1852961756824018;  // std dev = 0.535, 244.000 (wgt'ed) examples reached here.  /* #neg=244 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5524068619317727;  // std dev = 0.142, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.19626495223313867;  // std dev = 0.116, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.10352482525405864;  // std dev = 2.125, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.22806143775005225;  // std dev = 2.458, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.10957098643168206;  // std dev = 6.309, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then return 0.45500150427741476;  // std dev = 0.258, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | else if ( interaction(D, A), interaction(A, F) )
%   | | then return -0.11396495564065257;  // std dev = 0.225, 119.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=10 */
%   | | else if ( complex(D, G), complex(A, G) )
%   | | | then return -0.04484013987577627;  // std dev = 1.645, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.11672216907572536;  // std dev = 7.567, 309.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=110 */
%   else if ( complex(A, H) )
%   | then return -0.01584195778747231;  // std dev = 0.315, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.15431433471547218;  // std dev = 0.607, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.11177830840829774;  // std dev = 1.077, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.41335653504495246;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07266899422572842;  // std dev = 3.246, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3634805798106292;  // std dev = 0.172, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then if ( phenotype(A, F), complex(D, G) )
%   | | | then return 0.022315291611716758;  // std dev = 1.063, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.1829115440143617;  // std dev = 0.141, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5083108212148194;  // std dev = 0.227, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.010482534107336046;  // std dev = 4.668, 170.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=42 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3355972457974697;  // std dev = 5.731, 195.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=127 */
%   | | | else return -0.19125543211859308;  // std dev = 0.694, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.1848035449910859;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5297969029610575;  // std dev = 0.908, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.45234184830170393;  // std dev = 0.152, 83.000 (wgt'ed) examples reached here.  /* #pos=83 */
%   | else return -0.16899290158210617;  // std dev = 0.081, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.2594409256849512;  // std dev = 0.066, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16403902231387094;  // std dev = 0.222, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.0262971005123096;  // std dev = 1.964, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.4244020690183455;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.11112053636100962;  // std dev = 2.797, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | else if ( location(A, I) )
%   | | | then return 0.05285719971997385;  // std dev = 6.355, 269.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=88 */
%   | | | else return -0.058302425998854976;  // std dev = 2.243, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(E, A) )
%   | then if ( interaction(C, F) )
%   | | then return 0.1951825294256563;  // std dev = 0.063, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.13756223236390588;  // std dev = 0.495, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then return 0.17680312450387867;  // std dev = 0.061, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.38453891000768503;  // std dev = 0.135, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3489661730860418;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10640799299582224;  // std dev = 0.140, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.004122983128124105;  // std dev = 4.702, 230.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=64 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.05516409396534884;  // std dev = 5.555, 217.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=75 */
%   | | | else return -3.634223072515296E-4;  // std dev = 4.155, 131.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( phenotype(A, E) )
%   | then return 0.018316932121149564;  // std dev = 0.322, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.12316072912991165;  // std dev = 0.320, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( complex(A, G), phenotype(C, H) )
%   | | | then return 0.07019769864500477;  // std dev = 1.389, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.0872835130531865;  // std dev = 2.897, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   else if ( complex(A, I), location(A, J) )
%   | then return -0.003477346586621224;  // std dev = 0.235, 182.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=57 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( complex(K, M), interaction(N, K) )
%   | | | then return 0.04953130358116722;  // std dev = 4.192, 116.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=40 */
%   | | | else return 0.00901416481957501;  // std dev = 4.044, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | | else if ( interaction(A, P), interaction(P, P) )
%   | | | then return 0.35382751275708885;  // std dev = 0.644, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05158108707165971;  // std dev = 2.730, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then return 0.26089921784427195;  // std dev = 0.169, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | else if ( interaction(A, C) )
%   | | then return -0.12434042710800929;  // std dev = 0.456, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( location(C, F), location(D, F) )
%   | | | then return 0.019728923948197606;  // std dev = 6.949, 352.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=113 */
%   | | | else return 0.18465573034483043;  // std dev = 1.846, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then return -0.07090493815601254;  // std dev = 0.315, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.05620602537078149;  // std dev = 1.704, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.031212222682938644;  // std dev = 2.043, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03927077200310823;  // std dev = 0.587, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5876313366324298;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.488', 'seconds']
Refined model CLL: -0.23887


******************************************
Best model found
******************************************
Results 

CLL : -0.244642 

AUC ROC : 0.961027 

AUC PR : 0.344156 

Precision : 0.338462 

Recall : 0.478261 

F1 : 0.396396 

Total Learning Time : 23.894 

Total Inference Time : 16.301682710647583 

Total revision time: 45.16500025177002
Best scored revision CLL: -0.23887


Results 

CLL : -0.244642 

AUC ROC : 0.961027 

AUC PR : 0.344156 

Precision : 0.338462 

Recall : 0.478261 

F1 : 0.396396 

Total Learning Time : 55.885878852844236 

Total Inference Time : 16.301682710647583 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.973
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1867373099512284;  // std dev = 13.637, 843.000 (wgt'ed) examples reached here.  /* #neg=566 #pos=277 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15700798020140289;  // std dev = 10.009, 458.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=148 */
%   | | | else return 0.16980137539790938;  // std dev = 9.255, 384.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=129 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.175208182124047;  // std dev = 8.127, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
%   | | | else return 0.1680446476498624;  // std dev = 10.538, 483.000 (wgt'ed) examples reached here.  /* #neg=310 #pos=173 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15219308332809203;  // std dev = 6.547, 184.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=68 */
%   | | | else return 0.1254808355426539;  // std dev = 11.716, 609.000 (wgt'ed) examples reached here.  /* #neg=400 #pos=209 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10625263793788035;  // std dev = 13.446, 798.000 (wgt'ed) examples reached here.  /* #neg=521 #pos=277 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07517985477149658;  // std dev = 13.562, 824.000 (wgt'ed) examples reached here.  /* #neg=547 #pos=277 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7215632860776535;  // std dev = 0.014, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else return -0.27844088682920354;  // std dev = 0.019, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06491818352764012;  // std dev = 7.280, 237.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=80 */
%   | | | else return 0.07054598802976836;  // std dev = 7.800, 269.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=93 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03603400836562114;  // std dev = 6.526, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
%   | | | else return 0.046240427192117545;  // std dev = 10.734, 518.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=173 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04491935771947835;  // std dev = 12.433, 800.000 (wgt'ed) examples reached here.  /* #neg=523 #pos=277 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0318388435600713;  // std dev = 12.459, 809.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=277 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.637', 'seconds']
Parameter learned model CLL:-0.346174 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.637, 566, 277]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [10.009, 310, 148], 'false,false,false,false': [9.255, 255, 129]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.127, 181, 104], 'false,false,false,false': [10.538, 310, 173]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.547, 116, 68], 'false,false,false,false': [11.716, 400, 209]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.446, 521, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.562, 547, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 104], 'true,false': [0.019, 206, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.28, 157, 80], 'false,false,false,false': [7.8, 176, 93]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.526, 206, 104], 'false,false,false,false': [10.734, 345, 173]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.433, 523, 277]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.459, 532, 277]}]
{'': [nan, 0.2206180547640274], 'false': [nan, 0.22061805476402824], 'false,false': [nan, 0.2206180547640274], 'false,false,false': [nan, 0.22061805476402824]}
{'': [nan, 0.2207516883791045], 'false': [nan, 0.22075168837910067], 'false,false': [nan, 0.2207516883791045], 'false,false,false': [0.21872199233424278, 0.22308349609375022]}
{'': [nan, 0.23060181618211037], 'false': [nan, 0.23060181618211037], 'false,false': [nan, 0.23060181618211698], 'false,false,false': [0.23173879239381692, 0.22991188646677096]}
{'': [nan, 0.2272932569656867], 'false': [nan, 0.2272932569656867], 'false,false': [nan, 0.22729325696568736], 'false,false,false': [0.23298676748582056, 0.22540748632925797]}
{'': [nan, 0.22657398372009077], 'false': [nan, 0.22657398372009077], 'false,false': [nan, 0.22657398372009302], 'false,false,false': [nan, 0.22657398372009302]}
{'': [nan, 0.2232132282165598], 'false': [nan, 0.2232132282165598], 'false,false': [nan, 0.22321322821656278], 'false,false,false': [nan, 0.22321322821655923]}
{'': [0.22293806800539678, 0.224994772215778], 'false': [nan, 0.224994772215778], 'false,false': [nan, 0.224994772215778], 'false,false,false': [0.2236108885684272, 0.22619919569934055], 'true': [1.7665392008690508e-06, 1.7629346805337003e-06], 'true,true': [nan, 1.7665392008690508e-06], 'true,true,false': [nan, 1.7665392008690508e-06]}
{'': [nan, 0.19062551771032069], 'false': [nan, 0.19062551771032069], 'false,false': [nan, 0.19062551771032138], 'false,false,false': [0.1373871283939879, 0.22244732863515101]}
{'': [nan, 0.19322455886996626], 'false': [nan, 0.19322455886997258], 'false,false': [nan, 0.19322455886997258], 'false,false,false': [nan, 0.19322455886997258]}
{'': [nan, 0.19187228257094863], 'false': [nan, 0.19187228257094863], 'false,false': [nan, 0.19187228257094846], 'false,false,false': [nan, 0.19187228257094846]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.065
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then if ( interaction(C, C) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(D, C) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(A, G), complex(A, H) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return 0.12025719720777352;  // std dev = 8.239, 351.000 (wgt'ed) examples reached here.  /* #neg=259 #pos=92 */
%   | | | else return 0.18031388355311703;  // std dev = 9.205, 388.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=125 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6777914356493702;  // std dev = 0.207, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(D, F) )
%   | | then if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.25608633066701414;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.487803605052478;  // std dev = 0.889, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.41058033599965255;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7316935407719699;  // std dev = 0.095, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( complex(A, J), location(A, K) )
%   | | | then return -0.019806726753883026;  // std dev = 3.207, 92.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=12 */
%   | | | else return 0.12691882195778914;  // std dev = 6.154, 187.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=53 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.13335952369606124;  // std dev = 10.021, 482.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=143 */
%   | | | else return 0.29043488073756085;  // std dev = 2.224, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5465169597711498;  // std dev = 0.150, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.047260629055204034;  // std dev = 2.629, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return -0.0778752862783086;  // std dev = 1.630, 39.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=3 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.04014738921678006;  // std dev = 2.333, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | | | else return 0.14060377768698093;  // std dev = 3.508, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B), phenotype(H, J) )
%   | | | then return 0.451254328117319;  // std dev = 0.968, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.09033326296040103;  // std dev = 5.746, 172.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=46 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1321183070271548;  // std dev = 8.224, 312.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=99 */
%   | | | else return 0.1874311890143378;  // std dev = 5.105, 116.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.38908986869778306;  // std dev = 0.208, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), complex(D, G) )
%   | | then if ( phenotype(D, H), phenotype(A, H) )
%   | | | then return 0.12211634515779975;  // std dev = 2.626, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.025011710980108813;  // std dev = 3.627, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | else if ( interaction(A, I), interaction(D, I) )
%   | | | then return -0.0033803676631173037;  // std dev = 2.652, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | | else return 0.13983652352479617;  // std dev = 4.100, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.770180873167065;  // std dev = 1.074, 62.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=61 */
%   | | | else return -0.20274770347124152;  // std dev = 0.100, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.40639962228309334;  // std dev = 1.118, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.07225334097898595;  // std dev = 8.495, 375.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=100 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then return 0.33815048362418404;  // std dev = 2.11e-08, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( enzyme(A, E) )
%   | | | then return -0.12982384003182018;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.18783493518786268;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3912549188489053;  // std dev = 0.051, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(A, A) )
%   | then return -0.13396587526109124;  // std dev = 0.027, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( location(A, F), interaction(A, G) )
%   | | then if ( complex(G, H), complex(A, H) )
%   | | | then return 9.862676151800114E-4;  // std dev = 3.166, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | | else return 0.07700746401062487;  // std dev = 7.269, 288.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=84 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.047601595673644644;  // std dev = 3.445, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.12311437512097714;  // std dev = 8.116, 318.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=115 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then return 0.3178773607353816;  // std dev = 0.080, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else return 0.20297124019566423;  // std dev = 0.263, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.6989062181178765;  // std dev = 1.374, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.10109657385584363;  // std dev = 1.046, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1769277444290052;  // std dev = 0.330, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | | else return 0.02927884252111025;  // std dev = 5.187, 167.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=42 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.32823151305257814;  // std dev = 0.107, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return 0.1747094293645372;  // std dev = 2.974, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.0855817446040592;  // std dev = 9.074, 420.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=136 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5567388465746358;  // std dev = 0.218, 104.000 (wgt'ed) examples reached here.  /* #pos=104 */
%   | else return -0.20325950023420294;  // std dev = 0.079, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.403491786376951;  // std dev = 0.356, 39.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=34 */
%   | | else if ( interaction(H, E), interaction(H, A) )
%   | | | then return -0.014082566805269642;  // std dev = 4.565, 143.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=32 */
%   | | | else return 0.08334225591311838;  // std dev = 6.884, 235.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=84 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(I, J) )
%   | | | then return 0.005402657355994041;  // std dev = 0.912, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2546999547951147;  // std dev = 1.230, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.09810929519738139;  // std dev = 1.703, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.029600612586291694;  // std dev = 2.816, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1506912811835279;  // std dev = 0.144, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.5359821886179207;  // std dev = 1.175, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return 0.06424400299887986;  // std dev = 1.255, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.06571816636873727;  // std dev = 4.522, 257.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=36 */
%   | | | else return 0.034446877937471636;  // std dev = 8.626, 419.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=128 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.46949071467846765;  // std dev = 0.670, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.17136960532267476;  // std dev = 0.149, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.15233202336920215;  // std dev = 1.816, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.7135024259721897;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.13615442177365342;  // std dev = 0.109, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( enzyme(A, D), enzyme(C, D) )
%   | | then return -0.10720010047429689;  // std dev = 0.147, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else return -0.0029272665499499705;  // std dev = 0.256, 148.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=38 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.4424684067227531;  // std dev = 0.204, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | | else return -0.17841569997605358;  // std dev = 0.376, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5044317253160681;  // std dev = 3.371, 87.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=74 */
%   | | | else return -0.26435484206540727;  // std dev = 0.787, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.08016761754420754;  // std dev = 5.833, 168.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=63 */
%   | | | else return 0.18657107129377498;  // std dev = 1.654, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( complex(C, E), complex(A, E) )
%   | then return -0.02353537425066484;  // std dev = 0.209, 112.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=35 */
%   | else if ( enzyme(C, F), location(C, G) )
%   | | then if ( complex(A, H), phenotype(C, I) )
%   | | | then return 0.19138387518929842;  // std dev = 1.460, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.007482069527266081;  // std dev = 4.654, 157.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=50 */
%   | | else return 0.049152633261567956;  // std dev = 0.363, 399.000 (wgt'ed) examples reached here.  /* #neg=255 #pos=144 */
%   else if ( phenotype(A, J) )
%   | then return 0.061887594424838634;  // std dev = 0.305, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | else if ( interaction(K, A), interaction(A, L) )
%   | | then if ( interaction(L, M) )
%   | | | then return 0.11050627497711564;  // std dev = 1.417, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.07175255026055913;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.12615653356781406;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13220966185300467;  // std dev = 2.805, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.677', 'seconds']
Refined model CLL: -0.246721


******************************************
Best model found
******************************************
Results 

CLL : -0.254278 

AUC ROC : 0.941965 

AUC PR : 0.394774 

Precision : 0.510417 

Recall : 0.532609 

F1 : 0.521277 

Total Learning Time : 21.065 

Total Inference Time : 10.692570209503174 

Total revision time: 37.401581895828244
Best scored revision CLL: -0.246721


Results 

CLL : -0.254278 

AUC ROC : 0.941965 

AUC PR : 0.394774 

Precision : 0.510417 

Recall : 0.532609 

F1 : 0.521277 

Total Learning Time : 48.12246049690246 

Total Inference Time : 10.692570209503174 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Amount of data: 0.2
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.157
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15602127552504308;  // std dev = 6.270, 188.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.10313583728730953;  // std dev = 4.021, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | | | else return 0.22009806823356545;  // std dev = 4.584, 89.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1866992461074322;  // std dev = 4.027, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | | | else return 0.14535579392825151;  // std dev = 4.479, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.0805205229220639;  // std dev = 2.673, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | else return 0.13255651580955352;  // std dev = 5.470, 133.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=46 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07555657602077505;  // std dev = 6.204, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1005277775014938;  // std dev = 6.022, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7294789302900847;  // std dev = 0.082, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.26365375357365156;  // std dev = 0.119, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.02051465265692655;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.07125022068028998;  // std dev = 3.431, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08384221450532284;  // std dev = 3.128, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
%   | | | else return 0.08652745446263115;  // std dev = 4.372, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.059477062817846656;  // std dev = 5.411, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.020043457976314478;  // std dev = 5.512, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.556', 'seconds']
Parameter learned model CLL:-0.336324 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.27, 132, 56]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.021, 61, 22], 'false,false,false,false': [4.584, 55, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.027, 44, 26], 'false,false,false,false': [4.479, 60, 30]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.673, 25, 10], 'false,false,false,false': [5.47, 87, 46]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.204, 126, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.022, 106, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.082, 0, 26], 'true,false': [0.119, 54, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.954, 32, 12], 'false,false,false,false': [3.431, 34, 18]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.128, 42, 26], 'false,false,false,false': [4.372, 53, 30]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.411, 98, 56]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [5.512, 114, 56]}]
{'': [nan, 0.20914440923494845], 'false': [nan, 0.20914440923494917], 'false,false': [nan, 0.20914440923494845], 'false,false,false': [nan, 0.20914440923494917]}
{'': [nan, 0.21957815035153994], 'false': [nan, 0.21957815035154052], 'false,false': [nan, 0.21957815035153994], 'false,false,false': [0.1948033096240376, 0.23608130286579918]}
{'': [nan, 0.22717912593489586], 'false': [nan, 0.22717912593489586], 'false,false': [nan, 0.22717912593489448], 'false,false,false': [0.2316604120235207, 0.22294587074513098]}
{'': [nan, 0.22108961042263792], 'false': [nan, 0.22108961042263792], 'false,false': [nan, 0.22108961042263925], 'false,false,false': [0.20408163265306145, 0.2250012805970897]}
{'': [nan, 0.21145578928370795], 'false': [nan, 0.21145578928370795], 'false,false': [nan, 0.21145578928370717], 'false,false,false': [nan, 0.21145578928370717]}
{'': [nan, 0.22385708683753577], 'false': [nan, 0.22385708683753577], 'false,false': [nan, 0.22385708683753625], 'false,false,false': [nan, 0.22385708683753586]}
{'': [0.2166338564676852, 0.2141443003010065], 'true': [0.00025805714045611637, 0.0002632253630226887], 'false': [nan, 0.2141443003010065], 'false,false': [nan, 0.2141443003010065], 'false,false,false': [0.1983471074380166, 0.22633136094674572], 'true,true': [nan, 0.00025805714045611637], 'true,true,false': [nan, 0.00025805714045611637]}
{'': [nan, 0.1913733288010752], 'false': [nan, 0.1913733288010752], 'false,false': [nan, 0.1913733288010755], 'false,false,false': [0.14390039654677217, 0.23026356834853165]}
{'': [nan, 0.1901110637771937], 'false': [nan, 0.1901110637771933], 'false,false': [nan, 0.1901110637771933], 'false,false,false': [nan, 0.1901110637771933]}
{'': [nan, 0.1787144005965058], 'false': [nan, 0.1787144005965058], 'false,false': [nan, 0.17871440059650606], 'false,false,false': [nan, 0.17871440059650606]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.173
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(D, F) )
%   | | then if ( interaction(G, A), complex(G, F) )
%   | | | then return -0.1418510649004877;  // std dev = 2.11e-08, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.02481560176617886;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.12481560176617888;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.2505539983906503;  // std dev = 4.340, 79.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=31 */
%   | | | else return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(C, E), interaction(F, A) )
%   | then return -0.10986126153933858;  // std dev = 0.193, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.2348174149291737;  // std dev = 0.462, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.041070277253004245;  // std dev = 0.315, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   else if ( interaction(H, A), complex(H, I) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.7373269569258906;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, H), interaction(J, A) )
%   | | | then return 0.06543999537182753;  // std dev = 2.222, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.2815037398847869;  // std dev = 3.314, 44.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=20 */
%   | else if ( interaction(K, A), interaction(A, L) )
%   | | then return -0.16298863676766104;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.3589781928899629;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09388639798566975;  // std dev = 2.901, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.6394479697979599;  // std dev = 0.266, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( complex(D, F), phenotype(A, G) )
%   | | then return -0.11787145922687106;  // std dev = 0.223, 35.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=2 */
%   | | else return 0.023253714149983465;  // std dev = 0.402, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.7490299912760754;  // std dev = 0.095, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.20925423438448193;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(M, K), phenotype(M, N) )
%   | | | then return 0.23129728687560197;  // std dev = 2.928, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return -0.07557077236744485;  // std dev = 0.916, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( phenotype(A, P) )
%   | | | then return -0.18914741192735288;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.09063302747986737;  // std dev = 2.313, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then return 0.5812497552236418;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1479446661606742;  // std dev = 1.054, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( location(A, F), phenotype(C, G) )
%   | | then if ( phenotype(A, G), complex(C, H) )
%   | | | then return -0.14027460730381283;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.14897999241264037;  // std dev = 2.302, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else return -0.1315619445820404;  // std dev = 0.253, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5123285026469063;  // std dev = 0.283, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then return -0.04280265252407859;  // std dev = 0.330, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1818658872797388;  // std dev = 3.526, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | | else return 0.5203579533439292;  // std dev = 0.813, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3689066127827829;  // std dev = 0.248, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(C, F), phenotype(F, G) )
%   | | then if ( complex(C, H), complex(F, I) )
%   | | | then return -0.11422507426684624;  // std dev = 0.887, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | | else return 0.27377695893071186;  // std dev = 1.886, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else return -0.14119904787046536;  // std dev = 0.205, 24.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=1 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.3939279459096906;  // std dev = 0.268, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.37469511898399366;  // std dev = 1.463, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.16320026802655682;  // std dev = 2.498, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( location(A, N), enzyme(A, P) )
%   | | | then return 0.015920502584752232;  // std dev = 1.295, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.17038033241306086;  // std dev = 2.122, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.325593625396533;  // std dev = 0.128, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5489810738383196;  // std dev = 0.422, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15533255004260446;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, I), phenotype(D, I) )
%   | | | then return 0.31970932374477207;  // std dev = 0.850, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return -0.05139490232238696;  // std dev = 1.816, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | else if ( interaction(A, J), complex(A, K) )
%   | | then if ( phenotype(J, L), complex(J, M) )
%   | | | then return -0.091457890603291;  // std dev = 0.612, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | | else return 0.12271513041950972;  // std dev = 1.074, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return -0.12069744919747874;  // std dev = 0.933, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.030223754869505782;  // std dev = 4.080, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.46775348226526403;  // std dev = 0.194, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else return -0.18325285611274666;  // std dev = 0.083, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( complex(F, G), location(A, H) )
%   | | then if ( interaction(F, F), phenotype(F, I) )
%   | | | then return -0.19548260677916773;  // std dev = 0.073, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1412505005902616;  // std dev = 1.628, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | else return -0.2416709534042455;  // std dev = 0.076, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( complex(J, L), phenotype(J, M) )
%   | | | then return 0.11972095517160421;  // std dev = 1.264, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.12260807822911565;  // std dev = 1.214, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( phenotype(A, N), location(A, P) )
%   | | | then return 0.5090483524780879;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.0947312470566056;  // std dev = 2.464, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( enzyme(C, E), location(C, D) )
%   | then if ( complex(A, F) )
%   | | then return 0.03051079868014069;  // std dev = 0.264, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else return -0.2094185300506491;  // std dev = 0.240, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.23610761574400163;  // std dev = 0.205, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(H, C), complex(H, I) )
%   | | | then return 0.01797766114907453;  // std dev = 3.620, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return -0.11457282620804318;  // std dev = 1.342, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then return 0.3076342132520949;  // std dev = 0.643, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, L), interaction(A, M) )
%   | | then return 0.18167772971419335;  // std dev = 0.840, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.13319727921271415;  // std dev = 1.038, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.03446203072442925;  // std dev = 1.120, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1910523404681339;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), complex(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.32401722019832957;  // std dev = 0.416, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09936994885860388;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, I), phenotype(E, D) )
%   | | | then return 0.1262142552538951;  // std dev = 0.775, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.07853763217850526;  // std dev = 2.501, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return -0.17815293741937588;  // std dev = 0.285, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.0923839006067537;  // std dev = 1.435, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.02793123956941617;  // std dev = 1.953, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.1186240588359607;  // std dev = 2.543, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), phenotype(C, F) )
%   | then return -0.11462934921911486;  // std dev = 0.252, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( enzyme(A, G), complex(C, H) )
%   | | then return -0.13231522442452778;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.16803688322502794;  // std dev = 0.334, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(A, I), interaction(I, J) )
%   | then if ( interaction(A, J), location(A, K) )
%   | | then return 0.03601258436637642;  // std dev = 0.267, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.510114002005519;  // std dev = 0.257, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.45722301042333297;  // std dev = 0.626, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.2526990327522511;  // std dev = 0.316, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return -0.0041856797663785755;  // std dev = 2.965, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return -0.14469575110723182;  // std dev = 0.854, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.746', 'seconds']
Refined model CLL: -0.277429


******************************************
Best model found
******************************************
Results 

CLL : -0.273683 

AUC ROC : 0.815923 

AUC PR : 0.190199 

Precision : 0.337349 

Recall : 0.325581 

F1 : 0.331361 

Total Learning Time : 9.173 

Total Inference Time : 3.57835054397583 

Total revision time: 15.533758478164673
Best scored revision CLL: -0.277429


Results 

CLL : -0.273683 

AUC ROC : 0.815923 

AUC PR : 0.190199 

Precision : 0.337349 

Recall : 0.325581 

F1 : 0.331361 

Total Learning Time : 26.25463707923889 

Total Inference Time : 3.57835054397583 

Amount of data: 0.4
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.406
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19050187627598397;  // std dev = 8.686, 340.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=113 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13619883870178795;  // std dev = 6.079, 175.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=53 */
%   | | | else return 0.174250786753736;  // std dev = 6.289, 176.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=60 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17144744698794884;  // std dev = 5.597, 136.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=49 */
%   | | | else return 0.15056641620161573;  // std dev = 6.497, 188.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=64 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12791863127973097;  // std dev = 4.216, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | | else return 0.11642302716165452;  // std dev = 7.578, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0879987399913349;  // std dev = 8.738, 349.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=113 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07167366030686953;  // std dev = 8.739, 349.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=113 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7315099901390695;  // std dev = 0.018, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else return -0.26792600123732047;  // std dev = 0.023, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.029017561928523596;  // std dev = 4.300, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return 0.044218646611484835;  // std dev = 5.115, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.020161285788049606;  // std dev = 4.592, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
%   | | | else return 0.053724832950955204;  // std dev = 6.568, 197.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=64 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02958706063167185;  // std dev = 8.026, 359.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=113 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.026067952726895143;  // std dev = 8.005, 356.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=113 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.586', 'seconds']
Parameter learned model CLL:-0.317796 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.686, 227, 113]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.079, 122, 53], 'false,false,false,false': [6.289, 116, 60]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.597, 87, 49], 'false,false,false,false': [6.497, 124, 64]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.216, 52, 27], 'false,false,false,false': [7.578, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.738, 236, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.739, 236, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.018, 0, 49], 'true,false': [0.023, 88, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.3, 64, 26], 'false,false,false,false': [5.115, 84, 38]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.592, 112, 49], 'false,false,false,false': [6.568, 133, 64]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.026, 246, 113]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.005, 243, 113]}]
{'': [nan, 0.22189446366782256], 'false': [nan, 0.22189446366782048], 'false,false': [nan, 0.22189446366782256], 'false,false,false': [nan, 0.22189446366782048]}
{'': [nan, 0.2182936826811495], 'false': [nan, 0.21829368268114593], 'false,false': [nan, 0.2182936826811495], 'false,false,false': [0.2111346938775498, 0.2246900826446271]}
{'': [nan, 0.22706073741199717], 'false': [nan, 0.22706073741199717], 'false,false': [nan, 0.2270607374119982], 'false,false,false': [0.2303339003688228, 0.2245098977316931]}
{'': [nan, 0.2225112006983226], 'false': [nan, 0.2225112006983226], 'false,false': [nan, 0.2225112006983232], 'false,false,false': [0.224963948085242, 0.22173217851861868]}
{'': [nan, 0.21875764475472398], 'false': [nan, 0.21875764475472398], 'false,false': [nan, 0.21875764475472667], 'false,false,false': [nan, 0.21875764475472667]}
{'': [nan, 0.21881559197041428], 'false': [nan, 0.21881559197041428], 'false,false': [nan, 0.21881559197041442], 'false,false,false': [nan, 0.21881559197041428]}
{'': [0.22948779245483322, 0.21068297712879402], 'true': [6.738317098275539e-06, 6.119854031336948e-06], 'false': [nan, 0.21068297712879402], 'false,false': [nan, 0.21068297712879402], 'false,false,false': [0.20543209876543245, 0.21445847890352004], 'true,true': [nan, 6.738317098275539e-06], 'true,true,false': [nan, 6.738317098275539e-06]}
{'': [nan, 0.17967931872590223], 'false': [nan, 0.17967931872590223], 'false,false': [nan, 0.17967931872590226], 'false,false,false': [0.13097383352804473, 0.2189776935706926]}
{'': [nan, 0.17942344821443237], 'false': [nan, 0.1794234482144326], 'false,false': [nan, 0.1794234482144326], 'false,false,false': [nan, 0.1794234482144326]}
{'': [nan, 0.18001038589535281], 'false': [nan, 0.18001038589535281], 'false,false': [nan, 0.18001038589535256], 'false,false,false': [nan, 0.18001038589535256]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 36.978
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), complex(D, F) )
%   | then return -0.021851064900487778;  // std dev = 0.325, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else if ( phenotype(D, G), phenotype(A, G) )
%   | | then return 0.35814893509951234;  // std dev = 0.500, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.14386322081379804;  // std dev = 0.452, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, H), phenotype(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.25208832903890627;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.05851773156715445;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.20766349820630947;  // std dev = 6.844, 206.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=72 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, C), interaction(F, A) )
%   | | then return 0.7849682550446526;  // std dev = 0.054, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return 0.1434558100618864;  // std dev = 1.078, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.8021039892658344;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.02459868962801576;  // std dev = 0.334, 107.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=14 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.8086654770682107;  // std dev = 0.141, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( phenotype(H, I), complex(H, J) )
%   | | | then return 0.3288336882550266;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.052799724554910936;  // std dev = 1.326, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.26881887625340944;  // std dev = 3.674, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | | else return 0.15832216558507714;  // std dev = 4.989, 113.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( interaction(A, D), location(A, E) )
%   | | then return 0.5519260314928291;  // std dev = 0.109, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(C, D) )
%   | | | then return 0.7514988075605042;  // std dev = 0.179, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6561526156604807;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.34205098707491816;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.6573426096377529;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( complex(H, I), complex(A, I) )
%   | | | then return -0.06783481541717432;  // std dev = 1.675, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | | else return 0.07158604434711359;  // std dev = 3.440, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.11290951496120338;  // std dev = 5.913, 165.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=51 */
%   | | | else return 0.2096511334195022;  // std dev = 3.016, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( complex(D, E), recursion_proteinclass(C, B) )
%   | then return 0.4588976629672287;  // std dev = 0.104, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(D, C), interaction(D, D) )
%   | | then return -0.059206433435945054;  // std dev = 0.272, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | else return 0.035050773851621836;  // std dev = 0.392, 92.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=22 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( interaction(G, H), interaction(A, H) )
%   | | then return -0.04490459220700162;  // std dev = 0.357, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | else if ( interaction(G, I) )
%   | | | then return 0.44413108721490785;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04032358986559824;  // std dev = 1.044, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5325147449331905;  // std dev = 0.087, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.007624317687273259;  // std dev = 2.348, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.21100701539908875;  // std dev = 5.550, 127.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.33490465870636876;  // std dev = 1.177, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return 0.6559971147511601;  // std dev = 2.336, 80.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=74 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.22015975524202533;  // std dev = 0.327, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.4659721502611225;  // std dev = 1.839, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then return -0.1576494915379198;  // std dev = 0.250, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.24018328935539943;  // std dev = 0.248, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(A, J) )
%   | then return 0.6158208224447418;  // std dev = 0.820, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then return 0.026808205954403617;  // std dev = 0.983, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.2093696582341024;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.3543277396133937;  // std dev = 0.248, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15069609448580387;  // std dev = 0.073, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else return 0.05634027603895811;  // std dev = 0.368, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( enzyme(A, F), interaction(E, G) )
%   | | then return -0.17643762462317764;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return 0.07400897095850376;  // std dev = 1.061, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.27438768456786744;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return -0.17681182370786108;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.6358600229855371;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2728804147758679;  // std dev = 2.267, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4641625426463489;  // std dev = 0.177, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | else return -0.18071255662933786;  // std dev = 0.075, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.4337695125436727;  // std dev = 0.264, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08492076332573939;  // std dev = 0.884, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else return -0.1260357500638061;  // std dev = 0.264, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.21930202512482455;  // std dev = 0.651, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.37924994069808915;  // std dev = 0.618, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.010455570514868518;  // std dev = 2.164, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.10421102071707695;  // std dev = 3.887, 96.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1726497423245967;  // std dev = 0.160, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(D, G), phenotype(D, H) )
%   | | | then return 0.2177929461997132;  // std dev = 0.769, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.41608246811334737;  // std dev = 0.397, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.12932721581416629;  // std dev = 0.398, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return -0.03926414183606502;  // std dev = 2.311, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.23739352923749274;  // std dev = 3.906, 100.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=64 */
%   | | | else return -0.2124214062202449;  // std dev = 0.475, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.03192355871057344;  // std dev = 1.425, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.2042802444220545;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( phenotype(A, E), phenotype(C, E) )
%   | then return 0.041772841337855894;  // std dev = 0.236, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.15896445073663848;  // std dev = 0.138, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.027060532087689295;  // std dev = 1.202, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return -0.09635083158356093;  // std dev = 2.018, 56.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=8 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.18083840144003585;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return 0.35112787982006005;  // std dev = 0.648, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.055921332964189815;  // std dev = 1.494, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return 0.01669062969305306;  // std dev = 1.776, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.07542743025090823;  // std dev = 3.770, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.1537732474272585;  // std dev = 0.228, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | else return -0.03096666412061653;  // std dev = 0.254, 105.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=22 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), complex(H, I) )
%   | | | then return -0.0942114756326397;  // std dev = 0.485, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36331524115770575;  // std dev = 0.454, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.17593138349488896;  // std dev = 0.087, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( complex(A, L), interaction(M, K) )
%   | | | then return 0.054197086030353225;  // std dev = 1.426, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.254159873799392;  // std dev = 1.382, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | else if ( interaction(A, N), complex(A, P) )
%   | | | then return -0.08446179122233745;  // std dev = 0.863, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.06308763571166867;  // std dev = 3.457, 92.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.110', 'seconds']
Refined model CLL: -0.235829


******************************************
Best model found
******************************************
Results 

CLL : -0.235592 

AUC ROC : 0.968648 

AUC PR : 0.317719 

Precision : 0.229508 

Recall : 0.651163 

F1 : 0.339394 

Total Learning Time : 36.978 

Total Inference Time : 31.46546220779419 

Total revision time: 71.97515600585938
Best scored revision CLL: -0.235829


Results 

CLL : -0.235592 

AUC ROC : 0.968648 

AUC PR : 0.317719 

Precision : 0.229508 

Recall : 0.651163 

F1 : 0.339394 

Total Learning Time : 82.6960346069336 

Total Inference Time : 31.46546220779419 

Amount of data: 0.6
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.59
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.174628335848575;  // std dev = 10.748, 534.000 (wgt'ed) examples reached here.  /* #neg=365 #pos=169 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14971086147823753;  // std dev = 7.499, 261.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=82 */
%   | | | else return 0.18919315285287544;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14332008108517338;  // std dev = 6.739, 205.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=68 */
%   | | | else return 0.16979198134600995;  // std dev = 8.044, 281.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=101 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13021060484803565;  // std dev = 5.142, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
%   | | | else return 0.12290684150280347;  // std dev = 9.229, 380.000 (wgt'ed) examples reached here.  /* #neg=251 #pos=129 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09220162312426526;  // std dev = 10.651, 514.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=169 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06958277283969397;  // std dev = 10.694, 523.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=169 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7363409568013493;  // std dev = 0.025, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else return -0.26316842399269286;  // std dev = 0.034, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.02091620076344567;  // std dev = 5.477, 147.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=42 */
%   | | | else return 0.1008621914019769;  // std dev = 6.080, 158.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=59 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05235378164215615;  // std dev = 5.277, 200.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=68 */
%   | | | else return 0.053870238016178955;  // std dev = 8.186, 300.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=101 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06348021222022524;  // std dev = 9.545, 470.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=169 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031520066362979854;  // std dev = 9.671, 501.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=169 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.602', 'seconds']
Parameter learned model CLL:-0.339345 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.748, 365, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.499, 179, 82], 'false,false,false,false': [7.499, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.739, 137, 68], 'false,false,false,false': [8.044, 180, 101]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.142, 78, 40], 'false,false,false,false': [9.229, 251, 129]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.651, 345, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [10.694, 354, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.025, 0, 68], 'true,false': [0.034, 132, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.477, 105, 42], 'false,false,false,false': [6.08, 99, 59]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.277, 132, 68], 'false,false,false,false': [8.186, 199, 101]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.545, 301, 169]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [9.671, 332, 169]}]
{'': [nan, 0.2163201896505802], 'false': [nan, 0.2163201896505783], 'false,false': [nan, 0.2163201896505802], 'false,false,false': [nan, 0.2163201896505783]}
{'': [nan, 0.22222222222222457], 'false': [nan, 0.2222222222222236], 'false,false': [nan, 0.22222222222222457], 'false,false,false': [0.21546953215601503, 0.2285841760856632]}
{'': [nan, 0.2267627428323072], 'false': [nan, 0.2267627428323072], 'false,false': [nan, 0.22676274283230788], 'false,false,false': [0.22156059249752988, 0.23026231718792675]}
{'': [nan, 0.22413261494040032], 'false': [nan, 0.22413261494040032], 'false,false': [nan, 0.22413261494040032], 'false,false,false': [0.22407354208560867, 0.22413831864615744]}
{'': [nan, 0.22070230341240987], 'false': [nan, 0.22070230341240987], 'false,false': [nan, 0.22070230341240882], 'false,false,false': [nan, 0.22070230341240882]}
{'': [nan, 0.2186747325486171], 'false': [nan, 0.2186747325486171], 'false,false': [nan, 0.21867473254861997], 'false,false,false': [nan, 0.2186747325486159]}
{'': [0.22418882564431278, 0.22116413718449504], 'true': [9.477846206477005e-06, 8.695547789964545e-06], 'false': [nan, 0.22116413718449504], 'false,false': [nan, 0.22116413718449504], 'false,false,false': [0.2040816326530616, 0.2339769267745573], 'true,true': [nan, 9.477846206477005e-06], 'true,true,false': [nan, 9.477846206477005e-06]}
{'': [nan, 0.18969068991605573], 'false': [nan, 0.18969068991605573], 'false,false': [nan, 0.18969068991605795], 'false,false,false': [0.1392115326898162, 0.22334254154424538]}
{'': [nan, 0.19383873440369476], 'false': [nan, 0.19383873440369587], 'false,false': [nan, 0.19383873440369587], 'false,false,false': [nan, 0.19383873440369587]}
{'': [nan, 0.18666432413385253], 'false': [nan, 0.18666432413385253], 'false,false': [nan, 0.18666432413385076], 'false,false,false': [nan, 0.18666432413385076]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 44.274
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), phenotype(C, E) )
%   | then return 0.14898558848596796;  // std dev = 0.454, 251.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=73 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.18481560176617945;  // std dev = 0.469, 150.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=49 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( enzyme(F, H), enzyme(A, H) )
%   | | then return -0.016851064900487787;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(F, I), interaction(I, I) )
%   | | | then return 0.4831489350995123;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.16849376268571922;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return 0.13087620782678497;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), phenotype(C, D) )
%   | then return 0.8390281039093248;  // std dev = 5.96e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.5672952888903027;  // std dev = 0.821, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, F), phenotype(C, F) )
%   | | | then return 0.8373953787045806;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7407653401911823;  // std dev = 0.150, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.162332500427962;  // std dev = 0.009, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H), interaction(A, G) )
%   | | | then return -0.16244134877494493;  // std dev = 0.007, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.12129426568460532;  // std dev = 3.691, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.10461233780987064;  // std dev = 3.807, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0.17973802531658223;  // std dev = 8.225, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7318400691262973;  // std dev = 0.076, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( enzyme(A, E), enzyme(C, E) )
%   | | then return -0.14921511104982813;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else return 0.06938229755331703;  // std dev = 0.430, 178.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=46 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( phenotype(F, H), interaction(I, F) )
%   | | then if ( phenotype(A, J), phenotype(I, J) )
%   | | | then return 0.08861168467933841;  // std dev = 1.862, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.327862645319633;  // std dev = 1.883, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else return 0.01150671685183604;  // std dev = 0.381, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.5765150792838225;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.17252442775508114;  // std dev = 6.525, 184.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=67 */
%   | | | else return 0.3190854855792532;  // std dev = 2.326, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( enzyme(D, E), phenotype(C, F) )
%   | then if ( interaction(A, D), complex(A, G) )
%   | | then return -0.17299450693310153;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.6528060874138045;  // std dev = 0.411, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.11733810327959944;  // std dev = 2.996, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | else return 0.015437092270833607;  // std dev = 0.387, 161.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=37 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5147992462447433;  // std dev = 0.110, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return -0.051701912133619195;  // std dev = 1.861, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.10491605857377904;  // std dev = 5.261, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | else if ( location(A, L) )
%   | | | then return 0.12782886510554745;  // std dev = 5.709, 141.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=51 */
%   | | | else return 0.3617716700904213;  // std dev = 1.106, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B), interaction(A, C) )
%   | then return 0.48135581264133864;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, C), phenotype(C, D) )
%   | | then return -0.16287245947826398;  // std dev = 0.127, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.04077506189568584;  // std dev = 0.421, 82.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.666044621119329;  // std dev = 2.735, 118.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=111 */
%   | | | else return 0.03257299962010748;  // std dev = 3.638, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | else return -0.23428143539465207;  // std dev = 0.033, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.2038365843039863;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.10397684366562138;  // std dev = 1.191, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.08500655565169876;  // std dev = 1.611, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( enzyme(A, E), complex(C, F) )
%   | then return -0.07499208198080853;  // std dev = 0.245, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.4064469105732436;  // std dev = 0.203, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( location(C, H), location(A, H) )
%   | | | then return 0.00120628728537413;  // std dev = 3.023, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | | else return 0.13591437131842654;  // std dev = 2.548, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.39359354487277026;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), complex(L, J) )
%   | | | then return -0.07911162173497467;  // std dev = 1.658, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | | else return 0.04532180208826268;  // std dev = 3.339, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return 0.24576475699836028;  // std dev = 1.568, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.11589657792585885;  // std dev = 5.954, 195.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=75 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5617377616348781;  // std dev = 0.174, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | else return -0.1997748250874248;  // std dev = 0.051, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.1630473518806158;  // std dev = 0.465, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5100854357977874;  // std dev = 0.837, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.08969882369911365;  // std dev = 0.279, 77.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=9 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.34015767147213866;  // std dev = 4.142, 97.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=68 */
%   | | | else return -0.22258087705710275;  // std dev = 0.325, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.30543166994682175;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4461517853060406;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.4130330161417383;  // std dev = 0.249, 152.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=141 */
%   | | else return -0.02351479270114905;  // std dev = 0.372, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | else return -0.17349376228556448;  // std dev = 0.037, 232.000 (wgt'ed) examples reached here.  /* #neg=232 */
%   else if ( interaction(A, F) )
%   | then if ( enzyme(F, G) )
%   | | then return -0.10375629015904084;  // std dev = 0.284, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.6190590169932789;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.39298049106208965;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return -0.18454561204539588;  // std dev = 0.739, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.15970611428012169;  // std dev = 0.906, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.14020285080273398;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then if ( phenotype(C, F) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.07509590120882141;  // std dev = 1.514, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return -0.02670733642386263;  // std dev = 1.857, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5422247099044328;  // std dev = 0.335, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14589421631479169;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.012404476543498858;  // std dev = 0.274, 394.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=119 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(J, K), phenotype(A, K) )
%   | | | then return 0.6038601030723381;  // std dev = 0.248, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.15264876100503386;  // std dev = 1.859, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else return -0.17057070387049392;  // std dev = 0.047, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else return -0.09009385028397214;  // std dev = 0.870, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(C, E) )
%   | then return -0.04143112683401677;  // std dev = 0.699, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2078720306790678;  // std dev = 0.104, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( phenotype(F, H), enzyme(A, I) )
%   | | then if ( phenotype(A, J), interaction(G, A) )
%   | | | then return -0.05627832198246458;  // std dev = 0.497, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.12058561036070554;  // std dev = 1.521, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( interaction(K, F), recursion_proteinclass(K, B) )
%   | | | then return 0.4096102551666279;  // std dev = 0.754, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return -0.0955814129638843;  // std dev = 2.063, 112.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=10 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1675920609121237;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.12024724014193558;  // std dev = 1.824, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.014218735366044472;  // std dev = 4.906, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.912', 'seconds']
Refined model CLL: -0.209886


******************************************
Best model found
******************************************
Results 

CLL : -0.210511 

AUC ROC : 0.991024 

AUC PR : 0.398333 

Precision : 0.359551 

Recall : 0.744186 

F1 : 0.484848 

Total Learning Time : 44.274 

Total Inference Time : 44.87466263771057 

Total revision time: 93.53409234428406
Best scored revision CLL: -0.209886


Results 

CLL : -0.210511 

AUC ROC : 0.991024 

AUC PR : 0.398333 

Precision : 0.359551 

Recall : 0.744186 

F1 : 0.484848 

Total Learning Time : 104.25497094535828 

Total Inference Time : 44.87466263771057 

Amount of data: 0.8
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.862
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20318710303844037;  // std dev = 12.166, 655.000 (wgt'ed) examples reached here.  /* #neg=429 #pos=226 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15810308429546222;  // std dev = 8.685, 343.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=112 */
%   | | | else return 0.1780770313210814;  // std dev = 8.631, 329.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=114 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11198823673684419;  // std dev = 8.040, 305.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=93 */
%   | | | else return 0.11142902383961811;  // std dev = 9.615, 436.000 (wgt'ed) examples reached here.  /* #neg=303 #pos=133 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10177323776207664;  // std dev = 6.265, 183.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=57 */
%   | | | else return 0.13880982422384724;  // std dev = 10.475, 482.000 (wgt'ed) examples reached here.  /* #neg=313 #pos=169 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10168701516754233;  // std dev = 12.255, 674.000 (wgt'ed) examples reached here.  /* #neg=448 #pos=226 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06586635833253944;  // std dev = 12.413, 710.000 (wgt'ed) examples reached here.  /* #neg=484 #pos=226 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.737911792366463;  // std dev = 0.052, 93.000 (wgt'ed) examples reached here.  /* #pos=93 */
%   | else return -0.26175696975003626;  // std dev = 0.074, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06253224892955336;  // std dev = 6.082, 168.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=55 */
%   | | | else return 0.07185542357032526;  // std dev = 7.172, 229.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=78 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03452372237531293;  // std dev = 6.290, 294.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=93 */
%   | | | else return 0.04549167325993931;  // std dev = 9.466, 408.000 (wgt'ed) examples reached here.  /* #neg=275 #pos=133 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06078319415651235;  // std dev = 11.084, 643.000 (wgt'ed) examples reached here.  /* #neg=417 #pos=226 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0452657879462469;  // std dev = 11.099, 648.000 (wgt'ed) examples reached here.  /* #neg=422 #pos=226 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.533', 'seconds']
Parameter learned model CLL:-0.336659 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.166, 429, 226]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.685, 231, 112], 'false,false,false,false': [8.631, 215, 114]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.04, 212, 93], 'false,false,false,false': [9.615, 303, 133]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.265, 126, 57], 'false,false,false,false': [10.475, 313, 169]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.255, 448, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.413, 484, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.052, 0, 93], 'true,false': [0.074, 196, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.082, 113, 55], 'false,false,false,false': [7.172, 151, 78]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.29, 201, 93], 'false,false,false,false': [9.466, 275, 133]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.084, 417, 226]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [11.099, 422, 226]}]
{'': [nan, 0.2259868306042796], 'false': [nan, 0.2259868306042794], 'false,false': [nan, 0.2259868306042796], 'false,false,false': [nan, 0.2259868306042794]}
{'': [nan, 0.22320542800454005], 'false': [nan, 0.22320542800453205], 'false,false': [nan, 0.22320542800454005], 'false,false,false': [0.21990837151186696, 0.22643914967525833]}
{'': [nan, 0.21198561555767859], 'false': [nan, 0.21198561555767859], 'false,false': [nan, 0.21198561555766882], 'false,false,false': [0.2119324554543243, 0.21202267452761767]}
{'': [nan, 0.22429009817152704], 'false': [nan, 0.22429009817152704], 'false,false': [nan, 0.2242900981715311], 'false,false,false': [0.2144584789035222, 0.2276453721427263]}
{'': [nan, 0.22282365916247604], 'false': [nan, 0.22282365916247604], 'false,false': [nan, 0.22282365916247765], 'false,false,false': [nan, 0.22282365916247765]}
{'': [nan, 0.21701497179706322], 'false': [nan, 0.21701497179706322], 'false,false': [nan, 0.21701497179706386], 'false,false,false': [nan, 0.21701497179706383]}
{'': [0.21812833268031034, 0.22275764564812667], 'false': [nan, 0.22275764564812667], 'false,false': [nan, 0.22275764564812667], 'false,false,false': [0.22020266439909314, 0.22459525943441422], 'true': [2.9012437355608424e-05, 2.8075609858862244e-05], 'true,true': [nan, 2.9012437355608424e-05], 'true,true,false': [nan, 2.9012437355608424e-05]}
{'': [nan, 0.18403103871876014], 'false': [nan, 0.18403103871876014], 'false,false': [nan, 0.18403103871876128], 'false,false,false': [0.13458641176805403, 0.21960987484423997]}
{'': [nan, 0.1910536903831294], 'false': [nan, 0.1910536903831303], 'false,false': [nan, 0.1910536903831303], 'false,false,false': [nan, 0.1910536903831303]}
{'': [nan, 0.19009520802933272], 'false': [nan, 0.19009520802933272], 'false,false': [nan, 0.19009520802933194], 'false,false,false': [nan, 0.19009520802933194]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.545
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then if ( complex(C, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( interaction(A, I), complex(G, H) )
%   | | | then return -0.04462884267826547;  // std dev = 2.514, 72.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=7 */
%   | | | else return 0.11697246451127642;  // std dev = 5.711, 170.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=44 */
%   | | else if ( location(A, J) )
%   | | | then return 0.18429448766015513;  // std dev = 9.030, 371.000 (wgt'ed) examples reached here.  /* #neg=250 #pos=121 */
%   | | | else return 0.32873717039363;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.7251482284148386;  // std dev = 0.260, 47.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=44 */
%   | else if ( interaction(A, E), interaction(C, D) )
%   | | then return -0.04122972117628554;  // std dev = 0.310, 174.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=21 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.4193381539614417;  // std dev = 1.949, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.1422067946879733;  // std dev = 8.383, 335.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=103 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), phenotype(I, J) )
%   | | | then return 0.2887474701709911;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return -0.011951830528309589;  // std dev = 1.840, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1155198470234521;  // std dev = 1.905, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.35311969533580007;  // std dev = 3.308, 44.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.3488041680978645;  // std dev = 0.386, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.6120384918638908;  // std dev = 0.077, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(E, G), enzyme(A, G) )
%   | | then return -0.1537932198473544;  // std dev = 0.089, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( location(A, H) )
%   | | | then return 0.07912083568279472;  // std dev = 5.982, 215.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=55 */
%   | | | else return -0.08174666651606809;  // std dev = 1.216, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.6684037712247186;  // std dev = 0.133, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3932759811900488;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.17203223675578327;  // std dev = 6.679, 194.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=70 */
%   | | | else return 0.10226733447736015;  // std dev = 6.315, 192.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=57 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return 0.548132012561259;  // std dev = 0.102, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then return 0.32417328505217313;  // std dev = 0.232, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.5149750171332251;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.7368635059783599;  // std dev = 0.123, 71.000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else return -0.17739691876040395;  // std dev = 0.415, 215.000 (wgt'ed) examples reached here.  /* #neg=215 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.14491512727862668;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.06557919823766252;  // std dev = 3.796, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.0751844850508542;  // std dev = 3.944, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | | else return 0.13565624358122727;  // std dev = 6.985, 221.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=78 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.30977214879588627;  // std dev = 0.190, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), complex(A, G) )
%   | | then if ( phenotype(F, H), complex(D, I) )
%   | | | then return 0.010623184594179335;  // std dev = 1.898, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return -0.09250787844972261;  // std dev = 0.929, 38.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=2 */
%   | | else if ( interaction(D, D), interaction(J, A) )
%   | | | then return -0.07943216749205033;  // std dev = 0.780, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.099613988128414;  // std dev = 2.876, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.5288251390308798;  // std dev = 1.269, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.0011921804368107312;  // std dev = 4.327, 132.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=28 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.10132737306452048;  // std dev = 7.748, 312.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=107 */
%   | | | else return 0.19304372296205416;  // std dev = 2.990, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.25940707795596163;  // std dev = 0.196, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.2666407359089894;  // std dev = 0.160, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3882577132151304;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.128509838619166;  // std dev = 0.140, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then if ( complex(F, H), recursion_proteinclass(F, B) )
%   | | | then return 0.41605574523746863;  // std dev = 0.349, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.024740192283616277;  // std dev = 4.851, 210.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=52 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06334543953075841;  // std dev = 6.963, 236.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=77 */
%   | | | else return 0.1512667940688266;  // std dev = 5.517, 136.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=55 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4448762958887436;  // std dev = 0.257, 96.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=93 */
%   | else return -0.16891396944168618;  // std dev = 0.052, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.4470420940916544;  // std dev = 0.180, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(G, E), enzyme(G, H) )
%   | | | then return -0.02739711208269873;  // std dev = 5.341, 181.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=38 */
%   | | | else return 0.08521056106393968;  // std dev = 5.829, 150.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=55 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.21163034157882585;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.012875133059555555;  // std dev = 1.430, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.37187061126041404;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.19284782891959262;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return -0.013076822162484814;  // std dev = 0.255, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | else if ( location(D, F), phenotype(D, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3149278960057056;  // std dev = 0.219, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.10328228122839749;  // std dev = 4.885, 138.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=53 */
%   | | else return 0.023017941665090066;  // std dev = 0.365, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.1983015614377663;  // std dev = 0.063, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(I, A), location(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.3129692752564625;  // std dev = 0.770, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.014045120677430528;  // std dev = 6.793, 296.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=72 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.05756025991737481;  // std dev = 3.249, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | | else return 0.4005939286499409;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C), phenotype(A, E) )
%   | then return 0.007927891266845098;  // std dev = 0.335, 264.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=81 */
%   | else if ( interaction(F, D), interaction(F, F) )
%   | | then return 0.1044072895102768;  // std dev = 0.393, 110.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=45 */
%   | | else return 0.03595120156258518;  // std dev = 0.398, 196.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=65 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), complex(H, J) )
%   | | | then return 0.04833617550074147;  // std dev = 1.941, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.44877293127832096;  // std dev = 1.463, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return -0.2541992313967826;  // std dev = 0.075, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( enzyme(A, K), interaction(L, A) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.500182246466122;  // std dev = 0.458, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3103577797773596;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11821023096235435;  // std dev = 0.366, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17707699201431315;  // std dev = 0.063, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, D), interaction(D, A) )
%   | | then if ( phenotype(D, F) )
%   | | | then return -0.10096738090066729;  // std dev = 0.432, 34.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=1 */
%   | | | else return -0.012671808504857704;  // std dev = 1.111, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.0821018617376064;  // std dev = 1.960, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return -6.695575753741916E-4;  // std dev = 5.089, 235.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=70 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5893054082302559;  // std dev = 1.111, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return -0.22467994257598234;  // std dev = 0.449, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return -0.007654650089612028;  // std dev = 5.276, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   | | | else return 0.0703150815328454;  // std dev = 3.718, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.753', 'seconds']
Refined model CLL: -0.259839


******************************************
Best model found
******************************************
Results 

CLL : -0.282744 

AUC ROC : 0.918436 

AUC PR : 0.276869 

Precision : 0.273333 

Recall : 0.476744 

F1 : 0.347458 

Total Learning Time : 21.545 

Total Inference Time : 10.625741958618164 

Total revision time: 37.33083527755738
Best scored revision CLL: -0.259839


Results 

CLL : -0.282744 

AUC ROC : 0.918436 

AUC PR : 0.276869 

Precision : 0.273333 

Recall : 0.476744 

F1 : 0.347458 

Total Learning Time : 48.051713878631595 

Total Inference Time : 10.625741958618164 

Amount of data: 1.0
Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.97
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20453816398567704;  // std dev = 13.600, 817.000 (wgt'ed) examples reached here.  /* #neg=534 #pos=283 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19256251926561632;  // std dev = 9.691, 407.000 (wgt'ed) examples reached here.  /* #neg=260 #pos=147 */
%   | | | else return 0.16969161579769795;  // std dev = 9.486, 402.000 (wgt'ed) examples reached here.  /* #neg=266 #pos=136 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1548778393397034;  // std dev = 8.826, 342.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=120 */
%   | | | else return 0.12938019450683697;  // std dev = 10.491, 502.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=163 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08433423072599634;  // std dev = 7.207, 244.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=75 */
%   | | | else return 0.10812377613143967;  // std dev = 11.846, 640.000 (wgt'ed) examples reached here.  /* #neg=432 #pos=208 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09015119756434165;  // std dev = 13.805, 866.000 (wgt'ed) examples reached here.  /* #neg=583 #pos=283 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06657065791386112;  // std dev = 13.875, 885.000 (wgt'ed) examples reached here.  /* #neg=602 #pos=283 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7079697276310123;  // std dev = 1.711, 123.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=120 */
%   | else return -0.2676451524736792;  // std dev = 0.001, 246.000 (wgt'ed) examples reached here.  /* #neg=246 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0315156557118584;  // std dev = 7.106, 241.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=72 */
%   | | | else return 0.09407794436913129;  // std dev = 7.650, 255.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=91 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.057172483191207504;  // std dev = 7.012, 345.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=120 */
%   | | | else return 0.048980309431170654;  // std dev = 10.478, 498.000 (wgt'ed) examples reached here.  /* #neg=335 #pos=163 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04364899891081919;  // std dev = 12.560, 841.000 (wgt'ed) examples reached here.  /* #neg=558 #pos=283 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036106166694471406;  // std dev = 12.538, 835.000 (wgt'ed) examples reached here.  /* #neg=552 #pos=283 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.603', 'seconds']
Parameter learned model CLL:-0.332393 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.6, 534, 283]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.691, 260, 147], 'false,false,false,false': [9.486, 266, 136]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [8.826, 222, 120], 'false,false,false,false': [10.491, 339, 163]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.207, 169, 75], 'false,false,false,false': [11.846, 432, 208]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.805, 583, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [13.875, 602, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.711, 3, 120], 'true,false': [0.001, 246, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.106, 169, 72], 'false,false,false,false': [7.65, 164, 91]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.012, 225, 120], 'false,false,false,false': [10.478, 335, 163]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.56, 558, 283]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [12.538, 552, 283]}]
{'': [nan, 0.2264037309978161], 'false': [nan, 0.22640373099781722], 'false,false': [nan, 0.2264037309978161], 'false,false,false': [nan, 0.22640373099781722]}
{'': [nan, 0.2274443413941835], 'false': [nan, 0.22744434139417388], 'false,false': [nan, 0.2274443413941835], 'false,false,false': [0.23072883023743043, 0.22385584515234813]}
{'': [nan, 0.22285863578157208], 'false': [nan, 0.22285863578157208], 'false,false': [nan, 0.2228586357815789], 'false,false,false': [0.22775989247691777, 0.21925609135507113]}
{'': [nan, 0.21761915750125932], 'false': [nan, 0.21761915750125932], 'false,false': [nan, 0.21761915750126068], 'false,false,false': [0.2128963988175207, 0.2192634988842485]}
{'': [nan, 0.2200787370217447], 'false': [nan, 0.2200787370217447], 'false,false': [nan, 0.22007873702174477], 'false,false,false': [nan, 0.22007873702174477]}
{'': [nan, 0.21753478118723188], 'false': [nan, 0.21753478118723188], 'false,false': [nan, 0.21753478118722852], 'false,false,false': [nan, 0.2175347811872319]}
{'': [0.21944725514705804, 0.22076627225426948], 'false': [nan, 0.22076627225426948], 'false,false': [nan, 0.22076627225426948], 'false,false,false': [0.20950052512869857, 0.2295117262591332], 'true': [0.023792153764801056, 7.744285834109902e-09], 'true,true': [nan, 0.023792153764801056], 'true,true,false': [nan, 0.023792153764801056]}
{'': [nan, 0.18858845384580789], 'false': [nan, 0.18858845384580789], 'false,false': [nan, 0.1885884538458034], 'false,false,false': [0.1425212012604017, 0.22047504872501913]}
{'': [nan, 0.18756537975839407], 'false': [nan, 0.18756537975839405], 'false,false': [nan, 0.18756537975839405], 'false,false,false': [nan, 0.18756537975839405]}
{'': [nan, 0.18826244910563575], 'false': [nan, 0.18826244910563575], 'false,false': [nan, 0.18826244910563975], 'false,false,false': [nan, 0.18826244910563975]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 26.862
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( recursion_proteinclass(C, B), phenotype(A, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, C), complex(G, D) )
%   | | | then return -0.10613677918620197;  // std dev = 1.701, 84.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=3 */
%   | | | else return 0.1662884699832334;  // std dev = 6.055, 172.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=53 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.13351125394009203;  // std dev = 3.711, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.2391013160518933;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.16621739475721337;  // std dev = 9.337, 409.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=126 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.7544060930189261;  // std dev = 0.055, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( complex(C, E), location(A, F) )
%   | | then return 0.24988183870734476;  // std dev = 0.943, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, G), interaction(H, A) )
%   | | | then return 0.7645548754608934;  // std dev = 0.206, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.4218096982931439;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.13172015889339503;  // std dev = 0.151, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.727287014530215;  // std dev = 0.113, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.10140228156657033;  // std dev = 11.177, 664.000 (wgt'ed) examples reached here.  /* #neg=488 #pos=176 */
%   | | | else return 0.1749805580428847;  // std dev = 5.696, 145.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.4993086793164432;  // std dev = 0.205, 26.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=24 */
%   | else return 0.6676307393842374;  // std dev = 0.070, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11405828442425013;  // std dev = 0.011, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.058719023376335326;  // std dev = 3.545, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | | else return 0.1238429140091133;  // std dev = 3.484, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( enzyme(H, J), interaction(A, K) )
%   | | | then return 0.08160712148313846;  // std dev = 3.531, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | | else return 0.15013309809549902;  // std dev = 10.242, 493.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=166 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.1915445386862294;  // std dev = 1.760, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.054672224777730344;  // std dev = 3.369, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.45539312403808574;  // std dev = 0.126, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(F, D), interaction(D, G) )
%   | | | then return -0.053995953776542586;  // std dev = 1.194, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.03953879172783199;  // std dev = 2.251, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.15730865427258986;  // std dev = 2.270, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.058445601194622845;  // std dev = 3.941, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), interaction(K, A) )
%   | | | then return -0.018086710996622214;  // std dev = 2.928, 73.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=12 */
%   | | | else return 0.12789283212959987;  // std dev = 5.856, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.19409566650276988;  // std dev = 3.551, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.1279266865813919;  // std dev = 8.426, 325.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=108 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.34941109700879386;  // std dev = 0.055, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.20574731720636966;  // std dev = 0.623, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(C, G) )
%   | | | then return 0.4126721254608139;  // std dev = 0.210, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.17873752560515438;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5019926362408507;  // std dev = 0.062, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J), interaction(K, A) )
%   | | | then return -0.08584188423200897;  // std dev = 1.547, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.047260188920590425;  // std dev = 4.792, 132.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.044647988272561195;  // std dev = 5.050, 139.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=36 */
%   | | | else return 0.08265352038984489;  // std dev = 10.196, 503.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=153 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.26881795633449584;  // std dev = 0.178, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.6841777640933158;  // std dev = 0.964, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -6.226747114137843E-4;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.16988639449979023;  // std dev = 0.494, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | | else return 0.028778665743711004;  // std dev = 5.416, 166.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=43 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( recursion_proteinclass(G, B), location(A, H) )
%   | | | then return 0.2547234755724466;  // std dev = 1.004, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.06398506109784165;  // std dev = 9.173, 404.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=123 */
%   | | else if ( location(A, I) )
%   | | | then return 0.11193839251717966;  // std dev = 4.349, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.43404197560871055;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5590134306504546;  // std dev = 0.222, 120.000 (wgt'ed) examples reached here.  /* #pos=120 */
%   | else return -0.20585760251430668;  // std dev = 0.070, 228.000 (wgt'ed) examples reached here.  /* #neg=228 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3639745888212784;  // std dev = 0.350, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.16397252259681713;  // std dev = 0.371, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return 0.014035664752531617;  // std dev = 4.289, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5820087435048648;  // std dev = 1.654, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.2470411777321866;  // std dev = 0.043, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.17111866687835556;  // std dev = 2.517, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.08144729724429386;  // std dev = 7.090, 229.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=78 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15940259331491785;  // std dev = 0.145, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( enzyme(D, F), interaction(D, D) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.03747376918862619;  // std dev = 1.281, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.29224234940986427;  // std dev = 1.334, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | else if ( interaction(D, G), interaction(A, G) )
%   | | | then return -0.016236981496836337;  // std dev = 4.238, 181.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=41 */
%   | | | else return 0.024821284205945933;  // std dev = 5.451, 184.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=52 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( location(H, I), complex(A, J) )
%   | | | then return 0.22744976425196325;  // std dev = 1.201, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.09551902586370026;  // std dev = 2.863, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.04314971343036355;  // std dev = 5.150, 155.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=50 */
%   | | | else return 0.07275888394387331;  // std dev = 6.099, 191.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=67 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then return 0.006897335770138943;  // std dev = 0.317, 376.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=119 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), complex(E, H) )
%   | | then if ( interaction(G, A), phenotype(E, I) )
%   | | | then return -0.0028461232504845744;  // std dev = 1.141, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.1905669868345085;  // std dev = 1.407, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( location(E, J) )
%   | | | then return -0.016654044928729694;  // std dev = 3.960, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | | | else return 0.12440884985336284;  // std dev = 0.558, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, K), interaction(L, A) )
%   | | then if ( interaction(A, L) )
%   | | | then return -5.728287852206974E-4;  // std dev = 1.812, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.1363969485445364;  // std dev = 3.247, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return -0.01911587707682138;  // std dev = 2.118, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.05084257572746101;  // std dev = 7.340, 246.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=83 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.0970056449963878;  // std dev = 0.219, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | else return -0.006488506825036908;  // std dev = 0.352, 400.000 (wgt'ed) examples reached here.  /* #neg=301 #pos=99 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(F, F), interaction(E, F) )
%   | | then if ( phenotype(F, G) )
%   | | | then return -0.026798798885730234;  // std dev = 3.957, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | | | else return 0.0567760561170249;  // std dev = 2.977, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else if ( phenotype(F, H), location(A, I) )
%   | | | then return 0.10382751228208963;  // std dev = 5.282, 144.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=59 */
%   | | | else return -0.0085863234444084;  // std dev = 3.443, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.4975872583504773;  // std dev = 0.808, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.19882575560869697;  // std dev = 1.535, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.10634895043719532;  // std dev = 2.352, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.911', 'seconds']
Refined model CLL: -0.280238


******************************************
Best model found
******************************************
Results 

CLL : -0.308236 

AUC ROC : 0.845346 

AUC PR : 0.202506 

Precision : 0.218182 

Recall : 0.27907 

F1 : 0.244898 

Total Learning Time : 26.862 

Total Inference Time : 18.216749668121338 

Total revision time: 50.85409568023682
Best scored revision CLL: -0.280238


Results 

CLL : -0.308236 

AUC ROC : 0.845346 

AUC PR : 0.202506 

Precision : 0.218182 

Recall : 0.27907 

F1 : 0.244898 

Total Learning Time : 61.574974281311036 

Total Inference Time : 18.216749668121338 

