Starting experiment 14_cora_twitter 

Run: 1
Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 5022

Starting experiment 14_cora_twitter 

Run: 1
Start learning from source dataset

Source train facts examples: 42558
Source train pos examples: 3017
Source train neg examples: 5022

Starting experiment 14_cora_twitter 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.852
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37454237772246;  // std dev = 7.806, 244.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1254446385283911;  // std dev = 6.97e-09, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2871086044291611;  // std dev = 8.087, 262.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360621;  // std dev = 8.82e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22577787474069524;  // std dev = 8.184, 269.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783637;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2000124963738487;  // std dev = 8.044, 259.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926079;  // std dev = 7.74e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1411155342375054;  // std dev = 8.171, 268.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.50e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14921755658987526;  // std dev = 7.857, 247.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109157;  // std dev = 6.66e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06386969760136844;  // std dev = 8.250, 274.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333714;  // std dev = 3.80e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( follows(B, I) )
%   | then return -0.41135762446683566;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else return 0.44578523267602227;  // std dev = 4.243, 147.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 6.83e-08, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06756234312264607;  // std dev = 6.598, 250.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 2.89e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.029730779116518204;  // std dev = 6.699, 268.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.238', 'seconds']
Parameter learned model CLL:-0.275559 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 123, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.806, 118, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [6.97e-09, 133, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.087, 136, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.82e-08, 121, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.184, 143, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 121, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.044, 133, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.74e-08, 131, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.171, 142, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.5e-08, 121, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.857, 121, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.66e-08, 114, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.25, 148, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.8e-08, 119, 0], 'false,true': [0.0, 109, 0], 'false,false': [4.243, 21, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.83e-08, 153, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.598, 124, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [2.89e-08, 106, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.699, 142, 126]}]
{'': [-3.6104813808948184e-18, 0.2497312550389712], 'false': [nan, 0.2497312550389712], 'true': [nan, -3.6104813808948184e-18], 'true,false': [nan, -3.6104813808948184e-18], 'true,false,false': [nan, -3.6104813808948184e-18]}
{'': [4.674623261579606e-17, 0.24963580210943873], 'false': [nan, 0.2496358021094358], 'true': [nan, 4.674623261579606e-17], 'true,false': [nan, 4.674623261579606e-17]}
{'': [6.422777828409996e-17, 0.24900153397548394], 'false': [nan, 0.24900153397548394], 'true': [nan, 6.422777828409996e-17], 'true,false': [nan, 6.422777828409996e-17], 'true,false,false': [nan, 6.422777828409996e-17]}
{'': [-2.3856031934094273e-17, 0.2498173849525193], 'false': [nan, 0.24981738495252007], 'true': [nan, -2.3856031934094273e-17], 'true,false': [-2.3856031934094273e-17, nan]}
{'': [4.57649185723347e-17, 0.2491089329472048], 'false': [nan, 0.24910893294720438], 'true': [nan, 4.57649185723347e-17], 'true,false': [nan, 4.57649185723347e-17], 'true,false,false': [nan, 4.57649185723347e-17]}
{'': [3.4866508211368553e-17, 0.24989755609828176], 'false': [nan, 0.24989755609828176], 'true': [nan, 3.4866508211368553e-17], 'true,false': [3.4866508211368553e-17, nan]}
{'': [3.895519384649672e-17, 0.24838829985614444], 'false': [nan, 0.24838829985614444], 'true': [nan, 3.895519384649672e-17], 'true,false': [3.895519384649672e-17, nan]}
{'': [1.2128486823636164e-17, 0.24993896484375142], 'false': [-7.822488834056149e-16, 0.12244897959183676], 'true': [nan, 1.2128486823636164e-17], 'true,false': [nan, 1.2128486823636164e-17], 'true,false,false': [nan, 1.2128486823636164e-17]}
{'': [3.047671047990626e-17, 0.17413483862550994], 'false': [nan, 0.17413483862550924], 'true': [nan, 3.047671047990626e-17], 'true,false': [3.047671047990626e-17, nan]}
{'': [7.855351589328938e-18, 0.1674402876978724], 'false': [nan, 0.1674402876978724], 'true': [nan, 7.855351589328938e-18], 'true,false': [nan, 7.855351589328938e-18], 'true,false,false': [nan, 7.855351589328938e-18]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 25.194
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( tweets(A, F), tweets(D, F) )
%   | | | then return 0.40052181645544555;  // std dev = 5.412, 118.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=64 */
%   | | | else return 0.4652917922423695;  // std dev = 2.584, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.24945328292559932;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.524815601766179;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | else if ( tweets(A, H), follows(A, I) )
%   | | then return 0.274815601766179;  // std dev = 0.493, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.16584124279182005;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.15814893509951236;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.12544463852839108;  // std dev = 8.16e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(G, A) )
%   | | | then return 0.3334309058417511;  // std dev = 6.190, 154.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=82 */
%   | | | else return 0.6071632886553995;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tweets(E, H), follows(E, D) )
%   | | | then return 0.22672387869715518;  // std dev = 3.341, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.11496227290862866;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(I, J), follows(J, A) )
%   | | | then return 0.12245283634661508;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.07130064131695477;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.22130064131695465;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.2663580833544077;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1123163781936062;  // std dev = 9.19e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(F, A), follows(F, E) )
%   | | then if ( tweets(E, D), tweets(F, D) )
%   | | | then return 0.3405849490634784;  // std dev = 5.053, 106.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=63 */
%   | | | else return 0.2092797235323977;  // std dev = 2.243, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( tweets(E, D), follows(E, G) )
%   | | | then return 0.17816628775008603;  // std dev = 2.535, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.2490506986579041;  // std dev = 1.798, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( follows(A, H), follows(H, A) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.21518060504148315;  // std dev = 2.782, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return -3.7974869604786785E-4;  // std dev = 1.736, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.1910291066548656;  // std dev = 2.352, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.15791808158906565;  // std dev = 2.329, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.10159632948783665;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( follows(D, A) )
%   | then if ( tweets(A, E), tweets(D, E) )
%   | | then if ( follows(D, F), follows(F, A) )
%   | | | then return 0.2596579458777105;  // std dev = 5.080, 107.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=60 */
%   | | | else return 0.19396449530416693;  // std dev = 3.274, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | else if ( follows(G, D), tweets(G, H) )
%   | | | then return 0.17178374538311691;  // std dev = 3.493, 49.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
%   | | | else return 0.011442061287294636;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.12612625433477334;  // std dev = 2.179, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.02741618420540156;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( follows(A, L), follows(L, M) )
%   | | | then return 0.18094494212882214;  // std dev = 1.229, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1466364953122401;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926082;  // std dev = 7.45e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( tweets(F, E), follows(F, D) )
%   | | then if ( follows(A, F), tweets(A, E) )
%   | | | then return 0.148138593877345;  // std dev = 5.031, 102.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=54 */
%   | | | else return 0.22503256297396423;  // std dev = 4.583, 87.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=47 */
%   | | else if ( follows(A, G), follows(D, G) )
%   | | | then return 0.3817947092534965;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04064258014547949;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return -0.06364351157647259;  // std dev = 1.882, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.1504485307658862;  // std dev = 1.993, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.1364147966032073;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.17334676204884228;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.32e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(F, A), follows(E, G) )
%   | | then if ( follows(F, E), follows(E, A) )
%   | | | then return 0.21837590337117657;  // std dev = 4.437, 85.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=54 */
%   | | | else return 0.021109514712765325;  // std dev = 3.627, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | else if ( follows(E, H), tweets(E, D) )
%   | | | then return 0.4550147467573271;  // std dev = 1.263, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.10558438756936588;  // std dev = 1.891, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else if ( follows(I, A), follows(A, I) )
%   | | then if ( follows(A, J), follows(I, J) )
%   | | | then return 0.10302777667156793;  // std dev = 2.916, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | | | else return 0.3969592844453247;  // std dev = 0.776, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, K), follows(L, A) )
%   | | | then return -0.13683991411755475;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.02020056023997164;  // std dev = 3.367, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109154;  // std dev = 7.30e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, A), follows(D, A) )
%   | | then if ( follows(A, F), follows(F, D) )
%   | | | then return 0.11115820308423141;  // std dev = 4.982, 102.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=59 */
%   | | | else return -0.043617282708745084;  // std dev = 1.770, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( follows(G, A), follows(G, D) )
%   | | | then return 0.3161762503463824;  // std dev = 2.432, 30.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | | else return 0.14921923885571697;  // std dev = 3.131, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | else if ( tweets(A, H), follows(A, I) )
%   | | then return 0.10114081006734167;  // std dev = 0.493, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.013341039232312184;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.020991429578934517;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333717;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, E), follows(A, F) )
%   | | | then return -0.496319135480549;  // std dev = 0.106, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.39561137119078454;  // std dev = 0.228, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else return -0.3034638317592493;  // std dev = 0.073, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( tweets(A, G), follows(A, H) )
%   | | then if ( follows(H, I), follows(A, I) )
%   | | | then return 0.31731960730510594;  // std dev = 3.750, 90.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=73 */
%   | | | else return 0.4672827086326919;  // std dev = 1.586, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.4279307844066892;  // std dev = 1.665, 26.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=23 */
%   | | | else return 0.5223112240381085;  // std dev = 1.575, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 6.05e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( follows(D, A), follows(A, E) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( follows(D, E) )
%   | | | then return 0.11446913301004503;  // std dev = 3.951, 96.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=60 */
%   | | | else return 0.3354368303894292;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( follows(A, D), follows(D, E) )
%   | | | then return 0.003071676833032704;  // std dev = 2.695, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | | else return 0.12536536760169023;  // std dev = 1.988, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | else if ( tweets(A, F) )
%   | | then if ( follows(A, G), tweets(G, F) )
%   | | | then return -0.03818693794828149;  // std dev = 2.140, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.015497905827277768;  // std dev = 2.023, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return 0.0817386267842684;  // std dev = 0.968, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06688462832059051;  // std dev = 1.638, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( follows(A, D), follows(D, A) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( follows(D, E) )
%   | | | then return -0.003207182285869301;  // std dev = 4.576, 113.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=60 */
%   | | | else return -0.18066357737843353;  // std dev = 1.252, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( follows(A, F), follows(F, D) )
%   | | | then return 0.11072951455373617;  // std dev = 1.962, 26.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | else return 0.004833765103152624;  // std dev = 2.208, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | else if ( follows(G, A), follows(H, G) )
%   | | then if ( follows(H, A) )
%   | | | then return 0.15711725703194013;  // std dev = 1.635, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.2821488903825388;  // std dev = 0.771, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.013401826779336455;  // std dev = 2.087, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.053051370885284076;  // std dev = 2.103, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.822', 'seconds']
Refined model CLL: -0.287722


******************************************
Best model found
******************************************
Results 

CLL : -0.342875 

AUC ROC : 0.905063 

AUC PR : 0.032258 

Precision : 0.032258 

Recall : 1.0 

F1 : 0.0625 

Total Learning Time : 25.194 

Total Inference Time : 6.780140399932861 

Total revision time: 38.41297030067444
Best scored revision CLL: -0.275559


Results 

CLL : -0.342875 

AUC ROC : 0.905063 

AUC PR : 0.032258 

Precision : 0.032258 

Recall : 1.0 

F1 : 0.0625 

Total Learning Time : 39.898096796035766 

Total Inference Time : 6.780140399932861 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.892
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33667654246147255;  // std dev = 9.019, 326.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839108;  // std dev = 7.21e-09, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2722174538877842;  // std dev = 9.177, 339.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360621;  // std dev = 8.56e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21521467581124024;  // std dev = 9.277, 348.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.181102701321287;  // std dev = 9.222, 343.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926087;  // std dev = 6.83e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16015770925059533;  // std dev = 9.082, 331.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.75e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12770289950412364;  // std dev = 9.057, 329.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109153;  // std dev = 7.52e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07757442656824703;  // std dev = 9.233, 344.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333716;  // std dev = 3.33e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( follows(B, I) )
%   | then return -0.3942806985812339;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else return 0.3116016543599463;  // std dev = 6.774, 221.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 5.58e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07179795443329481;  // std dev = 7.958, 327.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025936572950266728;  // std dev = 8.232, 348.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.501', 'seconds']
Parameter learned model CLL:-0.316289 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.21e-08, 120, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.019, 170, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.21e-09, 113, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.177, 183, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.56e-08, 115, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.277, 192, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 117, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.222, 187, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.83e-08, 114, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.082, 175, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.75e-08, 128, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.057, 173, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.52e-08, 134, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.233, 188, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.33e-08, 122, 0], 'false,true': [0.0, 123, 0], 'false,false': [6.774, 65, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.58e-08, 118, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.958, 171, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 113, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.232, 192, 156]}]
{'': [1.4802973661668754e-17, 0.24953893635440097], 'false': [nan, 0.24953893635440097], 'true': [nan, 1.4802973661668754e-17], 'true,false': [nan, 1.4802973661668754e-17], 'true,false,false': [nan, 1.4802973661668754e-17]}
{'': [5.501990210531749e-17, 0.24841412796616855], 'false': [nan, 0.24841412796616727], 'true': [nan, 5.501990210531749e-17], 'true,false': [nan, 5.501990210531749e-17]}
{'': [6.371714750022638e-17, 0.24732461355529112], 'false': [nan, 0.24732461355529112], 'true': [nan, 6.371714750022638e-17], 'true,false': [nan, 6.371714750022638e-17], 'true,false,false': [nan, 6.371714750022638e-17]}
{'': [-1.8978171361113787e-17, 0.24795790869450826], 'false': [nan, 0.24795790869450743], 'true': [nan, -1.8978171361113787e-17], 'true,false': [-1.8978171361113787e-17, nan]}
{'': [4.0902953538821554e-17, 0.24917625797500811], 'false': [nan, 0.2491762579750087], 'true': [nan, 4.0902953538821554e-17], 'true,false': [nan, 4.0902953538821554e-17], 'true,false,false': [nan, 4.0902953538821554e-17]}
{'': [3.5561831257524545e-17, 0.24933250801452286], 'false': [nan, 0.24933250801452286], 'true': [nan, 3.5561831257524545e-17], 'true,false': [3.5561831257524545e-17, nan]}
{'': [4.225475690737536e-17, 0.2478366684694419], 'false': [nan, 0.2478366684694419], 'true': [nan, 4.225475690737536e-17], 'true,false': [4.225475690737536e-17, nan]}
{'': [9.100188726435709e-18, 0.2478366684694424], 'false': [-3.4660621256590254e-16, 0.20761245674740236], 'true': [nan, 9.100188726435709e-18], 'true,false': [nan, 9.100188726435709e-18], 'true,false,false': [nan, 9.100188726435709e-18]}
{'': [2.6344275160596936e-17, 0.19369184937293382], 'false': [nan, 0.19369184937293454], 'true': [nan, 2.6344275160596936e-17], 'true,false': [2.6344275160596936e-17, nan]}
{'': [-1.7193719407911715e-17, 0.19474033247519623], 'false': [nan, 0.19474033247519623], 'true': [nan, -1.7193719407911715e-17], 'true,false': [nan, -1.7193719407911715e-17], 'true,false,false': [nan, -1.7193719407911715e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 25.095
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, A), follows(D, A) )
%   | | then if ( tweets(A, F), tweets(D, F) )
%   | | | then return 0.46684458727342576;  // std dev = 4.054, 69.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=42 */
%   | | | else return 0.3318331456258281;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( tweets(A, G), follows(H, A) )
%   | | | then return 0.30591012912936183;  // std dev = 4.070, 67.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=30 */
%   | | | else return 0.3771362768716637;  // std dev = 4.441, 79.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=41 */
%   | else if ( follows(I, A), tweets(A, J) )
%   | | then if ( follows(I, K), follows(K, A) )
%   | | | then return 0.13814893509951237;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.324815601766179;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.12544463852839136;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( follows(A, D), tweets(A, E) )
%   | then if ( follows(D, F), follows(F, A) )
%   | | then if ( follows(A, F), follows(F, D) )
%   | | | then return 0.4105479058775981;  // std dev = 4.616, 90.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=55 */
%   | | | else return 0.16116957938292517;  // std dev = 1.786, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( follows(G, A), follows(D, H) )
%   | | | then return 0.17566570539598364;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.2726040222217099;  // std dev = 3.520, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | else if ( follows(I, A), tweets(I, J) )
%   | | then if ( follows(A, K), follows(I, K) )
%   | | | then return 0.20375184417864697;  // std dev = 2.806, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.1608339620922745;  // std dev = 3.484, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | else if ( follows(A, L), follows(L, M) )
%   | | | then return 0.24696343591709163;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.18970833085187674;  // std dev = 2.857, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.11231637819360618;  // std dev = 9.19e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, D), follows(A, E) )
%   | | then if ( follows(D, A), follows(E, A) )
%   | | | then return 0.21532257735806898;  // std dev = 4.586, 84.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=41 */
%   | | | else return 0.2954829687440489;  // std dev = 4.152, 70.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=38 */
%   | | else if ( follows(E, F), follows(A, E) )
%   | | | then return 0.18044469971261864;  // std dev = 2.782, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.23338750064400132;  // std dev = 4.013, 65.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=30 */
%   | else if ( tweets(A, G) )
%   | | then if ( follows(H, A), follows(A, I) )
%   | | | then return 0.19974062391381914;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.12740057332554794;  // std dev = 3.691, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.47918058737106967;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21921955810005045;  // std dev = 2.379, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1015963294878364;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( tweets(A, F), tweets(E, F) )
%   | | then if ( follows(E, A), follows(A, E) )
%   | | | then return 0.24082273176802962;  // std dev = 4.991, 101.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=57 */
%   | | | else return 0.1468420462059386;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=34 */
%   | | else if ( follows(D, A), follows(A, E) )
%   | | | then return 0.3547343652016098;  // std dev = 2.214, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | | else return 0.23473714402171766;  // std dev = 2.956, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | else if ( follows(G, A), tweets(A, H) )
%   | | then if ( follows(G, I), follows(I, A) )
%   | | | then return 0.17464971891972417;  // std dev = 2.948, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.4532369967671331;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.052489371939017954;  // std dev = 2.071, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.09540365707435365;  // std dev = 2.788, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926078;  // std dev = 7.88e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(F, A), follows(F, D) )
%   | | then if ( follows(A, F) )
%   | | | then return 0.1309989469836885;  // std dev = 6.052, 147.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=73 */
%   | | | else return 0.3773207721522636;  // std dev = 1.411, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( tweets(A, G), follows(H, A) )
%   | | | then return 0.04927332783229049;  // std dev = 2.311, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | | else return 0.1330316862034061;  // std dev = 4.348, 76.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=35 */
%   | else if ( follows(I, A), tweets(A, J) )
%   | | then if ( follows(A, K) )
%   | | | then return -0.07004933211253878;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.14230955006618046;  // std dev = 2.954, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else if ( follows(L, A) )
%   | | | then return 0.0037322163641093946;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.056505179909415594;  // std dev = 3.192, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.99e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( tweets(A, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(E, F), tweets(E, D) )
%   | | | then return 0.09771954424780398;  // std dev = 6.909, 194.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=92 */
%   | | | else return -0.012644048566505778;  // std dev = 1.923, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.12771672719014734;  // std dev = 2.922, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.18504282025456512;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(I, A), follows(H, A) )
%   | | | then return 0.026118308051481364;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.12039377851992078;  // std dev = 3.352, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.06360375377666437;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.020273679873062316;  // std dev = 2.493, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109155;  // std dev = 6.91e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( follows(A, D) )
%   | then if ( follows(E, A), follows(D, E) )
%   | | then if ( follows(D, A), follows(A, E) )
%   | | | then return 0.1306825682572421;  // std dev = 4.698, 90.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=50 */
%   | | | else return 0.24426883332112034;  // std dev = 2.682, 32.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=21 */
%   | | else if ( follows(F, A), follows(F, D) )
%   | | | then return 0.03362685847389592;  // std dev = 2.537, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.1176898357429204;  // std dev = 4.923, 97.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=46 */
%   | else if ( follows(G, A), tweets(A, H) )
%   | | then if ( follows(G, I), follows(I, A) )
%   | | | then return -5.310111028318702E-4;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return -0.010865314767519618;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.21756016652055;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04098800461733484;  // std dev = 2.707, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333722;  // std dev = 1.05e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then return -0.4212259172180956;  // std dev = 0.353, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else return -0.30027658525399314;  // std dev = 0.151, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(H, A), follows(H, G) )
%   | | | then return 0.22310700222184796;  // std dev = 4.561, 97.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=67 */
%   | | | else return 0.27572516843675426;  // std dev = 4.272, 82.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=55 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.4093514615642053;  // std dev = 2.367, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.5317657931881203;  // std dev = 1.599, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420265;  // std dev = 4.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( tweets(A, D) )
%   | then if ( follows(E, A), tweets(E, D) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.023696613129968548;  // std dev = 4.973, 127.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=56 */
%   | | | else return 0.0851119396879916;  // std dev = 3.645, 63.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0.18802540971750095;  // std dev = 2.454, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | | else return 0.006282282995143585;  // std dev = 1.850, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | else if ( follows(I, A), tweets(I, J) )
%   | | then if ( follows(I, K), follows(K, A) )
%   | | | then return 0.1536309410054011;  // std dev = 1.719, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.06735816809459531;  // std dev = 1.861, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( follows(A, L) )
%   | | | then return -0.11766033637070479;  // std dev = 3.153, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.016109926792636776;  // std dev = 1.841, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( follows(D, A), follows(E, D) )
%   | then if ( follows(A, E), tweets(A, F) )
%   | | then if ( tweets(D, F), tweets(E, F) )
%   | | | then return 0.03453945003703466;  // std dev = 4.764, 107.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=57 */
%   | | | else return 0.22316472126134854;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.13486000962181677;  // std dev = 3.375, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | | else return 0.029725153687643717;  // std dev = 2.779, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return 0.012933600036392916;  // std dev = 2.971, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return -0.03048894618253312;  // std dev = 1.820, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.10155504176977878;  // std dev = 2.293, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.00996937788527938;  // std dev = 2.171, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.418', 'seconds']
Refined model CLL: -0.311483


******************************************
Best model found
******************************************
Results 

CLL : -0.268074 

AUC ROC : 0.953816 

AUC PR : 0.087158 

Precision : 0.090909 

Recall : 0.650794 

F1 : 0.159533 

Total Learning Time : 25.095 

Total Inference Time : 7.5003087520599365 

Total revision time: 40.16058994483947
Best scored revision CLL: -0.311483


Results 

CLL : -0.268074 

AUC ROC : 0.953816 

AUC PR : 0.087158 

Precision : 0.090909 

Recall : 0.650794 

F1 : 0.159533 

Total Learning Time : 41.6457164402008 

Total Inference Time : 7.5003087520599365 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.889
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048763;  // std dev = 7.88e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.31633075328132726;  // std dev = 8.263, 275.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839127;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.30539853269894834;  // std dev = 8.014, 257.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1123163781936062;  // std dev = 9.19e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2568242310955915;  // std dev = 7.999, 256.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783644;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2094543919256078;  // std dev = 7.984, 255.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926082;  // std dev = 7.45e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1748411895824736;  // std dev = 7.905, 250.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.75e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10305950860443829;  // std dev = 8.157, 267.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109155;  // std dev = 6.91e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11697168836592725;  // std dev = 7.857, 247.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333711;  // std dev = 4.21e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( follows(B, I) )
%   | then return -0.42137785788040116;  // std dev = 2.06e-07, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else return 0.41862214211959886;  // std dev = 4.490, 150.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420265;  // std dev = 5.67e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04221617950736291;  // std dev = 6.766, 264.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 4.08e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06224586664845705;  // std dev = 6.503, 246.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.188', 'seconds']
Parameter learned model CLL:-0.282116 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.88e-08, 112, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.263, 149, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 128, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.014, 131, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.19e-08, 125, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.999, 130, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 140, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.984, 129, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-08, 121, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.905, 124, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.75e-08, 130, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.157, 141, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.91e-08, 120, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.857, 121, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.21e-08, 115, 0], 'false,true': [2.06e-07, 114, 0], 'false,false': [4.49, 24, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.67e-08, 121, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.766, 138, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.08e-08, 138, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.503, 120, 126]}]
{'': [5.551115123125783e-17, 0.24825123966942442], 'false': [nan, 0.24825123966942442], 'true': [nan, 5.551115123125783e-17], 'true,false': [nan, 5.551115123125783e-17], 'true,false,false': [nan, 5.551115123125783e-17]}
{'': [0.0, 0.24990537328346935], 'false': [nan, 0.2499053732834705], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [6.750155989720952e-17, 0.24993896484374667], 'false': [nan, 0.24993896484374667], 'true': [nan, 6.750155989720952e-17], 'true,false': [nan, 6.750155989720952e-17], 'true,false,false': [nan, 6.750155989720952e-17]}
{'': [-4.7580986769649563e-17, 0.24996539792387532], 'false': [nan, 0.2499653979238751], 'true': [nan, -4.7580986769649563e-17], 'true,false': [-4.7580986769649563e-17, nan]}
{'': [4.5876984488642834e-17, 0.24998399999999935], 'false': [nan, 0.24998399999999935], 'true': [nan, 4.5876984488642834e-17], 'true,false': [nan, 4.5876984488642834e-17], 'true,false,false': [nan, 4.5876984488642834e-17]}
{'': [3.5014726161254936e-17, 0.24921095821234554], 'false': [nan, 0.24921095821234554], 'true': [nan, 3.5014726161254936e-17], 'true,false': [3.5014726161254936e-17, nan]}
{'': [3.9782991715734776e-17, 0.2498975560982811], 'false': [nan, 0.2498975560982811], 'true': [nan, 3.9782991715734776e-17], 'true,false': [3.9782991715734776e-17, nan]}
{'': [1.544658121217609e-17, 0.24948347107438062], 'false': [3.739698609263685e-16, 0.1343999999999999], 'true': [nan, 1.544658121217609e-17], 'true,false': [nan, 1.544658121217609e-17], 'true,false,false': [nan, 1.544658121217609e-17]}
{'': [2.6608651003412843e-17, 0.1733789510962419], 'false': [nan, 0.17337895109624113], 'true': [nan, 2.6608651003412843e-17], 'true,false': [2.6608651003412843e-17, nan]}
{'': [1.206764157201257e-17, 0.1719163154795979], 'false': [nan, 0.1719163154795979], 'true': [nan, 1.206764157201257e-17], 'true,false': [nan, 1.206764157201257e-17], 'true,false,false': [nan, 1.206764157201257e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 27.409
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( follows(D, A), tweets(E, F) )
%   | | | then return 0.49255753725005075;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=59 */
%   | | | else return 0.42064893509951234;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | else if ( follows(G, A), follows(G, D) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.3947343009531708;  // std dev = 3.193, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | else if ( follows(A, H) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.08672036367094095;  // std dev = 0.420, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.12544463852839127;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(E, F), tweets(E, D) )
%   | | then if ( follows(A, F), follows(F, A) )
%   | | | then return 0.42430976519223684;  // std dev = 4.653, 93.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=59 */
%   | | | else return 0.24964684845552093;  // std dev = 3.508, 50.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=22 */
%   | | else if ( follows(E, G), follows(A, G) )
%   | | | then return -0.01291512734363206;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2309745134432649;  // std dev = 2.030, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(H, A), follows(I, A) )
%   | | | then return 0.3495848726563678;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return 0.18047571104681212;  // std dev = 2.957, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.15495349211549697;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.16066757255144135;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(E, F), follows(A, F) )
%   | | then if ( follows(F, A), follows(E, A) )
%   | | | then return 0.34403554001201236;  // std dev = 4.326, 81.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=51 */
%   | | | else return 0.226448840332531;  // std dev = 3.405, 46.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   | | else if ( tweets(E, D), follows(E, G) )
%   | | | then return 0.16876274106405853;  // std dev = 2.307, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.3226134253233208;  // std dev = 1.792, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(H, A), follows(I, A) )
%   | | | then return 0.15126408256186072;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.25639285110445625;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.20706541530412587;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.1364966155730606;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.10159632948783641;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(F, D), follows(A, F) )
%   | | then if ( tweets(A, E), follows(F, A) )
%   | | | then return 0.19266297487625322;  // std dev = 4.814, 94.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   | | | else return 0.31955329837828467;  // std dev = 3.235, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | | else if ( follows(A, G), follows(G, A) )
%   | | | then return 0.0844916071836982;  // std dev = 2.654, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return 0.18715503785178067;  // std dev = 2.772, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | else if ( follows(H, A) )
%   | | then return -0.11642646509914563;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.18786774087532676;  // std dev = 2.533, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.09746269907556908;  // std dev = 2.445, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926082;  // std dev = 7.45e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(D, A), follows(A, E) )
%   | | then if ( tweets(D, F), tweets(E, G) )
%   | | | then return 0.21281534814334604;  // std dev = 5.575, 130.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=79 */
%   | | | else return 0.008314973384882603;  // std dev = 1.650, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( follows(E, A), follows(D, A) )
%   | | | then return -0.04391399322796008;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.28743778539374915;  // std dev = 3.076, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | else if ( follows(H, A), follows(A, I) )
%   | | then return -0.056508668324762465;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.3600064845123662;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.1041862246324889;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.66e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(F, A), follows(F, D) )
%   | | | then return 0.10673778421351565;  // std dev = 5.284, 113.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   | | | else return 0.1621330006061084;  // std dev = 3.380, 47.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=26 */
%   | | else if ( follows(A, G), tweets(A, E) )
%   | | | then return 0.6528378304293635;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16798338037433067;  // std dev = 2.374, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return -0.045004366616017116;  // std dev = 1.628, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.08768248831079631;  // std dev = 2.102, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.1120110590380099;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.04422360972020041;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109153;  // std dev = 7.67e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( tweets(F, E), follows(F, D) )
%   | | then if ( follows(A, G), follows(G, D) )
%   | | | then return 0.06262740563564054;  // std dev = 6.075, 148.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=80 */
%   | | | else return -0.005131832528214379;  // std dev = 3.727, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | else if ( follows(A, H), follows(D, H) )
%   | | | then return -0.15543325073747988;  // std dev = 1.184, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.143091711239143;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J), tweets(A, K) )
%   | | | then return 0.6469037348927437;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08178195257600336;  // std dev = 2.057, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( tweets(A, L) )
%   | | | then return -0.0512594581072453;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.035714921093499795;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333716;  // std dev = 3.49e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), tweets(A, F) )
%   | | then if ( follows(E, G), follows(A, G) )
%   | | | then return -0.48987819808257815;  // std dev = 0.277, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.3995179530576678;  // std dev = 0.191, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( follows(A, H), follows(H, I) )
%   | | | then return -0.39919432004489985;  // std dev = 0.225, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return -0.2826569286376743;  // std dev = 0.041, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( follows(J, A), follows(A, J) )
%   | | then if ( follows(A, K), follows(K, J) )
%   | | | then return 0.3157525332078509;  // std dev = 3.847, 95.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=77 */
%   | | | else return 0.620232915609906;  // std dev = 0.147, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( tweets(A, L), follows(A, M) )
%   | | | then return 0.539842662844511;  // std dev = 0.249, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.5982576371576236;  // std dev = 1.323, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 5.48e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( follows(A, D), follows(D, A) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.08815684518113405;  // std dev = 4.688, 124.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=75 */
%   | | | else return -0.10160927424985904;  // std dev = 1.032, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( follows(G, A), follows(G, D) )
%   | | | then return 0.10241890555543406;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.007901757916526983;  // std dev = 2.073, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A), follows(A, J) )
%   | | | then return -0.04217745933200062;  // std dev = 1.261, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.001354175791167497;  // std dev = 2.765, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.012202061285965437;  // std dev = 1.185, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13031751656795904;  // std dev = 1.510, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( follows(A, D) )
%   | then if ( follows(D, A), tweets(D, E) )
%   | | then if ( follows(A, F), follows(D, F) )
%   | | | then return 0.028542688840131496;  // std dev = 5.101, 146.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=80 */
%   | | | else return -0.015677166014168017;  // std dev = 1.926, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( follows(D, G), follows(A, G) )
%   | | | then return -0.08329003334120809;  // std dev = 1.962, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.0445570233491023;  // std dev = 2.566, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else return 0.09588221412162341;  // std dev = 0.410, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.842', 'seconds']
Refined model CLL: -0.281676


******************************************
Best model found
******************************************
Results 

CLL : -0.33574 

AUC ROC : 0.90414 

AUC PR : 0.032139 

Precision : 0.032258 

Recall : 0.717949 

F1 : 0.061742 

Total Learning Time : 27.409 

Total Inference Time : 7.91678261756897 

Total revision time: 41.8641780834198
Best scored revision CLL: -0.281676


Results 

CLL : -0.33574 

AUC ROC : 0.90414 

AUC PR : 0.032139 

Precision : 0.032258 

Recall : 0.717949 

F1 : 0.061742 

Total Learning Time : 41.91859593200684 

Total Inference Time : 7.91678261756897 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.966
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1418510649004879;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2832170549905176;  // std dev = 9.470, 367.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839105;  // std dev = 7.45e-09, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.281602725835154;  // std dev = 9.165, 338.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360617;  // std dev = 9.66e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2217153515509014;  // std dev = 9.288, 349.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18718605379770653;  // std dev = 9.233, 344.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926086;  // std dev = 7.07e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1584755420211818;  // std dev = 9.153, 337.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.50e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12391911250516484;  // std dev = 9.153, 337.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109151;  // std dev = 8.30e-08, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07970691269406484;  // std dev = 9.288, 349.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333728;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( follows(B, I) )
%   | then return -0.3859953338939712;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return 0.3712862195040858;  // std dev = 6.153, 206.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 5.96e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05720508631170414;  // std dev = 8.069, 332.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04802884146063274;  // std dev = 8.026, 328.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.607', 'seconds']
Parameter learned model CLL:-0.31677 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 132, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.47, 211, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.45e-09, 121, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.165, 182, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.66e-08, 127, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.288, 193, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 116, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.233, 188, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.07e-08, 115, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.153, 181, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.5e-08, 121, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.153, 181, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [8.3e-08, 149, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.288, 193, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 144, 0], 'false,true': [0.0, 116, 0], 'false,false': [6.153, 50, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.96e-08, 128, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.069, 176, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 144, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.026, 172, 156]}]
{'': [-4.37360585458395e-17, 0.2443852133433344], 'false': [nan, 0.2443852133433344], 'true': [nan, -4.37360585458395e-17], 'true,false': [nan, -4.37360585458395e-17], 'true,false,false': [nan, -4.37360585458395e-17]}
{'': [5.50523813863714e-17, 0.24852071005917337], 'false': [nan, 0.24852071005917223], 'true': [nan, 5.50523813863714e-17], 'true,false': [nan, 5.50523813863714e-17]}
{'': [7.34320740696954e-17, 0.24719008875132187], 'false': [nan, 0.24719008875132187], 'true': [nan, 7.34320740696954e-17], 'true,false': [nan, 7.34320740696954e-17], 'true,false,false': [nan, 7.34320740696954e-17]}
{'': [-1.5313421029312504e-17, 0.24783666846944244], 'false': [nan, 0.24783666846944258], 'true': [nan, -1.5313421029312504e-17], 'true,false': [-1.5313421029312504e-17, nan]}
{'': [4.344350965924526e-17, 0.24862418441652281], 'false': [nan, 0.24862418441652218], 'true': [nan, 4.344350965924526e-17], 'true,false': [nan, 4.344350965924526e-17], 'true,false,false': [nan, 4.344350965924526e-17]}
{'': [3.4866508211368553e-17, 0.24862418441652176], 'false': [nan, 0.24862418441652176], 'true': [nan, 3.4866508211368553e-17], 'true,false': [3.4866508211368553e-17, nan]}
{'': [4.6197199682389065e-17, 0.24719008875132334], 'false': [nan, 0.24719008875132334], 'true': [nan, 4.6197199682389065e-17], 'true,false': [4.6197199682389065e-17, nan]}
{'': [-6.1679056923619804e-18, 0.24975888275915395], 'false': [-3.3689526264487507e-16, 0.18380620228108352], 'true': [nan, -6.1679056923619804e-18], 'true,false': [nan, -6.1679056923619804e-18], 'true,false,false': [nan, -6.1679056923619804e-18]}
{'': [2.7755575615628914e-17, 0.19609919496860884], 'false': [nan, 0.19609919496860825], 'true': [nan, 2.7755575615628914e-17], 'true,false': [2.7755575615628914e-17, nan]}
{'': [-1.1564823173178714e-17, 0.19637300646420922], 'false': [nan, 0.19637300646420922], 'true': [nan, -1.1564823173178714e-17], 'true,false': [nan, -1.1564823173178714e-17], 'true,false,false': [nan, -1.1564823173178714e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 22.806
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.14185106490048774;  // std dev = 4.71e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(A, E) )
%   | | | then return 0.37814893509951336;  // std dev = 5.586, 125.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=65 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( follows(A, E) )
%   | | | then return 0.601738678689255;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=29 */
%   | | | else return 0.33087620782678395;  // std dev = 3.703, 55.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=26 */
%   | else if ( follows(A, F) )
%   | | then if ( follows(G, A) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( follows(H, A), tweets(A, I) )
%   | | | then return 0.2265699877310913;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.32481560176617896;  // std dev = 2.733, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1254446385283911;  // std dev = 7.88e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( follows(A, D) )
%   | then if ( follows(E, A), follows(D, E) )
%   | | then if ( follows(E, D) )
%   | | | then return 0.37972938394815253;  // std dev = 5.349, 117.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=67 */
%   | | | else return 0.2126597822750538;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(F, A), follows(D, G) )
%   | | | then return 0.2893278420174622;  // std dev = 3.010, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return 0.2158299847155736;  // std dev = 4.776, 94.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=39 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.14547013013304982;  // std dev = 3.089, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.0512723828347622;  // std dev = 1.516, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.3852726818218917;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.22560881627567353;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1123163781936062;  // std dev = 9.31e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(F, A), follows(E, F) )
%   | | then if ( follows(F, E), tweets(F, D) )
%   | | | then return 0.335960621688231;  // std dev = 4.629, 89.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=53 */
%   | | | else return 0.17054866687493972;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( follows(G, A), follows(G, E) )
%   | | | then return 0.09300481101860682;  // std dev = 2.247, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | else return 0.247739096303038;  // std dev = 3.880, 60.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=29 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.11896304184975316;  // std dev = 3.105, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.08169843020058505;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( follows(J, A), tweets(J, K) )
%   | | | then return 0.1707050424281955;  // std dev = 3.137, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
%   | | | else return 0.2092348578217462;  // std dev = 3.652, 54.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=24 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.10159632948783645;  // std dev = 0.000, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), tweets(A, F) )
%   | | then if ( follows(E, D), tweets(D, F) )
%   | | | then return 0.16793288847755697;  // std dev = 5.684, 129.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=64 */
%   | | | else return 0.07465989747460129;  // std dev = 2.618, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( follows(G, A), tweets(G, H) )
%   | | | then return 0.3235935554562985;  // std dev = 2.936, 36.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=22 */
%   | | | else return 0.1823912855517838;  // std dev = 3.661, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(J, A), tweets(J, I) )
%   | | | then return 0.09890585302477284;  // std dev = 3.214, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.041840442749198854;  // std dev = 2.234, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( follows(K, A) )
%   | | | then return 0.37117376164538174;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11482959234625963;  // std dev = 2.385, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926078;  // std dev = 7.74e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( follows(A, D) )
%   | then if ( follows(D, E), tweets(A, F) )
%   | | then if ( follows(A, E), follows(G, A) )
%   | | | then return 0.1678846046058947;  // std dev = 5.599, 125.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=66 */
%   | | | else return 0.08406424618561244;  // std dev = 3.976, 64.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=27 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.1662517227220776;  // std dev = 2.873, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | | else return 0.2581886769549262;  // std dev = 2.816, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | else if ( follows(I, A), tweets(A, J) )
%   | | then if ( follows(I, K), follows(K, A) )
%   | | | then return 0.14174361922678425;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.11988921854175848;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(L, A) )
%   | | | then return -0.07116139464577144;  // std dev = 1.525, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11225493942828203;  // std dev = 2.583, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.75e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(E, A), tweets(A, G) )
%   | | | then return 0.09405855946373935;  // std dev = 5.445, 119.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=59 */
%   | | | else return 0.17633148423765704;  // std dev = 3.789, 58.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=33 */
%   | | else if ( follows(H, A) )
%   | | | then return -0.027464384247883326;  // std dev = 2.693, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.07313012516436236;  // std dev = 3.319, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(I, J), follows(J, A) )
%   | | | then return 0.11649760645348098;  // std dev = 3.053, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return -0.010190494126877458;  // std dev = 1.721, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( follows(A, K), tweets(A, L) )
%   | | | then return 0.12676140888384677;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.010356274642437322;  // std dev = 2.991, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109153;  // std dev = 7.52e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( tweets(A, F), tweets(E, F) )
%   | | then if ( tweets(D, F), follows(E, D) )
%   | | | then return 0.09475824091438806;  // std dev = 6.596, 175.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=88 */
%   | | | else return 0.0011156975051513848;  // std dev = 1.379, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( follows(G, A), tweets(A, H) )
%   | | | then return 0.0029822786462369764;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24300805180841006;  // std dev = 3.174, 45.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=30 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J) )
%   | | | then return -0.02697270975037731;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.08666437639067467;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.04161992508220297;  // std dev = 1.502, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.003065297684224568;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333722;  // std dev = 1.05e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then return -0.4440363965962107;  // std dev = 0.420, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.2983518286334958;  // std dev = 0.112, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(I, A), tweets(I, J) )
%   | | | then return 0.3227519264215355;  // std dev = 4.527, 114.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=88 */
%   | | | else return 0.18581693616751035;  // std dev = 3.622, 55.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=34 */
%   | | else if ( follows(K, A), tweets(A, L) )
%   | | | then return 0.6492619977555583;  // std dev = 0.976, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.39066628562581623;  // std dev = 2.352, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 6.14e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( tweets(A, D) )
%   | then if ( follows(E, A), tweets(E, D) )
%   | | then if ( follows(F, E), follows(F, A) )
%   | | | then return 0.022557269144526958;  // std dev = 4.959, 125.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=58 */
%   | | | else return -0.01891863369340104;  // std dev = 3.789, 73.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=30 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.31126458464621143;  // std dev = 0.640, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0370018017109564;  // std dev = 3.438, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return -0.006454888865551197;  // std dev = 2.850, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | | else return -0.07986925516858773;  // std dev = 2.104, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.06146299737848374;  // std dev = 1.050, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.02402173068876614;  // std dev = 2.291, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( follows(A, D), tweets(A, E) )
%   | then if ( follows(F, A), tweets(F, E) )
%   | | then if ( follows(F, D), follows(D, F) )
%   | | | then return 0.08945079012510153;  // std dev = 4.312, 89.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=53 */
%   | | | else return -0.03565638947841855;  // std dev = 3.293, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
%   | | else if ( follows(D, G), tweets(G, E) )
%   | | | then return 0.18302517712289995;  // std dev = 2.416, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | else return 0.30034842077597573;  // std dev = 0.944, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( follows(A, H), follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.04306622004061441;  // std dev = 1.528, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return -0.05079079076991299;  // std dev = 1.750, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return -0.07523798066766234;  // std dev = 2.831, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return -0.02895050502123017;  // std dev = 4.037, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.945', 'seconds']
Refined model CLL: -0.308822


******************************************
Best model found
******************************************
Results 

CLL : -0.263469 

AUC ROC : 0.956225 

AUC PR : 0.088321 

Precision : 0.090909 

Recall : 0.674603 

F1 : 0.160226 

Total Learning Time : 22.806 

Total Inference Time : 6.014004468917847 

Total revision time: 36.39593736839295
Best scored revision CLL: -0.308822


Results 

CLL : -0.263469 

AUC ROC : 0.956225 

AUC PR : 0.088321 

Precision : 0.090909 

Recall : 0.674603 

F1 : 0.160226 

Total Learning Time : 36.450355216979986 

Total Inference Time : 6.014004468917847 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.987
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3503364350995091;  // std dev = 7.999, 256.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839105;  // std dev = 7.68e-09, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.31394665089602336;  // std dev = 7.905, 250.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360624;  // std dev = 7.45e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23597984407793976;  // std dev = 8.102, 263.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783667;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2230905893685647;  // std dev = 7.840, 246.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926086;  // std dev = 7.07e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10821949808002787;  // std dev = 8.361, 283.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.08518475138839682;  // std dev = 5.87e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14646464652445815;  // std dev = 7.873, 248.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109155;  // std dev = 7.07e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.057190134208858184;  // std dev = 8.300, 278.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333718;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( follows(B, I) )
%   | then return -0.4098048433247327;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else return 0.5032386349361353;  // std dev = 3.310, 138.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 5.37e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05465012955448557;  // std dev = 6.558, 254.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.033179221828353145;  // std dev = 6.657, 257.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.120', 'seconds']
Parameter learned model CLL:-0.27509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.21e-08, 120, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.999, 130, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.68e-09, 118, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.905, 124, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-08, 99, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.102, 137, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 131, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.84, 120, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.07e-08, 115, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.361, 157, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.87e-08, 108, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 122, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.07e-08, 122, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.3, 152, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 126, 0], 'false,true': [0.0, 94, 0], 'false,false': [3.31, 12, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.37e-08, 112, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.558, 128, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 131, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.657, 131, 126]}]
{'': [1.4802973661668754e-17, 0.2499389648437531], 'false': [nan, 0.2499389648437531], 'true': [nan, 1.4802973661668754e-17], 'true,false': [nan, 1.4802973661668754e-17], 'true,false,false': [nan, 1.4802973661668754e-17]}
{'': [5.457028426123651e-17, 0.24998400000000015], 'false': [nan, 0.2499840000000001], 'true': [nan, 5.457028426123651e-17], 'true,false': [nan, 5.457028426123651e-17]}
{'': [5.607186993056347e-17, 0.24956266535586466], 'false': [nan, 0.24956266535586466], 'true': [nan, 5.607186993056347e-17], 'true,false': [nan, 5.607186993056347e-17], 'true,false,false': [nan, 5.607186993056347e-17]}
{'': [-3.05099457148898e-17, 0.24985127900059537], 'false': [nan, 0.24985127900059484], 'true': [nan, -3.05099457148898e-17], 'true,false': [-3.05099457148898e-17, nan]}
{'': [4.344350965924526e-17, 0.24700021226385577], 'false': [nan, 0.24700021226385585], 'true': [nan, 4.344350965924526e-17], 'true,false': [nan, 4.344350965924526e-17], 'true,false,false': [nan, 4.344350965924526e-17]}
{'': [3.1867512743870234e-17, 0.24993496357960626], 'false': [nan, 0.24993496357960626], 'true': [nan, 3.1867512743870234e-17], 'true,false': [3.1867512743870234e-17, nan]}
{'': [4.0950849268960694e-17, 0.2478132601832199], 'false': [nan, 0.2478132601832199], 'true': [nan, 4.0950849268960694e-17], 'true,false': [4.0950849268960694e-17, nan]}
{'': [-1.409807015397024e-17, 0.24814209274673082], 'false': [-3.0235861096174475e-16, 0.0793950850661648], 'true': [nan, -1.409807015397024e-17], 'true,false': [nan, -1.409807015397024e-17], 'true,false,false': [nan, -1.409807015397024e-17]}
{'': [2.577303450022685e-17, 0.1692989568611409], 'false': [nan, 0.16929895686114108], 'true': [nan, 2.577303450022685e-17], 'true,false': [2.577303450022685e-17, nan]}
{'': [-1.52549728574449e-17, 0.1724459932369291], 'false': [nan, 0.1724459932369291], 'true': [nan, -1.52549728574449e-17], 'true,false': [nan, -1.52549728574449e-17], 'true,false,false': [nan, -1.52549728574449e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 18.528
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.14185106490048763;  // std dev = 8.43e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( follows(D, A), follows(A, E) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.42005369700427514;  // std dev = 5.084, 105.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=59 */
%   | | | else return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( tweets(A, G), tweets(D, H) )
%   | | | then return 0.3581489350995117;  // std dev = 3.240, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.23314893509951232;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( tweets(A, K), tweets(I, K) )
%   | | | then return 0.24703782398840124;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.2391013160518933;  // std dev = 2.225, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.12544463852839133;  // std dev = 0.000, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), tweets(A, F) )
%   | | then if ( follows(E, D), tweets(D, F) )
%   | | | then return 0.3395941750750266;  // std dev = 5.439, 119.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=64 */
%   | | | else return 0.16339434900312627;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( tweets(D, G) )
%   | | | then return 0.4856979677926639;  // std dev = 3.289, 49.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   | | | else return 0.027334239218108004;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return 0.14207446911896845;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16493529733789;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.2475349020364707;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.20660196400455685;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.11231637819360617;  // std dev = 1.02e-07, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( follows(D, A), follows(A, D) )
%   | then if ( tweets(D, E), tweets(A, E) )
%   | | then if ( follows(A, F), follows(D, F) )
%   | | | then return 0.31925869553458985;  // std dev = 5.128, 108.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=62 */
%   | | | else return 0.39902865405261867;  // std dev = 1.437, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( follows(G, A), tweets(G, H) )
%   | | | then return 0.20305123508111433;  // std dev = 3.428, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return 0.0027318442461011006;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(I, A), follows(J, I) )
%   | | then if ( follows(A, J) )
%   | | | then return -0.08265059345071409;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.1788015832936106;  // std dev = 2.682, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.22586376185484092;  // std dev = 2.496, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | | else return 0.27997711898010147;  // std dev = 2.287, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.10159632948783635;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( tweets(A, F), tweets(D, F) )
%   | | then if ( follows(A, E), tweets(E, F) )
%   | | | then return 0.25006677086932066;  // std dev = 5.398, 119.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=67 */
%   | | | else return 0.15572227089537105;  // std dev = 2.709, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( follows(E, A), follows(D, A) )
%   | | | then return 0.07972747705672237;  // std dev = 2.426, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.19971013082249905;  // std dev = 2.828, 32.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=16 */
%   | else if ( follows(G, A) )
%   | | then return 0.18513174285875497;  // std dev = 0.495, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | else if ( tweets(A, H) )
%   | | | then return -0.02957738436969275;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.06800142493755672;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926083;  // std dev = 7.45e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( follows(A, D), tweets(A, E) )
%   | then if ( follows(A, F), follows(D, F) )
%   | | then if ( follows(G, A), tweets(G, E) )
%   | | | then return 0.1789597073685971;  // std dev = 5.480, 122.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=67 */
%   | | | else return 0.55630568168216;  // std dev = 0.955, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.04049974252264174;  // std dev = 2.021, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.1806802756466361;  // std dev = 2.177, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( tweets(A, I) )
%   | | then return 0.05433395698528606;  // std dev = 0.471, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.09965965888503567;  // std dev = 3.574, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.23932110382108387;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.14e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( tweets(A, D) )
%   | then if ( follows(A, E), tweets(E, D) )
%   | | then if ( follows(F, A), follows(E, G) )
%   | | | then return 0.12915992556887793;  // std dev = 5.805, 137.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=74 */
%   | | | else return 0.22726504145012083;  // std dev = 2.311, 23.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=13 */
%   | | else if ( follows(H, A) )
%   | | | then return 0.11135382558030736;  // std dev = 2.302, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.18082882815938922;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.12356912291403634;  // std dev = 3.035, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return -0.10037764410182184;  // std dev = 1.902, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return 0.11921331094987789;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0787767547310916;  // std dev = 5.77e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( tweets(A, D) )
%   | then if ( follows(E, A), tweets(E, D) )
%   | | then if ( follows(E, F), follows(A, F) )
%   | | | then return 0.1198312049519571;  // std dev = 5.361, 116.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=66 */
%   | | | else return -0.02625972919127136;  // std dev = 3.178, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | else if ( tweets(G, D), follows(A, G) )
%   | | | then return -0.04025568732840753;  // std dev = 2.953, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.27032074620960755;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.13900521689282497;  // std dev = 2.633, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.288840847051904;  // std dev = 1.375, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return -0.025585641250236033;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.1646104875672436;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333713;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then return -0.44776854633814656;  // std dev = 0.434, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else return -0.32074507239660577;  // std dev = 0.155, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( follows(G, A), follows(A, G) )
%   | | then if ( follows(H, A), follows(H, G) )
%   | | | then return 0.4644214721981854;  // std dev = 1.978, 67.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=63 */
%   | | | else return 0.3872996705851021;  // std dev = 2.198, 34.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=28 */
%   | | else if ( tweets(A, I), follows(A, J) )
%   | | | then return 0.5987942577531666;  // std dev = 0.267, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.4701007610239596;  // std dev = 1.801, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 5.87e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( follows(A, D) )
%   | then if ( tweets(A, E), follows(D, A) )
%   | | then if ( tweets(D, E) )
%   | | | then return 0.004304712633877812;  // std dev = 4.881, 134.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=68 */
%   | | | else return 0.13542092992009794;  // std dev = 0.991, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( follows(F, A), follows(D, G) )
%   | | | then return 0.08741853432895504;  // std dev = 2.728, 45.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | | else return 0.0025488146866042396;  // std dev = 2.904, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | else return 0.10497115748773457;  // std dev = 0.432, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( tweets(A, D) )
%   | then if ( follows(A, E), tweets(E, D) )
%   | | then if ( follows(E, F) )
%   | | | then return 0.004760628479368902;  // std dev = 5.276, 162.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=81 */
%   | | | else return 0.10633848629588612;  // std dev = 1.396, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( follows(A, G) )
%   | | | then return -0.18773977775631784;  // std dev = 1.005, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04502759283853575;  // std dev = 2.079, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.08147107847757909;  // std dev = 2.363, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return -0.040934463216287645;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.0202724680078137;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.059172572373782706;  // std dev = 1.520, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.516', 'seconds']
Refined model CLL: -0.275139


******************************************
Best model found
******************************************
Results 

CLL : -0.345156 

AUC ROC : 0.905063 

AUC PR : 0.032258 

Precision : 0.032258 

Recall : 1.0 

F1 : 0.0625 

Total Learning Time : 18.528 

Total Inference Time : 4.27232027053833 

Total revision time: 29.33405770301819
Best scored revision CLL: -0.27509


Results 

CLL : -0.345156 

AUC ROC : 0.905063 

AUC PR : 0.032258 

Precision : 0.032258 

Recall : 1.0 

F1 : 0.0625 

Total Learning Time : 29.359616889953614 

Total Inference Time : 4.27232027053833 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 2.016
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048782;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32243464938522354;  // std dev = 9.142, 336.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839105;  // std dev = 7.68e-09, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.30018586803783226;  // std dev = 8.955, 321.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360622;  // std dev = 8.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2114677046736867;  // std dev = 9.288, 349.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783637;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16127866881422523;  // std dev = 9.372, 357.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926085;  // std dev = 7.30e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16802889495780274;  // std dev = 9.032, 327.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.32e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12959519180170045;  // std dev = 9.045, 328.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109153;  // std dev = 7.74e-08, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.043459896879816384;  // std dev = 9.517, 372.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333716;  // std dev = 3.33e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( follows(B, I) )
%   | then return -0.38614421110809355;  // std dev = 0.000, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else return 0.3899751918769828;  // std dev = 5.910, 201.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 6.32e-08, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0628557675509204;  // std dev = 7.905, 330.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04034707587413912;  // std dev = 8.011, 332.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.761', 'seconds']
Parameter learned model CLL:-0.318164 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 126, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.142, 180, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.68e-09, 116, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.955, 165, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.16e-08, 108, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.288, 193, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 119, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.372, 201, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.3e-08, 118, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.032, 171, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.32e-08, 119, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.045, 172, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.74e-08, 138, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.517, 216, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [3.33e-08, 122, 0], 'false,true': [0.0, 112, 0], 'false,false': [5.91, 45, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.32e-08, 137, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.905, 174, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 123, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.011, 176, 156]}]
{'': [-1.76225876924628e-17, 0.24872448979592138], 'false': [nan, 0.24872448979592138], 'true': [nan, -1.76225876924628e-17], 'true,false': [nan, -1.76225876924628e-17], 'true,false,false': [nan, -1.76225876924628e-17]}
{'': [5.551115123125783e-17, 0.24980347628613736], 'false': [nan, 0.24980347628613891], 'true': [nan, 5.551115123125783e-17], 'true,false': [nan, 5.551115123125783e-17]}
{'': [6.167905692361981e-17, 0.24719008875132215], 'false': [nan, 0.24719008875132215], 'true': [nan, 6.167905692361981e-17], 'true,false': [nan, 6.167905692361981e-17], 'true,false,false': [nan, 6.167905692361981e-17]}
{'': [-2.052513154769197e-17, 0.2460278228938671], 'false': [nan, 0.24602782289386482], 'true': [nan, -2.052513154769197e-17], 'true,false': [-2.052513154769197e-17, nan]}
{'': [4.516161456102332e-17, 0.2494739500042068], 'false': [nan, 0.24947395000420683], 'true': [nan, 4.516161456102332e-17], 'true,false': [nan, 4.516161456102332e-17], 'true,false,false': [nan, 4.516161456102332e-17]}
{'': [3.358657889622322e-17, 0.24940511600238047], 'false': [nan, 0.24940511600238047], 'true': [nan, 3.358657889622322e-17], 'true,false': [3.358657889622322e-17, nan]}
{'': [4.344350965924526e-17, 0.2434963579604577], 'false': [nan, 0.2434963579604577], 'true': [nan, 4.344350965924526e-17], 'true,false': [4.344350965924526e-17, nan]}
{'': [9.100188726435709e-18, 0.24999744817238226], 'false': [-3.1720657846433045e-16, 0.17375807529516618], 'true': [nan, 9.100188726435709e-18], 'true,false': [nan, 9.100188726435709e-18], 'true,false,false': [nan, 9.100188726435709e-18]}
{'': [2.917374371277784e-17, 0.18934478333587346], 'false': [nan, 0.18934478333587304], 'true': [nan, 2.917374371277784e-17], 'true,false': [2.917374371277784e-17, nan]}
{'': [-1.805240690447409e-17, 0.1932981341670363], 'false': [nan, 0.1932981341670363], 'true': [nan, -1.805240690447409e-17], 'true,false': [nan, -1.805240690447409e-17], 'true,false,false': [nan, -1.805240690447409e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 16.463
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.141851064900488;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( tweets(A, F), follows(A, E) )
%   | | then if ( follows(G, A), follows(E, G) )
%   | | | then return 0.4803711573217353;  // std dev = 4.600, 90.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   | | | else return 0.3105298874804647;  // std dev = 3.226, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | else if ( follows(D, A), follows(E, A) )
%   | | | then return 0.20814893509951235;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.3179190500420403;  // std dev = 4.649, 87.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=40 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.19905802600860326;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | | | else return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( follows(A, J), tweets(A, K) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.1831489350995123;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.12544463852839105;  // std dev = 8.16e-08, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   else if ( follows(D, A), follows(A, D) )
%   | then if ( follows(A, E), follows(D, E) )
%   | | then if ( follows(E, A), follows(E, D) )
%   | | | then return 0.3379338865124032;  // std dev = 4.327, 76.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=41 */
%   | | | else return 0.4349146561504155;  // std dev = 3.458, 52.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=33 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.22671680992791843;  // std dev = 2.030, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.14822002350365712;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(A, H), follows(H, G) )
%   | | | then return 0.35411809962509;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.2141965168304839;  // std dev = 3.948, 65.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=26 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.19873205259474394;  // std dev = 3.459, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.10016437883906623;  // std dev = 3.324, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.11231637819360617;  // std dev = 9.77e-08, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, D), follows(A, E) )
%   | | then if ( tweets(A, F), follows(D, A) )
%   | | | then return 0.25934090195533677;  // std dev = 5.033, 102.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=55 */
%   | | | else return 0.4665218061855955;  // std dev = 2.658, 34.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=24 */
%   | | else if ( tweets(A, G), follows(A, E) )
%   | | | then return 0.15391700389707114;  // std dev = 2.453, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.23584500566334374;  // std dev = 4.222, 72.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=33 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.10223266447524836;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.1635729356443219;  // std dev = 3.402, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.4867167266644632;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08153327765879408;  // std dev = 2.697, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.10159632948783638;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( tweets(A, D) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(A, F), follows(E, F) )
%   | | | then return 0.25523320401285604;  // std dev = 5.033, 104.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=61 */
%   | | | else return 0.12755296115635806;  // std dev = 2.064, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else if ( follows(G, A), follows(H, G) )
%   | | | then return 0.31999638552393483;  // std dev = 2.940, 36.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=20 */
%   | | | else return 0.24722869245448212;  // std dev = 3.608, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | else if ( follows(I, A), tweets(I, J) )
%   | | then if ( follows(I, K), follows(K, A) )
%   | | | then return 0.26598768358384045;  // std dev = 1.878, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.09418992242058381;  // std dev = 2.330, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.18201123755185503;  // std dev = 3.017, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | | else return 0.19659189565457114;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0926912761892608;  // std dev = 7.60e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( follows(D, A), follows(A, D) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( tweets(A, F), follows(E, D) )
%   | | | then return 0.10670147374702846;  // std dev = 4.379, 77.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=38 */
%   | | | else return 0.3082173712233599;  // std dev = 2.040, 19.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.25624241421728944;  // std dev = 3.009, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | | | else return 0.11452180861828826;  // std dev = 1.973, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(I, A), tweets(I, J) )
%   | | | then return -0.02211756038173917;  // std dev = 2.324, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.0996564250566979;  // std dev = 4.669, 90.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=38 */
%   | | else if ( follows(K, A), tweets(A, L) )
%   | | | then return 0.1491235615381104;  // std dev = 2.811, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.07970323863204237;  // std dev = 3.091, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.50e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   else if ( follows(A, D) )
%   | then if ( follows(E, A), tweets(E, F) )
%   | | then if ( follows(D, A), follows(E, D) )
%   | | | then return 0.18934414568016733;  // std dev = 4.487, 85.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=52 */
%   | | | else return 0.08478629687639544;  // std dev = 4.498, 79.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=38 */
%   | | else if ( follows(D, G), follows(G, D) )
%   | | | then return 0.08877749703798689;  // std dev = 4.253, 75.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=33 */
%   | | | else return 0.1401268303507797;  // std dev = 1.684, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return -0.05443519777345086;  // std dev = 3.208, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return -0.028530889794932672;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.22779199494665736;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.15001408429272933;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109154;  // std dev = 7.15e-08, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( follows(A, D) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(D, F), follows(A, F) )
%   | | | then return 0.130407229514358;  // std dev = 5.311, 117.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=70 */
%   | | | else return -0.04691471490238132;  // std dev = 2.699, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( tweets(A, G), follows(D, H) )
%   | | | then return 0.16231058344627872;  // std dev = 3.429, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
%   | | | else return 0.08016469902414672;  // std dev = 3.503, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | else if ( follows(I, A) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.02675449918366982;  // std dev = 3.052, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return -0.01949742072771249;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.04937114900262366;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.0661272277483383;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333728;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, E), follows(A, F) )
%   | | | then return -0.49838589491406465;  // std dev = 0.148, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return -0.40125701596314645;  // std dev = 0.235, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return -0.29507578671900675;  // std dev = 0.144, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( follows(A, G), follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return 0.21769900105441542;  // std dev = 3.794, 71.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=51 */
%   | | | else return 0.3421605456063365;  // std dev = 2.482, 39.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.44246390915277944;  // std dev = 2.998, 59.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=47 */
%   | | | else return 0.2745724909019901;  // std dev = 3.183, 44.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=27 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 5.87e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( follows(A, D), follows(D, A) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(D, E), follows(E, A) )
%   | | | then return 0.04128447663549458;  // std dev = 3.920, 75.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=41 */
%   | | | else return -0.04638932688411017;  // std dev = 3.425, 59.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=28 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.05588692804002645;  // std dev = 1.884, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.2899995837609955;  // std dev = 0.954, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( follows(G, A) )
%   | | then if ( tweets(A, H), follows(I, G) )
%   | | | then return 0.07620442250334293;  // std dev = 2.911, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.2878613919539684;  // std dev = 1.340, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.03221774354845576;  // std dev = 2.829, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | else return 0.09661782262293929;  // std dev = 3.447, 63.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=27 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( follows(A, D), follows(D, A) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.031627048055180344;  // std dev = 4.704, 106.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=59 */
%   | | | else return -0.10867618166980317;  // std dev = 2.199, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( tweets(A, G) )
%   | | | then return -0.10994200982720394;  // std dev = 2.214, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.11161771237111603;  // std dev = 1.175, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), tweets(H, J) )
%   | | | then return 0.07028333255559713;  // std dev = 3.103, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.31028747931761996;  // std dev = 0.697, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( tweets(A, K) )
%   | | | then return -0.010863006114111402;  // std dev = 3.295, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | | | else return 0.05220031430890014;  // std dev = 3.267, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.702', 'seconds']
Refined model CLL: -0.323635


******************************************
Best model found
******************************************
Results 

CLL : -0.259147 

AUC ROC : 0.960938 

AUC PR : 0.090909 

Precision : 0.090909 

Recall : 1.0 

F1 : 0.166667 

Total Learning Time : 16.463 

Total Inference Time : 6.075272798538208 

Total revision time: 29.80302467727661
Best scored revision CLL: -0.318164


Results 

CLL : -0.259147 

AUC ROC : 0.960938 

AUC PR : 0.090909 

Precision : 0.090909 

Recall : 1.0 

F1 : 0.166667 

Total Learning Time : 29.828583864212035 

Total Inference Time : 6.075272798538208 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.949
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048785;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3522665821583328;  // std dev = 7.984, 255.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839108;  // std dev = 7.21e-09, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32604280228972604;  // std dev = 7.806, 244.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1123163781936062;  // std dev = 9.66e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26442363109202105;  // std dev = 7.857, 247.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783637;  // std dev = 0.000, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22708933298758488;  // std dev = 7.736, 240.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926078;  // std dev = 7.88e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12621395355973658;  // std dev = 8.143, 266.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.32e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10800574640719089;  // std dev = 8.058, 260.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109157;  // std dev = 6.50e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09377912043121979;  // std dev = 7.968, 254.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333722;  // std dev = 1.83e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( follows(B, I) )
%   | then return -0.4250249364110126;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else return 0.4749750635889886;  // std dev = 3.550, 140.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 5.67e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04187201630827887;  // std dev = 6.584, 257.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 2.1808402329254225E-4;  // std dev = 6.792, 282.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.168', 'seconds']
Parameter learned model CLL:-0.274877 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 128, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.984, 129, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.21e-09, 130, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.806, 118, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.66e-08, 134, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.857, 121, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 121, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.736, 114, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.88e-08, 132, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.143, 140, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.32e-08, 117, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.058, 134, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.5e-08, 112, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.968, 128, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [1.83e-08, 132, 0], 'false,true': [0.0, 97, 0], 'false,false': [3.55, 14, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.67e-08, 121, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.584, 131, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 140, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.792, 156, 126]}]
{'': [-2.7755575615628914e-17, 0.24996539792387848], 'false': [nan, 0.24996539792387848], 'true': [nan, -2.7755575615628914e-17], 'true,false': [nan, -2.7755575615628914e-17], 'true,false,false': [nan, -2.7755575615628914e-17]}
{'': [5.124106267500723e-17, 0.24973125503896657], 'false': [nan, 0.24973125503896706], 'true': [nan, 5.124106267500723e-17], 'true,false': [nan, 5.124106267500723e-17]}
{'': [6.959607020038295e-17, 0.24989755609828104], 'false': [nan, 0.24989755609828104], 'true': [nan, 6.959607020038295e-17], 'true,false': [nan, 6.959607020038295e-17], 'true,false,false': [nan, 6.959607020038295e-17]}
{'': [-2.3856031934094273e-17, 0.249375], 'false': [nan, 0.24937499999999985], 'true': [nan, -2.3856031934094273e-17], 'true,false': [-2.3856031934094273e-17, nan]}
{'': [4.710037074167331e-17, 0.2493074792243773], 'false': [nan, 0.24930747922437688], 'true': [nan, 4.710037074167331e-17], 'true,false': [nan, 4.710037074167331e-17], 'true,false,false': [nan, 4.710037074167331e-17]}
{'': [3.416070845000482e-17, 0.24976331360946658], 'false': [nan, 0.24976331360946658], 'true': [nan, 3.416070845000482e-17], 'true,false': [3.416070845000482e-17, nan]}
{'': [3.766828119263924e-17, 0.24998449996900118], 'false': [nan, 0.24998449996900118], 'true': [nan, 3.766828119263924e-17], 'true,false': [3.766828119263924e-17, nan]}
{'': [2.523234146875356e-18, 0.24899855792340914], 'false': [-1.0987774264331447e-15, 0.09000000000000004], 'true': [nan, 2.523234146875356e-18], 'true,false': [nan, 2.523234146875356e-18], 'true,false,false': [nan, 2.523234146875356e-18]}
{'': [2.6608651003412843e-17, 0.16866448598873662], 'false': [nan, 0.16866448598873726], 'true': [nan, 2.6608651003412843e-17], 'true,false': [2.6608651003412843e-17, nan]}
{'': [-1.2688263138573217e-17, 0.1635865869789322], 'false': [nan, 0.1635865869789322], 'true': [nan, -1.2688263138573217e-17], 'true,false': [nan, -1.2688263138573217e-17], 'true,false,false': [nan, -1.2688263138573217e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 33.372
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.14185106490048763;  // std dev = 8.69e-08, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(E, A), follows(F, A) )
%   | | | then return 0.4663963577799255;  // std dev = 4.808, 97.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=59 */
%   | | | else return 0.31577605374358014;  // std dev = 3.827, 59.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=27 */
%   | | else if ( follows(D, A), tweets(D, G) )
%   | | | then return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.35814893509951234;  // std dev = 2.345, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else if ( follows(A, H), tweets(A, I) )
%   | | then return 0.3126943896449669;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.14386322081379807;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1254446385283913;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( follows(A, D), follows(E, A) )
%   | then if ( follows(E, D), tweets(E, F) )
%   | | then if ( tweets(D, F), tweets(A, F) )
%   | | | then return 0.4157718559885065;  // std dev = 4.903, 102.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=63 */
%   | | | else return 0.32441290933488093;  // std dev = 3.324, 44.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   | | else if ( follows(D, E) )
%   | | | then return 0.07420761325233484;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3033917708557315;  // std dev = 2.172, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(A, H), follows(H, G) )
%   | | | then return 0.1485430686064547;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.30981923570021586;  // std dev = 2.123, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.11684543875202534;  // std dev = 2.931, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.26177691980297696;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.11231637819360621;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( follows(D, A), follows(A, E) )
%   | then if ( tweets(E, F), follows(E, G) )
%   | | then if ( tweets(D, F), follows(D, E) )
%   | | | then return 0.30068403211180017;  // std dev = 5.755, 136.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=78 */
%   | | | else return 0.22468703989927435;  // std dev = 3.063, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | else return 0.1583682439424106;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.2778595154258623;  // std dev = 1.415, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08954700436647689;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.20126558285888865;  // std dev = 2.715, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.29359628000086896;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.10159632948783642;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(A, F), follows(E, F) )
%   | | then if ( tweets(E, D) )
%   | | | then return 0.15940364128674853;  // std dev = 5.936, 142.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=70 */
%   | | | else return 0.46587967670233477;  // std dev = 0.871, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( follows(E, A) )
%   | | | then return 0.29574731243800495;  // std dev = 1.663, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.1841181614088151;  // std dev = 2.374, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(A, H), follows(G, H) )
%   | | | then return 0.06064604758735472;  // std dev = 3.365, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.10739282366623534;  // std dev = 2.598, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.7296324540805587;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.16994970683284374;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926079;  // std dev = 7.74e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( follows(D, A), tweets(A, E) )
%   | then if ( follows(A, F), follows(D, F) )
%   | | then if ( follows(F, D), tweets(D, E) )
%   | | | then return 0.2514277681096078;  // std dev = 4.709, 95.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=60 */
%   | | | else return 0.14362878831110135;  // std dev = 2.481, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( tweets(D, E), follows(A, D) )
%   | | | then return 0.13113482546752378;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.06520543807914563;  // std dev = 2.511, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | else if ( follows(G, A), follows(A, G) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return 0.017882422081572907;  // std dev = 2.402, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.16118257162445543;  // std dev = 2.328, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.044683634018887176;  // std dev = 2.824, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return -7.831041496959354E-6;  // std dev = 2.563, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.23e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( follows(D, A), follows(E, D) )
%   | then if ( tweets(A, F), follows(A, E) )
%   | | then if ( tweets(E, F) )
%   | | | then return 0.09532199271939863;  // std dev = 5.383, 117.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=62 */
%   | | | else return -0.08973182478141147;  // std dev = 1.671, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( follows(A, G), tweets(A, H) )
%   | | | then return 0.23381832165119826;  // std dev = 1.999, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.12440013018627302;  // std dev = 3.975, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(K, A) )
%   | | | then return -0.044592880147373094;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.12046490140802348;  // std dev = 2.433, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( tweets(A, L) )
%   | | | then return -0.03082100699278055;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.060426626690275244;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109157;  // std dev = 6.32e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( tweets(A, E), follows(F, D) )
%   | | then if ( follows(A, F), tweets(F, E) )
%   | | | then return 0.09787879916480872;  // std dev = 4.852, 96.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=54 */
%   | | | else return 0.18695375829456384;  // std dev = 3.394, 49.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=26 */
%   | | else if ( follows(A, G), follows(G, D) )
%   | | | then return 0.25129861134585807;  // std dev = 2.517, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | | else return 0.11971367569973652;  // std dev = 1.925, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return -0.1490625793117417;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.09024800355702653;  // std dev = 2.667, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return -0.13082872112481558;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.028158629460193946;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333707;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( follows(B, D) )
%   | then if ( follows(E, A), follows(A, F) )
%   | | then return -0.45174083616252514;  // std dev = 0.424, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else return -0.3296919889455128;  // std dev = 0.304, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( follows(A, G) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return 0.38069408414290967;  // std dev = 3.425, 95.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=81 */
%   | | | else return 0.4935090779693279;  // std dev = 2.151, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | else return 0.5903098646799002;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 5.77e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( tweets(A, D) )
%   | then if ( follows(E, A), tweets(E, D) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return 0.06335966473095035;  // std dev = 4.416, 109.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=63 */
%   | | | else return -0.01383290544033764;  // std dev = 2.826, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( follows(G, A) )
%   | | | then return -0.16021821223627958;  // std dev = 1.422, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.014398953618634223;  // std dev = 2.380, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(H, A), follows(I, A) )
%   | | | then return 0.040116920104886926;  // std dev = 1.791, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.11333112408190302;  // std dev = 2.048, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | else return 0.028095936722637525;  // std dev = 0.387, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(D, A), follows(E, A) )
%   | | then if ( tweets(E, F), tweets(D, G) )
%   | | | then return 0.012429100738062668;  // std dev = 4.445, 109.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=58 */
%   | | | else return 0.19148922001785762;  // std dev = 1.132, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( tweets(A, H), follows(A, E) )
%   | | | then return 0.19377211078355092;  // std dev = 1.978, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return 0.03849396460904044;  // std dev = 2.968, 50.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=24 */
%   | else if ( follows(I, A), follows(A, J) )
%   | | then return -0.0651204373054975;  // std dev = 0.630, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( tweets(A, K) )
%   | | | then return -0.025188638956750442;  // std dev = 2.450, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return -0.02073736291424419;  // std dev = 1.765, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.105', 'seconds']
Refined model CLL: -0.27434


******************************************
Best model found
******************************************
Results 

CLL : -0.330619 

AUC ROC : 0.901309 

AUC PR : 0.031838 

Precision : 0.032258 

Recall : 0.711538 

F1 : 0.061718 

Total Learning Time : 33.372 

Total Inference Time : 8.100011348724365 

Total revision time: 48.08384646987915
Best scored revision CLL: -0.27434


Results 

CLL : -0.330619 

AUC ROC : 0.901309 

AUC PR : 0.031838 

Precision : 0.032258 

Recall : 0.711538 

F1 : 0.061718 

Total Learning Time : 48.10060467338562 

Total Inference Time : 8.100011348724365 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.979
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048763;  // std dev = 8.69e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3000752807085743;  // std dev = 9.331, 353.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839127;  // std dev = 0.000, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2632775337889073;  // std dev = 9.299, 350.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360621;  // std dev = 8.69e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21816168740567068;  // std dev = 9.320, 352.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783644;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20314595635990182;  // std dev = 9.106, 333.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926086;  // std dev = 7.07e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17177376698636668;  // std dev = 9.019, 326.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.50e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12543858153524343;  // std dev = 9.094, 332.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109155;  // std dev = 7.07e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10523734463505657;  // std dev = 9.019, 326.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333727;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( follows(B, I) )
%   | then return -0.3982193925214545;  // std dev = 1.03e-07, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return 0.2800414770437629;  // std dev = 7.085, 230.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 6.23e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05506123364985228;  // std dev = 8.162, 341.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036229028700511944;  // std dev = 8.235, 343.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.609', 'seconds']
Parameter learned model CLL:-0.315151 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.69e-08, 95, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.331, 197, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.0, 124, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.299, 194, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.69e-08, 119, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.32, 196, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 140, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.106, 177, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.07e-08, 115, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.019, 170, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.5e-08, 122, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.094, 176, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.07e-08, 122, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.019, 170, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 140, 0], 'false,true': [1.03e-07, 116, 0], 'false,false': [7.085, 74, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.23e-08, 135, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.162, 185, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 123, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.235, 187, 156]}]
{'': [7.946859544685331e-17, 0.2466274506656852], 'false': [nan, 0.2466274506656852], 'true': [nan, 7.946859544685331e-17], 'true,false': [nan, 7.946859544685331e-17], 'true,false,false': [nan, 7.946859544685331e-17]}
{'': [0.0, 0.24705306122449022], 'false': [nan, 0.24705306122448975], 'true': [nan, 0.0], 'true,false': [nan, 0.0]}
{'': [6.344131569286608e-17, 0.2467716942148767], 'false': [nan, 0.2467716942148767], 'true': [nan, 6.344131569286608e-17], 'true,false': [nan, 6.344131569286608e-17], 'true,false,false': [nan, 6.344131569286608e-17]}
{'': [-4.7580986769649563e-17, 0.24900576251927659], 'false': [nan, 0.24900576251927603], 'true': [nan, -4.7580986769649563e-17], 'true,false': [-4.7580986769649563e-17, nan]}
{'': [4.344350965924526e-17, 0.24953893635439636], 'false': [nan, 0.24953893635439645], 'true': [nan, 4.344350965924526e-17], 'true,false': [nan, 4.344350965924526e-17], 'true,false,false': [nan, 4.344350965924526e-17]}
{'': [3.45807171604557e-17, 0.24909275656844215], 'false': [nan, 0.24909275656844215], 'true': [nan, 3.45807171604557e-17], 'true,false': [3.45807171604557e-17, nan]}
{'': [4.0950849268960694e-17, 0.24953893635439747], 'false': [nan, 0.24953893635439747], 'true': [nan, 4.0950849268960694e-17], 'true,false': [4.0950849268960694e-17, nan]}
{'': [-3.96508223080413e-18, 0.24758595342310102], 'false': [9.188052617587502e-17, 0.21822306238185188], 'true': [nan, -3.96508223080413e-18], 'true,false': [nan, -3.96508223080413e-18], 'true,false,false': [nan, -3.96508223080413e-18]}
{'': [2.878355989768924e-17, 0.1953551067335597], 'false': [nan, 0.19535510673356032], 'true': [nan, 2.878355989768924e-17], 'true,false': [2.878355989768924e-17, nan]}
{'': [-1.805240690447409e-17, 0.1977191101333439], 'false': [nan, 0.1977191101333439], 'true': [nan, -1.805240690447409e-17], 'true,false': [nan, -1.805240690447409e-17], 'true,false,false': [nan, -1.805240690447409e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 25.05
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1418510649004879;  // std dev = 0.000, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(E, F), tweets(E, D) )
%   | | then if ( follows(A, F), tweets(F, D) )
%   | | | then return 0.4001336679239409;  // std dev = 5.703, 131.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=71 */
%   | | | else return 0.2867203636709409;  // std dev = 3.464, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( follows(H, A), follows(A, H) )
%   | | then if ( follows(A, I), follows(H, I) )
%   | | | then return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.23592671287729014;  // std dev = 3.252, 45.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | else return 0.19148226843284433;  // std dev = 4.320, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.12544463852839116;  // std dev = 7.60e-08, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( follows(A, D) )
%   | then if ( follows(A, E), follows(D, E) )
%   | | then if ( follows(E, F), follows(F, D) )
%   | | | then return 0.3512344758513006;  // std dev = 6.399, 165.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=90 */
%   | | | else return 0.18950670752788681;  // std dev = 1.943, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( follows(D, A) )
%   | | | then return 0.1932142555517257;  // std dev = 2.097, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.30492901705277786;  // std dev = 3.587, 52.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | else if ( follows(G, A) )
%   | | then if ( follows(G, H), follows(H, A) )
%   | | | then return 0.15138730941336703;  // std dev = 3.090, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.2082054912315486;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.11891977694583435;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08320549123154851;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.11231637819360615;  // std dev = 1.04e-07, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( follows(A, D), follows(D, A) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( follows(E, D), tweets(A, F) )
%   | | | then return 0.38565744951128056;  // std dev = 3.684, 59.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=38 */
%   | | | else return 0.2484000404594437;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.24210126494902506;  // std dev = 3.511, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return 0.4132564996893549;  // std dev = 1.558, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | else if ( follows(H, A) )
%   | | then if ( tweets(A, I), tweets(H, I) )
%   | | | then return 0.14776714264633883;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | | else return 0.06215123339117892;  // std dev = 1.899, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.19411475049629834;  // std dev = 3.783, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | | else return 0.27333335494476;  // std dev = 3.456, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.10159632948783633;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, F), follows(A, E) )
%   | | then if ( follows(D, F), tweets(F, G) )
%   | | | then return 0.23757292035823704;  // std dev = 6.185, 155.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=86 */
%   | | | else return 0.1082826771440916;  // std dev = 1.905, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( follows(E, D) )
%   | | | then return 0.10996368459431956;  // std dev = 4.196, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.40349954216723344;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(A, H), follows(I, A) )
%   | | then if ( follows(J, H), follows(J, I) )
%   | | | then return -0.10523573133775135;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08738794385762083;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.08732997523577697;  // std dev = 3.733, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
%   | | | else return 0.2022081426319162;  // std dev = 2.622, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926078;  // std dev = 7.74e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( follows(A, D) )
%   | then if ( follows(A, E), follows(D, E) )
%   | | then if ( follows(E, D) )
%   | | | then return 0.25019038694070006;  // std dev = 5.482, 127.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=79 */
%   | | | else return 0.10431231823978497;  // std dev = 3.110, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( tweets(A, F), follows(D, A) )
%   | | | then return 0.040510235649831645;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.11828162224780273;  // std dev = 3.938, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | else if ( follows(G, A), tweets(A, H) )
%   | | then return 0.13113547942312836;  // std dev = 0.479, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.060025952899164195;  // std dev = 1.450, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.001364017798116942;  // std dev = 2.874, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.41e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(A, F), tweets(A, E) )
%   | | then if ( follows(F, G), follows(A, G) )
%   | | | then return 0.0490592155549954;  // std dev = 5.808, 136.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=65 */
%   | | | else return 0.17878120566123593;  // std dev = 2.166, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( follows(D, H), follows(H, A) )
%   | | | then return 0.0640041723541565;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return -0.0011134994718895522;  // std dev = 2.701, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(J, I), follows(A, J) )
%   | | | then return 0.23463317655452218;  // std dev = 2.101, 19.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | else return 0.09348936940108443;  // std dev = 3.611, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.004492084674080713;  // std dev = 2.124, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.11437880033991309;  // std dev = 2.344, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109155;  // std dev = 6.83e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( tweets(A, D) )
%   | then if ( follows(E, A), follows(F, E) )
%   | | then if ( follows(F, A), tweets(F, D) )
%   | | | then return 0.060945423789583106;  // std dev = 5.447, 120.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=56 */
%   | | | else return 0.15152032000974772;  // std dev = 3.852, 60.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=32 */
%   | | else if ( follows(A, G) )
%   | | | then return 0.25232920455365715;  // std dev = 2.940, 37.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=23 */
%   | | | else return 0.018933177426668394;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(H, A), follows(A, I) )
%   | | | then return 0.042774949970150467;  // std dev = 2.640, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | | else return 0.11001081633312138;  // std dev = 2.943, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.04530306008418245;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.001184238417046087;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333727;  // std dev = 0.000, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F), follows(F, E) )
%   | | | then return -0.4678121695929302;  // std dev = 0.213, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.38661086895485397;  // std dev = 0.193, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else return -0.2866614996009047;  // std dev = 0.187, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( follows(G, A), follows(A, H) )
%   | | then if ( follows(G, H), tweets(G, I) )
%   | | | then return 0.23328724703027387;  // std dev = 4.945, 116.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=80 */
%   | | | else return 0.3788879127123044;  // std dev = 1.700, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | else if ( follows(J, A), tweets(A, K) )
%   | | | then return 0.6552993557290459;  // std dev = 0.964, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.394229759158528;  // std dev = 3.456, 67.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=51 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 5.48e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( follows(A, D), tweets(A, E) )
%   | then if ( follows(F, A), follows(D, G) )
%   | | then if ( follows(G, A), follows(G, F) )
%   | | | then return 0.0053339420968428345;  // std dev = 4.159, 78.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=40 */
%   | | | else return 0.09358337189466417;  // std dev = 3.533, 65.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=34 */
%   | | else if ( follows(D, H), tweets(H, E) )
%   | | | then return -0.09482698961710842;  // std dev = 3.002, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return -0.05245442749427959;  // std dev = 1.610, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( follows(A, I), follows(J, A) )
%   | | then if ( follows(A, J), follows(I, J) )
%   | | | then return 0.05936375459852424;  // std dev = 2.024, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return -0.12003565847261033;  // std dev = 1.791, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.07060185901527195;  // std dev = 2.895, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | | else return 0.1765763207821346;  // std dev = 2.962, 48.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   else if ( follows(A, D), follows(E, A) )
%   | then if ( follows(E, D), follows(A, E) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.08078122580574959;  // std dev = 4.304, 88.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=51 */
%   | | | else return -0.044221251434072115;  // std dev = 3.386, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | else if ( follows(G, E), follows(G, A) )
%   | | | then return -0.07529864749747893;  // std dev = 0.734, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2126230128780283;  // std dev = 2.136, 25.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | else if ( follows(A, H) )
%   | | then if ( follows(H, I), follows(A, I) )
%   | | | then return -0.11902467133050856;  // std dev = 2.914, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.01700890755759531;  // std dev = 3.077, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.018991006944411797;  // std dev = 2.947, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.06746013306321008;  // std dev = 2.316, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.459', 'seconds']
Refined model CLL: -0.3121


******************************************
Best model found
******************************************
Results 

CLL : -0.266896 

AUC ROC : 0.957288 

AUC PR : 0.088982 

Precision : 0.090909 

Recall : 0.785714 

F1 : 0.162963 

Total Learning Time : 25.05 

Total Inference Time : 7.243853569030762 

Total revision time: 39.6143180885315
Best scored revision CLL: -0.3121


Results 

CLL : -0.266896 

AUC ROC : 0.957288 

AUC PR : 0.088982 

Precision : 0.090909 

Recall : 0.785714 

F1 : 0.162963 

Total Learning Time : 39.63107629203797 

Total Inference Time : 7.243853569030762 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 2.127
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048785;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37034405705072876;  // std dev = 7.840, 246.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839105;  // std dev = 7.45e-09, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2717923514791466;  // std dev = 8.211, 271.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360621;  // std dev = 8.69e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24370292225878096;  // std dev = 8.073, 261.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783641;  // std dev = 0.000, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22191532540438966;  // std dev = 7.873, 248.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0926912761892609;  // std dev = 6.14e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16252922051180313;  // std dev = 7.968, 254.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.66e-08, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14581034242251606;  // std dev = 7.806, 244.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109154;  // std dev = 7.52e-08, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07028648143952897;  // std dev = 8.130, 265.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333722;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   else if ( follows(B, I) )
%   | then return -0.4222315556595931;  // std dev = 1.88e-07, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | else return 0.3906716701468586;  // std dev = 4.855, 155.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 5.87e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03483673578424127;  // std dev = 6.922, 269.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06726416044565961;  // std dev = 6.547, 246.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.081', 'seconds']
Parameter learned model CLL:-0.281114 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 129, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.84, 120, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.45e-09, 127, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.211, 145, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.69e-08, 116, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.073, 135, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 132, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 122, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.14e-08, 108, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.968, 128, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.66e-08, 127, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.806, 118, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.52e-08, 133, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.13, 139, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 133, 0], 'false,true': [1.88e-07, 117, 0], 'false,false': [4.855, 29, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.87e-08, 125, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.922, 143, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 131, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.547, 120, 126]}]
{'': [-3.0982968129074136e-17, 0.249851279000598], 'false': [nan, 0.249851279000598], 'true': [nan, -3.0982968129074136e-17], 'true,false': [nan, -3.0982968129074136e-17], 'true,false,false': [nan, -3.0982968129074136e-17]}
{'': [5.419986419429898e-17, 0.2487711223975687], 'false': [nan, 0.24877112239756963], 'true': [nan, 5.419986419429898e-17], 'true,false': [nan, 5.419986419429898e-17]}
{'': [6.508203937457814e-17, 0.24970273483947783], 'false': [nan, 0.24970273483947783], 'true': [nan, 6.508203937457814e-17], 'true,false': [nan, 6.508203937457814e-17], 'true,false,false': [nan, 6.508203937457814e-17]}
{'': [-3.868959025208879e-17, 0.24993496357960487], 'false': [nan, 0.24993496357960543], 'true': [nan, -3.868959025208879e-17], 'true,false': [-3.868959025208879e-17, nan]}
{'': [3.4951465590051226e-17, 0.24998449996900082], 'false': [nan, 0.2499844999690002], 'true': [nan, 3.4951465590051226e-17], 'true,false': [nan, 3.4951465590051226e-17], 'true,false,false': [nan, 3.4951465590051226e-17]}
{'': [3.496765431890257e-17, 0.24973125503896798], 'false': [nan, 0.24973125503896798], 'true': [nan, 3.496765431890257e-17], 'true,false': [3.496765431890257e-17, nan]}
{'': [4.2572461846528557e-17, 0.24939836240654936], 'false': [nan, 0.24939836240654936], 'true': [nan, 4.2572461846528557e-17], 'true,false': [4.2572461846528557e-17, nan]}
{'': [-1.9199345538630526e-17, 0.24864835640138333], 'false': [3.036507417778206e-16, 0.15209157127991657], 'true': [nan, -1.9199345538630526e-17], 'true,false': [nan, -1.9199345538630526e-17], 'true,false,false': [nan, -1.9199345538630526e-17]}
{'': [2.7533531010703882e-17, 0.17812400054824565], 'false': [nan, 0.17812400054824507], 'true': [nan, 2.7533531010703882e-17], 'true,false': [2.7533531010703882e-17, nan]}
{'': [-1.52549728574449e-17, 0.1742233158180332], 'false': [nan, 0.1742233158180332], 'true': [nan, -1.52549728574449e-17], 'true,false': [nan, -1.52549728574449e-17], 'true,false,false': [nan, -1.52549728574449e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 30.066
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.14185106490048766;  // std dev = 7.60e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( follows(D, A), follows(A, E) )
%   | then if ( follows(E, F), tweets(D, G) )
%   | | then if ( follows(F, A), follows(E, A) )
%   | | | then return 0.41955244387144314;  // std dev = 5.298, 114.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=64 */
%   | | | else return 0.5320619785777732;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=31 */
%   | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I), tweets(I, H) )
%   | | | then return 0.1637044906550679;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.21814893509951233;  // std dev = 2.400, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.12544463852839127;  // std dev = 0.000, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.3709346539475848;  // std dev = 5.794, 137.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=79 */
%   | | | else return 0.5937731248949217;  // std dev = 1.223, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( follows(G, A), tweets(G, H) )
%   | | | then return 0.17715824916700745;  // std dev = 2.807, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.4473917824572975;  // std dev = 1.760, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.22105719856518377;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.1772926011331368;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return 0.1195467402759844;  // std dev = 0.458, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1123163781936062;  // std dev = 9.42e-08, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   else if ( follows(A, D), follows(D, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(D, F) )
%   | | | then return 0.2796245498020275;  // std dev = 5.457, 120.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=66 */
%   | | | else return 0.42205549158091493;  // std dev = 1.400, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( follows(G, D), tweets(G, H) )
%   | | | then return 0.23031099164822033;  // std dev = 2.987, 36.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=18 */
%   | | | else return -0.0014714706342112;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(A, J), tweets(J, I) )
%   | | | then return 0.15694060123194437;  // std dev = 3.091, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.25059398426775353;  // std dev = 2.214, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( follows(K, A) )
%   | | | then return -0.0014714706342112;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10878017430174335;  // std dev = 2.456, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1015963294878364;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), tweets(D, F) )
%   | | then if ( tweets(A, G), follows(E, H) )
%   | | | then return 0.20057077205331883;  // std dev = 5.736, 132.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.2967174003300054;  // std dev = 2.707, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | else if ( tweets(E, I), follows(E, D) )
%   | | | then return 0.11369370145915488;  // std dev = 3.163, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return -0.12619459176868264;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( follows(A, J) )
%   | | then if ( tweets(A, K) )
%   | | | then return 0.09032854741635397;  // std dev = 1.854, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.09908113349491811;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else return 0.12387066377426806;  // std dev = 0.481, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926075;  // std dev = 8.16e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else if ( tweets(A, D) )
%   | then if ( follows(E, A), tweets(E, D) )
%   | | then if ( follows(F, E), follows(A, F) )
%   | | | then return 0.18393227035399662;  // std dev = 5.265, 113.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=63 */
%   | | | else return 0.059634044066257254;  // std dev = 3.364, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( follows(G, A) )
%   | | | then return -0.07062217850591579;  // std dev = 1.680, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.08683615223299265;  // std dev = 2.739, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.20865706100868076;  // std dev = 2.444, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.5285597878710614;  // std dev = 0.937, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.11829391212072418;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.194573316699764;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.23e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( tweets(A, D), follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then if ( follows(A, G), follows(G, E) )
%   | | | then return 0.3111122319523921;  // std dev = 3.788, 72.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=52 */
%   | | | else return 0.1505727976409347;  // std dev = 2.444, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( tweets(E, D) )
%   | | | then return 0.06646715253415578;  // std dev = 3.146, 40.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=19 */
%   | | | else return 0.6563794616440023;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return 0.1880579660805663;  // std dev = 2.709, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | | | else return 0.01589197898914565;  // std dev = 2.743, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.4133750017218456;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.22934427900918727;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109158;  // std dev = 5.96e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( follows(D, A), follows(E, D) )
%   | then if ( tweets(E, F), follows(D, E) )
%   | | then if ( follows(A, G), tweets(D, F) )
%   | | | then return 0.08829807845528433;  // std dev = 6.383, 165.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=93 */
%   | | | else return 0.16006366161902905;  // std dev = 2.145, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return -0.08305582982367009;  // std dev = 1.171, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(J, A) )
%   | | | then return -0.041620976297371194;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.11547809300968019;  // std dev = 2.424, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | else if ( tweets(A, K) )
%   | | | then return -0.07233237523820804;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.06822218369483134;  // std dev = 2.121, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333718;  // std dev = 2.98e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( follows(B, D) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then return -0.4860609363588034;  // std dev = 0.378, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.33581514352360453;  // std dev = 0.269, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( follows(A, F), follows(G, A) )
%   | | then if ( tweets(A, H), follows(I, G) )
%   | | | then return 0.3404391882545096;  // std dev = 3.525, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return 0.468404115904535;  // std dev = 1.022, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.5000158624934014;  // std dev = 1.793, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | | else return 0.6592206969159468;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 5.27e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( tweets(A, D), follows(E, A) )
%   | then if ( tweets(E, D), follows(F, E) )
%   | | then if ( follows(F, A), tweets(F, D) )
%   | | | then return 0.08456333816976047;  // std dev = 3.848, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | | | else return -0.004704669497670882;  // std dev = 3.278, 58.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=27 */
%   | | else return 0.4298331055279224;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( tweets(A, I), follows(A, H) )
%   | | | then return -0.14991223801122183;  // std dev = 1.294, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.033223711156373806;  // std dev = 3.086, 55.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=28 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.10750220641970222;  // std dev = 1.213, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.040987371734718184;  // std dev = 1.656, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(A, D) )
%   | | then if ( tweets(F, E), follows(F, D) )
%   | | | then return 0.0355752710441045;  // std dev = 5.139, 154.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=87 */
%   | | | else return -0.06853348207488025;  // std dev = 0.915, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( follows(A, G), follows(G, A) )
%   | | | then return -0.20870997652769102;  // std dev = 0.685, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.029339183254027398;  // std dev = 2.444, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( tweets(A, J), tweets(H, J) )
%   | | | then return 0.19325411285515395;  // std dev = 1.383, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.014256452519839442;  // std dev = 1.240, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( tweets(A, K) )
%   | | | then return -0.005767705166901786;  // std dev = 1.320, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.06945874949218891;  // std dev = 1.598, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.281', 'seconds']
Refined model CLL: -0.293584


******************************************
Best model found
******************************************
Results 

CLL : -0.347606 

AUC ROC : 0.905063 

AUC PR : 0.032258 

Precision : 0.032258 

Recall : 1.0 

F1 : 0.0625 

Total Learning Time : 30.066 

Total Inference Time : 6.945150375366211 

Total revision time: 43.75715271759033
Best scored revision CLL: -0.281114


Results 

CLL : -0.347606 

AUC ROC : 0.905063 

AUC PR : 0.032258 

Precision : 0.032258 

Recall : 1.0 

F1 : 0.0625 

Total Learning Time : 43.8102661781311 

Total Inference Time : 6.945150375366211 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 1.902
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048774;  // std dev = 4.21e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3090159871226306;  // std dev = 9.256, 346.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839105;  // std dev = 7.45e-09, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25320071150801643;  // std dev = 9.372, 357.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1123163781936062;  // std dev = 9.31e-08, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24224379837282495;  // std dev = 9.118, 334.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783666;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17589497407536214;  // std dev = 9.299, 350.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926076;  // std dev = 8.02e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14764925034791027;  // std dev = 9.233, 344.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.41e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11281684340614913;  // std dev = 9.256, 346.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109153;  // std dev = 7.96e-08, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13307771135401117;  // std dev = 8.860, 314.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333731;  // std dev = 0.000, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   else if ( follows(B, I) )
%   | then return -0.3950578260863316;  // std dev = 3.77e-07, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else return 0.29520766063933335;  // std dev = 6.951, 226.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 5.77e-08, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03710322402711863;  // std dev = 8.383, 350.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06941781706618724;  // std dev = 8.044, 315.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.675', 'seconds']
Parameter learned model CLL:-0.31737 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [4.21e-08, 120, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.256, 190, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.45e-09, 115, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.372, 201, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.31e-08, 128, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.118, 178, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 114, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.299, 194, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.02e-08, 134, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.233, 188, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.41e-08, 120, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.256, 190, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.96e-08, 143, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.86, 158, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 149, 0], 'false,true': [3.77e-07, 139, 0], 'false,false': [6.951, 70, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.77e-08, 123, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.383, 194, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 136, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.044, 159, 156]}]
{'': [1.4802973661668754e-17, 0.24758595342310433], 'false': [nan, 0.24758595342310433], 'true': [nan, 1.4802973661668754e-17], 'true,false': [nan, 1.4802973661668754e-17], 'true,false,false': [nan, 1.4802973661668754e-17]}
{'': [5.599385689413833e-17, 0.2460278228938614], 'false': [nan, 0.24602782289386219], 'true': [nan, 5.599385689413833e-17], 'true,false': [nan, 5.599385689413833e-17]}
{'': [6.765421556309548e-17, 0.2489153429667622], 'false': [nan, 0.2489153429667622], 'true': [nan, 6.765421556309548e-17], 'true,false': [nan, 6.765421556309548e-17], 'true,false,false': [nan, 6.765421556309548e-17]}
{'': [-3.895519384649672e-17, 0.247053061224491], 'false': [nan, 0.24705306122449003], 'true': [nan, -3.895519384649672e-17], 'true,false': [-3.895519384649672e-17, nan]}
{'': [4.8054429424073937e-17, 0.24783666846944175], 'false': [nan, 0.24783666846944194], 'true': [nan, 4.8054429424073937e-17], 'true,false': [nan, 4.8054429424073937e-17], 'true,false,false': [nan, 4.8054429424073937e-17]}
{'': [3.4231876592608995e-17, 0.24758595342310025], 'false': [nan, 0.24758595342310025], 'true': [nan, 3.4231876592608995e-17], 'true,false': [3.4231876592608995e-17, nan]}
{'': [4.425364503750624e-17, 0.24998985760071504], 'false': [nan, 0.24998985760071504], 'true': [nan, 4.425364503750624e-17], 'true,false': [4.425364503750624e-17, nan]}
{'': [-8.941393486914012e-18, 0.24472884218427457], 'false': [1.0223636485756837e-15, 0.21379904456104462], 'true': [nan, -8.941393486914012e-18], 'true,false': [nan, -8.941393486914012e-18], 'true,false,false': [nan, -8.941393486914012e-18]}
{'': [2.7078610356711135e-17, 0.20076807233039445], 'false': [nan, 0.20076807233039465], 'true': [nan, 2.7078610356711135e-17], 'true,false': [2.7078610356711135e-17, nan]}
{'': [-1.3877787807814457e-17, 0.20541412150790536], 'false': [nan, 0.20541412150790536], 'true': [nan, -1.3877787807814457e-17], 'true,false': [nan, -1.3877787807814457e-17], 'true,false,false': [nan, -1.3877787807814457e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 19.459
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.14185106490048763;  // std dev = 8.16e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, A), tweets(A, F) )
%   | | then if ( tweets(E, F), follows(A, E) )
%   | | | then return 0.4115469933519404;  // std dev = 5.045, 103.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=57 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( tweets(A, G), tweets(E, G) )
%   | | | then return 0.3140312880406876;  // std dev = 4.107, 68.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=31 */
%   | | | else return 0.3926316937202009;  // std dev = 3.799, 58.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | else if ( follows(H, A), tweets(A, I) )
%   | | then if ( follows(A, J), tweets(H, I) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2993254056877476;  // std dev = 2.895, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | else if ( follows(A, K) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.11740819435877163;  // std dev = 3.220, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1254446385283913;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( follows(D, A), follows(A, D) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(D, F), follows(F, A) )
%   | | | then return 0.41813709735392135;  // std dev = 4.229, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return 0.2988486841141124;  // std dev = 3.306, 44.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=22 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.1488057604984959;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.37477909602315734;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.3506703764730842;  // std dev = 2.541, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.23082036118892485;  // std dev = 3.873, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.253617034342119;  // std dev = 3.294, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | | | else return 0.15844217601243338;  // std dev = 3.197, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1123163781936062;  // std dev = 9.54e-08, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( follows(A, D) )
%   | then if ( follows(E, A), tweets(A, F) )
%   | | then if ( follows(G, E), tweets(G, F) )
%   | | | then return 0.24713708217835803;  // std dev = 5.990, 144.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=73 */
%   | | | else return 0.1110565602988386;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( follows(D, H), follows(A, H) )
%   | | | then return 0.34828900298773485;  // std dev = 3.460, 50.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | | | else return 0.2651438764277472;  // std dev = 3.355, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | else if ( tweets(A, I) )
%   | | then if ( follows(J, A) )
%   | | | then return 0.12679009515029843;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.07114872207822076;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( follows(K, A) )
%   | | | then return 0.14007485633008324;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.1711487220782205;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1015963294878364;  // std dev = 0.000, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, A), follows(D, A) )
%   | | then if ( follows(E, D) )
%   | | | then return 0.2772749806587539;  // std dev = 4.190, 74.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=45 */
%   | | | else return 0.3599450443688305;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( follows(F, A), follows(F, D) )
%   | | | then return 0.18456738530031508;  // std dev = 3.791, 58.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=28 */
%   | | | else return 0.23474007461694638;  // std dev = 4.516, 82.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=43 */
%   | else if ( follows(G, A), tweets(A, H) )
%   | | then if ( tweets(G, H) )
%   | | | then return 0.14945405506209206;  // std dev = 3.014, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.09027799467701376;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.014730160938783697;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.10174601651558608;  // std dev = 3.216, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926075;  // std dev = 8.16e-08, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else if ( follows(A, D) )
%   | then if ( follows(D, E), follows(A, E) )
%   | | then if ( follows(E, F), follows(D, F) )
%   | | | then return 0.1423086389172913;  // std dev = 6.450, 168.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=87 */
%   | | | else return 0.2991215040003681;  // std dev = 1.772, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | else if ( tweets(A, G), follows(D, A) )
%   | | | then return -0.025597945588723466;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.13942895771335767;  // std dev = 3.778, 58.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=26 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.08425595689091157;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.06100137846895099;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.21002713397103337;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1275170132266929;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.91e-08, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( follows(A, D), tweets(A, E) )
%   | then if ( follows(F, A), follows(F, D) )
%   | | then if ( follows(G, F), follows(D, G) )
%   | | | then return 0.12097395852161781;  // std dev = 5.362, 117.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=62 */
%   | | | else return 0.3654185797185047;  // std dev = 1.193, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( follows(D, H), tweets(D, E) )
%   | | | then return 0.06867885621047427;  // std dev = 3.790, 59.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=25 */
%   | | | else return 0.20627914655471113;  // std dev = 1.563, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( follows(I, A), tweets(I, J) )
%   | | then if ( follows(I, K), follows(K, A) )
%   | | | then return 0.163417889780614;  // std dev = 3.202, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | | else return -0.02893772488558127;  // std dev = 2.568, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( follows(L, A) )
%   | | | then return -0.21054906637475432;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.057206317349479584;  // std dev = 4.058, 77.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=27 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109153;  // std dev = 7.81e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   else if ( follows(A, D) )
%   | then if ( follows(D, E), follows(A, E) )
%   | | then if ( follows(E, F), follows(F, E) )
%   | | | then return 0.0811459001335802;  // std dev = 6.620, 175.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=91 */
%   | | | else return 0.277347996717696;  // std dev = 1.178, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( tweets(A, G), follows(H, A) )
%   | | | then return -0.0031678186190278773;  // std dev = 2.606, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.10456733950932677;  // std dev = 3.413, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | else if ( follows(I, A), tweets(A, J) )
%   | | then return -0.013776434379744242;  // std dev = 0.464, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.17435145966079543;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.05548348373469414;  // std dev = 2.617, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333718;  // std dev = 2.98e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F) )
%   | | | then return -0.46329283351664685;  // std dev = 0.306, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.3694630685229546;  // std dev = 0.216, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else return -0.3013088731846197;  // std dev = 0.207, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(H, A), follows(G, A) )
%   | | | then return 0.215768423455846;  // std dev = 3.947, 73.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=51 */
%   | | | else return 0.3400171778635094;  // std dev = 4.144, 94.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=71 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.6049451516946099;  // std dev = 1.337, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return 0.42658558114316575;  // std dev = 1.891, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 5.87e-08, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, D) )
%   | | then if ( follows(F, A), follows(D, F) )
%   | | | then return 0.036597064425425825;  // std dev = 5.311, 137.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=71 */
%   | | | else return 0.08641788214357074;  // std dev = 4.356, 92.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=49 */
%   | | else return -0.08992788446816917;  // std dev = 1.015, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( tweets(A, G), follows(A, H) )
%   | | then return 0.5117231668142296;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(I, A) )
%   | | | then return 0.027191471343000283;  // std dev = 2.741, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.0943666149540488;  // std dev = 2.494, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(E, F) )
%   | | | then return 0.023173468827516926;  // std dev = 6.066, 181.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=92 */
%   | | | else return -0.19437569040832248;  // std dev = 1.479, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( tweets(A, G), tweets(E, G) )
%   | | | then return 0.14547599562006366;  // std dev = 2.371, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return -0.014241140060625768;  // std dev = 2.107, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I) )
%   | | | then return -0.005763895246950285;  // std dev = 1.108, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.06648191486028687;  // std dev = 3.081, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.20732108039051542;  // std dev = 1.028, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.029861109153224732;  // std dev = 2.259, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.965', 'seconds']
Refined model CLL: -0.318196


******************************************
Best model found
******************************************
Results 

CLL : -0.261775 

AUC ROC : 0.960938 

AUC PR : 0.090909 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.459 

Total Inference Time : 5.494863033294678 

Total revision time: 32.10731953239441
Best scored revision CLL: -0.31737


Results 

CLL : -0.261775 

AUC ROC : 0.960938 

AUC PR : 0.090909 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 32.160432992935185 

Total Inference Time : 5.494863033294678 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1580
Target train pos examples: 126
Target train neg examples: 16128

Target test facts examples: 1562
Target test pos examples: 156
Target test neg examples: 24648

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 2.023
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048802;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.36621345122854154;  // std dev = 7.873, 248.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=126 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839105;  // std dev = 7.21e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3074906183918141;  // std dev = 7.937, 252.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=126 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360617;  // std dev = 9.88e-08, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22009932799780138;  // std dev = 8.211, 271.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=126 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.10159632948783628;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17545653399024666;  // std dev = 8.224, 272.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=126 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926083;  // std dev = 7.45e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.195628811507104;  // std dev = 7.772, 242.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=126 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 6.50e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17377788872344013;  // std dev = 7.587, 232.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=126 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109155;  // std dev = 6.91e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08155066652714346;  // std dev = 7.999, 256.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=126 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333711;  // std dev = 0.000, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( follows(B, I) )
%   | then return -0.43050705045511434;  // std dev = 2.15e-07, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else return 0.4151305334375024;  // std dev = 4.410, 149.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=126 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 5.58e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036942999130724234;  // std dev = 6.727, 263.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=126 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047019991252265164;  // std dev = 6.622, 248.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=126 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.193', 'seconds']
Parameter learned model CLL:-0.283809 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 143, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.873, 122, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.21e-09, 123, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.937, 126, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [9.88e-08, 131, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.211, 145, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [3.33e-08, 101, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.224, 146, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [7.45e-08, 119, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.772, 116, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.5e-08, 121, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.587, 106, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.91e-08, 120, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.999, 130, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 116, 0], 'false,true': [2.15e-07, 118, 0], 'false,false': [4.41, 23, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.58e-08, 119, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.727, 137, 126]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 129, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.622, 122, 126]}]
{'': [-9.006004955001269e-17, 0.24993496357960765], 'false': [nan, 0.24993496357960765], 'true': [nan, -9.006004955001269e-17], 'true,false': [nan, -9.006004955001269e-17], 'true,false,false': [nan, -9.006004955001269e-17]}
{'': [5.235198002297486e-17, 0.2500000000000025], 'false': [nan, 0.2500000000000004], 'true': [nan, 5.235198002297486e-17], 'true,false': [nan, 5.235198002297486e-17]}
{'': [7.457986730306395e-17, 0.24877112239757065], 'false': [nan, 0.24877112239757065], 'true': [nan, 7.457986730306395e-17], 'true,false': [nan, 7.457986730306395e-17], 'true,false,false': [nan, 7.457986730306395e-17]}
{'': [1.0992307174506501e-17, 0.24864835640138522], 'false': [nan, 0.24864835640138505], 'true': [nan, 1.0992307174506501e-17], 'true,false': [1.0992307174506501e-17, nan]}
{'': [4.664802624475448e-17, 0.2495731165903966], 'false': [nan, 0.24957311659039738], 'true': [nan, 4.664802624475448e-17], 'true,false': [nan, 4.664802624475448e-17], 'true,false,false': [nan, 4.664802624475448e-17]}
{'': [3.4866508211368553e-17, 0.2481420927467296], 'false': [nan, 0.2481420927467296], 'true': [nan, 3.4866508211368553e-17], 'true,false': [3.4866508211368553e-17, nan]}
{'': [3.9782991715734776e-17, 0.2499389648437497], 'false': [nan, 0.2499389648437497], 'true': [nan, 3.9782991715734776e-17], 'true,false': [3.9782991715734776e-17, nan]}
{'': [-7.656710514656252e-18, 0.2492109582123481], 'false': [3.9140065952886874e-16, 0.13053466060087437], 'true': [nan, -7.656710514656252e-18], 'true,false': [nan, -7.656710514656252e-18], 'true,false,false': [nan, -7.656710514656252e-18]}
{'': [2.6122894697062506e-17, 0.1720742657469893], 'false': [nan, 0.17207426574698992], 'true': [nan, 2.6122894697062506e-17], 'true,false': [2.6122894697062506e-17, nan]}
{'': [-1.5491484064537068e-17, 0.17679239546955672], 'false': [nan, 0.17679239546955672], 'true': [nan, -1.5491484064537068e-17], 'true,false': [nan, -1.5491484064537068e-17], 'true,false,false': [nan, -1.5491484064537068e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 19.714
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.14185106490048785;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( follows(D, A) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(A, E), follows(E, D) )
%   | | | then return 0.36141690895572187;  // std dev = 6.185, 153.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=77 */
%   | | | else return 0.29564893509951234;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | else if ( tweets(A, F) )
%   | | | then return 0.2914822684328457;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5581489350995124;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.12544463852839108;  // std dev = 7.45e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( follows(A, D), follows(E, A) )
%   | then if ( follows(E, D), tweets(E, F) )
%   | | then if ( tweets(A, G), tweets(D, G) )
%   | | | then return 0.4354590248452854;  // std dev = 5.005, 107.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=67 */
%   | | | else return 0.3115331215164934;  // std dev = 3.083, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | else if ( follows(D, E) )
%   | | | then return 0.09822973329554492;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2682534708599832;  // std dev = 2.225, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | else if ( follows(A, H) )
%   | | then if ( tweets(H, I), tweets(A, I) )
%   | | | then return 0.1649957889159803;  // std dev = 2.604, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.2490337516459293;  // std dev = 2.334, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0.05413554849340754;  // std dev = 0.424, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.11231637819360622;  // std dev = 9.54e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( tweets(E, F), follows(E, D) )
%   | | then if ( follows(A, E), tweets(A, F) )
%   | | | then return 0.3725812583369354;  // std dev = 4.799, 100.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=64 */
%   | | | else return 0.2744654384258187;  // std dev = 4.444, 79.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=41 */
%   | | else if ( follows(A, E) )
%   | | | then return 0.10057800561896456;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05844931968940059;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( tweets(A, G) )
%   | | then if ( follows(H, A) )
%   | | | then return 0.1678669857285258;  // std dev = 2.396, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.11524733270588099;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.03997183248419069;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1015963294878364;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( follows(D, A), follows(A, D) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( tweets(D, F), tweets(E, G) )
%   | | | then return 0.3516600301630997;  // std dev = 4.242, 84.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=58 */
%   | | | else return 0.16655047420722033;  // std dev = 1.765, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( follows(H, A), tweets(H, I) )
%   | | | then return 0.159345755475052;  // std dev = 3.733, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | | else return -0.0265515291639193;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( tweets(A, J) )
%   | | then if ( follows(A, K), follows(K, L) )
%   | | | then return 0.12384251483566136;  // std dev = 2.559, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.09045430472279736;  // std dev = 2.983, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( follows(A, M), follows(M, N) )
%   | | | then return 0.27833005744921435;  // std dev = 1.259, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.13503027177338384;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.09269127618926087;  // std dev = 6.58e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( follows(D, A), follows(E, D) )
%   | then if ( follows(A, E), tweets(A, F) )
%   | | then if ( follows(E, A), follows(D, E) )
%   | | | then return 0.19361136061796907;  // std dev = 4.409, 83.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=51 */
%   | | | else return 0.2748574857551912;  // std dev = 2.275, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | else if ( follows(A, E), follows(E, A) )
%   | | | then return 0.2685628202651344;  // std dev = 1.802, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.09050992982985025;  // std dev = 4.247, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | else if ( tweets(A, G) )
%   | | then if ( follows(H, A) )
%   | | | then return -0.08743388518355037;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1516585707258047;  // std dev = 2.504, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return -0.01974432146483794;  // std dev = 1.358, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.06788014358124529;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.05e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( tweets(A, D) )
%   | then if ( follows(E, A), follows(A, E) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.08240024796936142;  // std dev = 4.964, 100.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=55 */
%   | | | else return 0.1214256028803214;  // std dev = 2.861, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0.01689961620569763;  // std dev = 2.681, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return 0.08161923851255393;  // std dev = 2.915, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then if ( follows(A, J) )
%   | | | then return 0.20860409909640845;  // std dev = 2.673, 30.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=18 */
%   | | | else return 0.05731127042557297;  // std dev = 1.739, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else return 0.09610211896592577;  // std dev = 0.484, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109157;  // std dev = 6.32e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( tweets(A, D), follows(A, E) )
%   | then if ( follows(F, A), follows(E, F) )
%   | | then if ( follows(F, E), follows(A, F) )
%   | | | then return 0.0785509695279142;  // std dev = 5.030, 103.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=59 */
%   | | | else return -0.07164082219265484;  // std dev = 2.133, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( follows(G, A), follows(G, E) )
%   | | | then return 0.3186610536892743;  // std dev = 1.402, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.10586973510653111;  // std dev = 3.001, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return 0.10288141585839464;  // std dev = 2.652, 29.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=16 */
%   | | | else return -0.014926428461616185;  // std dev = 2.154, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.04343005152389487;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.017160045518592425;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333714;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(A, F), follows(F, G) )
%   | | | then return -0.5053410503603326;  // std dev = 0.169, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return -0.378587822603854;  // std dev = 0.175, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.2925853000735801;  // std dev = 0.151, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.39369862176385345;  // std dev = 3.218, 103.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=91 */
%   | | | else return 0.5129291457617862;  // std dev = 1.376, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.516792633720833;  // std dev = 1.556, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.5549068852698232;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420264;  // std dev = 5.48e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( tweets(A, D), follows(E, A) )
%   | then if ( follows(E, F), follows(F, A) )
%   | | then if ( tweets(E, D), tweets(F, D) )
%   | | | then return 0.0037269908099129326;  // std dev = 4.329, 112.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=53 */
%   | | | else return 0.07904659426714566;  // std dev = 1.734, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | else if ( follows(A, G), follows(E, G) )
%   | | | then return 0.11042588456069122;  // std dev = 2.170, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return -0.014703184813616784;  // std dev = 1.416, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( follows(H, A), follows(A, H) )
%   | | then if ( follows(I, H), tweets(I, J) )
%   | | | then return 0.0894773927538289;  // std dev = 2.262, 33.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=18 */
%   | | | else return -0.07253536847260529;  // std dev = 0.790, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.13603149550616012;  // std dev = 1.856, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.07955626177111534;  // std dev = 2.011, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( follows(A, D) )
%   | then if ( follows(D, E) )
%   | | then if ( follows(A, E), follows(E, D) )
%   | | | then return 0.05191062978635254;  // std dev = 4.815, 137.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=81 */
%   | | | else return 0.003665205794207742;  // std dev = 3.240, 62.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=26 */
%   | | else if ( tweets(A, F) )
%   | | | then return -0.07760435719966594;  // std dev = 1.585, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.08771618566169383;  // std dev = 1.499, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.08331562216366312;  // std dev = 0.400, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.050', 'seconds']
Refined model CLL: -0.281437


******************************************
Best model found
******************************************
Results 

CLL : -0.338682 

AUC ROC : 0.893775 

AUC PR : 0.030951 

Precision : 0.032258 

Recall : 0.762821 

F1 : 0.061899 

Total Learning Time : 19.714 

Total Inference Time : 5.029728412628174 

Total revision time: 31.329460632324217
Best scored revision CLL: -0.281437


Results 

CLL : -0.338682 

AUC ROC : 0.893775 

AUC PR : 0.030951 

Precision : 0.032258 

Recall : 0.762821 

F1 : 0.061899 

Total Learning Time : 31.35477067184448 

Total Inference Time : 5.029728412628174 


 Starting fold 2 of 2 folds 

Start transfer learning experiment

Target train facts examples: 1562
Target train pos examples: 156
Target train neg examples: 24648

Target test facts examples: 1580
Target test pos examples: 126
Target test neg examples: 16128

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 2.026
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.14185106490048802;  // std dev = 0.000, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2843784432962306;  // std dev = 9.461, 366.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=156 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.12544463852839105;  // std dev = 7.21e-09, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( follows(B, G), tweets(H, G) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28695869571090693;  // std dev = 9.118, 334.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=156 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.11231637819360618;  // std dev = 8.82e-08, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23106246385185705;  // std dev = 9.200, 341.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=156 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.1015963294878364;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1962581683617319;  // std dev = 9.130, 335.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=156 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.09269127618926087;  // std dev = 6.58e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( follows(B, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1398292469855454;  // std dev = 9.266, 347.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=156 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E) )
%   | | then return -0.0851847513883968;  // std dev = 7.15e-08, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09535436682882877;  // std dev = 9.382, 358.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=156 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.07877675473109155;  // std dev = 6.66e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(A, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08486772797170841;  // std dev = 9.288, 349.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=156 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.07324622576333734;  // std dev = 0.000, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   else if ( follows(B, I) )
%   | then return -0.38194734743352593;  // std dev = 1.88e-07, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else return 0.31138598589980865;  // std dev = 6.917, 225.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=156 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(B, E) )
%   | | then return -0.06842697784420264;  // std dev = 5.37e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( follows(B, F), tweets(G, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06742021241619371;  // std dev = 8.246, 329.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=156 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then if ( tweets(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( follows(A, E), tweets(F, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( follows(B, G), tweets(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( follows(A, I), tweets(J, I) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.009502022639754684;  // std dev = 8.561, 369.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=156 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.481', 'seconds']
Parameter learned model CLL:-0.302124 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 143, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.461, 210, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E), tweets(F, E)', 'false': 'follows(B, G), tweets(H, G)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false': [7.21e-09, 123, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.118, 178, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [8.82e-08, 114, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.2, 185, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 130, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.13, 179, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [6.58e-08, 111, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.266, 191, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [7.15e-08, 142, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.382, 202, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(A, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [6.66e-08, 116, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.288, 193, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(B, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 158, 0], 'false,true': [1.88e-07, 120, 0], 'false,false': [6.917, 69, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(B, E)', 'false': 'follows(B, F), tweets(G, F)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [5.37e-08, 117, 0], 'true,false,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.246, 173, 156]}]
['accounttype(A, B)', {'': 'follows(A, C), follows(B, C)', 'true': 'tweets(D, C)', 'true,false': 'follows(A, E), tweets(F, E)', 'true,false,false': 'follows(B, G), tweets(H, G)', 'false': 'follows(A, I), tweets(J, I)'}, {'true,true': [0.0, 0, 0], 'true,false,true': [0.0, 0, 0], 'true,false,false,true': [0.0, 0, 0], 'true,false,false,false': [0.0, 123, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.561, 213, 156]}]
{'': [-9.006004955001269e-17, 0.2445579145391052], 'false': [nan, 0.2445579145391052], 'true': [nan, -9.006004955001269e-17], 'true,false': [nan, -9.006004955001269e-17], 'true,false,false': [nan, -9.006004955001269e-17]}
{'': [5.235198002297486e-17, 0.24891534296676193], 'false': [nan, 0.24891534296676138], 'true': [nan, 5.235198002297486e-17], 'true,false': [nan, 5.235198002297486e-17]}
{'': [6.817158923136926e-17, 0.24819188001479306], 'false': [nan, 0.24819188001479306], 'true': [nan, 6.817158923136926e-17], 'true,false': [nan, 6.817158923136926e-17], 'true,false,false': [nan, 6.817158923136926e-17]}
{'': [-3.586874387250506e-17, 0.24882156382267895], 'false': [nan, 0.24882156382267764], 'true': [nan, -3.586874387250506e-17], 'true,false': [-3.586874387250506e-17, nan]}
{'': [3.900783600034334e-17, 0.24745658547118773], 'false': [nan, 0.247456585471187], 'true': [nan, 3.900783600034334e-17], 'true,false': [nan, 3.900783600034334e-17], 'true,false,false': [nan, 3.900783600034334e-17]}
{'': [3.596497122025155e-17, 0.24587247589026406], 'false': [nan, 0.24587247589026406], 'true': [nan, 3.596497122025155e-17], 'true,false': [3.596497122025155e-17, nan]}
{'': [3.828355257328126e-17, 0.24719008875132328], 'false': [nan, 0.24719008875132328], 'true': [nan, 3.828355257328126e-17], 'true,false': [3.828355257328126e-17, nan]}
{'': [-3.091760321740942e-17, 0.2477126654064267], 'false': [2.9605947323337506e-16, 0.2126222222222216], 'true': [nan, -3.091760321740942e-17], 'true,false': [nan, -3.091760321740942e-17], 'true,false,false': [nan, -3.091760321740942e-17]}
{'': [2.4671622769447922e-17, 0.20668101130080074], 'false': [nan, 0.20668101130080097], 'true': [nan, 2.4671622769447922e-17], 'true,false': [2.4671622769447922e-17, nan]}
{'': [-1.7149786559250386e-17, 0.19859690455391368], 'false': [nan, 0.19859690455391368], 'true': [nan, -1.7149786559250386e-17], 'true,false': [nan, -1.7149786559250386e-17], 'true,false,false': [nan, -1.7149786559250386e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
1;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
2;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
3;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
4;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
5;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
6;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
7;false;follows(B, I).;true;true
8;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true
9;;accounttype(A, B) :- follows(A, C), follows(B, C).;true;true


Refining candidate
***************************
Model training time 20.572
WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.14185106490048796;  // std dev = 0.000, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   else if ( follows(A, D) )
%   | then if ( follows(D, E), follows(E, A) )
%   | | then if ( tweets(A, F), follows(E, D) )
%   | | | then return 0.4126043806440676;  // std dev = 4.995, 101.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=56 */
%   | | | else return 0.3581489350995123;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | else if ( tweets(A, G), follows(H, A) )
%   | | | then return 0.25814893509951237;  // std dev = 3.098, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.3294133029156038;  // std dev = 4.656, 87.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=41 */
%   | else if ( follows(I, A) )
%   | | then if ( tweets(A, J) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.1914822684328457;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.12544463852839113;  // std dev = 7.30e-08, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(D, F), follows(F, E) )
%   | | | then return 0.35811296798371384;  // std dev = 5.327, 115.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=64 */
%   | | | else return 0.8030311406660458;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(G, A), follows(G, D) )
%   | | | then return 0.17190163717102167;  // std dev = 2.784, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.30924519918374227;  // std dev = 4.661, 87.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=43 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.0998099391121352;  // std dev = 3.325, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.20046571833082927;  // std dev = 1.597, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( tweets(A, J) )
%   | | | then return 0.2870289733424276;  // std dev = 1.801, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.204862333479596;  // std dev = 2.368, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.11231637819360615;  // std dev = 1.05e-07, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   else if ( follows(A, D), follows(D, E) )
%   | then if ( follows(A, E), follows(E, D) )
%   | | then if ( follows(D, F), follows(E, F) )
%   | | | then return 0.26751338376239675;  // std dev = 5.913, 140.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=74 */
%   | | | else return 0.4825466158343238;  // std dev = 1.178, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.23236831835345945;  // std dev = 3.891, 61.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=28 */
%   | | | else return 0.15320715968619633;  // std dev = 3.013, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.09616952029158572;  // std dev = 3.400, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.04407909874199468;  // std dev = 2.102, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.07115843678270863;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.2470749660124485;  // std dev = 2.228, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.1015963294878364;  // std dev = 0.000, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   else if ( follows(A, D) )
%   | then if ( follows(E, D), follows(E, A) )
%   | | then if ( follows(D, A), follows(A, E) )
%   | | | then return 0.3111782874151613;  // std dev = 4.338, 80.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=50 */
%   | | | else return 0.18313825275308426;  // std dev = 4.033, 63.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=31 */
%   | | else if ( follows(A, F), follows(D, F) )
%   | | | then return 0.11300116558708433;  // std dev = 3.172, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.21822522140386733;  // std dev = 3.923, 62.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=30 */
%   | else if ( follows(G, A) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.12577747066650422;  // std dev = 3.089, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.14380546558011914;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.01730263821176953;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.07889262455010654;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0926912761892609;  // std dev = 6.14e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( follows(A, D), follows(E, A) )
%   | then if ( follows(D, A), follows(D, E) )
%   | | then if ( tweets(D, F), tweets(E, F) )
%   | | | then return 0.11365809276535994;  // std dev = 4.912, 97.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=48 */
%   | | | else return 0.6107797355947594;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(A, E), follows(D, E) )
%   | | | then return 0.38473218086044136;  // std dev = 2.093, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.14340516692846944;  // std dev = 3.511, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | else if ( follows(G, A), tweets(A, H) )
%   | | then return 0.1659177427347227;  // std dev = 0.485, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.12775920988029066;  // std dev = 4.532, 83.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=37 */
%   | | | else return 0.05871528260966346;  // std dev = 3.140, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.0851847513883968;  // std dev = 6.14e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( tweets(A, D), follows(E, A) )
%   | then if ( follows(F, E), tweets(E, D) )
%   | | then if ( follows(F, A), follows(A, E) )
%   | | | then return 0.10063420456725047;  // std dev = 4.585, 85.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=44 */
%   | | | else return 0.031112100652292682;  // std dev = 5.153, 116.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=42 */
%   | | else if ( follows(A, G), follows(E, G) )
%   | | | then return 0.27055352702884883;  // std dev = 1.059, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.04089799390933535;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(H, A), tweets(H, I) )
%   | | then if ( follows(H, J), follows(J, A) )
%   | | | then return 0.2793078824394153;  // std dev = 1.682, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | else return 0.15892515078276429;  // std dev = 2.089, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.13377478911451035;  // std dev = 3.661, 54.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | | | else return 0.08628146016397427;  // std dev = 3.788, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07877675473109153;  // std dev = 7.88e-08, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   else if ( tweets(A, D) )
%   | then if ( follows(A, E) )
%   | | then if ( follows(E, F), tweets(E, D) )
%   | | | then return 0.05854432017945603;  // std dev = 6.921, 193.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=92 */
%   | | | else return -0.02022257773516804;  // std dev = 1.868, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.09381232094327911;  // std dev = 3.037, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.05183576911987918;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( follows(A, H), follows(I, A) )
%   | | then if ( follows(H, I), follows(A, I) )
%   | | | then return 0.19277467591191613;  // std dev = 1.827, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | else return -0.006214032808263163;  // std dev = 1.789, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.24182584577820387;  // std dev = 1.223, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.13813078800691542;  // std dev = 3.475, 49.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=23 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.07324622576333714;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   else if ( follows(B, D) )
%   | then if ( follows(A, E), follows(E, F) )
%   | | then if ( follows(F, A), follows(F, E) )
%   | | | then return -0.48305620691190465;  // std dev = 0.233, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.3785376566313727;  // std dev = 0.164, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else return -0.2896886375118831;  // std dev = 0.236, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( follows(A, G), follows(G, H) )
%   | | then if ( follows(A, H) )
%   | | | then return 0.30465874507150154;  // std dev = 4.863, 128.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=96 */
%   | | | else return 0.23241043843173892;  // std dev = 3.151, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | else if ( tweets(A, I), follows(A, J) )
%   | | | then return 0.6891267091061827;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.36287862093354567;  // std dev = 3.244, 46.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=30 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06842697784420265;  // std dev = 5.16e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( follows(D, A), follows(A, D) )
%   | then if ( follows(E, A), follows(E, D) )
%   | | then if ( tweets(A, F) )
%   | | | then return 0.12071259248057041;  // std dev = 3.767, 73.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=45 */
%   | | | else return -0.039615367987677085;  // std dev = 1.682, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( tweets(A, G) )
%   | | | then return -0.007679518716631434;  // std dev = 3.267, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   | | | else return 0.0882713115879663;  // std dev = 1.535, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(A, I), follows(I, J) )
%   | | | then return 0.1056013530661228;  // std dev = 3.171, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   | | | else return 0.05946601785139003;  // std dev = 3.380, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | else if ( follows(A, K), follows(K, L) )
%   | | | then return 0.12592233710659156;  // std dev = 2.412, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | | | else return 0.06502385913746124;  // std dev = 2.373, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(B, C) )
%   then return -0.06419184008202626;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   else if ( follows(A, D), follows(D, A) )
%   | then if ( tweets(A, E) )
%   | | then if ( follows(A, F), follows(D, F) )
%   | | | then return -0.02558827432614846;  // std dev = 5.167, 127.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=61 */
%   | | | else return 0.06056095933078917;  // std dev = 1.762, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( follows(A, G), follows(G, D) )
%   | | | then return 0.04702954937447561;  // std dev = 1.771, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.14663188948977363;  // std dev = 1.130, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( tweets(A, J), tweets(I, J) )
%   | | | then return 0.1453761790080869;  // std dev = 2.697, 40.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=23 */
%   | | | else return 0.04130717120477491;  // std dev = 2.710, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.03165089277522897;  // std dev = 3.410, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | | | else return -0.03958420678955588;  // std dev = 2.599, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.062', 'seconds']
Refined model CLL: -0.312419


******************************************
Best model found
******************************************
Results 

CLL : -0.249445 

AUC ROC : 0.960938 

AUC PR : 0.090909 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 20.572 

Total Inference Time : 7.160329580307007 

Total revision time: 35.13448829460144
Best scored revision CLL: -0.302124


Results 

CLL : -0.249445 

AUC ROC : 0.960938 

AUC PR : 0.090909 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 35.1597983341217 

Total Inference Time : 7.160329580307007 

