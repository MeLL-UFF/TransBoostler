Starting experiment 11_yeast_cora 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.305
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.409', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624], 'false,false': [nan, 0.22704315886134624], 'false,false,false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 1.944
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12652593672242915;  // std dev = 15.336, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10401476808796972;  // std dev = 15.326, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08439354244043881;  // std dev = 15.319, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06775538596707589;  // std dev = 15.313, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05394787980192825;  // std dev = 15.308, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04267819228751566;  // std dev = 15.305, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0335954842281106;  // std dev = 15.302, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.488', 'seconds']
Refined model CLL: -0.63515


******************************************
Best model found
******************************************
Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.944 

Total Inference Time : 0.8541381359100342 

Total revision time: 4.96868936920166
Best scored revision CLL: -0.63515


Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.282801794052124 

Total Inference Time : 0.8541381359100342 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.487
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.354', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616], 'false,false': [nan, 0.24255027541238616], 'false,false,false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.48
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31223261518464496;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24598733811406873;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18881592307537776;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14285207520728085;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10737679226292425;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08055083333185684;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06044009840752514;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045401659419747366;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.488', 'seconds']
Refined model CLL: -0.680195


******************************************
Best model found
******************************************
Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 2.48 

Total Inference Time : 0.8713159561157227 

Total revision time: 5.716702215194703
Best scored revision CLL: -0.680195


Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 7.0308146400451665 

Total Inference Time : 0.8713159561157227 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.221
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19613613696105475;  // std dev = 19.612, 1,719.000 (wgt'ed) examples reached here.  /* #neg=1,138 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16474754346925682;  // std dev = 19.698, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13749624141584466;  // std dev = 19.742, 1,765.000 (wgt'ed) examples reached here.  /* #neg=1,184 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12252905352456192;  // std dev = 19.635, 1,727.000 (wgt'ed) examples reached here.  /* #neg=1,146 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1045504100856743;  // std dev = 19.586, 1,710.000 (wgt'ed) examples reached here.  /* #neg=1,129 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08090980214415709;  // std dev = 19.650, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0642892227908155;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046120159464207354;  // std dev = 19.742, 1,765.000 (wgt'ed) examples reached here.  /* #neg=1,184 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04410578974499323;  // std dev = 19.632, 1,726.000 (wgt'ed) examples reached here.  /* #neg=1,145 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03528588752174533;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.235', 'seconds']
Parameter learned model CLL:-0.536531 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.612, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.698, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.742, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.635, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.586, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.65, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.664, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.742, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.632, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.626, 1, 581]}]
{'': [nan, 0.2237518532393348], 'false': [nan, 0.2237518532393348], 'false,false': [nan, 0.2237518532393348]}
{'': [nan, 0.221839744413287], 'false': [nan, 0.221839744413287], 'false,false': [nan, 0.221839744413287]}
{'': [nan, 0.22082000497555013], 'false': [nan, 0.22082000497555013], 'false,false': [nan, 0.22082000497555013], 'false,false,false': [nan, 0.22082000497555013]}
{'': [nan, 0.22324208750360947], 'false': [nan, 0.22324208750360947], 'false,false': [nan, 0.22324208750360947], 'false,false,false': [nan, 0.22324208750360947]}
{'': [nan, 0.2243250914811436], 'false': [nan, 0.2243250914811436], 'false,false': [nan, 0.2243250914811436], 'false,false,false': [nan, 0.2243250914811436]}
{'': [nan, 0.22292341150681155], 'false': [nan, 0.22292341150681155], 'false,false': [nan, 0.22292341150681155], 'false,false,false': [nan, 0.22292341150681155]}
{'': [nan, 0.2226046999687602], 'false': [nan, 0.2226046999687602], 'false,false': [nan, 0.2226046999687602], 'false,false,false': [nan, 0.2226046999687602]}
{'': [nan, 0.2208200049755502], 'false': [nan, 0.2208200049755502], 'false,false': [nan, 0.2208200049755502], 'false,false,false': [nan, 0.2208200049755502]}
{'': [nan, 0.2233058169714358], 'false': [nan, 0.2233058169714358], 'false,false': [nan, 0.2233058169714358], 'false,false,false': [nan, 0.2233058169714358]}
{'': [nan, 0.22343326909309147], 'false': [nan, 0.22343326909309147], 'false,false': [nan, 0.22343326909309147], 'false,false,false': [nan, 0.22343326909309147]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 3.345
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2157604836559378;  // std dev = 18.711, 1,524.000 (wgt'ed) examples reached here.  /* #neg=979 #pos=545 */
%   | | | else return 0.01744097049774153;  // std dev = 5.501, 226.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1867130709999399;  // std dev = 18.721, 1,527.000 (wgt'ed) examples reached here.  /* #neg=982 #pos=545 */
%   | | | else return 0.009204056032348147;  // std dev = 5.521, 235.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14354160662469337;  // std dev = 19.571, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11386008055331572;  // std dev = 19.654, 1,770.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10695624882263471;  // std dev = 19.455, 1,704.000 (wgt'ed) examples reached here.  /* #neg=1,123 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07540651691103292;  // std dev = 19.636, 1,762.000 (wgt'ed) examples reached here.  /* #neg=1,181 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0651568364977182;  // std dev = 19.567, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.058292577491739564;  // std dev = 19.471, 1,710.000 (wgt'ed) examples reached here.  /* #neg=1,129 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037685671635660466;  // std dev = 19.605, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03284225146691448;  // std dev = 19.552, 1,739.000 (wgt'ed) examples reached here.  /* #neg=1,158 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.413', 'seconds']
Refined model CLL: -0.531019


******************************************
Best model found
******************************************
Results 

CLL : -0.736294 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 3.345 

Total Inference Time : 1.0924689769744873 

Total revision time: 7.710299745559693
Best scored revision CLL: -0.531019


Results 

CLL : -0.736294 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.024412170410157 

Total Inference Time : 1.0924689769744873 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.808
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.367', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252], 'false,false': [nan, 0.24218017894951252], 'false,false,false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.885
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1963981106473961;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16143876924868558;  // std dev = 20.900, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13000938537489512;  // std dev = 20.895, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1030294839726375;  // std dev = 20.892, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0806690797169404;  // std dev = 20.889, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06260699479187333;  // std dev = 20.887, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04828140544982347;  // std dev = 20.886, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037064615187311974;  // std dev = 20.885, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.614', 'seconds']
Refined model CLL: -0.675019


******************************************
Best model found
******************************************
Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.885 

Total Inference Time : 0.9501876831054688 

Total revision time: 6.517255228042602
Best scored revision CLL: -0.675019


Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.831367652893066 

Total Inference Time : 0.9501876831054688 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.396
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.359', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204], 'false,false': [nan, 0.24943310657597204], 'false,false,false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 1.907
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2689386008123074;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21526475852431487;  // std dev = 15.792, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16819919463199048;  // std dev = 15.763, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1293632571612073;  // std dev = 15.745, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09855689517239717;  // std dev = 15.734, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07469128339951044;  // std dev = 15.726, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056448668800626225;  // std dev = 15.722, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04260464455022483;  // std dev = 15.719, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.507', 'seconds']
Refined model CLL: -0.665329


******************************************
Best model found
******************************************
Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 1.907 

Total Inference Time : 0.8429274559020996 

Total revision time: 4.993512418746948
Best scored revision CLL: -0.665329


Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 6.307624843597412 

Total Inference Time : 0.8429274559020996 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.474
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.525', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.405
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.03251801758106232;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143803;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10265455565249537;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606135003;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06691645801138996;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05332021644336949;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042221841524022;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03327292019030571;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.422', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.405 

Total Inference Time : 0.9963903427124023 

Total revision time: 7.731886438369751
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.857127717971802 

Total Inference Time : 0.9963903427124023 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.856
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.521', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.827
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122326151846449;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18876884484312267;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794552;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1073917882995127;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774592;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06047241174363268;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04543457140096613;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.779', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 4.827 

Total Inference Time : 0.9807209968566895 

Total revision time: 8.60478201675415
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.730023296356201 

Total Inference Time : 0.9807209968566895 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.385
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1860270389369791;  // std dev = 19.761, 1,772.000 (wgt'ed) examples reached here.  /* #neg=1,191 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.163701182429546;  // std dev = 19.734, 1,762.000 (wgt'ed) examples reached here.  /* #neg=1,181 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1443325474448056;  // std dev = 19.667, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12521374588872783;  // std dev = 19.606, 1,717.000 (wgt'ed) examples reached here.  /* #neg=1,136 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10149976312028956;  // std dev = 19.635, 1,727.000 (wgt'ed) examples reached here.  /* #neg=1,146 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08912029184234406;  // std dev = 19.541, 1,695.000 (wgt'ed) examples reached here.  /* #neg=1,114 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0637861656668588;  // std dev = 19.661, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04181814389320867;  // std dev = 19.796, 1,785.000 (wgt'ed) examples reached here.  /* #neg=1,204 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03526255028970303;  // std dev = 19.767, 1,774.000 (wgt'ed) examples reached here.  /* #neg=1,193 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03221778492822052;  // std dev = 19.703, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.372', 'seconds']
Parameter learned model CLL:-0.535205 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.761, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.734, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.667, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.606, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.635, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.541, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.661, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.796, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.767, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.703, 1, 581]}]
{'': [nan, 0.22037405286140122], 'false': [nan, 0.22037405286140122], 'false,false': [nan, 0.22037405286140122]}
{'': [nan, 0.22101116907446292], 'false': [nan, 0.22101116907446292], 'false,false': [nan, 0.22101116907446292]}
{'': [nan, 0.2225409548427465], 'false': [nan, 0.2225409548427465], 'false,false': [nan, 0.2225409548427465], 'false,false,false': [nan, 0.2225409548427465]}
{'': [0.22387926551740517, nan], 'true': [0.22387926551740517, nan]}
{'': [nan, 0.22324208750358657], 'false': [nan, 0.22324208750358657], 'false,false': [nan, 0.22324208750358657], 'false,false,false': [nan, 0.22324208750358657]}
{'': [nan, 0.2252796268741251], 'false': [nan, 0.2252796268741251], 'false,false': [nan, 0.2252796268741251], 'false,false,false': [nan, 0.2252796268741251]}
{'': [nan, 0.22266844432882704], 'false': [nan, 0.22266844432882704], 'false,false': [nan, 0.22266844432882704], 'false,false,false': [nan, 0.22266844432882704]}
{'': [nan, 0.2195463283352696], 'false': [nan, 0.2195463283352696], 'false,false': [nan, 0.2195463283352696], 'false,false,false': [nan, 0.2195463283352696]}
{'': [nan, 0.22024666706490953], 'false': [nan, 0.22024666706490953], 'false,false': [nan, 0.22024666706490953], 'false,false,false': [nan, 0.22024666706490953]}
{'': [nan, 0.22171225645392753], 'false': [nan, 0.22171225645392753], 'false,false': [nan, 0.22171225645392753], 'false,false,false': [nan, 0.22171225645392753]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 20.622
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21505790693971694;  // std dev = 18.721, 1,527.000 (wgt'ed) examples reached here.  /* #neg=982 #pos=545 */
%   | | | else return 0.018148935099511435;  // std dev = 5.499, 225.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18845593213540124;  // std dev = 18.697, 1,520.000 (wgt'ed) examples reached here.  /* #neg=975 #pos=545 */
%   | | | else return 0.0323958726965336;  // std dev = 5.445, 204.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14327993921051463;  // std dev = 19.573, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.07415067630858246;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.1414282631737982;  // std dev = 18.349, 1,455.000 (wgt'ed) examples reached here.  /* #neg=926 #pos=529 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.05600919565539533;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return -0.0044408809291856255;  // std dev = 5.336, 209.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838550540790506;  // std dev = 19.523, 1,735.000 (wgt'ed) examples reached here.  /* #neg=1,154 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08265852786552956;  // std dev = 19.495, 1,717.000 (wgt'ed) examples reached here.  /* #neg=1,136 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06144678722807876;  // std dev = 19.554, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04755712941224023;  // std dev = 19.590, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03781731151097904;  // std dev = 19.574, 1,760.000 (wgt'ed) examples reached here.  /* #neg=1,179 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03434222937296377;  // std dev = 19.513, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '44.108', 'seconds']
Refined model CLL: -0.529787


******************************************
Best model found
******************************************
Results 

CLL : -0.73459 

AUC ROC : 0.545565 

AUC PR : 0.489779 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 20.622 

Total Inference Time : 2.6646018028259277 

Total revision time: 26.745226890563963
Best scored revision CLL: -0.529787


Results 

CLL : -0.73459 

AUC ROC : 0.545565 

AUC PR : 0.489779 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 26.870468170166014 

Total Inference Time : 2.6646018028259277 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.042
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.563', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 7.266
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19639811064739618;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.01144473145544197;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12958594458247083;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1027136468285809;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0804467787082872;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.062459424216123854;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048189937349344965;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037013214258987466;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.071', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.266 

Total Inference Time : 1.225050449371338 

Total revision time: 11.471875341415405
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.597116621017456 

Total Inference Time : 1.225050449371338 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.478
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.490', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.89
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26893860081230736;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16589547003288002;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12793041349863346;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733935;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0743969929602348;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05645537874363844;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04278955725564156;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.707', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.89 

Total Inference Time : 1.0197782516479492 

Total revision time: 8.213864057540892
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.339105337142943 

Total Inference Time : 1.0197782516479492 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.46
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.615', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.343
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.03251801758106232;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143803;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10265455565249544;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606134992;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06691645801138996;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053320216443369484;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042221841524022044;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03327292019030588;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.540', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.343 

Total Inference Time : 0.9288485050201416 

Total revision time: 7.609118249893188
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.688840892791748 

Total Inference Time : 0.9288485050201416 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.667
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.493', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.82
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.312232615184645;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1887688448431225;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794552;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10739178829951271;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774594;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06047241174363258;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045434571400966295;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.569', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 4.82 

Total Inference Time : 1.0098812580108643 

Total revision time: 8.38363028717041
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.46335293006897 

Total Inference Time : 1.0098812580108643 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.394
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18976993966571737;  // std dev = 19.706, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16735137080309348;  // std dev = 19.672, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.146887239077434;  // std dev = 19.612, 1,719.000 (wgt'ed) examples reached here.  /* #neg=1,138 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.11811086715236631;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09905125684688897;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07267687469817911;  // std dev = 19.783, 1,780.000 (wgt'ed) examples reached here.  /* #neg=1,199 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06675124690753784;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05676938539347636;  // std dev = 19.615, 1,720.000 (wgt'ed) examples reached here.  /* #neg=1,139 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.043594153585124557;  // std dev = 19.638, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029694329757394503;  // std dev = 19.709, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.332', 'seconds']
Parameter learned model CLL:-0.535972 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.706, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.672, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.612, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.686, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.664, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.783, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.664, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.615, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.638, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.709, 1, 581]}]
{'': [nan, 0.22164851389669327], 'false': [nan, 0.22164851389669327], 'false,false': [nan, 0.22164851389669327]}
{'': [nan, 0.22241346280883356], 'false': [nan, 0.22241346280883356], 'false,false': [nan, 0.22241346280883356]}
{'': [nan, 0.22375185323936053], 'false': [nan, 0.22375185323936053], 'false,false': [nan, 0.22375185323936053], 'false,false,false': [nan, 0.22375185323936053]}
{'': [0.22209472828631, nan], 'true': [0.22209472828631, nan]}
{'': [nan, 0.22260469996872698], 'false': [nan, 0.22260469996872698], 'false,false': [nan, 0.22260469996872698], 'false,false,false': [nan, 0.22260469996872698]}
{'': [nan, 0.21986460042923156], 'false': [nan, 0.21986460042923156], 'false,false': [nan, 0.21986460042923156], 'false,false,false': [nan, 0.21986460042923156]}
{'': [nan, 0.22260469996873186], 'false': [nan, 0.22260469996873186], 'false,false': [nan, 0.22260469996873186], 'false,false,false': [nan, 0.22260469996873186]}
{'': [nan, 0.2236881422390317], 'false': [nan, 0.2236881422390317], 'false,false': [nan, 0.2236881422390317], 'false,false,false': [nan, 0.2236881422390317]}
{'': [nan, 0.22317835594564794], 'false': [nan, 0.22317835594564794], 'false,false': [nan, 0.22317835594564794], 'false,false,false': [nan, 0.22317835594564794]}
{'': [nan, 0.22158477244942518], 'false': [nan, 0.22158477244942518], 'false,false': [nan, 0.22158477244942518], 'false,false,false': [nan, 0.22158477244942518]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 19.536
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21764761583829365;  // std dev = 18.684, 1,516.000 (wgt'ed) examples reached here.  /* #neg=971 #pos=545 */
%   | | | else return 0.0167392434695555;  // std dev = 5.504, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19118306860094725;  // std dev = 18.652, 1,507.000 (wgt'ed) examples reached here.  /* #neg=962 #pos=545 */
%   | | | else return 0.0146893448365534;  // std dev = 5.504, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14081251811813264;  // std dev = 19.590, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.11778715032398167;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.13359057463804455;  // std dev = 18.454, 1,485.000 (wgt'ed) examples reached here.  /* #neg=956 #pos=529 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.053026490566843755;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 9.109420113657367E-4;  // std dev = 5.328, 206.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09034967320452474;  // std dev = 19.659, 1,780.000 (wgt'ed) examples reached here.  /* #neg=1,199 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08316322151986741;  // std dev = 19.507, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06456463700883028;  // std dev = 19.545, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04752390501789817;  // std dev = 19.608, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03758317093797388;  // std dev = 19.609, 1,769.000 (wgt'ed) examples reached here.  /* #neg=1,188 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032596371453766475;  // std dev = 19.577, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.841', 'seconds']
Refined model CLL: -0.528595


******************************************
Best model found
******************************************
Results 

CLL : -0.736122 

AUC ROC : 0.545565 

AUC PR : 0.489779 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.536 

Total Inference Time : 2.527092456817627 

Total revision time: 25.50622480392456
Best scored revision CLL: -0.528595


Results 

CLL : -0.736122 

AUC ROC : 0.545565 

AUC PR : 0.489779 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.58594744682312 

Total Inference Time : 2.527092456817627 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.005
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.524', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 7.275
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1963981106473961;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.011444731455441975;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12958594458247089;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10271364682858104;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08044677870828737;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06245942421612378;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04818993734934484;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03701321425898742;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.228', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.275 

Total Inference Time : 1.0660030841827393 

Total revision time: 11.287909536361695
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.367632179260255 

Total Inference Time : 1.0660030841827393 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.495
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.555', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.533
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26893860081230747;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16589547003288022;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12793041349863346;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733937;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07439699296023505;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056455378743638505;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042789557255641736;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.721', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.533 

Total Inference Time : 1.070753812789917 

Total revision time: 7.955024126052857
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.034746768951416 

Total Inference Time : 1.070753812789917 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.307
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.534', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624], 'false,false': [nan, 0.22704315886134624], 'false,false,false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.041
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1265259367224292;  // std dev = 15.336, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1040147680879697;  // std dev = 15.326, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08439354244043881;  // std dev = 15.319, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06775538596707589;  // std dev = 15.313, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05394787980192822;  // std dev = 15.308, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0426781922875156;  // std dev = 15.305, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03359548422811058;  // std dev = 15.302, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.542', 'seconds']
Refined model CLL: -0.63515


******************************************
Best model found
******************************************
Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.041 

Total Inference Time : 0.8551177978515625 

Total revision time: 5.029938886642456
Best scored revision CLL: -0.63515


Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.064404914855957 

Total Inference Time : 0.8551177978515625 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.473
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.385', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616], 'false,false': [nan, 0.24255027541238616], 'false,false,false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.429
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122326151846452;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24598733811406873;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18881592307537776;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14285207520728088;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10737679226292425;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08055083333185686;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06044009840752508;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045401659419747255;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.490', 'seconds']
Refined model CLL: -0.680195


******************************************
Best model found
******************************************
Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 2.429 

Total Inference Time : 0.883549690246582 

Total revision time: 5.65920191001892
Best scored revision CLL: -0.680195


Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 5.693667938232421 

Total Inference Time : 0.883549690246582 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.165
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19052879779973617;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1709323787084128;  // std dev = 19.618, 1,721.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1446498181420167;  // std dev = 19.635, 1,727.000 (wgt'ed) examples reached here.  /* #neg=1,146 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11623654739854024;  // std dev = 19.709, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09824170197990076;  // std dev = 19.675, 1,741.000 (wgt'ed) examples reached here.  /* #neg=1,160 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0795246600152991;  // std dev = 19.684, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05854463861420068;  // std dev = 19.767, 1,774.000 (wgt'ed) examples reached here.  /* #neg=1,193 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05735774775173238;  // std dev = 19.612, 1,719.000 (wgt'ed) examples reached here.  /* #neg=1,138 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03277297224689953;  // std dev = 19.802, 1,787.000 (wgt'ed) examples reached here.  /* #neg=1,206 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027592714114706804;  // std dev = 19.777, 1,778.000 (wgt'ed) examples reached here.  /* #neg=1,197 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.270', 'seconds']
Parameter learned model CLL:-0.534556 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.618, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.635, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.709, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.675, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.684, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.767, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.612, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.802, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.777, 1, 581]}]
{'': [nan, 0.22190348957159142], 'false': [nan, 0.22190348957159142], 'false,false': [nan, 0.22190348957159142]}
{'': [nan, 0.22362442818503445], 'false': [nan, 0.22362442818503445], 'false,false': [nan, 0.22362442818503445]}
{'': [nan, 0.2232420875035892], 'false': [nan, 0.2232420875035892], 'false,false': [nan, 0.2232420875035892], 'false,false,false': [nan, 0.2232420875035892]}
{'': [nan, 0.22158477244941543], 'false': [nan, 0.22158477244941543], 'false,false': [nan, 0.22158477244941543], 'false,false,false': [nan, 0.22158477244941543]}
{'': [nan, 0.2223497161573903], 'false': [nan, 0.2223497161573903], 'false,false': [nan, 0.2223497161573903], 'false,false,false': [nan, 0.2223497161573903]}
{'': [nan, 0.22215847519149434], 'false': [nan, 0.22215847519149434], 'false,false': [nan, 0.22215847519149434], 'false,false,false': [nan, 0.22215847519149434]}
{'': [nan, 0.2202466670649362], 'false': [nan, 0.2202466670649362], 'false,false': [nan, 0.2202466670649362], 'false,false,false': [nan, 0.2202466670649362]}
{'': [nan, 0.22375185323934035], 'false': [nan, 0.22375185323934035], 'false,false': [nan, 0.22375185323934035], 'false,false,false': [nan, 0.22375185323934035]}
{'': [nan, 0.21941905241768156], 'false': [nan, 0.21941905241768156], 'false,false': [nan, 0.21941905241768156], 'false,false,false': [nan, 0.21941905241768156]}
{'': [nan, 0.21999193998386443], 'false': [nan, 0.21999193998386443], 'false,false': [nan, 0.21999193998386443], 'false,false,false': [nan, 0.21999193998386443]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 3.091
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21836043542997663;  // std dev = 18.673, 1,513.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=545 */
%   | | | else return 0.01744097049774153;  // std dev = 5.501, 226.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18657945212892907;  // std dev = 18.718, 1,526.000 (wgt'ed) examples reached here.  /* #neg=981 #pos=545 */
%   | | | else return 0.029089489747569162;  // std dev = 5.456, 208.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14824420872804328;  // std dev = 19.491, 1,707.000 (wgt'ed) examples reached here.  /* #neg=1,126 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12502071872396062;  // std dev = 19.474, 1,702.000 (wgt'ed) examples reached here.  /* #neg=1,121 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0896009258893688;  // std dev = 19.673, 1,771.000 (wgt'ed) examples reached here.  /* #neg=1,190 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08732510506773035;  // std dev = 19.455, 1,697.000 (wgt'ed) examples reached here.  /* #neg=1,116 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06565741924611414;  // std dev = 19.513, 1,725.000 (wgt'ed) examples reached here.  /* #neg=1,144 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04824408652425958;  // std dev = 19.584, 1,743.000 (wgt'ed) examples reached here.  /* #neg=1,162 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0431133753019408;  // std dev = 19.502, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03179997472335776;  // std dev = 19.544, 1,730.000 (wgt'ed) examples reached here.  /* #neg=1,149 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.414', 'seconds']
Refined model CLL: -0.53217


******************************************
Best model found
******************************************
Results 

CLL : -0.735107 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 3.091 

Total Inference Time : 1.0847673416137695 

Total revision time: 7.354416805267334
Best scored revision CLL: -0.53217


Results 

CLL : -0.735107 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.388882833480835 

Total Inference Time : 1.0847673416137695 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.686
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.352', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252], 'false,false': [nan, 0.24218017894951252], 'false,false,false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.923
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19639811064739618;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1614387692486855;  // std dev = 20.900, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13000938537489484;  // std dev = 20.895, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1030294839726376;  // std dev = 20.892, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08066907971694026;  // std dev = 20.889, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0626069947918734;  // std dev = 20.887, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048281405449823636;  // std dev = 20.886, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037064615187312126;  // std dev = 20.885, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.560', 'seconds']
Refined model CLL: -0.675019


******************************************
Best model found
******************************************
Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.923 

Total Inference Time : 0.9682471752166748 

Total revision time: 6.465866121292114
Best scored revision CLL: -0.675019


Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.500332149505615 

Total Inference Time : 0.9682471752166748 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.335
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.375', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204], 'false,false': [nan, 0.24943310657597204], 'false,false,false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 1.982
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26893860081230725;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21526475852431473;  // std dev = 15.792, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16819919463199046;  // std dev = 15.763, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12936325716120736;  // std dev = 15.745, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09855689517239748;  // std dev = 15.734, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07469128339951064;  // std dev = 15.726, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056448668800626475;  // std dev = 15.722, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042604644550224884;  // std dev = 15.719, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.640', 'seconds']
Refined model CLL: -0.665329


******************************************
Best model found
******************************************
Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 1.982 

Total Inference Time : 0.7603559494018555 

Total revision time: 4.9147039337158205
Best scored revision CLL: -0.665329


Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.9491699619293215 

Total Inference Time : 0.7603559494018555 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.595
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.575', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.474
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741278;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.032518017581062326;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143817;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10265455565249543;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606134985;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0669164580113899;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05332021644336956;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04222184152402204;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033272920190305824;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.412', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.474 

Total Inference Time : 1.0387725830078125 

Total revision time: 7.965034240722656
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 8.088913911819457 

Total Inference Time : 1.0387725830078125 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.614
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.451', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 5.157
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31223261518464523;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18876884484312234;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794524;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10739178829951239;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774551;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06047241174363292;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04543457140096614;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.604', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 5.157 

Total Inference Time : 0.9650201797485352 

Total revision time: 8.640882822036744
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.764762493133546 

Total Inference Time : 0.9650201797485352 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.282
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18751401446458668;  // std dev = 19.739, 1,764.000 (wgt'ed) examples reached here.  /* #neg=1,183 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1751193490344559;  // std dev = 19.562, 1,702.000 (wgt'ed) examples reached here.  /* #neg=1,121 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14099781814376433;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.11779334704328395;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09707143575041612;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0873412223822088;  // std dev = 19.574, 1,706.000 (wgt'ed) examples reached here.  /* #neg=1,125 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06058666217182355;  // std dev = 19.720, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053638395737714895;  // std dev = 19.644, 1,730.000 (wgt'ed) examples reached here.  /* #neg=1,149 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03524346587449571;  // std dev = 19.753, 1,769.000 (wgt'ed) examples reached here.  /* #neg=1,188 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03031856919715647;  // std dev = 19.717, 1,756.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.323', 'seconds']
Parameter learned model CLL:-0.535468 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.739, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.562, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.692, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.574, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.72, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.644, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.753, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.717, 1, 581]}]
{'': [nan, 0.22088372385989977], 'false': [nan, 0.22088372385989977], 'false,false': [nan, 0.22088372385989977]}
{'': [nan, 0.22483433466677455], 'false': [nan, 0.22483433466677455], 'false,false': [nan, 0.22483433466677455]}
{'': [nan, 0.22209472828631338], 'false': [nan, 0.22209472828631338], 'false,false': [nan, 0.22209472828631338], 'false,false,false': [nan, 0.22209472828631338]}
{'': [0.2219672353521866, nan], 'true': [0.2219672353521866, nan]}
{'': [nan, 0.22190348957162603], 'false': [nan, 0.22190348957162603], 'false,false': [nan, 0.22190348957162603], 'false,false,false': [nan, 0.22190348957162603]}
{'': [nan, 0.22457975368640398], 'false': [nan, 0.22457975368640398], 'false,false': [nan, 0.22457975368640398], 'false,false,false': [nan, 0.22457975368640398]}
{'': [nan, 0.22132982016159297], 'false': [nan, 0.22132982016159297], 'false,false': [nan, 0.22132982016159297], 'false,false,false': [nan, 0.22132982016159297]}
{'': [nan, 0.22305088709946294], 'false': [nan, 0.22305088709946294], 'false,false': [nan, 0.22305088709946294], 'false,false,false': [nan, 0.22305088709946294]}
{'': [nan, 0.22056515691223258], 'false': [nan, 0.22056515691223258], 'false,false': [nan, 0.22056515691223258], 'false,false,false': [nan, 0.22056515691223258]}
{'': [nan, 0.221393555969526], 'false': [nan, 0.221393555969526], 'false,false': [nan, 0.221393555969526], 'false,false,false': [nan, 0.221393555969526]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 6.507
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2178849086968671;  // std dev = 18.680, 1,515.000 (wgt'ed) examples reached here.  /* #neg=970 #pos=545 */
%   | | | else return 0.019583912677986766;  // std dev = 5.494, 223.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18641282978229534;  // std dev = 18.721, 1,527.000 (wgt'ed) examples reached here.  /* #neg=982 #pos=545 */
%   | | | else return 0.017183214238460382;  // std dev = 5.494, 223.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13597159098101885;  // std dev = 19.671, 1,774.000 (wgt'ed) examples reached here.  /* #neg=1,193 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13776841748993127;  // std dev = 0.480, 1,519.000 (wgt'ed) examples reached here.  /* #neg=974 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.017612298202440983;  // std dev = 3.838, 99.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=18 */
%   | | | else return -0.011663510734384852;  // std dev = 3.906, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09675919044647525;  // std dev = 19.569, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08437414490452468;  // std dev = 19.488, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0632171408893256;  // std dev = 19.564, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05436185335767855;  // std dev = 19.498, 1,729.000 (wgt'ed) examples reached here.  /* #neg=1,148 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04393324990699829;  // std dev = 19.485, 1,726.000 (wgt'ed) examples reached here.  /* #neg=1,145 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03595693117961954;  // std dev = 19.472, 1,717.000 (wgt'ed) examples reached here.  /* #neg=1,136 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.077', 'seconds']
Refined model CLL: -0.530595


******************************************
Best model found
******************************************
Results 

CLL : -0.733164 

AUC ROC : 0.548439 

AUC PR : 0.491278 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.507 

Total Inference Time : 1.1711761951446533 

Total revision time: 11.064153636932373
Best scored revision CLL: -0.530595


Results 

CLL : -0.733164 

AUC ROC : 0.548439 

AUC PR : 0.491278 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.188033308029175 

Total Inference Time : 1.1711761951446533 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.121
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.503', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 7.74
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19639811064739618;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.01144473145544197;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12958594458247072;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10271364682858079;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08044677870828709;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06245942421612371;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048189937349344944;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037013214258987646;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.043', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.74 

Total Inference Time : 1.0889825820922852 

Total revision time: 11.914089618682862
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.037969289779664 

Total Inference Time : 1.0889825820922852 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.476
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.486', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.785
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26893860081230747;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16589547003288013;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12793041349863346;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733944;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07439699296023487;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056455378743638734;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042789557255641604;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.064', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.785 

Total Inference Time : 1.0016255378723145 

Total revision time: 8.135069213867187
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.258948884963988 

Total Inference Time : 1.0016255378723145 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.494
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.491', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.435
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.03251801758106232;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143803;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10265455565249522;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606134975;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0669164580113899;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0533202164433694;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042221841524021995;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03327292019030581;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.359', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.435 

Total Inference Time : 0.9800593852996826 

Total revision time: 7.760507205963134
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.838928560256957 

Total Inference Time : 0.9800593852996826 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.659
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.483', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 5.043
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122326151846452;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1887688448431223;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794533;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10739178829951235;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774572;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06047241174363287;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04543457140096603;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.785', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 5.043 

Total Inference Time : 0.9972147941589355 

Total revision time: 8.594669439315796
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.673090793609619 

Total Inference Time : 0.9972147941589355 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.343
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18770083526967182;  // std dev = 19.737, 1,763.000 (wgt'ed) examples reached here.  /* #neg=1,182 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17132477240698965;  // std dev = 19.618, 1,721.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14561245687873206;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12521730399877382;  // std dev = 19.580, 1,708.000 (wgt'ed) examples reached here.  /* #neg=1,127 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0982345946851339;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07753010247949581;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05931725218212838;  // std dev = 19.739, 1,764.000 (wgt'ed) examples reached here.  /* #neg=1,183 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04972226877559177;  // std dev = 19.706, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050094917931927926;  // std dev = 19.550, 1,698.000 (wgt'ed) examples reached here.  /* #neg=1,117 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03703042287904781;  // std dev = 19.589, 1,711.000 (wgt'ed) examples reached here.  /* #neg=1,130 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.440', 'seconds']
Parameter learned model CLL:-0.537107 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.737, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.618, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.626, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.58, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.655, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.692, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.739, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.706, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.55, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.589, 1, 581]}]
{'': [nan, 0.22094744526438387], 'false': [nan, 0.22094744526438387], 'false,false': [nan, 0.22094744526438387]}
{'': [nan, 0.2236244281850521], 'false': [nan, 0.2236244281850521], 'false,false': [nan, 0.2236244281850521]}
{'': [nan, 0.22343326909307543], 'false': [nan, 0.22343326909307543], 'false,false': [nan, 0.22343326909307543], 'false,false,false': [nan, 0.22343326909307543]}
{'': [0.22445243214189284, nan], 'true': [0.22445243214189284, nan]}
{'': [nan, 0.2227959302317898], 'false': [nan, 0.2227959302317898], 'false,false': [nan, 0.2227959302317898], 'false,false,false': [nan, 0.2227959302317898]}
{'': [nan, 0.2219672353521896], 'false': [nan, 0.2219672353521896], 'false,false': [nan, 0.2219672353521896], 'false,false,false': [nan, 0.2219672353521896]}
{'': [nan, 0.22088372385990984], 'false': [nan, 0.22088372385990984], 'false,false': [nan, 0.22088372385990984], 'false,false,false': [nan, 0.22088372385990984]}
{'': [nan, 0.22164851389671583], 'false': [nan, 0.22164851389671583], 'false,false': [nan, 0.22164851389671583], 'false,false,false': [nan, 0.22164851389671583]}
{'': [nan, 0.22508882479354306], 'false': [nan, 0.22508882479354306], 'false,false': [nan, 0.22508882479354306], 'false,false,false': [nan, 0.22508882479354306]}
{'': [nan, 0.2242614143502137], 'false': [nan, 0.2242614143502137], 'false,false': [nan, 0.2242614143502137], 'false,false,false': [nan, 0.2242614143502137]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 19.069
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21812251502024713;  // std dev = 18.677, 1,514.000 (wgt'ed) examples reached here.  /* #neg=969 #pos=545 */
%   | | | else return 0.027163019606553637;  // std dev = 5.470, 213.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1920783684114081;  // std dev = 18.638, 1,503.000 (wgt'ed) examples reached here.  /* #neg=958 #pos=545 */
%   | | | else return 0.012015362778981773;  // std dev = 5.508, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1422397720887603;  // std dev = 19.572, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.11021041943250987;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.1321490807264602;  // std dev = 18.468, 1,489.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=529 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.011070044339967597;  // std dev = 3.850, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return -0.022543401038183582;  // std dev = 3.928, 126.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09246755287575971;  // std dev = 19.615, 1,771.000 (wgt'ed) examples reached here.  /* #neg=1,190 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07551819303014952;  // std dev = 19.617, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.059525476502072745;  // std dev = 19.634, 1,776.000 (wgt'ed) examples reached here.  /* #neg=1,195 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050903374399804996;  // std dev = 19.578, 1,762.000 (wgt'ed) examples reached here.  /* #neg=1,181 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04252047849316593;  // std dev = 19.555, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032382500370484596;  // std dev = 19.571, 1,756.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.550', 'seconds']
Refined model CLL: -0.528558


******************************************
Best model found
******************************************
Results 

CLL : -0.736193 

AUC ROC : 0.546215 

AUC PR : 0.489953 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.069 

Total Inference Time : 2.5305020809173584 

Total revision time: 24.996784746170043
Best scored revision CLL: -0.528558


Results 

CLL : -0.736193 

AUC ROC : 0.546215 

AUC PR : 0.489953 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.075206100463866 

Total Inference Time : 2.5305020809173584 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.022
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.563', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 7.314
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1963981106473961;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.011444731455441975;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12958594458247077;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1027136468285809;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0804467787082874;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06245942421612389;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04818993734934487;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03701321425898737;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.028', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.314 

Total Inference Time : 1.1165344715118408 

Total revision time: 11.392387662887574
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.470809017181397 

Total Inference Time : 1.1165344715118408 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.534
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.533', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.709
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26893860081230736;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16589547003288035;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12793041349863335;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733931;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0743969929602348;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05645537874363857;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042789557255641424;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.891', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.709 

Total Inference Time : 1.0393073558807373 

Total revision time: 8.154539554595946
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.232960908889769 

Total Inference Time : 1.0393073558807373 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.337
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.451', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624], 'false,false': [nan, 0.22704315886134624], 'false,false,false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 1.859
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741278;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12652593672242915;  // std dev = 15.336, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10401476808796947;  // std dev = 15.326, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08439354244043881;  // std dev = 15.319, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06775538596707585;  // std dev = 15.313, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05394787980192822;  // std dev = 15.308, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04267819228751563;  // std dev = 15.305, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03359548422811062;  // std dev = 15.302, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.548', 'seconds']
Refined model CLL: -0.63515


******************************************
Best model found
******************************************
Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.859 

Total Inference Time : 0.8751838207244873 

Total revision time: 4.86406960105896
Best scored revision CLL: -0.63515


Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.899264713287353 

Total Inference Time : 0.8751838207244873 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.424
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.413', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616], 'false,false': [nan, 0.24255027541238616], 'false,false,false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.247
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122326151846451;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24598733811406873;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18881592307537767;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14285207520728085;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10737679226292425;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08055083333185682;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06044009840752503;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045401659419747366;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.472', 'seconds']
Refined model CLL: -0.680195


******************************************
Best model found
******************************************
Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 2.247 

Total Inference Time : 0.8633673191070557 

Total revision time: 5.429213996887206
Best scored revision CLL: -0.680195


Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 5.4644091091156 

Total Inference Time : 0.8633673191070557 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.198
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19205698107651883;  // std dev = 19.672, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17388806910624724;  // std dev = 19.571, 1,705.000 (wgt'ed) examples reached here.  /* #neg=1,124 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13633822344399268;  // std dev = 19.748, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12109459738028482;  // std dev = 19.647, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10630577237696089;  // std dev = 19.553, 1,699.000 (wgt'ed) examples reached here.  /* #neg=1,118 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07552267709733408;  // std dev = 19.717, 1,756.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06626057519685416;  // std dev = 19.638, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05203436957054625;  // std dev = 19.652, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.038476010575616226;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03253335932485052;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.245', 'seconds']
Parameter learned model CLL:-0.536362 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.672, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.571, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.748, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.647, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.553, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.717, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.638, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.652, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.664, 1, 581]}]
{'': [nan, 0.22241346280881108], 'false': [nan, 0.22241346280881108], 'false,false': [nan, 0.22241346280881108]}
{'': [nan, 0.2246434069194403], 'false': [nan, 0.2246434069194403], 'false,false': [nan, 0.2246434069194403]}
{'': [nan, 0.22069257522284386], 'false': [nan, 0.22069257522284386], 'false,false': [nan, 0.22069257522284386], 'false,false,false': [nan, 0.22069257522284386]}
{'': [nan, 0.2229871500797212], 'false': [nan, 0.2229871500797212], 'false,false': [nan, 0.2229871500797212], 'false,false,false': [nan, 0.2229871500797212]}
{'': [nan, 0.22502521131255257], 'false': [nan, 0.22502521131255257], 'false,false': [nan, 0.22502521131255257], 'false,false,false': [nan, 0.22502521131255257]}
{'': [nan, 0.22139355596951396], 'false': [nan, 0.22139355596951396], 'false,false': [nan, 0.22139355596951396], 'false,false,false': [nan, 0.22139355596951396]}
{'': [nan, 0.22317835594565152], 'false': [nan, 0.22317835594565152], 'false,false': [nan, 0.22317835594565152], 'false,false,false': [nan, 0.22317835594565152]}
{'': [nan, 0.22285967151345842], 'false': [nan, 0.22285967151345842], 'false,false': [nan, 0.22285967151345842], 'false,false,false': [nan, 0.22285967151345842]}
{'': [nan, 0.2219034895715945], 'false': [nan, 0.2219034895715945], 'false,false': [nan, 0.2219034895715945], 'false,false,false': [nan, 0.2219034895715945]}
{'': [nan, 0.22260469996873714], 'false': [nan, 0.22260469996873714], 'false,false': [nan, 0.22260469996873714], 'false,false,false': [nan, 0.22260469996873714]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 3.316
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.22172465224427054;  // std dev = 18.624, 1,499.000 (wgt'ed) examples reached here.  /* #neg=954 #pos=545 */
%   | | | else return 0.020311097261673586;  // std dev = 5.492, 222.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18057302969343256;  // std dev = 18.798, 1,550.000 (wgt'ed) examples reached here.  /* #neg=1,005 #pos=545 */
%   | | | else return 0.01709342502816415;  // std dev = 5.494, 223.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14146812842547943;  // std dev = 19.596, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1173281667701435;  // std dev = 19.609, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09768798507670381;  // std dev = 19.595, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08183163952259968;  // std dev = 19.557, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0653354278411979;  // std dev = 19.572, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.054632150062782124;  // std dev = 19.531, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03931040996245081;  // std dev = 19.588, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028043422132223148;  // std dev = 19.633, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.331', 'seconds']
Refined model CLL: -0.530425


******************************************
Best model found
******************************************
Results 

CLL : -0.737589 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 3.316 

Total Inference Time : 1.100942611694336 

Total revision time: 7.605434717178344
Best scored revision CLL: -0.530425


Results 

CLL : -0.737589 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.640629829406738 

Total Inference Time : 1.100942611694336 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.754
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.321', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252], 'false,false': [nan, 0.24218017894951252], 'false,false,false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.856
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19639811064739618;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16143876924868555;  // std dev = 20.900, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13000938537489495;  // std dev = 20.895, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10302948397263752;  // std dev = 20.892, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08066907971694023;  // std dev = 20.889, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06260699479187339;  // std dev = 20.887, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048281405449823685;  // std dev = 20.886, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0370646151873122;  // std dev = 20.885, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.433', 'seconds']
Refined model CLL: -0.675019


******************************************
Best model found
******************************************
Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.856 

Total Inference Time : 0.9332859516143799 

Total revision time: 6.462821588516235
Best scored revision CLL: -0.675019


Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.498016700744628 

Total Inference Time : 0.9332859516143799 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.352
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.441', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204], 'false,false': [nan, 0.24943310657597204], 'false,false,false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 1.93
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2689386008123074;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2152647585243146;  // std dev = 15.792, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16819919463199068;  // std dev = 15.763, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1293632571612075;  // std dev = 15.745, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09855689517239755;  // std dev = 15.734, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07469128339951059;  // std dev = 15.726, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056448668800626225;  // std dev = 15.722, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04260464455022483;  // std dev = 15.719, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.474', 'seconds']
Refined model CLL: -0.665329


******************************************
Best model found
******************************************
Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 1.93 

Total Inference Time : 0.9025318622589111 

Total revision time: 4.97428982925415
Best scored revision CLL: -0.665329


Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.009484941482544 

Total Inference Time : 0.9025318622589111 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.545
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.464', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.383
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.03251801758106232;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143803;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.102654555652495;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606134968;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0669164580113899;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05332021644336949;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04222184152402192;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03327292019030575;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.459', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.383 

Total Inference Time : 0.9778392314910889 

Total revision time: 7.702552583694458
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.831448581695557 

Total Inference Time : 0.9778392314910889 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.702
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.563', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 5.072
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122326151846452;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1887688448431225;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794555;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10739178829951261;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774585;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.060472411743632735;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04543457140096603;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.525', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 5.072 

Total Inference Time : 1.0044646263122559 

Total revision time: 8.663923572540284
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.792819570541383 

Total Inference Time : 1.0044646263122559 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.557
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19167361937046026;  // std dev = 19.678, 1,742.000 (wgt'ed) examples reached here.  /* #neg=1,161 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17334283113773627;  // std dev = 19.580, 1,708.000 (wgt'ed) examples reached here.  /* #neg=1,127 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13536979850334968;  // std dev = 19.764, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.11853056643684423;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09320574843903194;  // std dev = 19.758, 1,771.000 (wgt'ed) examples reached here.  /* #neg=1,190 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08596902016739305;  // std dev = 19.612, 1,719.000 (wgt'ed) examples reached here.  /* #neg=1,138 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06902805233102771;  // std dev = 19.618, 1,721.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053303419610883675;  // std dev = 19.647, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04006787916032219;  // std dev = 19.681, 1,743.000 (wgt'ed) examples reached here.  /* #neg=1,162 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033039228665847596;  // std dev = 19.661, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.366', 'seconds']
Parameter learned model CLL:-0.536263 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.678, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.58, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.764, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.689, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.758, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.612, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.618, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.647, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.681, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.661, 1, 581]}]
{'': [nan, 0.2222859692528997], 'false': [nan, 0.2222859692528997], 'false,false': [nan, 0.2222859692528997]}
{'': [nan, 0.22445243214189733], 'false': [nan, 0.22445243214189733], 'false,false': [nan, 0.22445243214189733]}
{'': [nan, 0.22031035819932532], 'false': [nan, 0.22031035819932532], 'false,false': [nan, 0.22031035819932532], 'false,false,false': [nan, 0.22031035819932532]}
{'': [0.2220309816317019, nan], 'true': [0.2220309816317019, nan]}
{'': [nan, 0.22043775094127976], 'false': [nan, 0.22043775094127976], 'false,false': [nan, 0.22043775094127976], 'false,false,false': [nan, 0.22043775094127976]}
{'': [nan, 0.22375185323934435], 'false': [nan, 0.22375185323934435], 'false,false': [nan, 0.22375185323934435], 'false,false,false': [nan, 0.22375185323934435]}
{'': [nan, 0.2236244281850243], 'false': [nan, 0.2236244281850243], 'false,false': [nan, 0.2236244281850243], 'false,false,false': [nan, 0.2236244281850243]}
{'': [nan, 0.2229871500797134], 'false': [nan, 0.2229871500797134], 'false,false': [nan, 0.2229871500797134], 'false,false,false': [nan, 0.2229871500797134]}
{'': [nan, 0.2222222222222397], 'false': [nan, 0.2222222222222397], 'false,false': [nan, 0.2222222222222397], 'false,false,false': [nan, 0.2222222222222397]}
{'': [nan, 0.2226684443288177], 'false': [nan, 0.2226684443288177], 'false,false': [nan, 0.2226684443288177], 'false,false,false': [nan, 0.2226684443288177]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 6.351
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2095351375495396;  // std dev = 18.801, 1,551.000 (wgt'ed) examples reached here.  /* #neg=1,006 #pos=545 */
%   | | | else return 0.02178529873587505;  // std dev = 5.487, 220.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19018017664250464;  // std dev = 18.684, 1,516.000 (wgt'ed) examples reached here.  /* #neg=971 #pos=545 */
%   | | | else return 0.017638439828165573;  // std dev = 5.492, 222.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.158227047458427;  // std dev = 19.357, 1,661.000 (wgt'ed) examples reached here.  /* #neg=1,080 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13353352146977315;  // std dev = 0.479, 1,524.000 (wgt'ed) examples reached here.  /* #neg=979 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.00542338721773004;  // std dev = 3.858, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return -0.018893205280680624;  // std dev = 3.914, 121.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09815619353482333;  // std dev = 19.516, 1,730.000 (wgt'ed) examples reached here.  /* #neg=1,149 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07784742325960488;  // std dev = 19.536, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05849215781138646;  // std dev = 19.605, 1,763.000 (wgt'ed) examples reached here.  /* #neg=1,182 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05556902766915164;  // std dev = 19.461, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032504417387644875;  // std dev = 19.643, 1,780.000 (wgt'ed) examples reached here.  /* #neg=1,199 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03224602495360502;  // std dev = 19.540, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.003', 'seconds']
Refined model CLL: -0.529591


******************************************
Best model found
******************************************
Results 

CLL : -0.734774 

AUC ROC : 0.548439 

AUC PR : 0.491278 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.351 

Total Inference Time : 1.1742379665374756 

Total revision time: 11.178253658294677
Best scored revision CLL: -0.529591


Results 

CLL : -0.734774 

AUC ROC : 0.548439 

AUC PR : 0.491278 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.307149656295776 

Total Inference Time : 1.1742379665374756 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.065
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.471', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 7.432
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1963981106473961;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.011444731455441975;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1295859445824711;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10271364682858107;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08044677870828713;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06245942421612406;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048189937349344895;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037013214258987355;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.203', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.432 

Total Inference Time : 1.0759904384613037 

Total revision time: 11.497339984893799
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.626235982894897 

Total Inference Time : 1.0759904384613037 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.443
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.473', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.934
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2689386008123075;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16589547003288008;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12793041349863352;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733905;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07439699296023498;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056455378743638485;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042789557255641854;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.800', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.934 

Total Inference Time : 1.085007667541504 

Total revision time: 8.30055751991272
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.429453517913819 

Total Inference Time : 1.085007667541504 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.598
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.608', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.318
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.03251801758106232;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143803;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10265455565249543;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606134996;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06691645801139003;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05332021644336942;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042221841524021975;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0332729201903058;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.424', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.318 

Total Inference Time : 0.9408223628997803 

Total revision time: 7.67775308227539
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.760354152679443 

Total Inference Time : 0.9408223628997803 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.659
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.539', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 5.12
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31223261518464485;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1887688448431227;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794552;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10739178829951265;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774604;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06047241174363267;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0454345714009661;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.523', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 5.12 

Total Inference Time : 1.020874261856079 

Total revision time: 8.692822889328003
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.775423959732056 

Total Inference Time : 1.020874261856079 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.383
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19071905530557487;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1681818481205441;  // std dev = 19.658, 1,735.000 (wgt'ed) examples reached here.  /* #neg=1,154 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14157608453739684;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.11851529145173668;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09263740169542815;  // std dev = 19.767, 1,774.000 (wgt'ed) examples reached here.  /* #neg=1,193 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08625865263374605;  // std dev = 19.609, 1,718.000 (wgt'ed) examples reached here.  /* #neg=1,137 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06290538593268397;  // std dev = 19.709, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05653372370999845;  // std dev = 19.618, 1,721.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030332932648441505;  // std dev = 19.833, 1,799.000 (wgt'ed) examples reached here.  /* #neg=1,218 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030422780939546982;  // std dev = 19.739, 1,764.000 (wgt'ed) examples reached here.  /* #neg=1,183 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.334', 'seconds']
Parameter learned model CLL:-0.534722 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.692, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.658, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.689, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.767, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.609, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.709, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.618, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.833, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.739, 1, 581]}]
{'': [nan, 0.22196723535217489], 'false': [nan, 0.22196723535217489], 'false,false': [nan, 0.22196723535217489]}
{'': [nan, 0.22273218779327766], 'false': [nan, 0.22273218779327766], 'false,false': [nan, 0.22273218779327766]}
{'': [nan, 0.22209472828630325], 'false': [nan, 0.22209472828630325], 'false,false': [nan, 0.22209472828630325], 'false,false,false': [nan, 0.22209472828630325]}
{'': [0.22203098163173485, nan], 'true': [0.22203098163173485, nan]}
{'': [nan, 0.22024666706493504], 'false': [nan, 0.22024666706493504], 'false,false': [nan, 0.22024666706493504], 'false,false,false': [nan, 0.22024666706493504]}
{'': [nan, 0.22381556104573355], 'false': [nan, 0.22381556104573355], 'false,false': [nan, 0.22381556104573355], 'false,false,false': [nan, 0.22381556104573355]}
{'': [nan, 0.22158477244942223], 'false': [nan, 0.22158477244942223], 'false,false': [nan, 0.22158477244942223], 'false,false,false': [nan, 0.22158477244942223]}
{'': [nan, 0.22362442818503103], 'false': [nan, 0.22362442818503103], 'false,false': [nan, 0.22362442818503103], 'false,false,false': [nan, 0.22362442818503103]}
{'': [nan, 0.21865584641704505], 'false': [nan, 0.21865584641704505], 'false,false': [nan, 0.21865584641704505], 'false,false,false': [nan, 0.21865584641704505]}
{'': [nan, 0.22088372385989807], 'false': [nan, 0.22088372385989807], 'false,false': [nan, 0.22088372385989807], 'false,false,false': [nan, 0.22088372385989807]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 6.28
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21670156667845475;  // std dev = 18.697, 1,520.000 (wgt'ed) examples reached here.  /* #neg=975 #pos=545 */
%   | | | else return 0.03375869119707232;  // std dev = 5.448, 205.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19373260569611067;  // std dev = 18.617, 1,497.000 (wgt'ed) examples reached here.  /* #neg=952 #pos=545 */
%   | | | else return 0.007181107457231193;  // std dev = 5.521, 235.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14204400006434;  // std dev = 19.569, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13354597555368783;  // std dev = 0.479, 1,528.000 (wgt'ed) examples reached here.  /* #neg=983 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.05450567256799359;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return -5.682399897845247E-4;  // std dev = 5.328, 206.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09492718604379068;  // std dev = 19.588, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07873415112765204;  // std dev = 19.550, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06438280407212471;  // std dev = 19.536, 1,743.000 (wgt'ed) examples reached here.  /* #neg=1,162 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050762926425069556;  // std dev = 19.553, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03550389439679834;  // std dev = 19.620, 1,772.000 (wgt'ed) examples reached here.  /* #neg=1,191 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04036467711276707;  // std dev = 19.435, 1,708.000 (wgt'ed) examples reached here.  /* #neg=1,127 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.279', 'seconds']
Refined model CLL: -0.529906


******************************************
Best model found
******************************************
Results 

CLL : -0.734199 

AUC ROC : 0.547789 

AUC PR : 0.491103 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.28 

Total Inference Time : 1.2184014320373535 

Total revision time: 10.94815911102295
Best scored revision CLL: -0.529906


Results 

CLL : -0.734199 

AUC ROC : 0.547789 

AUC PR : 0.491103 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.030760181427002 

Total Inference Time : 1.2184014320373535 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.022
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.585', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 7.445
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1963981106473961;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.011444731455441975;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1295859445824709;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1027136468285811;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08044677870828724;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.062459424216124014;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04818993734934482;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03701321425898727;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.996', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.445 

Total Inference Time : 1.093674659729004 

Total revision time: 11.545239917755127
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.62784098815918 

Total Inference Time : 1.093674659729004 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.494
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.500', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.655
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2689386008123073;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1658954700328799;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12793041349863346;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733923;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07439699296023485;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05645537874363863;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04278955725564147;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.007', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.655 

Total Inference Time : 1.0237135887145996 

Total revision time: 7.989627431869507
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.07222850227356 

Total Inference Time : 1.0237135887145996 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.36
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.402', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624], 'false,false': [nan, 0.22704315886134624], 'false,false,false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 1.886
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12652593672242926;  // std dev = 15.336, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10401476808796942;  // std dev = 15.326, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08439354244043876;  // std dev = 15.319, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.067755385967076;  // std dev = 15.313, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053947879801928236;  // std dev = 15.308, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04267819228751561;  // std dev = 15.305, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033595484228110595;  // std dev = 15.302, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.514', 'seconds']
Refined model CLL: -0.63515


******************************************
Best model found
******************************************
Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 1.886 

Total Inference Time : 0.8439924716949463 

Total revision time: 4.878724523544312
Best scored revision CLL: -0.63515


Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.912946411132813 

Total Inference Time : 0.8439924716949463 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.427
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.440', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616], 'false,false': [nan, 0.24255027541238616], 'false,false,false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.408
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122326151846449;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24598733811406873;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18881592307537767;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14285207520728085;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10737679226292425;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08055083333185686;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06044009840752512;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04540165941974741;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.423', 'seconds']
Refined model CLL: -0.680195


******************************************
Best model found
******************************************
Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 2.408 

Total Inference Time : 0.8769371509552002 

Total revision time: 5.563227138519287
Best scored revision CLL: -0.680195


Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 5.597449026107788 

Total Inference Time : 0.8769371509552002 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.186
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19033875785536783;  // std dev = 19.698, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16727239501665297;  // std dev = 19.672, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1323209647866118;  // std dev = 19.825, 1,796.000 (wgt'ed) examples reached here.  /* #neg=1,215 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11651658730798303;  // std dev = 19.745, 1,766.000 (wgt'ed) examples reached here.  /* #neg=1,185 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09562419633552653;  // std dev = 19.756, 1,770.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08707405856013788;  // std dev = 19.624, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06728711488419245;  // std dev = 19.669, 1,739.000 (wgt'ed) examples reached here.  /* #neg=1,158 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0508735256666335;  // std dev = 19.714, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03843754915925849;  // std dev = 19.745, 1,766.000 (wgt'ed) examples reached here.  /* #neg=1,185 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03517518709483805;  // std dev = 19.675, 1,741.000 (wgt'ed) examples reached here.  /* #neg=1,160 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.287', 'seconds']
Parameter learned model CLL:-0.535001 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.698, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.672, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.825, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.745, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.756, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.624, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.669, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.714, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.745, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.675, 1, 581]}]
{'': [nan, 0.22183974441327603], 'false': [nan, 0.22183974441327603], 'false,false': [nan, 0.22183974441327603]}
{'': [nan, 0.22241346280882338], 'false': [nan, 0.22241346280882338], 'false,false': [nan, 0.22241346280882338]}
{'': [nan, 0.218846570701522], 'false': [nan, 0.218846570701522], 'false,false': [nan, 0.218846570701522], 'false,false,false': [nan, 0.218846570701522]}
{'': [nan, 0.22075628872538705], 'false': [nan, 0.22075628872538705], 'false,false': [nan, 0.22075628872538705], 'false,false,false': [nan, 0.22075628872538705]}
{'': [nan, 0.22050145232850785], 'false': [nan, 0.22050145232850785], 'false,false': [nan, 0.22050145232850785], 'false,false,false': [nan, 0.22050145232850785]}
{'': [nan, 0.2234969914734384], 'false': [nan, 0.2234969914734384], 'false,false': [nan, 0.2234969914734384], 'false,false,false': [nan, 0.2234969914734384]}
{'': [nan, 0.2224772090799428], 'false': [nan, 0.2224772090799428], 'false,false': [nan, 0.2224772090799428], 'false,false,false': [nan, 0.2224772090799428]}
{'': [nan, 0.22145729336612938], 'false': [nan, 0.22145729336612938], 'false,false': [nan, 0.22145729336612938], 'false,false,false': [nan, 0.22145729336612938]}
{'': [nan, 0.22075628872536432], 'false': [nan, 0.22075628872536432], 'false,false': [nan, 0.22075628872536432], 'false,false,false': [nan, 0.22075628872536432]}
{'': [nan, 0.2223497161573648], 'false': [nan, 0.2223497161573648], 'false,false': [nan, 0.2223497161573648], 'false,false,false': [nan, 0.2223497161573648]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 3.377
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21623040684720776;  // std dev = 18.704, 1,522.000 (wgt'ed) examples reached here.  /* #neg=977 #pos=545 */
%   | | | else return 0.031225858176434435;  // std dev = 5.456, 208.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.19600116283111005;  // std dev = 18.585, 1,488.000 (wgt'ed) examples reached here.  /* #neg=943 #pos=545 */
%   | | | else return 0.005565661586448942;  // std dev = 5.528, 238.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13914862191223593;  // std dev = 19.606, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11722783131820554;  // std dev = 19.596, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10158932920089557;  // std dev = 19.520, 1,720.000 (wgt'ed) examples reached here.  /* #neg=1,139 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07800950565043707;  // std dev = 19.584, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06342581177391679;  // std dev = 19.578, 1,742.000 (wgt'ed) examples reached here.  /* #neg=1,161 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05544664289254295;  // std dev = 19.498, 1,721.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03777827056504317;  // std dev = 19.599, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03412479528860962;  // std dev = 19.525, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.440', 'seconds']
Refined model CLL: -0.531305


******************************************
Best model found
******************************************
Results 

CLL : -0.735865 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 3.377 

Total Inference Time : 1.046712875366211 

Total revision time: 7.660725629806518
Best scored revision CLL: -0.531305


Results 

CLL : -0.735865 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.694947517395019 

Total Inference Time : 1.046712875366211 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.721
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.364', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252], 'false,false': [nan, 0.24218017894951252], 'false,false,false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.877
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19639811064739618;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1614387692486855;  // std dev = 20.900, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13000938537489484;  // std dev = 20.895, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10302948397263743;  // std dev = 20.892, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08066907971694046;  // std dev = 20.889, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06260699479187337;  // std dev = 20.887, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04828140544982338;  // std dev = 20.886, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03706461518731201;  // std dev = 20.885, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.546', 'seconds']
Refined model CLL: -0.675019


******************************************
Best model found
******************************************
Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.877 

Total Inference Time : 0.9663162231445312 

Total revision time: 6.426867673873901
Best scored revision CLL: -0.675019


Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.461089561462402 

Total Inference Time : 0.9663162231445312 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.351
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.391', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204], 'false,false': [nan, 0.24943310657597204], 'false,false,false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 1.974
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2689386008123073;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21526475852431473;  // std dev = 15.792, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16819919463199073;  // std dev = 15.763, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12936325716120742;  // std dev = 15.745, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09855689517239782;  // std dev = 15.734, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07469128339951073;  // std dev = 15.726, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05644866880062639;  // std dev = 15.722, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04260464455022488;  // std dev = 15.719, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.571', 'seconds']
Refined model CLL: -0.665329


******************************************
Best model found
******************************************
Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 1.974 

Total Inference Time : 0.8447225093841553 

Total revision time: 5.016316366195679
Best scored revision CLL: -0.665329


Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.05053825378418 

Total Inference Time : 0.8447225093841553 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.543
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.549', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.273
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.03251801758106232;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143803;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1026545556524955;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606134995;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06691645801139001;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05332021644336924;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04222184152402184;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03327292019030582;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.399', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.273 

Total Inference Time : 0.9642069339752197 

Total revision time: 7.675214305877685
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.7993555221557616 

Total Inference Time : 0.9642069339752197 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.733
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.530', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.875
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.312232615184645;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18876884484312237;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794555;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10739178829951243;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774576;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06047241174363292;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045434571400966;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.522', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 4.875 

Total Inference Time : 0.973318338394165 

Total revision time: 8.498919208526612
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.623060424804688 

Total Inference Time : 0.973318338394165 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.352
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18958076624611314;  // std dev = 19.709, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.172640628332154;  // std dev = 19.594, 1,713.000 (wgt'ed) examples reached here.  /* #neg=1,132 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13766232020846803;  // std dev = 19.737, 1,763.000 (wgt'ed) examples reached here.  /* #neg=1,182 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12091799014260866;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10006040461655531;  // std dev = 19.652, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07328634549322563;  // std dev = 19.775, 1,777.000 (wgt'ed) examples reached here.  /* #neg=1,196 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06515879491097065;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048045454138816376;  // std dev = 19.748, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04940107100317728;  // std dev = 19.583, 1,709.000 (wgt'ed) examples reached here.  /* #neg=1,128 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03772655627260437;  // std dev = 19.603, 1,716.000 (wgt'ed) examples reached here.  /* #neg=1,135 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.360', 'seconds']
Parameter learned model CLL:-0.536359 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.709, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.594, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.737, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.655, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.652, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.775, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.748, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.583, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.603, 1, 581]}]
{'': [nan, 0.2215847724493991], 'false': [nan, 0.2215847724493991], 'false,false': [nan, 0.2215847724493991]}
{'': [nan, 0.22413404721765046], 'false': [nan, 0.22413404721765046], 'false,false': [nan, 0.22413404721765046]}
{'': [nan, 0.2209474452644123], 'false': [nan, 0.2209474452644123], 'false,false': [nan, 0.2209474452644123], 'false,false,false': [nan, 0.2209474452644123]}
{'': [0.2227959302317628, nan], 'true': [0.2227959302317628, nan]}
{'': [nan, 0.22285967151347136], 'false': [nan, 0.22285967151347136], 'false,false': [nan, 0.22285967151347136], 'false,false,false': [nan, 0.22285967151347136]}
{'': [nan, 0.22005561591890738], 'false': [nan, 0.22005561591890738], 'false,false': [nan, 0.22005561591890738], 'false,false,false': [nan, 0.22005561591890738]}
{'': [nan, 0.22209472828631485], 'false': [nan, 0.22209472828631485], 'false,false': [nan, 0.22209472828631485], 'false,false,false': [nan, 0.22209472828631485]}
{'': [nan, 0.22069257522285432], 'false': [nan, 0.22069257522285432], 'false,false': [nan, 0.22069257522285432], 'false,false,false': [nan, 0.22069257522285432]}
{'': [nan, 0.22438876412726833], 'false': [nan, 0.22438876412726833], 'false,false': [nan, 0.22438876412726833], 'false,false,false': [nan, 0.22438876412726833]}
{'': [nan, 0.22394296651290627], 'false': [nan, 0.22394296651290627], 'false,false': [nan, 0.22394296651290627], 'false,false,false': [nan, 0.22394296651290627]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 6.44
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2219673596655955;  // std dev = 18.620, 1,498.000 (wgt'ed) examples reached here.  /* #neg=953 #pos=545 */
%   | | | else return 0.02481560176617806;  // std dev = 5.477, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18466983671763468;  // std dev = 18.738, 1,532.000 (wgt'ed) examples reached here.  /* #neg=987 #pos=545 */
%   | | | else return 0.013691525895783157;  // std dev = 5.504, 227.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14028011281664574;  // std dev = 19.612, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13334510135604308;  // std dev = 0.479, 1,533.000 (wgt'ed) examples reached here.  /* #neg=988 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.04739062491041958;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 1.0859955371119388E-5;  // std dev = 5.328, 206.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=34 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0959315431610398;  // std dev = 19.584, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08034006007320404;  // std dev = 19.548, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06636884170448161;  // std dev = 19.519, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05712148779094435;  // std dev = 19.459, 1,713.000 (wgt'ed) examples reached here.  /* #neg=1,132 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03674689385020826;  // std dev = 19.583, 1,760.000 (wgt'ed) examples reached here.  /* #neg=1,179 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029415721598198122;  // std dev = 19.580, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.243', 'seconds']
Refined model CLL: -0.529504


******************************************
Best model found
******************************************
Results 

CLL : -0.734891 

AUC ROC : 0.547789 

AUC PR : 0.491103 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.44 

Total Inference Time : 1.206989049911499 

Total revision time: 11.047952835083008
Best scored revision CLL: -0.529504


Results 

CLL : -0.734891 

AUC ROC : 0.547789 

AUC PR : 0.491103 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.172094051361084 

Total Inference Time : 1.206989049911499 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.092
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.488', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 7.912
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1963981106473961;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.011444731455441975;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12958594458247083;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10271364682858106;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08044677870828709;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06245942421612414;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04818993734934501;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037013214258987355;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.154', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.912 

Total Inference Time : 1.1084821224212646 

Total revision time: 12.051692537307739
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.175833753585815 

Total Inference Time : 1.1084821224212646 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.443
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.492', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.642
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26893860081230747;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16589547003288022;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12793041349863352;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733913;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07439699296023493;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05645537874363856;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042789557255641764;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.895', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.642 

Total Inference Time : 1.0482642650604248 

Total revision time: 8.004345855712891
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.128487071990968 

Total Inference Time : 1.0482642650604248 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.443
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.498', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.434
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741278;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.032518017581062326;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143817;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1026545556524953;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606134997;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0669164580113899;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0533202164433695;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04222184152402209;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033272920190305935;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.370', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.434 

Total Inference Time : 0.9494121074676514 

Total revision time: 7.650607969284058
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.729422237396241 

Total Inference Time : 0.9494121074676514 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.958
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.586', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 5.021
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.312232615184645;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18876884484312256;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794544;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10739178829951243;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774598;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.060472411743632735;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0454345714009662;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.700', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 5.021 

Total Inference Time : 0.9856979846954346 

Total revision time: 8.84263124847412
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.921445516586303 

Total Inference Time : 0.9856979846954346 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.448
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19379307143688457;  // std dev = 19.647, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.17008665583013569;  // std dev = 19.624, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14781802610474437;  // std dev = 19.583, 1,709.000 (wgt'ed) examples reached here.  /* #neg=1,128 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.11378586648826536;  // std dev = 19.731, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09369933525531204;  // std dev = 19.734, 1,762.000 (wgt'ed) examples reached here.  /* #neg=1,181 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08365553091171017;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.061931963665774026;  // std dev = 19.709, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0530053594210069;  // std dev = 19.658, 1,735.000 (wgt'ed) examples reached here.  /* #neg=1,154 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04234635311544381;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0315816884361897;  // std dev = 19.684, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.335', 'seconds']
Parameter learned model CLL:-0.536078 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.647, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.624, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.583, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.731, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.734, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.626, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.709, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.658, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.655, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.684, 1, 581]}]
{'': [nan, 0.22298715007969905], 'false': [nan, 0.22298715007969905], 'false,false': [nan, 0.22298715007969905]}
{'': [nan, 0.22349699147346624], 'false': [nan, 0.22349699147346624], 'false,false': [nan, 0.22349699147346624]}
{'': [nan, 0.22438876412725806], 'false': [nan, 0.22438876412725806], 'false,false': [nan, 0.22438876412725806], 'false,false,false': [nan, 0.22438876412725806]}
{'': [0.2210748951749969, nan], 'true': [0.2210748951749969, nan]}
{'': [nan, 0.22101116907445106], 'false': [nan, 0.22101116907445106], 'false,false': [nan, 0.22101116907445106], 'false,false,false': [nan, 0.22101116907445106]}
{'': [nan, 0.22343326909309655], 'false': [nan, 0.22343326909309655], 'false,false': [nan, 0.22343326909309655], 'false,false,false': [nan, 0.22343326909309655]}
{'': [nan, 0.2215847724494075], 'false': [nan, 0.2215847724494075], 'false,false': [nan, 0.2215847724494075], 'false,false,false': [nan, 0.2215847724494075]}
{'': [nan, 0.22273218779325446], 'false': [nan, 0.22273218779325446], 'false,false': [nan, 0.22273218779325446], 'false,false,false': [nan, 0.22273218779325446]}
{'': [nan, 0.22279593023177002], 'false': [nan, 0.22279593023177002], 'false,false': [nan, 0.22279593023177002], 'false,false,false': [nan, 0.22279593023177002]}
{'': [nan, 0.2221584751914864], 'false': [nan, 0.2221584751914864], 'false,false': [nan, 0.2221584751914864], 'false,false,false': [nan, 0.2221584751914864]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 5.968
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.22172465224427054;  // std dev = 18.624, 1,499.000 (wgt'ed) examples reached here.  /* #neg=954 #pos=545 */
%   | | | else return 0.021044862701321373;  // std dev = 5.490, 221.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1847042517939969;  // std dev = 18.738, 1,532.000 (wgt'ed) examples reached here.  /* #neg=987 #pos=545 */
%   | | | else return 0.017729960740688097;  // std dev = 5.492, 222.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14242445822819957;  // std dev = 19.575, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13370743686854056;  // std dev = 0.479, 1,530.000 (wgt'ed) examples reached here.  /* #neg=985 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.002853966860567801;  // std dev = 3.869, 107.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | | else return -0.017829348598295346;  // std dev = 3.917, 122.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09851211087525938;  // std dev = 19.541, 1,735.000 (wgt'ed) examples reached here.  /* #neg=1,154 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07770601322174589;  // std dev = 19.575, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06460991423599903;  // std dev = 19.545, 1,739.000 (wgt'ed) examples reached here.  /* #neg=1,158 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053701137631328714;  // std dev = 19.506, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050155348125478096;  // std dev = 19.400, 1,691.000 (wgt'ed) examples reached here.  /* #neg=1,110 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030891942754724625;  // std dev = 19.525, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.905', 'seconds']
Refined model CLL: -0.530629


******************************************
Best model found
******************************************
Results 

CLL : -0.732971 

AUC ROC : 0.548439 

AUC PR : 0.491278 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.968 

Total Inference Time : 1.1079990863800049 

Total revision time: 10.605668416976929
Best scored revision CLL: -0.530629


Results 

CLL : -0.732971 

AUC ROC : 0.548439 

AUC PR : 0.491278 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 10.684482685089112 

Total Inference Time : 1.1079990863800049 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.987
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.413', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 7.372
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1963981106473961;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.011444731455441975;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12958594458247072;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.102713646828581;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08044677870828759;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.062459424216123716;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04818993734934477;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037013214258987376;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.104', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.372 

Total Inference Time : 1.0685606002807617 

Total revision time: 11.364149602890015
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.442963871002197 

Total Inference Time : 1.0685606002807617 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.461
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.688', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.633
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2689386008123074;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16589547003288016;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12793041349863346;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733904;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0743969929602349;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05645537874363848;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0427895572556417;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.717', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.633 

Total Inference Time : 0.9720940589904785 

Total revision time: 7.947832483291626
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.02664675140381 

Total Inference Time : 0.9720940589904785 

Run: 5
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.369
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.494', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624], 'false,false': [nan, 0.22704315886134624], 'false,false,false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.057
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741278;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12652593672242915;  // std dev = 15.336, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10401476808796942;  // std dev = 15.326, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08439354244043881;  // std dev = 15.319, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06775538596707587;  // std dev = 15.313, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05394787980192825;  // std dev = 15.308, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042678192287515654;  // std dev = 15.305, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033595484228110616;  // std dev = 15.302, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.488', 'seconds']
Refined model CLL: -0.63515


******************************************
Best model found
******************************************
Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.057 

Total Inference Time : 0.7845592498779297 

Total revision time: 5.025703550338745
Best scored revision CLL: -0.63515


Results 

CLL : -0.662393 

AUC ROC : 0.544977 

AUC PR : 0.4025 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.061504722595215 

Total Inference Time : 0.7845592498779297 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.457
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.382', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616], 'false,false': [nan, 0.24255027541238616], 'false,false,false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.324
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.312232615184645;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24598733811406873;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1888159230753777;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14285207520728085;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10737679226292425;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08055083333185682;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06044009840752512;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045401659419747345;  // std dev = 17.853, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.536', 'seconds']
Refined model CLL: -0.680195


******************************************
Best model found
******************************************
Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 2.324 

Total Inference Time : 0.8623638153076172 

Total revision time: 5.470119577407837
Best scored revision CLL: -0.680195


Results 

CLL : -0.740663 

AUC ROC : 0.445862 

AUC PR : 0.288412 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 5.505920749664306 

Total Inference Time : 0.8623638153076172 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.047
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19110022449778813;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16225065116534684;  // std dev = 19.745, 1,766.000 (wgt'ed) examples reached here.  /* #neg=1,185 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1451263315356907;  // std dev = 19.647, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11866127523062422;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09765174486305171;  // std dev = 19.698, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08645177997707108;  // std dev = 19.597, 1,714.000 (wgt'ed) examples reached here.  /* #neg=1,133 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07217741734581913;  // std dev = 19.562, 1,702.000 (wgt'ed) examples reached here.  /* #neg=1,121 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.049332333128276874;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040736408735137265;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030681349035589625;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.229', 'seconds']
Parameter learned model CLL:-0.536328 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.745, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.647, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.692, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.698, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.597, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.562, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.664, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.686, 1, 581]}]
{'': [nan, 0.22209472828628862], 'false': [nan, 0.22209472828628862], 'false,false': [nan, 0.22209472828628862]}
{'': [nan, 0.2207562887253666], 'false': [nan, 0.2207562887253666], 'false,false': [nan, 0.2207562887253666]}
{'': [nan, 0.22298715007972922], 'false': [nan, 0.22298715007972922], 'false,false': [nan, 0.22298715007972922], 'false,false,false': [nan, 0.22298715007972922]}
{'': [nan, 0.22196723535217883], 'false': [nan, 0.22196723535217883], 'false,false': [nan, 0.22196723535217883], 'false,false,false': [nan, 0.22196723535217883]}
{'': [nan, 0.22183974441328802], 'false': [nan, 0.22183974441328802], 'false,false': [nan, 0.22183974441328802], 'false,false,false': [nan, 0.22183974441328802]}
{'': [nan, 0.22407035750612023], 'false': [nan, 0.22407035750612023], 'false,false': [nan, 0.22407035750612023], 'false,false,false': [nan, 0.22407035750612023]}
{'': [nan, 0.2248343346667527], 'false': [nan, 0.2248343346667527], 'false,false': [nan, 0.2248343346667527], 'false,false,false': [nan, 0.2248343346667527]}
{'': [nan, 0.2220947282863223], 'false': [nan, 0.2220947282863223], 'false,false': [nan, 0.2220947282863223], 'false,false,false': [nan, 0.2220947282863223]}
{'': [nan, 0.22260469996873458], 'false': [nan, 0.22260469996873458], 'false,false': [nan, 0.22260469996873458], 'false,false,false': [nan, 0.22260469996873458]}
{'': [nan, 0.2220947282863062], 'false': [nan, 0.2220947282863062], 'false,false': [nan, 0.2220947282863062], 'false,false,false': [nan, 0.2220947282863062]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 3.368
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.22245374793373196;  // std dev = 18.613, 1,496.000 (wgt'ed) examples reached here.  /* #neg=951 #pos=545 */
%   | | | else return 0.02328654977841049;  // std dev = 5.482, 218.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1782157010276453;  // std dev = 18.831, 1,560.000 (wgt'ed) examples reached here.  /* #neg=1,015 #pos=545 */
%   | | | else return 0.017452731159225736;  // std dev = 5.492, 222.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14244884276847905;  // std dev = 19.592, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12481513872227333;  // std dev = 19.505, 1,711.000 (wgt'ed) examples reached here.  /* #neg=1,130 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08827811977623572;  // std dev = 19.715, 1,791.000 (wgt'ed) examples reached here.  /* #neg=1,210 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08905716895970267;  // std dev = 19.459, 1,701.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0676858747961824;  // std dev = 19.517, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04916495673287199;  // std dev = 19.587, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04594601136103214;  // std dev = 19.492, 1,711.000 (wgt'ed) examples reached here.  /* #neg=1,130 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031298974651503886;  // std dev = 19.556, 1,741.000 (wgt'ed) examples reached here.  /* #neg=1,160 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.367', 'seconds']
Refined model CLL: -0.531672


******************************************
Best model found
******************************************
Results 

CLL : -0.735811 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 3.368 

Total Inference Time : 1.1159374713897705 

Total revision time: 7.538505592346191
Best scored revision CLL: -0.531672


Results 

CLL : -0.735811 

AUC ROC : 0.547853 

AUC PR : 0.49112 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.574306764602661 

Total Inference Time : 1.1159374713897705 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.762
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.376', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252], 'false,false': [nan, 0.24218017894951252], 'false,false,false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.899
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19639811064739618;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16143876924868553;  // std dev = 20.900, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13000938537489487;  // std dev = 20.895, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10302948397263735;  // std dev = 20.892, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08066907971694055;  // std dev = 20.889, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06260699479187339;  // std dev = 20.887, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0482814054498235;  // std dev = 20.886, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.037064615187312105;  // std dev = 20.885, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.450', 'seconds']
Refined model CLL: -0.675019


******************************************
Best model found
******************************************
Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 2.899 

Total Inference Time : 0.9904639720916748 

Total revision time: 6.526026473999023
Best scored revision CLL: -0.675019


Results 

CLL : -0.648671 

AUC ROC : 0.554206 

AUC PR : 0.39269 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.561827646255493 

Total Inference Time : 0.9904639720916748 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.314
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.470', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'venue(A, D)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'venue(A, E), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'author(D, A), sameauthor(D, E)', 'false,false': 'author(F, A)', 'false,false,false': 'author(A, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), author(A, F)', 'false,false,false': 'sametitle(A, G), title(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sametitle(A, E), title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), title(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sametitle(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'sameauthor(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), title(D, E)', 'false,false': 'sameauthor(A, F), title(A, G)', 'false,false,false': 'author(H, A), sametitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sametitle(C, D)', 'false': 'venue(A, E), title(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204], 'false,false': [nan, 0.24943310657597204], 'false,false,false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;venue(A, E), sameauthor(A, F).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;author(D, A), sameauthor(D, E).;true;true
3;false,false;author(F, A).;true;true
3;false,false,false;author(A, A).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;sameauthor(A, E), author(A, F).;true;true
4;false,false,false;sametitle(A, G), title(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sametitle(A, E), title(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), title(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sametitle(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;sameauthor(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;sameauthor(A, F), title(A, G).;true;true
8;false,false,false;author(H, A), sametitle(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sametitle(C, D).;true;true
9;false;venue(A, E), title(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 2.037
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), sameauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26893860081230747;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21526475852431468;  // std dev = 15.792, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sametitle(A, G), title(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16819919463199065;  // std dev = 15.763, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, E), title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12936325716120747;  // std dev = 15.745, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sametitle(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09855689517239777;  // std dev = 15.734, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07469128339951074;  // std dev = 15.726, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sametitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05644866880062635;  // std dev = 15.722, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sametitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042604644550224925;  // std dev = 15.719, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.438', 'seconds']
Refined model CLL: -0.665329


******************************************
Best model found
******************************************
Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 2.037 

Total Inference Time : 0.8626968860626221 

Total revision time: 4.990472961425781
Best scored revision CLL: -0.665329


Results 

CLL : -0.68929 

AUC ROC : 0.543975 

AUC PR : 0.374863 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 5.026274133682251 

Total Inference Time : 0.8626968860626221 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.504
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.535', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.432
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741272;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.03251801758106232;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143803;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10265455565249527;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606134996;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06691645801138998;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0533202164433694;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042221841524021836;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03327292019030565;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.559', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.432 

Total Inference Time : 0.9715087413787842 

Total revision time: 7.720999132156372
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.851200471878052 

Total Inference Time : 0.9715087413787842 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.794
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.520', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.865
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.312232615184645;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1887688448431223;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794538;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10739178829951247;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774578;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06047241174363281;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045434571400966205;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.597', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 4.865 

Total Inference Time : 0.9843549728393555 

Total revision time: 8.50086625480652
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.631067594528199 

Total Inference Time : 0.9843549728393555 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.365
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.18695482078145412;  // std dev = 19.748, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16812603035426832;  // std dev = 19.667, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14102564825515454;  // std dev = 19.703, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.1270522433676238;  // std dev = 19.574, 1,706.000 (wgt'ed) examples reached here.  /* #neg=1,125 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09733066756391238;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08360390949073476;  // std dev = 19.624, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.061118625985138716;  // std dev = 19.717, 1,756.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04573884285838768;  // std dev = 19.764, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05025771021011034;  // std dev = 19.559, 1,701.000 (wgt'ed) examples reached here.  /* #neg=1,120 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03192688616925503;  // std dev = 19.675, 1,741.000 (wgt'ed) examples reached here.  /* #neg=1,160 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.386', 'seconds']
Parameter learned model CLL:-0.536223 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.748, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.667, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.703, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.574, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.624, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.717, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.764, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.559, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.675, 1, 581]}]
{'': [nan, 0.22069257522284275], 'false': [nan, 0.22069257522284275], 'false,false': [nan, 0.22069257522284275]}
{'': [nan, 0.22254095484272904], 'false': [nan, 0.22254095484272904], 'false,false': [nan, 0.22254095484272904]}
{'': [nan, 0.2217122564539461], 'false': [nan, 0.2217122564539461], 'false,false': [nan, 0.2217122564539461], 'false,false,false': [nan, 0.2217122564539461]}
{'': [0.2245797536864065, nan], 'true': [0.2245797536864065, nan]}
{'': [nan, 0.22209472828628235], 'false': [nan, 0.22209472828628235], 'false,false': [nan, 0.22209472828628235], 'false,false,false': [nan, 0.22209472828628235]}
{'': [nan, 0.22349699147343993], 'false': [nan, 0.22349699147343993], 'false,false': [nan, 0.22349699147343993], 'false,false,false': [nan, 0.22349699147343993]}
{'': [nan, 0.22139355596951674], 'false': [nan, 0.22139355596951674], 'false,false': [nan, 0.22139355596951674], 'false,false,false': [nan, 0.22139355596951674]}
{'': [nan, 0.22031035819933442], 'false': [nan, 0.22031035819933442], 'false,false': [nan, 0.22031035819933442], 'false,false,false': [nan, 0.22031035819933442]}
{'': [nan, 0.22489796609595078], 'false': [nan, 0.22489796609595078], 'false,false': [nan, 0.22489796609595078], 'false,false,false': [nan, 0.22489796609595078]}
{'': [nan, 0.22234971615738042], 'false': [nan, 0.22234971615738042], 'false,false': [nan, 0.22234971615738042], 'false,false,false': [nan, 0.22234971615738042]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 5.978
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.22416639648298622;  // std dev = 18.588, 1,489.000 (wgt'ed) examples reached here.  /* #neg=944 #pos=545 */
%   | | | else return 0.027163019606553637;  // std dev = 5.470, 213.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18882514538256073;  // std dev = 18.673, 1,513.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=545 */
%   | | | else return 0.011331861734744066;  // std dev = 5.510, 230.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14476578683635885;  // std dev = 19.526, 1,719.000 (wgt'ed) examples reached here.  /* #neg=1,138 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.14099098098656362;  // std dev = 0.481, 1,493.000 (wgt'ed) examples reached here.  /* #neg=948 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.007421875856278993;  // std dev = 3.858, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return -0.016894716642131664;  // std dev = 3.914, 121.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09685026560458916;  // std dev = 19.522, 1,730.000 (wgt'ed) examples reached here.  /* #neg=1,149 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07017450974812928;  // std dev = 19.647, 1,776.000 (wgt'ed) examples reached here.  /* #neg=1,195 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.057921870232267296;  // std dev = 19.622, 1,770.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05361823879148406;  // std dev = 19.506, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04247217421142011;  // std dev = 19.514, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0332447715172228;  // std dev = 19.525, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.946', 'seconds']
Refined model CLL: -0.52991


******************************************
Best model found
******************************************
Results 

CLL : -0.73377 

AUC ROC : 0.548439 

AUC PR : 0.491278 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 5.978 

Total Inference Time : 1.1441779136657715 

Total revision time: 10.530866926193237
Best scored revision CLL: -0.52991


Results 

CLL : -0.73377 

AUC ROC : 0.548439 

AUC PR : 0.491278 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 10.661068265914917 

Total Inference Time : 1.1441779136657715 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.98
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.543', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 7.827
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19639811064739618;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.01144473145544197;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1295859445824708;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10271364682858102;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08044677870828731;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06245942421612383;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04818993734934483;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03701321425898736;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.040', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.827 

Total Inference Time : 1.0874955654144287 

Total revision time: 11.843376476287842
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.973577816009522 

Total Inference Time : 1.0874955654144287 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.44
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.512', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'haswordauthor(A, D)', 'false,false': 'haswordtitle(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), author(E, D)', 'false,false': 'author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(A, A)', 'false,false': 'author(D, A)', 'false,false,false': 'haswordauthor(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordvenue(A, E), author(A, F)', 'false,false,false': 'sameauthor(A, G), haswordtitle(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)', 'false,false': 'sameauthor(A, E), haswordtitle(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), haswordtitle(C, D)', 'false': 'author(E, A), author(E, E)', 'false,false': 'sameauthor(A, F), author(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, A)', 'false,false': 'author(D, A), author(A, D)', 'false,false,false': 'haswordvenue(A, E), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A), haswordtitle(D, E)', 'false,false': 'haswordvenue(A, F), haswordtitle(A, G)', 'false,false,false': 'author(H, A), sameauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), sameauthor(C, D)', 'false': 'haswordauthor(A, E), haswordtitle(A, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A), author(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A).;true;true
0;false;haswordauthor(A, D).;true;true
0;false,false;haswordtitle(A, E).;true;true
1;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
1;false;author(D, A), author(E, D).;true;true
1;false,false;author(A, F).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;author(A, A).;true;true
2;false,false;author(D, A).;true;true
2;false,false,false;haswordauthor(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;author(D, A).;true;true
4;false,false;haswordvenue(A, E), author(A, F).;true;true
4;false,false,false;sameauthor(A, G), haswordtitle(A, H).;true;true
5;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;sameauthor(A, E), haswordtitle(A, F).;true;true
5;false,false,false;author(A, G), author(G, H).;true;true
6;;samevenue(A, B) :- author(A, C), haswordtitle(C, D).;true;true
6;false;author(E, A), author(E, E).;true;true
6;false,false;sameauthor(A, F), author(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A).;true;true
7;false;author(A, A).;true;true
7;false,false;author(D, A), author(A, D).;true;true
7;false,false,false;haswordvenue(A, E), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
8;false;author(D, A), haswordtitle(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordtitle(A, G).;true;true
8;false,false,false;author(H, A), sameauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), sameauthor(C, D).;true;true
9;false;haswordauthor(A, E), haswordtitle(A, F).;true;true
9;false,false;author(A, G).;true;true
9;false,false,false;author(H, A), author(H, H).;true;true


Refining candidate
***************************
Model training time 4.857
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), author(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2689386008123074;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), haswordtitle(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1658954700328804;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, E), haswordtitle(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12793041349863346;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733915;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(D, A), author(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), haswordauthor(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07439699296023486;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordtitle(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), sameauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056455378743638596;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), haswordtitle(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A), author(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0427895572556416;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.800', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.857 

Total Inference Time : 1.0137054920196533 

Total revision time: 8.135526725769044
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.265728065490723 

Total Inference Time : 1.0137054920196533 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.501
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.631', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [15.484, 688, 368], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan], 'true': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983], 'false,false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457], 'false,false': [nan, 0.22704315886134457], 'false,false,false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.28
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.24691298004332782;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.009320944418560179;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2141231912543579;  // std dev = 14.543, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.008190095289148226;  // std dev = 4.369, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15148551465741278;  // std dev = 15.347, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.1465714495166538;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.34523712779685806;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.032518017581062326;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019714292861143817;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10265455565249515;  // std dev = 15.269, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08330644606134985;  // std dev = 15.260, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06691645801138994;  // std dev = 15.253, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05332021644336946;  // std dev = 15.248, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0422218415240221;  // std dev = 15.243, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03327292019030581;  // std dev = 15.240, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.420', 'seconds']
Refined model CLL: -0.630649


******************************************
Best model found
******************************************
Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 4.28 

Total Inference Time : 0.9480321407318115 

Total revision time: 7.59085975265503
Best scored revision CLL: -0.630649


Results 

CLL : -0.659553 

AUC ROC : 0.55566 

AUC PR : 0.428249 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.670025449752808 

Total Inference Time : 0.9480321407318115 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.606
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.555', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [17.859, 544, 771], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [0.24255027541238616, nan], 'true': [0.24255027541238616, nan]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273], 'false,false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338], 'false,false': [nan, 0.24255027541239338], 'false,false,false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.984
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.4414164962676211;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.5248156017661779;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3787969446767008;  // std dev = 17.549, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.4482956062419621;  // std dev = 3.266, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31223261518464507;  // std dev = 17.854, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23844299522007098;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.41705279110594745;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3906032374539387;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.05446878367242577;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18876884484312234;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284344402794538;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1073917882995125;  // std dev = 17.822, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08057816961774585;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06047241174363271;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045434571400966225;  // std dev = 17.823, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.768', 'seconds']
Refined model CLL: -0.678532


******************************************
Best model found
******************************************
Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 4.984 

Total Inference Time : 0.9743044376373291 

Total revision time: 8.467829790115356
Best scored revision CLL: -0.678532


Results 

CLL : -0.741267 

AUC ROC : 0.496129 

AUC PR : 0.314418 

Precision : 0.334027 

Recall : 1.0 

F1 : 0.50078 

Total Learning Time : 8.546995487213135 

Total Inference Time : 0.9743044376373291 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.277
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1884502426606216;  // std dev = 19.725, 1,759.000 (wgt'ed) examples reached here.  /* #neg=1,178 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16543683274630733;  // std dev = 19.703, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14196960854382334;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.12043951647610425;  // std dev = 19.672, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10537918502734413;  // std dev = 19.586, 1,710.000 (wgt'ed) examples reached here.  /* #neg=1,129 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0814335814312219;  // std dev = 19.652, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06320747536414571;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.054828962133933706;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0395360983464885;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031082259887478033;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.343', 'seconds']
Parameter learned model CLL:-0.536084 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.725, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.703, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.692, 1, 581]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [19.672, 1, 581], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.586, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.652, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.689, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.626, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.689, 1, 581]}]
{'': [nan, 0.2212023537845179], 'false': [nan, 0.2212023537845179], 'false,false': [nan, 0.2212023537845179]}
{'': [nan, 0.22171225645392195], 'false': [nan, 0.22171225645392195], 'false,false': [nan, 0.22171225645392195]}
{'': [nan, 0.22196723535220478], 'false': [nan, 0.22196723535220478], 'false,false': [nan, 0.22196723535220478], 'false,false,false': [nan, 0.22196723535220478]}
{'': [0.22241346280884203, nan], 'true': [0.22241346280884203, nan]}
{'': [nan, 0.22432509148112573], 'false': [nan, 0.22432509148112573], 'false,false': [nan, 0.22432509148112573], 'false,false,false': [nan, 0.22432509148112573]}
{'': [nan, 0.22285967151345137], 'false': [nan, 0.22285967151345137], 'false,false': [nan, 0.22285967151345137], 'false,false,false': [nan, 0.22285967151345137]}
{'': [nan, 0.22203098163172721], 'false': [nan, 0.22203098163172721], 'false,false': [nan, 0.22203098163172721], 'false,false,false': [nan, 0.22203098163172721]}
{'': [nan, 0.2234332690930983], 'false': [nan, 0.2234332690930983], 'false,false': [nan, 0.2234332690930983], 'false,false,false': [nan, 0.2234332690930983]}
{'': [nan, 0.22209472828631882], 'false': [nan, 0.22209472828631882], 'false,false': [nan, 0.22209472828631882], 'false,false,false': [nan, 0.22209472828631882]}
{'': [nan, 0.22203098163171556], 'false': [nan, 0.22203098163171556], 'false,false': [nan, 0.22203098163171556], 'false,false,false': [nan, 0.22203098163171556]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 19.424
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.22343043643998994;  // std dev = 18.599, 1,492.000 (wgt'ed) examples reached here.  /* #neg=947 #pos=545 */
%   | | | else return 0.019583912677986766;  // std dev = 5.494, 223.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1740920267247435;  // std dev = 18.888, 1,578.000 (wgt'ed) examples reached here.  /* #neg=1,033 #pos=545 */
%   | | | else return 0.016462522374270764;  // std dev = 5.497, 224.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14060651497797114;  // std dev = 19.626, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.1603004065699287;  // std dev = 3.147, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.136539112720847;  // std dev = 18.440, 1,481.000 (wgt'ed) examples reached here.  /* #neg=952 #pos=529 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0019228784634970528;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.0025816260410074466;  // std dev = 3.883, 111.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=18 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09549919557101996;  // std dev = 19.604, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0802038730212202;  // std dev = 19.559, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07036484567662675;  // std dev = 19.466, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06026288344973381;  // std dev = 19.411, 1,700.000 (wgt'ed) examples reached here.  /* #neg=1,119 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050722226764424345;  // std dev = 19.372, 1,684.000 (wgt'ed) examples reached here.  /* #neg=1,103 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031008680982408575;  // std dev = 19.498, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.496', 'seconds']
Refined model CLL: -0.531365


******************************************
Best model found
******************************************
Results 

CLL : -0.732178 

AUC ROC : 0.550663 

AUC PR : 0.496321 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.424 

Total Inference Time : 2.391458749771118 

Total revision time: 25.188009525299073
Best scored revision CLL: -0.531365


Results 

CLL : -0.732178 

AUC ROC : 0.550663 

AUC PR : 0.496321 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 25.26717522239685 

Total Inference Time : 2.391458749771118 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 2.035
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.477', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [20.966, 1, 747], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [0.24218017894951252, nan], 'true': [0.24218017894951252, nan]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156], 'false,false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684], 'false,false': [nan, 0.24218017894952684], 'false,false,false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 7.181
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2843492907604439;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.07689893509951148;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.24609748798177272;  // std dev = 20.312, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06727784200614993;  // std dev = 4.677, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1963981106473961;  // std dev = 20.906, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16559447738359534;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2895002649017104;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044321443784209005;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.011444731455441975;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12958594458247055;  // std dev = 20.868, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10271364682858096;  // std dev = 20.864, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08044677870828734;  // std dev = 20.861, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06245942421612378;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0481899373493449;  // std dev = 20.857, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03701321425898742;  // std dev = 20.856, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.194', 'seconds']
Refined model CLL: -0.673499


******************************************
Best model found
******************************************
Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 7.181 

Total Inference Time : 1.0753192901611328 

Total revision time: 11.2759684715271
Best scored revision CLL: -0.673499


Results 

CLL : -0.64605 

AUC ROC : 0.564391 

AUC PR : 0.418731 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.355134168624879 

Total Inference Time : 1.0753192901611328 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;proteinclass(A, B) :- interaction(C, A).;true;true
0;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
0;true,false;interaction(A, C).;false;true
0;true,false,false;interaction(E, C), complex(E, F).;false;false
0;false;location(A, G).;true;true
0;false,true;location(H, G), recursion_proteinclass(H, B).;true;false
0;false,true,true;interaction(H, I), interaction(A, I).;false;false
0;false,false;enzyme(A, J).;false;false
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;false;true
1;false;interaction(A, D), interaction(D, A).;true;true
1;false,true;interaction(A, A).;false;true
1;false,true,false;complex(D, E).;false;false
1;false,false;interaction(F, A), interaction(G, F).;true;true
1;false,false,true;interaction(F, F), complex(G, H).;false;false
1;false,false,false;interaction(A, I), recursion_proteinclass(I, B).;false;false
2;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
2;true;interaction(D, A), interaction(A, D).;true;true
2;true,true;interaction(C, E).;false;false
2;true,false;interaction(F, A).;false;false
2;false;interaction(A, A).;false;true
2;false,false;interaction(G, A), recursion_proteinclass(G, B).;true;true
2;false,false,true;interaction(A, H), enzyme(A, I).;false;false
2;false,false,false;location(A, J), complex(A, K).;false;false
3;;proteinclass(A, B) :- complex(A, C).;true;true
3;true;complex(D, C), recursion_proteinclass(D, B).;false;false
3;false;interaction(E, A), complex(E, F).;true;true
3;false,true;interaction(G, E), recursion_proteinclass(G, B).;true;true
3;false,true,true;enzyme(A, H), phenotype(E, I).;false;false
3;false,true,false;location(A, J).;false;false
3;false,false;interaction(K, A), recursion_proteinclass(K, B).;false;true
3;false,false,false;interaction(A, A).;false;false
4;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
4;true;interaction(C, D), complex(D, E).;false;false
4;false;interaction(F, A), recursion_proteinclass(F, B).;true;true
4;false,true;phenotype(F, G), phenotype(A, H).;false;true
4;false,true,false;interaction(I, F), interaction(F, I).;false;false
4;false,false;complex(A, J), interaction(A, K).;true;true
4;false,false,true;interaction(K, L), recursion_proteinclass(L, B).;false;false
4;false,false,false;phenotype(A, M), enzyme(A, N).;false;false
5;;proteinclass(A, B) :- interaction(C, A), interaction(A, C).;true;true
5;true;enzyme(C, D).;false;true
5;true,false;recursion_proteinclass(C, B), interaction(C, C).;false;true
5;true,false,false;interaction(C, C).;false;false
5;false;interaction(E, A), recursion_proteinclass(E, B).;false;true
5;false,false;phenotype(A, F), enzyme(A, G).;true;true
5;false,false,true;enzyme(H, G), recursion_proteinclass(H, B).;false;false
5;false,false,false;interaction(A, I), interaction(I, J).;false;false
6;;proteinclass(A, B) :- interaction(A, C), enzyme(C, D).;true;true
6;true;interaction(C, E), recursion_proteinclass(E, B).;false;false
6;false;interaction(F, A), interaction(F, F).;true;true
6;false,true;recursion_proteinclass(F, B).;false;true
6;false,true,false;interaction(F, G), recursion_proteinclass(G, B).;false;false
6;false,false;phenotype(A, H), interaction(A, I).;true;true
6;false,false,true;complex(I, J), enzyme(A, K).;false;false
6;false,false,false;interaction(A, L), recursion_proteinclass(L, B).;false;false
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;interaction(D, C), recursion_proteinclass(D, B).;false;true
7;true,false;interaction(A, E), complex(E, F).;false;true
7;true,false,false;phenotype(A, G), complex(C, H).;false;false
7;false;interaction(A, A).;false;true
7;false,false;interaction(I, A), interaction(A, I).;true;true
7;false,false,true;complex(A, J).;false;false
7;false,false,false;complex(A, K), location(A, L).;false;false
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;enzyme(C, D), phenotype(C, E).;false;false
8;false;interaction(F, A), enzyme(F, G).;true;true
8;false,true;interaction(F, H), recursion_proteinclass(H, B).;true;false
8;false,true,true;complex(H, I), interaction(H, J).;false;false
8;false,false;complex(A, K), enzyme(A, L).;true;true
8;false,false,true;enzyme(M, L), recursion_proteinclass(M, B).;false;false
8;false,false,false;interaction(N, A), phenotype(A, P).;false;false
9;;proteinclass(A, B) :- interaction(C, A), phenotype(C, D).;true;true
9;true;interaction(E, C), recursion_proteinclass(E, B).;true;true
9;true,true;interaction(A, F), interaction(E, F).;false;false
9;true,false;interaction(A, C).;false;true
9;true,false,false;interaction(G, C), interaction(G, A).;false;false
9;false;location(A, H), enzyme(A, I).;false;true
9;false,false;interaction(A, J), recursion_proteinclass(J, B).;false;true
9;false,false,false;interaction(K, A), interaction(K, K).;false;false


Model training time 1.425
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.588', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'venue(A, D)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), sameauthor(E, D)', 'false,false': 'sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A)', 'false,false,false': 'venue(A, E), haswordvenue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordvenue(A, C)', 'true': 'haswordvenue(D, C)'}, {'true,true': [16.183, 500, 550], 'true,false': [0.0, 0, 0], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordvenue(A, E), sameauthor(A, F)', 'false,false,false': 'haswordtitle(A, G), haswordauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordtitle(A, E), haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(E, E)', 'false,false': 'haswordtitle(A, F), sameauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, A)', 'false,false': 'sameauthor(D, A), sameauthor(A, D)', 'false,false,false': 'haswordvenue(A, E), venue(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordvenue(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(H, A), haswordtitle(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordtitle(C, D)', 'false': 'venue(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A), sameauthor(H, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [0.24943310657597204, nan], 'true': [0.24943310657597204, nan]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685], 'false,false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562], 'false,false': [nan, 0.24943310657596562], 'false,false,false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A).;true;true
0;false;venue(A, D).;true;true
0;false,false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
1;false;sameauthor(D, A), sameauthor(E, D).;true;true
1;false,false;sameauthor(A, F).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;sameauthor(A, A).;true;true
2;false,false;sameauthor(D, A).;true;true
2;false,false,false;venue(A, E), haswordvenue(A, F).;true;true
3;;samevenue(A, B) :- haswordvenue(A, C).;true;true
3;true;haswordvenue(D, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;sameauthor(D, A).;true;true
4;false,false;haswordvenue(A, E), sameauthor(A, F).;true;true
4;false,false,false;haswordtitle(A, G), haswordauthor(A, H).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordtitle(A, E), haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(C, D).;true;true
6;false;sameauthor(E, A), sameauthor(E, E).;true;true
6;false,false;haswordtitle(A, F), sameauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A).;true;true
7;false;sameauthor(A, A).;true;true
7;false,false;sameauthor(D, A), sameauthor(A, D).;true;true
7;false,false,false;haswordvenue(A, E), venue(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordvenue(A, F), haswordauthor(A, G).;true;true
8;false,false,false;sameauthor(H, A), haswordtitle(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), haswordtitle(C, D).;true;true
9;false;venue(A, E), haswordauthor(A, F).;true;true
9;false,false;sameauthor(A, G).;true;true
9;false,false,false;sameauthor(H, A), sameauthor(H, H).;true;true


Refining candidate
***************************
Model training time 4.799
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.45384271500381385;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.10113958930511996;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), sameauthor(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.3891944611307275;  // std dev = 14.190, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08837649359551082;  // std dev = 6.274, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( venue(A, E), haswordvenue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2689386008123075;  // std dev = 15.832, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( haswordvenue(A, C) )
%   then if ( haswordvenue(D, C) )
%   | then if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2506204290047484;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5364950032383751;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.08904024957349943;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.017743953277202913;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordtitle(A, G), haswordauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16589547003288027;  // std dev = 15.639, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, E), haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1279304134986334;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(E, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordtitle(A, F), sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09779490653733922;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(D, A), sameauthor(A, D) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, E), venue(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0743969929602348;  // std dev = 15.598, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), haswordtitle(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056455378743638485;  // std dev = 15.593, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordtitle(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( venue(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A), sameauthor(H, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04278955725564173;  // std dev = 15.590, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.763', 'seconds']
Refined model CLL: -0.657166


******************************************
Best model found
******************************************
Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 4.799 

Total Inference Time : 0.9503862857818604 

Total revision time: 7.992616199493408
Best scored revision CLL: -0.657166


Results 

CLL : -0.689658 

AUC ROC : 0.554442 

AUC PR : 0.398637 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 8.071781896591187 

Total Inference Time : 0.9503862857818604 

Starting experiment 11_yeast_cora 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 

