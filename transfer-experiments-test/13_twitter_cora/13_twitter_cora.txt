Starting experiment 13_twitter_cora 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 2.512
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   return 0;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), title(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   return 0;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( title(A, C), title(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15284823090715774;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(C, D) )
%   then return 0.12767341054974374;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(C, D) )
%   then return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   return 0;  // std dev = 0.476, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(C, D) )
%   then return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
%   else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '5.656', 'seconds']
Parameter learned model CLL:-0.65337 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {}, {}]
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'title(A, D), title(E, D)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {}, {}]
['samevenue(A, B)', {'': 'title(A, C), title(D, C)', 'false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C)'}, {'true': [0.0, 0, 0], 'false': [0.476, 688, 368]}]
['samevenue(A, B)', {'': 'title(C, D)'}, {'true': [0.476, 688, 368], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {'': 'title(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(C, D)'}, {'true': [15.484, 688, 368], 'false': [0.0, 0, 0]}]
['samevenue(A, B)', {}, {}]
['samevenue(A, B)', {'': 'title(C, D)'}, {'true': [15.484, 688, 368], 'false': [0.0, 0, 0]}]
{}
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241]}
{}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546]}
{'': [0.22704315886134624, nan]}
{'': [nan, 0.22704315886133983]}
{'': [0.22704315886134535, nan]}
{}
{'': [0.22704315886133772, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
1;;samevenue(A, B) :- title(A, C).;true;true
1;false;title(A, D), title(E, D).;true;true
1;false,false;title(A, F).;true;true
3;;samevenue(A, B) :- title(A, C), title(D, C).;true;true
3;false;title(A, E).;true;true
4;;samevenue(A, B) :- title(A, C).;true;true
5;;samevenue(A, B) :- title(C, D).;true;true
6;;samevenue(A, B) :- title(A, C).;true;true
7;;samevenue(A, B) :- title(C, D).;true;true
9;;samevenue(A, B) :- title(C, D).;true;true


Refining candidate
***************************
Starting experiment 13_twitter_cora 

Run: 1
Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

Model training time 1293.256 

Building refine structure 

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(D, A), tweets(A, E) )
%   | then if ( tweets(C, E), tweets(D, F) )
%   | | then if ( follows(C, D), follows(A, G) )
%   | | | then return 0.2118074716848771;  // std dev = 7.499, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
%   | | | else return 0.16584124279182003;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | else if ( follows(A, D), tweets(C, E) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( follows(A, C), tweets(D, H) )
%   | | then return 0.16345866961278807;  // std dev = 0.461, 226.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=69 */
%   | | else if ( follows(A, I), tweets(C, J) )
%   | | | then return 0.26555634250691973;  // std dev = 2.553, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return 0.12130682983635441;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   else if ( tweets(A, K) )
%   | then return 0.14721143509951087;  // std dev = 0.453, 128.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=37 */
%   | else return 0.1880458423160058;  // std dev = 0.470, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(E, A) )
%   | then if ( follows(F, E), follows(D, F) )
%   | | then if ( follows(A, D), follows(E, C) )
%   | | | then return 0.17067129747642237;  // std dev = 9.994, 446.000 (wgt'ed) examples reached here.  /* #neg=295 #pos=151 */
%   | | | else return 0.21677132564202517;  // std dev = 4.232, 76.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=29 */
%   | | else if ( follows(A, D), tweets(C, G) )
%   | | | then return 0.5887166241698222;  // std dev = 0.865, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.21536824999251666;  // std dev = 1.757, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( follows(C, H), follows(H, C) )
%   | | then if ( follows(A, H), tweets(A, I) )
%   | | | then return 0.09733209299383823;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.17317017787137481;  // std dev = 4.607, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
%   | | else if ( follows(J, A), follows(J, C) )
%   | | | then return 0.022655544291458038;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.23051625537110473;  // std dev = 3.208, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   else return 0.13859036868608293;  // std dev = 0.459, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, D) )
%   then if ( follows(C, D), follows(D, C) )
%   | then return 0.13729358828547336;  // std dev = 0.470, 454.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=150 */
%   | else return 0.08786174154352598;  // std dev = 0.452, 146.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=42 */
%   else if ( follows(A, E), follows(E, F) )
%   | then if ( follows(A, F), follows(F, E) )
%   | | then return 0.1064335203452131;  // std dev = 0.451, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( tweets(A, G), follows(A, F) )
%   | | | then return 0.4811816000696351;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14451125830015762;  // std dev = 4.318, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | else if ( follows(A, H) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.13902772904798455;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.2992218343815302;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.16578559976399504;  // std dev = 3.957, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.11284847918932106;  // std dev = 2.781, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), tweets(A, D) )
%   then if ( follows(C, E), follows(A, E) )
%   | then if ( follows(E, F), follows(F, C) )
%   | | then if ( follows(F, A), follows(A, F) )
%   | | | then return 0.08349795635538901;  // std dev = 8.153, 316.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=95 */
%   | | | else return 0.16370600851763772;  // std dev = 5.537, 131.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=49 */
%   | | else return 0.015937488748372423;  // std dev = 0.438, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else return 0.06642181941840493;  // std dev = 0.447, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   else if ( follows(G, A), tweets(G, H) )
%   | then if ( follows(A, I), follows(I, G) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.18123006454371898;  // std dev = 3.903, 64.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=25 */
%   | | | else return 0.032871022430903035;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( follows(G, J), follows(J, A) )
%   | | | then return 0.1529990491583918;  // std dev = 3.661, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | | else return 0.05996366983653982;  // std dev = 2.822, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | else return 0.08568404122941259;  // std dev = 0.460, 122.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=37 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(A, E), follows(C, E) )
%   | then if ( follows(E, F), follows(F, C) )
%   | | then return 0.09930432739622977;  // std dev = 0.472, 475.000 (wgt'ed) examples reached here.  /* #neg=316 #pos=159 */
%   | | else if ( follows(G, C), follows(G, A) )
%   | | | then return 0.07382725805743941;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.25641847879084295;  // std dev = 2.341, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | else return 0.08322544797144252;  // std dev = 0.463, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   else if ( follows(A, H) )
%   | then if ( follows(H, I), follows(A, I) )
%   | | then if ( follows(I, J) )
%   | | | then return 0.12869083402376355;  // std dev = 3.311, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.3737881999818988;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.0842357127015992;  // std dev = 0.464, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | else if ( tweets(A, K) )
%   | | then return 0.288459684066638;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.1704575484851945;  // std dev = 0.487, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( tweets(D, C), follows(A, E) )
%   | then return 0.05970915129664231;  // std dev = 0.465, 484.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=152 */
%   | else return 0.09727826769344446;  // std dev = 0.475, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   else if ( follows(F, A) )
%   | then if ( follows(A, G), follows(F, G) )
%   | | then if ( follows(G, H), follows(A, F) )
%   | | | then return 0.15182980649728392;  // std dev = 3.989, 66.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=27 */
%   | | | else return 0.4314212529306772;  // std dev = 1.236, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.07902657122114728;  // std dev = 0.466, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( follows(A, I), tweets(A, J) )
%   | | then if ( follows(I, K), follows(A, K) )
%   | | | then return 0.21995140364662677;  // std dev = 2.314, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.10213812276359666;  // std dev = 3.632, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( follows(A, L), follows(L, M) )
%   | | | then return 0.07174697022148913;  // std dev = 3.477, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.10829916816670145;  // std dev = 3.355, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), tweets(C, E) )
%   | then if ( tweets(A, E), follows(F, A) )
%   | | then if ( follows(C, F), follows(D, F) )
%   | | | then return 0.07744813757597642;  // std dev = 9.000, 360.000 (wgt'ed) examples reached here.  /* #neg=237 #pos=123 */
%   | | | else return 0.021062608474937322;  // std dev = 4.536, 98.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=29 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.1440899743572145;  // std dev = 3.841, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | | else return 0.08554582617775444;  // std dev = 5.721, 141.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=52 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.20296056431970053;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.1120029201672174;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return -0.057364052019342;  // std dev = 0.438, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else if ( follows(J, A) )
%   | then return 0.02317797306861706;  // std dev = 0.454, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | else return -0.025338193846430587;  // std dev = 0.433, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(A, E), follows(D, E) )
%   | then if ( tweets(E, C), tweets(D, C) )
%   | | then if ( follows(E, F), tweets(F, C) )
%   | | | then return 0.03121539120689892;  // std dev = 9.350, 407.000 (wgt'ed) examples reached here.  /* #neg=280 #pos=127 */
%   | | | else return 0.29767687669086174;  // std dev = 1.734, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( follows(E, G), tweets(E, C) )
%   | | | then return 0.2785734624366816;  // std dev = 1.481, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.0565119088178759;  // std dev = 2.158, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | else if ( follows(D, H), follows(H, A) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.20213755547027157;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11035275496692977;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | else if ( tweets(D, C), follows(A, D) )
%   | | | then return 0.07053903956336482;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.014232851605586662;  // std dev = 1.226, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else return 0.004086707215861333;  // std dev = 0.459, 347.000 (wgt'ed) examples reached here.  /* #neg=243 #pos=104 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( follows(E, A), follows(C, E) )
%   | | then if ( follows(D, E), follows(A, E) )
%   | | | then return 0.05671005195790795;  // std dev = 8.423, 314.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=108 */
%   | | | else return 0.010708030131830993;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | | else if ( tweets(A, F), follows(C, A) )
%   | | | then return 0.06067695185661046;  // std dev = 2.129, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.039726917284364754;  // std dev = 4.660, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | else if ( follows(C, G), follows(H, A) )
%   | | then if ( tweets(A, I), tweets(H, I) )
%   | | | then return 0.0664312787794718;  // std dev = 2.681, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.27200770719809425;  // std dev = 1.466, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( follows(C, J), follows(J, C) )
%   | | | then return 0.03902484960648452;  // std dev = 3.872, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.0731336057267793;  // std dev = 3.475, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   else return -0.01892463200694515;  // std dev = 0.442, 132.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=35 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(E, A), follows(E, D) )
%   | then if ( follows(C, E), follows(A, D) )
%   | | then if ( follows(D, C), follows(A, E) )
%   | | | then return 0.07023647789791834;  // std dev = 8.138, 286.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=105 */
%   | | | else return 0.003117599750468051;  // std dev = 4.062, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | else if ( tweets(A, F), follows(C, E) )
%   | | | then return -6.961264965085897E-4;  // std dev = 3.540, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.03676337413936259;  // std dev = 5.104, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | else return 0.003494817059883963;  // std dev = 0.464, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
%   else if ( follows(G, A), tweets(A, H) )
%   | then return 0.01366493300492684;  // std dev = 0.462, 81.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=25 */
%   | else if ( tweets(A, I), follows(A, J) )
%   | | then return 0.24417784364895;  // std dev = 0.498, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( follows(K, A) )
%   | | | then return 0.12900575991022123;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.08250523554043997;  // std dev = 3.376, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.121
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.356', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), title(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), title(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), title(A, D).;true;true
3;false;author(E, A), title(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), title(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), title(A, F).;true;true
9;false,false;title(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 17.977
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.23843062524035266;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4370963035205641;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015414283291292274;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00261055857137374;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.46289788586858344;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36765979063048876;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.13998503294482842;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.005133086320404097;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.00668163372183822;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14153358034626273;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15126045036052155;  // std dev = 15.318, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.14941942800358232;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.27664049371872307;  // std dev = 3.042, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.03238784249520735;  // std dev = 3.091, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.019981004517150926;  // std dev = 3.074, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1258221346371699;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.02297721345438453;  // std dev = 4.360, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08179890461708259;  // std dev = 15.211, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.08009485643303225;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.16608615006886443;  // std dev = 3.042, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.036086983658446994;  // std dev = 3.090, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.025098228952355445;  // std dev = 3.074, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.06300457611398697;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.20703203094157407;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11833375620198383;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.14018045235729246;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.015135276610749785;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.013805583968433875;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14440920707449553;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.049202679704007074;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11881661343422714;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09039598566564233;  // std dev = 2.835, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.019586839793681088;  // std dev = 3.072, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.12921212106642335;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.011954389819310447;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12746616921784704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030153759782431393;  // std dev = 15.149, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.730', 'seconds']
Refined model CLL: -0.623588


******************************************
Best model found
******************************************
Results 

CLL : -0.656597 

AUC ROC : 0.555734 

AUC PR : 0.429039 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 17.977 

Total Inference Time : 1.0407304763793945 

Total revision time: 20.907492588043212
Best scored revision CLL: -0.623588


Results 

CLL : -0.656597 

AUC ROC : 0.555734 

AUC PR : 0.429039 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 22.238105247497558 

Total Inference Time : 1.0407304763793945 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.332
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.361', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), title(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), title(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), title(A, D).;true;true
3;false;author(E, A), title(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), title(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), title(A, F).;true;true
9;false,false;title(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 21.118
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.4356367001892301;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.6142464960751212;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5028228269373582;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5387079944014731;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.7644341117921166;  // std dev = 8.43e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.19300554036354514;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3119148795438039;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.2408899706815964;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3431351809035062;  // std dev = 2.749, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.37083239495790205;  // std dev = 2.141, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.09057257021526222;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18754023561274896;  // std dev = 17.519, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.22126973082248727;  // std dev = 2.897, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14297218407448276;  // std dev = 17.757, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.10423479088806868;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.17631964661685035;  // std dev = 2.749, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19680620127506634;  // std dev = 2.125, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.017289086191147256;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.07820164979328488;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11179085469620115;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1533089920394153;  // std dev = 1.961, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.3034158452583927;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.013021591175171607;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.06608725542172449;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05866014407782844;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.08483673337364751;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.11887485767630679;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.24333156781846915;  // std dev = 2.11e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.009813100476204342;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.049579162108648135;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046141902592398525;  // std dev = 17.726, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.673', 'seconds']
Refined model CLL: -0.672542


******************************************
Best model found
******************************************
Results 

CLL : -0.743844 

AUC ROC : 0.532487 

AUC PR : 0.339868 

Precision : 0.352633 

Recall : 0.959929 

F1 : 0.515789 

Total Learning Time : 21.118 

Total Inference Time : 1.079960584640503 

Total revision time: 24.34217972755432
Best scored revision CLL: -0.672542


Results 

CLL : -0.743844 

AUC ROC : 0.532487 

AUC PR : 0.339868 

Precision : 0.352633 

Recall : 0.959929 

F1 : 0.515789 

Total Learning Time : 25.672792387008666 

Total Inference Time : 1.079960584640503 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.932
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18995932916004415;  // std dev = 19.703, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17278619183768026;  // std dev = 19.591, 1,712.000 (wgt'ed) examples reached here.  /* #neg=1,131 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13480078523692135;  // std dev = 19.777, 1,778.000 (wgt'ed) examples reached here.  /* #neg=1,197 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12169799247671208;  // std dev = 19.650, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09075629939999798;  // std dev = 19.794, 1,784.000 (wgt'ed) examples reached here.  /* #neg=1,203 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0897447112114429;  // std dev = 19.562, 1,702.000 (wgt'ed) examples reached here.  /* #neg=1,121 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.053886428687267986;  // std dev = 19.836, 1,800.000 (wgt'ed) examples reached here.  /* #neg=1,219 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05143835104625757;  // std dev = 19.714, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044776801460745384;  // std dev = 19.658, 1,735.000 (wgt'ed) examples reached here.  /* #neg=1,154 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029033403279782863;  // std dev = 19.753, 1,769.000 (wgt'ed) examples reached here.  /* #neg=1,188 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.194', 'seconds']
Parameter learned model CLL:-0.534801 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.703, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.591, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.777, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), title(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.65, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.794, 1, 581]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), title(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.562, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.836, 1, 581]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [19.714, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.658, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.753, 1, 581]}]
{'': [nan, 0.22171225645391363], 'false': [nan, 0.22171225645391363]}
{'': [nan, 0.22419773288060765]}
{'': [nan, 0.2199919399838637], 'false': [nan, 0.2199919399838637], 'false,false': [nan, 0.2199919399838637], 'false,false,false': [nan, 0.2199919399838637]}
{'': [nan, 0.22292341150681586], 'false': [nan, 0.22292341150681586]}
{'': [nan, 0.21960997355668682], 'false': [nan, 0.21960997355668682], 'false,false': [nan, 0.21960997355668682]}
{'': [nan, 0.22483433466676106], 'false': [nan, 0.22483433466676106], 'false,false': [nan, 0.22483433466676106], 'false,false,false': [nan, 0.22483433466676106]}
{'': [nan, 0.2185922839506223], 'false': [nan, 0.2185922839506223]}
{'': [nan, 0.2214572933661253]}
{'': [nan, 0.2227321877932872]}
{'': [nan, 0.22056515691223136], 'false': [nan, 0.22056515691223136], 'false,false': [nan, 0.22056515691223136], 'false,false,false': [nan, 0.22056515691223136]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), title(A, D).;true;true
3;false;author(E, A), title(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), title(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), title(A, F).;true;true
9;false,false;title(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 15.46
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.21021611856203967;  // std dev = 0.478, 1,548.000 (wgt'ed) examples reached here.  /* #neg=1,003 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02178529873587602;  // std dev = 3.880, 110.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=18 */
%   | | | else return 0.005689918706069744;  // std dev = 3.917, 122.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.14973463069634813;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return 0.030585694526135142;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.18801812695855513;  // std dev = 0.479, 1,480.000 (wgt'ed) examples reached here.  /* #neg=951 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0352326703529353;  // std dev = 3.627, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return -0.01754510742484241;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.14452372233399688;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.02536226313427333;  // std dev = 3.865, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1410457283276519;  // std dev = 19.615, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.13696673433124507;  // std dev = 0.479, 1,524.000 (wgt'ed) examples reached here.  /* #neg=979 #pos=545 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.04109150079517707;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.014811219632018653;  // std dev = 5.371, 227.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.11515994579819816;  // std dev = 18.673, 1,513.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=545 */
%   | | | else return 6.826186454305474E-4;  // std dev = 5.485, 220.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08494484543546414;  // std dev = 19.452, 1,715.000 (wgt'ed) examples reached here.  /* #neg=1,134 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.0784241485166791;  // std dev = 0.481, 1,504.000 (wgt'ed) examples reached here.  /* #neg=959 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return -0.010090358454308031;  // std dev = 3.873, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.021151595168719086;  // std dev = 3.901, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then return 0.057966061441329306;  // std dev = 0.479, 1,522.000 (wgt'ed) examples reached here.  /* #neg=977 #pos=545 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return -0.005341606762123246;  // std dev = 3.645, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
%   | | | else return 0.07506978155571575;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.004548931760799347;  // std dev = 3.871, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.16443142236909505;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.13454061718180352;  // std dev = 1.304, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.01224232946147359;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | else return 0.0446761180181485;  // std dev = 0.479, 1,481.000 (wgt'ed) examples reached here.  /* #neg=952 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.006017872846959014;  // std dev = 3.627, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return -0.06918303433992855;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.15106038312163217;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.007525094000632584;  // std dev = 3.869, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02760381126996358;  // std dev = 19.545, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.073', 'seconds']
Refined model CLL: -0.52808


******************************************
Best model found
******************************************
Results 

CLL : -0.730438 

AUC ROC : 0.550105 

AUC PR : 0.499118 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.46 

Total Inference Time : 1.1776983737945557 

Total revision time: 19.470245639801025
Best scored revision CLL: -0.52808


Results 

CLL : -0.730438 

AUC ROC : 0.550105 

AUC PR : 0.499118 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 20.80085829925537 

Total Inference Time : 1.1776983737945557 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.46
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.217', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), title(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), title(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), title(A, D).;true;true
3;false;author(E, A), title(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), title(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), title(A, F).;true;true
9;false,false;title(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 25.979
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.27854694504975613;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.40245273256786723;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0910256474282795;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.30179438844949485;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.42248404362190956;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.18003653905850567;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05092203251355405;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.0467032057251723;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19628383800771326;  // std dev = 20.886, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.1676517708602333;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24581153727759172;  // std dev = 4.415, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.04336469875788206;  // std dev = 3.600, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.01244671043291202;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13738190336043135;  // std dev = 20.287, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.025414707589839707;  // std dev = 4.667, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10226386876759713;  // std dev = 20.837, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.08340454605809206;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.1356194829471607;  // std dev = 4.414, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01599723985462659;  // std dev = 3.598, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.010219652173529976;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( author(G, F), venue(G, B) )
%   | | then if ( samebib(G, H), venue(H, A) )
%   | | | then return 0.6441258037247878;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.33795360572006694;  // std dev = 0.134, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.4441258037247878;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordtitle(J, I) )
%   | | | then return 0.06226182387591057;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.10251368360049028;  // std dev = 4.414, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01627016048009966;  // std dev = 3.597, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.008805768130346385;  // std dev = 2.960, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.049512271061186545;  // std dev = 0.492, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.030628962021781482;  // std dev = 3.520, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.15728973519609446;  // std dev = 2.606, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.007221559641864362;  // std dev = 3.288, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.05904196194779918;  // std dev = 1.443, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return -0.01122596334783215;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03628326598087638;  // std dev = 20.764, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.209', 'seconds']
Refined model CLL: -0.668918


******************************************
Best model found
******************************************
Results 

CLL : -0.641145 

AUC ROC : 0.569731 

AUC PR : 0.431863 

Precision : 0.721212 

Recall : 0.052423 

F1 : 0.097741 

Total Learning Time : 25.979 

Total Inference Time : 1.0832459926605225 

Total revision time: 29.35162412071228
Best scored revision CLL: -0.668918


Results 

CLL : -0.641145 

AUC ROC : 0.569731 

AUC PR : 0.431863 

Precision : 0.721212 

Recall : 0.052423 

F1 : 0.097741 

Total Learning Time : 30.682236780166626 

Total Inference Time : 1.0832459926605225 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.21
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.286', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), title(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), title(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;title(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), title(A, D).;true;true
3;false;author(E, A), title(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), title(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), title(A, F).;true;true
9;false,false;title(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 15.421
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.443242102801371;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08314893509951105;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.7447648631331598;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5966167149850116;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.24583610292318075;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11916368480399746;  // std dev = 2.956, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.14263718536558287;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04070524497467004;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.26859258215361886;  // std dev = 15.774, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14179887351533066;  // std dev = 3.794, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.2704255033109378;  // std dev = 13.577, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.08114575920345218;  // std dev = 3.351, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.020098276465789877;  // std dev = 5.265, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.20079274745301384;  // std dev = 14.115, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.029507432356840033;  // std dev = 6.249, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12607084393397805;  // std dev = 15.524, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11584439400474562;  // std dev = 14.022, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | | else return 0.3148731596572463;  // std dev = 1.333, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.03852289614493917;  // std dev = 3.350, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.009971104687030937;  // std dev = 5.263, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then return 0.0865281316749903;  // std dev = 0.491, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.1753324778908985;  // std dev = 1.264, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3322335406595157;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.14099028550454346;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.013608144345162589;  // std dev = 2.955, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.04151115962461749;  // std dev = 3.117, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.031132058827200434;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.07683683725168979;  // std dev = 2.796, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return -0.1943660961284232;  // std dev = 2.328, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.07522022630699185;  // std dev = 13.441, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.16870787488976483;  // std dev = 1.572, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.11303404200382632;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.010988465630510973;  // std dev = 2.955, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.04315476415933657;  // std dev = 3.137, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.015394479238871559;  // std dev = 4.196, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04110875057042852;  // std dev = 15.390, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.636', 'seconds']
Refined model CLL: -0.643991


******************************************
Best model found
******************************************
Results 

CLL : -0.697105 

AUC ROC : 0.552989 

AUC PR : 0.402142 

Precision : 0.375 

Recall : 0.947304 

F1 : 0.537303 

Total Learning Time : 15.421 

Total Inference Time : 1.001361608505249 

Total revision time: 18.384042221069336
Best scored revision CLL: -0.643991


Results 

CLL : -0.697105 

AUC ROC : 0.552989 

AUC PR : 0.402142 

Precision : 0.375 

Recall : 0.947304 

F1 : 0.537303 

Total Learning Time : 19.714654880523682 

Total Inference Time : 1.001361608505249 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.087
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.292', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), haswordauthor(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), haswordauthor(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), haswordauthor(A, D).;true;true
3;false;author(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), haswordauthor(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 17.431
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.23843062524035266;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4370963035205641;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015414283291292274;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00261055857137374;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.46289788586858344;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36765979063048876;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.13998503294482842;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.005133086320404097;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.00668163372183822;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14153358034626273;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15126045036052185;  // std dev = 15.318, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.14941942800358232;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.27664049371872307;  // std dev = 3.042, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.03238784249520742;  // std dev = 3.091, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.01998100451715094;  // std dev = 3.074, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12582213463716987;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.02297721345438454;  // std dev = 4.360, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08179890461708256;  // std dev = 15.211, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.08009485643303225;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.16608615006886443;  // std dev = 3.042, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.036086983658447;  // std dev = 3.090, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.025098228952355434;  // std dev = 3.074, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.06300457611398697;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else return 0.125336251576162;  // std dev = 0.493, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(A, I) )
%   | | | then return -0.14018045235729248;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.015135276610749785;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return -0.013805583968433878;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14440920707449556;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04920267970400704;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11706824570243626;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.09066195945512567;  // std dev = 2.837, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.124120848239527;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.013093091361135036;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.011954389819310757;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12746616921784706;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030137438332916464;  // std dev = 15.149, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.544', 'seconds']
Refined model CLL: -0.623562


******************************************
Best model found
******************************************
Results 

CLL : -0.656828 

AUC ROC : 0.55563 

AUC PR : 0.428187 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 17.431 

Total Inference Time : 0.993257999420166 

Total revision time: 20.28431999015808
Best scored revision CLL: -0.623562


Results 

CLL : -0.656828 

AUC ROC : 0.55563 

AUC PR : 0.428187 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 20.33976446914673 

Total Inference Time : 0.993257999420166 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.283
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.359', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), haswordauthor(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), haswordauthor(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), haswordauthor(A, D).;true;true
3;false;author(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), haswordauthor(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 18.362
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.4356367001892301;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.6142464960751212;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5028228269373582;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5387079944014731;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.7644341117921166;  // std dev = 8.43e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.19300554036354514;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31191487954380437;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.2408899706815964;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3431351809035061;  // std dev = 2.749, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.3708323949579017;  // std dev = 2.141, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.09057257021526219;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.24507432760177722;  // std dev = 2.756, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.18732213166144568;  // std dev = 17.540, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14296273786856586;  // std dev = 17.756, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.10391527085436936;  // std dev = 17.294, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.1763750825889206;  // std dev = 2.749, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.204800359984066;  // std dev = 2.125, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.009934117238052638;  // std dev = 1.855, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( haswordtitle(G, E) )
%   | | then return 0.3501289166893269;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, E) )
%   | | | then return -0.013584052611148145;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.27570719466987353;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.07590112342133645;  // std dev = 17.078, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.1341093430076016;  // std dev = 2.749, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.17864011808308766;  // std dev = 2.065, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.026631505815740107;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.058534519909710064;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08096428377537981;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.12227902600974697;  // std dev = 1.961, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.2721460475981967;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.0485481413491488;  // std dev = 1.838, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.05180547216719898;  // std dev = 0.496, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046043422005814405;  // std dev = 17.699, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.359', 'seconds']
Refined model CLL: -0.671183


******************************************
Best model found
******************************************
Results 

CLL : -0.743479 

AUC ROC : 0.532518 

AUC PR : 0.342517 

Precision : 0.353173 

Recall : 0.959038 

F1 : 0.516237 

Total Learning Time : 18.362 

Total Inference Time : 0.9897499084472656 

Total revision time: 21.46019651412964
Best scored revision CLL: -0.671183


Results 

CLL : -0.743479 

AUC ROC : 0.532518 

AUC PR : 0.342517 

Precision : 0.353173 

Recall : 0.959038 

F1 : 0.516237 

Total Learning Time : 21.515640993118286 

Total Inference Time : 0.9897499084472656 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.864
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19052879779973617;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16609855250784342;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14346112611701206;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12204694408046947;  // std dev = 19.638, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09904837607654601;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07048864546236391;  // std dev = 19.815, 1,792.000 (wgt'ed) examples reached here.  /* #neg=1,211 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07285665653817856;  // std dev = 19.580, 1,708.000 (wgt'ed) examples reached here.  /* #neg=1,127 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.056564790351940904;  // std dev = 19.606, 1,717.000 (wgt'ed) examples reached here.  /* #neg=1,136 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04185226930749301;  // std dev = 19.652, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024432329222663383;  // std dev = 19.780, 1,779.000 (wgt'ed) examples reached here.  /* #neg=1,198 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.157', 'seconds']
Parameter learned model CLL:-0.535643 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.689, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.664, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), haswordauthor(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.638, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.664, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), haswordauthor(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.815, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.58, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [19.606, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.652, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.78, 1, 581]}]
{'': [nan, 0.22190348957159142], 'false': [nan, 0.22190348957159142]}
{'': [nan, 0.22203098163171517]}
{'': [nan, 0.22260469996873095], 'false': [nan, 0.22260469996873095], 'false,false': [nan, 0.22260469996873095], 'false,false,false': [nan, 0.22260469996873095]}
{'': [nan, 0.2231783559456548], 'false': [nan, 0.2231783559456548]}
{'': [nan, 0.22260469996873725], 'false': [nan, 0.22260469996873725], 'false,false': [nan, 0.22260469996873725]}
{'': [nan, 0.21910095214842676], 'false': [nan, 0.21910095214842676], 'false,false': [nan, 0.21910095214842676], 'false,false,false': [nan, 0.21910095214842676]}
{'': [nan, 0.22445243214191438], 'false': [nan, 0.22445243214191438]}
{'': [nan, 0.22387926551743262]}
{'': [nan, 0.2228596715134839]}
{'': [nan, 0.21992826811838043], 'false': [nan, 0.21992826811838043], 'false,false': [nan, 0.21992826811838043], 'false,false,false': [nan, 0.21992826811838043]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), haswordauthor(A, D).;true;true
3;false;author(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), haswordauthor(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 15.204
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.20840600450824773;  // std dev = 0.477, 1,556.000 (wgt'ed) examples reached here.  /* #neg=1,011 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04963829680164004;  // std dev = 3.815, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | | | else return 0.029577506528083813;  // std dev = 3.862, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.2594116774605683;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.11972913777802832;  // std dev = 3.040, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | else return 0.1954164032654475;  // std dev = 0.481, 1,451.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=529 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.04952928170253074;  // std dev = 3.583, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | | | else return -0.014668249161666513;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.019647819060496317;  // std dev = 3.877, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.14548979561840314;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.140752582665552;  // std dev = 19.602, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.13758878413834782;  // std dev = 0.480, 1,518.000 (wgt'ed) examples reached here.  /* #neg=973 #pos=545 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.0014479317708019869;  // std dev = 3.877, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.013021074485499176;  // std dev = 3.886, 114.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.12015159013050562;  // std dev = 18.584, 1,488.000 (wgt'ed) examples reached here.  /* #neg=943 #pos=545 */
%   | | | else return -0.009863111062701803;  // std dev = 5.501, 228.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0699481930002542;  // std dev = 19.654, 1,777.000 (wgt'ed) examples reached here.  /* #neg=1,196 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordauthor(F, E) )
%   | | | then return 0.20344169848996171;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07528409196903546;  // std dev = 18.648, 1,513.000 (wgt'ed) examples reached here.  /* #neg=971 #pos=542 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.00974871489695456;  // std dev = 3.877, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.035980908061625655;  // std dev = 3.923, 127.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(H, E) )
%   | | | then return 0.15932765693567608;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03441465908910036;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else return 0.05395000515692728;  // std dev = 0.478, 1,501.000 (wgt'ed) examples reached here.  /* #neg=972 #pos=529 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05454509493775849;  // std dev = 0.322, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.008330668130746904;  // std dev = 3.834, 99.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=18 */
%   | | | else return 0.0013160801190834246;  // std dev = 3.632, 92.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05029478767849789;  // std dev = 0.480, 1,512.000 (wgt'ed) examples reached here.  /* #neg=967 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.020236255226845724;  // std dev = 3.593, 83.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | | | else return -0.056025766358920114;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.023109845279736602;  // std dev = 3.904, 119.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=18 */
%   | | | else return -0.145075820243656;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03673148273537135;  // std dev = 19.421, 1,713.000 (wgt'ed) examples reached here.  /* #neg=1,132 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.027', 'seconds']
Refined model CLL: -0.528571


******************************************
Best model found
******************************************
Results 

CLL : -0.729277 

AUC ROC : 0.551023 

AUC PR : 0.501169 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.204 

Total Inference Time : 1.1843516826629639 

Total revision time: 19.214504640579225
Best scored revision CLL: -0.528571


Results 

CLL : -0.729277 

AUC ROC : 0.551023 

AUC PR : 0.501169 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 19.269949119567872 

Total Inference Time : 1.1843516826629639 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.495
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.359', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), haswordauthor(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), haswordauthor(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), haswordauthor(A, D).;true;true
3;false;author(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), haswordauthor(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 26.08
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.27854694504975613;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.40245273256786723;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0910256474282795;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.30179438844949485;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.42248404362190956;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.18003653905850567;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05092203251355405;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.0467032057251723;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19628383800771293;  // std dev = 20.886, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.34725376090998517;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.1692010100599787;  // std dev = 20.158, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.0433646987578821;  // std dev = 3.600, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.01244671043291202;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13744202022696192;  // std dev = 20.285, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.02541470758983979;  // std dev = 4.667, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10230027866577827;  // std dev = 20.836, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.08252828679504484;  // std dev = 19.788, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.15395791589953672;  // std dev = 4.414, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.015991061338926957;  // std dev = 3.598, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.010225697276219966;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.0638276965389684;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07033447882733541;  // std dev = 3.520, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.19690244216516406;  // std dev = 2.606, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.0920365846156255;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.008532946644557317;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.012514531075579637;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, B) )
%   | | then if ( samebib(F, G), venue(G, A) )
%   | | | then return 0.586779270033028;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3878716053410062;  // std dev = 0.190, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.3867792700330281;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.04732044127793933;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.08799877143958694;  // std dev = 4.399, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.013654154012775525;  // std dev = 3.585, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return -0.00712811221773839;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03624560253082893;  // std dev = 20.759, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.152', 'seconds']
Refined model CLL: -0.668725


******************************************
Best model found
******************************************
Results 

CLL : -0.641717 

AUC ROC : 0.569509 

AUC PR : 0.429211 

Precision : 0.52551 

Recall : 0.045374 

F1 : 0.083536 

Total Learning Time : 26.08 

Total Inference Time : 1.1310787200927734 

Total revision time: 29.594939661026
Best scored revision CLL: -0.668725


Results 

CLL : -0.641717 

AUC ROC : 0.569509 

AUC PR : 0.429211 

Precision : 0.52551 

Recall : 0.045374 

F1 : 0.083536 

Total Learning Time : 29.650384140014648 

Total Inference Time : 1.1310787200927734 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.23
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.315', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, D)', 'false': 'author(A, E), author(E, F)', 'false,false': 'author(A, G)', 'false,false,false': 'author(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), haswordauthor(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'author(A, F), haswordauthor(A, G)', 'false,false,false': 'author(A, H), author(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'author(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
2;;samevenue(A, B) :- author(C, A), author(A, D).;true;true
2;false;author(A, E), author(E, F).;true;true
2;false,false;author(A, G).;true;true
2;false,false,false;author(H, A).;true;true
3;;samevenue(A, B) :- author(A, C), haswordauthor(A, D).;true;true
3;false;author(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
4;false;author(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(E, A).;true;true
5;false,false;author(A, F), haswordauthor(A, G).;true;true
5;false,false,false;author(A, H), author(H, I).;true;true
6;;samevenue(A, B) :- author(A, C).;true;true
6;false;author(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
9;false;author(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), author(A, H).;true;true
9;false,false,false;author(I, A).;true;true


Refining candidate
***************************
Model training time 15.239
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.443242102801371;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08314893509951105;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.7447648631331598;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5966167149850116;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.24583610292318075;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1191636848039975;  // std dev = 2.956, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.14263718536558287;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04070524497467004;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2685925821536189;  // std dev = 15.774, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.1417988735153307;  // std dev = 3.794, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.27042550331093773;  // std dev = 13.577, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.0811457592034522;  // std dev = 3.351, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.020098276465789884;  // std dev = 5.265, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.20079274745301348;  // std dev = 14.115, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.029507432356839895;  // std dev = 6.249, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H), author(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1260708439339787;  // std dev = 15.524, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11584439400474546;  // std dev = 14.022, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | | else return 0.31487315965724616;  // std dev = 1.333, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03852289614493892;  // std dev = 3.350, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.009971104687030942;  // std dev = 5.263, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.4534199601432595;  // std dev = 0.302, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1208452686612058;  // std dev = 3.411, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordtitle(H, E) )
%   | | | then return 0.09683486918858096;  // std dev = 13.441, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.21093516557128797;  // std dev = 1.597, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.14099028550454334;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.01360814434516252;  // std dev = 2.955, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04151115962461742;  // std dev = 3.117, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.031132058827200503;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then return 0.06443882931063986;  // std dev = 0.489, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.15296757265061797;  // std dev = 1.252, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.28534127986288327;  // std dev = 0.105, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.11303404200382623;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.010988465630510825;  // std dev = 2.955, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.043154764159336646;  // std dev = 3.137, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.015394479238871427;  // std dev = 4.196, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04125465773720489;  // std dev = 15.369, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.692', 'seconds']
Refined model CLL: -0.642668


******************************************
Best model found
******************************************
Results 

CLL : -0.696582 

AUC ROC : 0.554717 

AUC PR : 0.404027 

Precision : 0.375367 

Recall : 0.933928 

F1 : 0.535503 

Total Learning Time : 15.239 

Total Inference Time : 1.0312538146972656 

Total revision time: 18.240115064620973
Best scored revision CLL: -0.642668


Results 

CLL : -0.696582 

AUC ROC : 0.554717 

AUC PR : 0.404027 

Precision : 0.375367 

Recall : 0.933928 

F1 : 0.535503 

Total Learning Time : 18.29555954360962 

Total Inference Time : 1.0312538146972656 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.106
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.323', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, D)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'sameauthor(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H), sameauthor(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'sameauthor(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, D).;true;true
2;false;sameauthor(A, E), sameauthor(E, F).;true;true
2;false,false;sameauthor(A, G).;true;true
2;false,false,false;sameauthor(H, A).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(A, D).;true;true
3;false;sameauthor(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
4;false;sameauthor(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(E, A).;true;true
5;false,false;sameauthor(A, F), haswordauthor(A, G).;true;true
5;false,false,false;sameauthor(A, H), sameauthor(H, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C).;true;true
6;false;sameauthor(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
9;false;sameauthor(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
9;false,false,false;sameauthor(I, A).;true;true


Refining candidate
***************************
Model training time 17.642
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.23843062524035266;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4370963035205641;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.015414283291292274;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00261055857137374;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.39623121920191673;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.37198879495949305;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.13998503294482842;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.005133086320404097;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.00668163372183822;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14153358034626273;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15126140175515124;  // std dev = 15.318, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.149419259069285;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.27666448895991885;  // std dev = 3.043, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.03238796955447102;  // std dev = 3.091, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.01998113186659385;  // std dev = 3.074, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1258225090124859;  // std dev = 14.504, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.022977321665307096;  // std dev = 4.360, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08179899394318545;  // std dev = 15.211, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.08009459464590313;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.16609154131490492;  // std dev = 3.043, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.036087093212188455;  // std dev = 3.090, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.02509833955215604;  // std dev = 3.074, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.06300436288625108;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2138448941218374;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11774776594662781;  // std dev = 2.927, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return -0.14018053623368099;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.015135370847871506;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.013805677681211775;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14440929289107807;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.049202508921395494;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.17653564562450066;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08706561145963579;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.1241209147752582;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.013093171985468907;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.01195447014833111;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.1274662369214825;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030137279670955343;  // std dev = 15.149, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.686', 'seconds']
Refined model CLL: -0.623544


******************************************
Best model found
******************************************
Results 

CLL : -0.656814 

AUC ROC : 0.555637 

AUC PR : 0.429015 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 17.642 

Total Inference Time : 0.9744155406951904 

Total revision time: 20.45587525177002
Best scored revision CLL: -0.623544


Results 

CLL : -0.656814 

AUC ROC : 0.555637 

AUC PR : 0.429015 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 20.487386558532716 

Total Inference Time : 0.9744155406951904 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.254
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.249', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, D)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'sameauthor(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H), sameauthor(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'sameauthor(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, D).;true;true
2;false;sameauthor(A, E), sameauthor(E, F).;true;true
2;false,false;sameauthor(A, G).;true;true
2;false,false,false;sameauthor(H, A).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(A, D).;true;true
3;false;sameauthor(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
4;false;sameauthor(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(E, A).;true;true
5;false,false;sameauthor(A, F), haswordauthor(A, G).;true;true
5;false,false,false;sameauthor(A, H), sameauthor(H, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C).;true;true
6;false;sameauthor(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
9;false;sameauthor(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
9;false,false,false;sameauthor(I, A).;true;true


Refining candidate
***************************
Model training time 17.703
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.4356367001892301;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.6142464960751212;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5028228269373582;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5387079944014731;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.7644341117921166;  // std dev = 8.43e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.19300554036354514;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31191487954380415;  // std dev = 17.782, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.5134022055918905;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.029013260865652167;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | | then return 0.2422435432337979;  // std dev = 17.312, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.30243226106252125;  // std dev = 2.897, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18759024111332184;  // std dev = 17.497, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21984820775626487;  // std dev = 2.938, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14294374853286823;  // std dev = 17.741, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.103441275425903;  // std dev = 17.267, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.20107142954473597;  // std dev = 2.749, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21328344451135378;  // std dev = 2.124, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.06381680828278134;  // std dev = 1.834, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.07761655377523613;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.12979224152107013;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1714078720608205;  // std dev = 1.961, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.3148133259971493;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.04790775157826047;  // std dev = 1.834, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.05275253265203569;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.26423110245600706;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, D) )
%   | | | then return 0.04882248064518835;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2220822615042957;  // std dev = 1.238, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1478399116674161;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return 0.05654007277380427;  // std dev = 17.123, 1,208.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=700 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.14873535778288682;  // std dev = 1.940, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return -0.03959880867659914;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045977883521184336;  // std dev = 17.686, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.323', 'seconds']
Refined model CLL: -0.670459


******************************************
Best model found
******************************************
Results 

CLL : -0.746075 

AUC ROC : 0.532349 

AUC PR : 0.341076 

Precision : 0.34399 

Recall : 0.977293 

F1 : 0.508868 

Total Learning Time : 17.703 

Total Inference Time : 1.0142598152160645 

Total revision time: 20.793637496948243
Best scored revision CLL: -0.670459


Results 

CLL : -0.746075 

AUC ROC : 0.532349 

AUC PR : 0.341076 

Precision : 0.34399 

Recall : 0.977293 

F1 : 0.508868 

Total Learning Time : 20.82514880371094 

Total Inference Time : 1.0142598152160645 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.945
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18995932916004415;  // std dev = 19.703, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16579689565940442;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13423687357243164;  // std dev = 19.802, 1,787.000 (wgt'ed) examples reached here.  /* #neg=1,206 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11913531533014252;  // std dev = 19.706, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09663584352957438;  // std dev = 19.734, 1,762.000 (wgt'ed) examples reached here.  /* #neg=1,181 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08579495434775218;  // std dev = 19.632, 1,726.000 (wgt'ed) examples reached here.  /* #neg=1,145 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07752201983585913;  // std dev = 19.511, 1,685.000 (wgt'ed) examples reached here.  /* #neg=1,104 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.052518426684977214;  // std dev = 19.652, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03735622663712272;  // std dev = 19.717, 1,756.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0238109825069532;  // std dev = 19.802, 1,787.000 (wgt'ed) examples reached here.  /* #neg=1,206 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.172', 'seconds']
Parameter learned model CLL:-0.535184 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.703, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, D)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.802, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.706, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.734, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'sameauthor(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H), sameauthor(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.632, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.511, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [19.652, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.717, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'sameauthor(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.802, 1, 581]}]
{'': [nan, 0.22171225645391363], 'false': [nan, 0.22171225645391363]}
{'': [nan, 0.2219034895716126]}
{'': [nan, 0.2194190524176699], 'false': [nan, 0.2194190524176699], 'false,false': [nan, 0.2194190524176699], 'false,false,false': [nan, 0.2194190524176699]}
{'': [nan, 0.22164851389671741], 'false': [nan, 0.22164851389671741]}
{'': [nan, 0.22101116907444818], 'false': [nan, 0.22101116907444818], 'false,false': [nan, 0.22101116907444818]}
{'': [nan, 0.22330581697144603], 'false': [nan, 0.22330581697144603], 'false,false': [nan, 0.22330581697144603], 'false,false,false': [nan, 0.22330581697144603]}
{'': [nan, 0.22591517051306326], 'false': [nan, 0.22591517051306326]}
{'': [nan, 0.22285967151344385]}
{'': [nan, 0.2213935559695008]}
{'': [nan, 0.21941905241767418], 'false': [nan, 0.21941905241767418], 'false,false': [nan, 0.21941905241767418], 'false,false,false': [nan, 0.21941905241767418]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, D).;true;true
2;false;sameauthor(A, E), sameauthor(E, F).;true;true
2;false,false;sameauthor(A, G).;true;true
2;false,false,false;sameauthor(H, A).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(A, D).;true;true
3;false;sameauthor(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
4;false;sameauthor(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(E, A).;true;true
5;false,false;sameauthor(A, F), haswordauthor(A, G).;true;true
5;false,false,false;sameauthor(A, H), sameauthor(H, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C).;true;true
6;false;sameauthor(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
9;false;sameauthor(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
9;false,false,false;sameauthor(I, A).;true;true


Refining candidate
***************************
Model training time 12.277
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.21366100294034232;  // std dev = 0.479, 1,533.000 (wgt'ed) examples reached here.  /* #neg=988 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.024204006076958388;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.02730316395523284;  // std dev = 5.315, 201.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=34 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18654252101752758;  // std dev = 0.479, 1,529.000 (wgt'ed) examples reached here.  /* #neg=984 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.03949442844442919;  // std dev = 3.614, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return -0.06187393821109502;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.017124541475302738;  // std dev = 3.883, 111.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=18 */
%   | | | else return -0.1439518551984172;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14009894841437368;  // std dev = 19.624, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11939956636576757;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.12861051825787495;  // std dev = 18.548, 1,513.000 (wgt'ed) examples reached here.  /* #neg=984 #pos=529 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.02025328508589441;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.011589058612507908;  // std dev = 5.358, 221.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1118278254601988;  // std dev = 18.738, 1,532.000 (wgt'ed) examples reached here.  /* #neg=987 #pos=545 */
%   | | | else return -0.006797365077172404;  // std dev = 5.503, 229.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08557786802883444;  // std dev = 19.473, 1,718.000 (wgt'ed) examples reached here.  /* #neg=1,137 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.07761036890313407;  // std dev = 0.480, 1,515.000 (wgt'ed) examples reached here.  /* #neg=970 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.08294888724944251;  // std dev = 1.346, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return -0.019832507292886433;  // std dev = 5.354, 219.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then return 0.05602266988970096;  // std dev = 0.478, 1,539.000 (wgt'ed) examples reached here.  /* #neg=994 #pos=545 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return -4.4235303322508684E-4;  // std dev = 3.640, 93.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | | else return 0.11322892192837276;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -3.454872487748564E-4;  // std dev = 3.857, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
%   | | | else return -0.14897592136932805;  // std dev = 0.009, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05557198015165883;  // std dev = 0.482, 1,491.000 (wgt'ed) examples reached here.  /* #neg=946 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.02865208622897105;  // std dev = 3.571, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | | | else return -0.06145275325756182;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.018403301234258127;  // std dev = 3.897, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
%   | | | else return -0.13259958898616017;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02669904463860486;  // std dev = 19.562, 1,760.000 (wgt'ed) examples reached here.  /* #neg=1,179 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.873', 'seconds']
Refined model CLL: -0.528061


******************************************
Best model found
******************************************
Results 

CLL : -0.730683 

AUC ROC : 0.545834 

AUC PR : 0.489856 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.277 

Total Inference Time : 1.163451910018921 

Total revision time: 16.315658447265626
Best scored revision CLL: -0.528061


Results 

CLL : -0.730683 

AUC ROC : 0.545834 

AUC PR : 0.489856 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.34716975402832 

Total Inference Time : 1.163451910018921 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.541
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.234', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, D)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'sameauthor(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H), sameauthor(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'sameauthor(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, D).;true;true
2;false;sameauthor(A, E), sameauthor(E, F).;true;true
2;false,false;sameauthor(A, G).;true;true
2;false,false,false;sameauthor(H, A).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(A, D).;true;true
3;false;sameauthor(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
4;false;sameauthor(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(E, A).;true;true
5;false,false;sameauthor(A, F), haswordauthor(A, G).;true;true
5;false,false,false;sameauthor(A, H), sameauthor(H, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C).;true;true
6;false;sameauthor(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
9;false;sameauthor(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
9;false,false,false;sameauthor(I, A).;true;true


Refining candidate
***************************
Model training time 31.573
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.27854694504975613;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.40245273256786723;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0910256474282795;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.30179438844949485;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.42248404362190956;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.18003653905850567;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05092203251355405;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.0467032057251723;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19628383800771299;  // std dev = 20.886, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.1676517708602333;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24581153727759184;  // std dev = 4.415, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0433646987578821;  // std dev = 3.600, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.01244671043291202;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13738190336043135;  // std dev = 20.287, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.02541470758983972;  // std dev = 4.667, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10226386876759716;  // std dev = 20.837, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.08340454605809206;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.13561948294716067;  // std dev = 4.414, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.015997239854626585;  // std dev = 3.598, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.010219652173529976;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.06452381367502538;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.05603655229924872;  // std dev = 3.520, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.18264666860263182;  // std dev = 2.606, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.09204211911097222;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.008527935071821958;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.01250947183405007;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.049599553535871505;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.041526143774752534;  // std dev = 3.519, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.13844938724716283;  // std dev = 2.606, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.07479343816557232;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.007123948588840534;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.010423550691318801;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036299085191534304;  // std dev = 20.807, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.549', 'seconds']
Refined model CLL: -0.671


******************************************
Best model found
******************************************
Results 

CLL : -0.642608 

AUC ROC : 0.564331 

AUC PR : 0.422259 

Precision : 0.694118 

Recall : 0.025991 

F1 : 0.050106 

Total Learning Time : 31.573 

Total Inference Time : 1.138695478439331 

Total revision time: 35.12903467559814
Best scored revision CLL: -0.671


Results 

CLL : -0.642608 

AUC ROC : 0.564331 

AUC PR : 0.422259 

Precision : 0.694118 

Recall : 0.025991 

F1 : 0.050106 

Total Learning Time : 35.16054598236084 

Total Inference Time : 1.138695478439331 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
0;true;follows(D, A), tweets(A, E).;true;true
0;true,true;tweets(C, E), tweets(D, F).;true;true
0;true,true,true;follows(C, D), follows(A, G).;false;false
0;true,true,false;follows(A, D), tweets(C, E).;false;false
0;true,false;follows(A, C), tweets(D, H).;false;true
0;true,false,false;follows(A, I), tweets(C, J).;false;false
0;false;tweets(A, K).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;false
1;true;follows(C, D), follows(E, A).;true;true
1;true,true;follows(F, E), follows(D, F).;true;true
1;true,true,true;follows(A, D), follows(E, C).;false;false
1;true,true,false;follows(A, D), tweets(C, G).;false;false
1;true,false;follows(C, H), follows(H, C).;true;true
1;true,false,true;follows(A, H), tweets(A, I).;false;false
1;true,false,false;follows(J, A), follows(J, C).;false;false
2;;accounttype(A, B) :- follows(C, A), follows(A, D).;true;true
2;true;follows(C, D), follows(D, C).;false;false
2;false;follows(A, E), follows(E, F).;true;true
2;false,true;follows(A, F), follows(F, E).;false;true
2;false,true,false;tweets(A, G), follows(A, F).;false;false
2;false,false;follows(A, H).;true;true
2;false,false,true;tweets(A, I).;false;false
2;false,false,false;follows(J, A).;false;false
3;;accounttype(A, B) :- follows(A, C), tweets(A, D).;true;true
3;true;follows(C, E), follows(A, E).;true;false
3;true,true;follows(E, F), follows(F, C).;true;false
3;true,true,true;follows(F, A), follows(A, F).;false;false
3;false;follows(G, A), tweets(G, H).;true;false
3;false,true;follows(A, I), follows(I, G).;true;true
3;false,true,true;follows(A, G).;false;false
3;false,true,false;follows(G, J), follows(J, A).;false;false
4;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
4;true;follows(A, E), follows(C, E).;true;false
4;true,true;follows(E, F), follows(F, C).;false;true
4;true,true,false;follows(G, C), follows(G, A).;false;false
4;false;follows(A, H).;true;true
4;false,true;follows(H, I), follows(A, I).;true;false
4;false,true,true;follows(I, J).;false;false
4;false,false;tweets(A, K).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;tweets(D, C), follows(A, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;follows(A, G), follows(F, G).;true;false
5;false,true,true;follows(G, H), follows(A, F).;false;false
5;false,false;follows(A, I), tweets(A, J).;true;true
5;false,false,true;follows(I, K), follows(A, K).;false;false
5;false,false,false;follows(A, L), follows(L, M).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(C, D), tweets(C, E).;true;true
6;true,true;tweets(A, E), follows(F, A).;true;true
6;true,true,true;follows(C, F), follows(D, F).;false;false
6;true,true,false;tweets(A, G).;false;false
6;true,false;tweets(A, H).;true;false
6;true,false,true;follows(I, A).;false;false
6;false;follows(J, A).;false;false
7;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;false
7;true;follows(A, E), follows(D, E).;true;true
7;true,true;tweets(E, C), tweets(D, C).;true;true
7;true,true,true;follows(E, F), tweets(F, C).;false;false
7;true,true,false;follows(E, G), tweets(E, C).;false;false
7;true,false;follows(D, H), follows(H, A).;true;true
7;true,false,true;follows(A, I).;false;false
7;true,false,false;tweets(D, C), follows(A, D).;false;false
8;;accounttype(A, B) :- follows(A, C).;true;false
8;true;follows(A, D), follows(C, D).;true;true
8;true,true;follows(E, A), follows(C, E).;true;true
8;true,true,true;follows(D, E), follows(A, E).;false;false
8;true,true,false;tweets(A, F), follows(C, A).;false;false
8;true,false;follows(C, G), follows(H, A).;true;true
8;true,false,true;tweets(A, I), tweets(H, I).;false;false
8;true,false,false;follows(C, J), follows(J, C).;false;false
9;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
9;true;follows(E, A), follows(E, D).;true;false
9;true,true;follows(C, E), follows(A, D).;true;true
9;true,true,true;follows(D, C), follows(A, E).;false;false
9;true,true,false;tweets(A, F), follows(C, E).;false;false
9;false;follows(G, A), tweets(A, H).;false;true
9;false,false;tweets(A, I), follows(A, J).;false;true
9;false,false,false;follows(K, A).;false;false


Model training time 1.113
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.263', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, D)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'sameauthor(A, G)', 'false,false,false': 'sameauthor(H, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), haswordauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'sameauthor(A, F), haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H), sameauthor(H, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'sameauthor(I, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
0;false;haswordauthor(A, E).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, D).;true;true
2;false;sameauthor(A, E), sameauthor(E, F).;true;true
2;false,false;sameauthor(A, G).;true;true
2;false,false,false;sameauthor(H, A).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), haswordauthor(A, D).;true;true
3;false;sameauthor(E, A), haswordauthor(E, F).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
4;false;sameauthor(A, E).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(E, A).;true;true
5;false,false;sameauthor(A, F), haswordauthor(A, G).;true;true
5;false,false,false;sameauthor(A, H), sameauthor(H, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C).;true;true
6;false;sameauthor(D, A).;true;true
7;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
9;false;sameauthor(E, A), haswordauthor(A, F).;true;true
9;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
9;false,false,false;sameauthor(I, A).;true;true


Refining candidate
***************************
Model training time 17.157
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.443242102801371;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08314893509951105;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5447648631331596;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6495267678950645;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.24583610292318075;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.1191636848039975;  // std dev = 2.956, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.14263718536558287;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04070524497467004;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(H, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.268592453767085;  // std dev = 15.774, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14270485454689225;  // std dev = 3.802, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.2703539645387686;  // std dev = 13.575, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.0811457808705207;  // std dev = 3.351, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.020098297360317097;  // std dev = 5.265, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.20079346635882114;  // std dev = 14.115, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.02950745034545541;  // std dev = 6.249, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H), sameauthor(H, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1260718505945826;  // std dev = 15.525, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.007469706234396177;  // std dev = 3.835, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.12976908720766028;  // std dev = 13.552, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.03852272063367449;  // std dev = 3.350, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.009971269365994562;  // std dev = 5.263, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then return 0.0854886662836551;  // std dev = 0.491, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.20253405937959762;  // std dev = 1.271, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.37638048907101584;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.14099014151853145;  // std dev = 1.547, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.013608000236045052;  // std dev = 2.955, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.04151101584509467;  // std dev = 3.117, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.031132189673563068;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06299069121330081;  // std dev = 0.492, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.36458222242763616;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18143090230031755;  // std dev = 1.802, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return -0.03053123916913042;  // std dev = 1.206, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.040392965717003564;  // std dev = 3.117, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -0.043154871845139664;  // std dev = 3.137, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.015394368168068471;  // std dev = 4.196, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(I, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04114733616735359;  // std dev = 15.408, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.420', 'seconds']
Refined model CLL: -0.645075


******************************************
Best model found
******************************************
Results 

CLL : -0.696764 

AUC ROC : 0.552547 

AUC PR : 0.401609 

Precision : 0.3748 

Recall : 0.94771 

F1 : 0.537163 

Total Learning Time : 17.157 

Total Inference Time : 0.9648497104644775 

Total revision time: 20.019846935272216
Best scored revision CLL: -0.645075


Results 

CLL : -0.696764 

AUC ROC : 0.552547 

AUC PR : 0.401609 

Precision : 0.3748 

Recall : 0.94771 

F1 : 0.537163 

Total Learning Time : 20.05135824203491 

Total Inference Time : 0.9648497104644775 

Run: 2
Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

Model training time 1058.48 

Building refine structure 

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(E, A), tweets(E, F) )
%   | then if ( follows(D, E), tweets(D, C) )
%   | | then return 0.19777157660894218;  // std dev = 0.474, 371.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=126 */
%   | | else return 0.29293154379516345;  // std dev = 0.496, 69.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=30 */
%   | else return 0.15911980888591876;  // std dev = 0.459, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   else if ( follows(G, A) )
%   | then if ( follows(A, H), follows(H, G) )
%   | | then if ( follows(H, A) )
%   | | | then return 0.2684053453559226;  // std dev = 3.072, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.2029765213064089;  // std dev = 2.560, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else return 0.19488362897706274;  // std dev = 0.473, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | else if ( tweets(A, I) )
%   | | then return 0.30259337954395676;  // std dev = 0.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.23314893509951237;  // std dev = 3.354, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.24703782398840124;  // std dev = 2.925, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(A, D) )
%   then if ( follows(D, E) )
%   | then if ( tweets(E, C), tweets(D, C) )
%   | | then if ( follows(D, A) )
%   | | | then return 0.18023964055798938;  // std dev = 9.476, 395.000 (wgt'ed) examples reached here.  /* #neg=257 #pos=138 */
%   | | | else return 0.20426807338534203;  // std dev = 4.555, 89.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=33 */
%   | | else if ( follows(A, E) )
%   | | | then return 0.1519596791158721;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.4009282451015096;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( follows(F, A), follows(F, D) )
%   | | then return 0.10434063149682449;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( follows(G, A) )
%   | | | then return 0.1519596791158721;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.13765466959073774;  // std dev = 2.049, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   else if ( follows(H, A), tweets(H, I) )
%   | then return 0.15728120995213463;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
%   | else return 0.09164152424066979;  // std dev = 0.442, 139.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=37 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(D, E), follows(E, A) )
%   | then if ( tweets(D, C), tweets(E, F) )
%   | | then if ( follows(A, G) )
%   | | | then return 0.15734354016830412;  // std dev = 7.846, 270.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=95 */
%   | | | else return 0.10817250224846635;  // std dev = 3.746, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else return 0.07654120279689229;  // std dev = 0.448, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else return 0.10591628327127635;  // std dev = 0.462, 162.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=50 */
%   else if ( follows(A, H) )
%   | then if ( follows(H, I), tweets(A, J) )
%   | | then return 0.1524712564747429;  // std dev = 0.477, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | else return 0.1266422468480239;  // std dev = 0.465, 208.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=66 */
%   | else if ( follows(K, A) )
%   | | then return 0.3096650395618985;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.20309712875789737;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.22349928781412007;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( follows(D, A), tweets(A, E) )
%   | | then if ( tweets(D, E), tweets(C, F) )
%   | | | then return 0.11856307505290678;  // std dev = 8.885, 354.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=119 */
%   | | | else return 0.16003479945109117;  // std dev = 1.937, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.08699839358171295;  // std dev = 0.461, 213.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=65 */
%   | else if ( follows(G, C), follows(G, A) )
%   | | then return 0.04625457951046619;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.13170509986697995;  // std dev = 4.476, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   | | | else return 0.19239800865508694;  // std dev = 3.464, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
%   else if ( tweets(A, I) )
%   | then if ( follows(J, A) )
%   | | then return 0.12057684452495407;  // std dev = 0.470, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | else return 0.10233239335054174;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else return 0.03364744485523934;  // std dev = 0.440, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A), tweets(C, D) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then if ( follows(E, F), follows(F, A) )
%   | | | then return 0.10393066785974182;  // std dev = 9.836, 430.000 (wgt'ed) examples reached here.  /* #neg=283 #pos=147 */
%   | | | else return 0.06514658106971419;  // std dev = 3.009, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.1262908769083648;  // std dev = 2.618, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.3556164346250035;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( follows(C, H), follows(I, A) )
%   | | then return 0.03151023355741375;  // std dev = 0.443, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else return 0.09755579525868707;  // std dev = 0.472, 177.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=59 */
%   else if ( tweets(A, J), follows(K, A) )
%   | then return 0.20941090067869159;  // std dev = 0.496, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
%   | else if ( tweets(A, L) )
%   | | then return 0.08365631012788217;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.12122077995447232;  // std dev = 0.479, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(A, E), follows(C, E) )
%   | then if ( tweets(C, F), tweets(E, G) )
%   | | then if ( tweets(A, G), follows(E, C) )
%   | | | then return 0.05936711785734044;  // std dev = 8.977, 372.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=118 */
%   | | | else return 0.0931461226260413;  // std dev = 5.718, 145.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=50 */
%   | | else if ( follows(A, C) )
%   | | | then return 0.751758632272253;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06550736533478829;  // std dev = 1.674, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.026869253070349736;  // std dev = 0.459, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
%   else if ( follows(A, H), follows(H, I) )
%   | then return 0.06776107518963097;  // std dev = 0.467, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
%   | else if ( tweets(A, J), follows(A, K) )
%   | | then return 0.22055996038656359;  // std dev = 0.499, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.13432525582955943;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.10247435526771813;  // std dev = 2.995, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(A, E), follows(A, D) )
%   | then if ( follows(C, A), follows(D, A) )
%   | | then if ( follows(A, F), follows(F, C) )
%   | | | then return 0.06513361987385267;  // std dev = 7.940, 282.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=95 */
%   | | | else return -0.03852386824131028;  // std dev = 1.908, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else return 0.02385793271747514;  // std dev = 0.455, 175.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=51 */
%   | else if ( tweets(A, G), follows(C, A) )
%   | | then if ( tweets(C, G) )
%   | | | then return 0.17057404998090234;  // std dev = 2.223, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.0049174864529671165;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(H, A), follows(H, C) )
%   | | | then return 0.05905452927328784;  // std dev = 4.544, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | | else return 0.08217410071283794;  // std dev = 4.953, 108.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=38 */
%   else if ( follows(I, A), tweets(A, J) )
%   | then return 0.06235035961743897;  // std dev = 0.471, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | else return 0.012459535457688168;  // std dev = 0.456, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(A, D) )
%   | then if ( follows(E, A), follows(F, E) )
%   | | then if ( follows(E, C), follows(D, F) )
%   | | | then return 0.0742764124946781;  // std dev = 9.862, 424.000 (wgt'ed) examples reached here.  /* #neg=273 #pos=151 */
%   | | | else return 0.21815659638613422;  // std dev = 3.126, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | | else if ( follows(G, A) )
%   | | | then return -0.08973503066101655;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.06646463735075571;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
%   | else if ( follows(H, A), follows(C, I) )
%   | | then return -0.01756458664816059;  // std dev = 0.457, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( follows(C, J), tweets(A, K) )
%   | | | then return 0.11632767083029083;  // std dev = 2.878, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.08023754574366501;  // std dev = 4.141, 74.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=27 */
%   else if ( follows(L, A) )
%   | then return 0.04895714663029067;  // std dev = 0.471, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | else return -0.020513856571253812;  // std dev = 0.440, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(C, E), tweets(D, E) )
%   | then if ( follows(A, F), follows(C, F) )
%   | | then return 0.03140602315423642;  // std dev = 0.470, 509.000 (wgt'ed) examples reached here.  /* #neg=341 #pos=168 */
%   | | else return 0.0023431562858465616;  // std dev = 0.460, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
%   | else return -0.1334523332110465;  // std dev = 0.412, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   else if ( tweets(A, G), follows(A, H) )
%   | then if ( follows(I, A) )
%   | | then return 0.17073371765548015;  // std dev = 0.494, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( follows(H, J), tweets(J, G) )
%   | | | then return 0.09046683230007625;  // std dev = 3.742, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
%   | | | else return 0.10269621346233518;  // std dev = 2.026, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then return 0.018250558704438657;  // std dev = 0.462, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else if ( tweets(A, M) )
%   | | | then return 0.04230776353727087;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.08305679558742232;  // std dev = 2.975, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(E, A), follows(E, C) )
%   | | | then return 0.03694534805201148;  // std dev = 8.481, 319.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=110 */
%   | | | else return -0.016001711589293005;  // std dev = 2.040, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( follows(A, F), follows(C, F) )
%   | | | then return 0.13263456395410975;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.060222696959903954;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0.0071688313370094;  // std dev = 0.464, 173.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=54 */
%   else if ( tweets(A, G), follows(A, H) )
%   | then if ( follows(H, I), follows(I, A) )
%   | | then return 0.39469220433046415;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( follows(A, J), follows(H, J) )
%   | | | then return 0.10986123780019966;  // std dev = 3.067, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.034245908500937026;  // std dev = 4.081, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | else return 0.03696469229497068;  // std dev = 0.472, 186.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=62 */
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.255
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.352', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241], 'false,false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;title(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
1;false;author(E, A), title(E, F).;true;true
2;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;title(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;title(A, D), author(E, A).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;title(A, G), author(A, H).;true;true
5;false,false,false;title(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), title(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;title(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;title(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;title(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 6.539
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.2113708693222669;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4100365476024739;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.04247403920938365;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.029670314489465107;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15236935671071897;  // std dev = 15.387, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.15403479727599745;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.316049398423727;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.06013720564120335;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.04576132752236764;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13125584336403384;  // std dev = 14.513, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.04536592896613236;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08273237561836955;  // std dev = 15.250, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.08327714288583914;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.20162351178822374;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.05690915010641412;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0442752786193899;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.06560087026487163;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.15321855573827303;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.04992455549691156;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.03621048330752938;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03968327055106813;  // std dev = 15.180, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04246559977708561;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.10552164302506484;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04877283758672125;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.03634896547856595;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.407', 'seconds']
Refined model CLL: -0.624998


******************************************
Best model found
******************************************
Results 

CLL : -0.656115 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.539 

Total Inference Time : 0.8659179210662842 

Total revision time: 9.417165845870972
Best scored revision CLL: -0.624998


Results 

CLL : -0.656115 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.4342485370636 

Total Inference Time : 0.8659179210662842 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.347
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.332', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175], 'false,false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;title(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
1;false;author(E, A), title(E, F).;true;true
2;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;title(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;title(A, D), author(E, A).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;title(A, G), author(A, H).;true;true
5;false,false,false;title(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), title(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;title(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;title(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;title(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 7.267
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.37252152204517247;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5511313179310542;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.5597396393083857;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2236051855268736;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3121757897287046;  // std dev = 17.831, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23917942893395805;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3767296944093981;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4144310296505996;  // std dev = 2.335, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.04717465654648138;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1870326265602048;  // std dev = 17.524, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.23435707661916813;  // std dev = 3.099, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14285355055321905;  // std dev = 17.797, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.10290991442156748;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.20270597061012893;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.22586021258439032;  // std dev = 2.308, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.06439987302736429;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.34971661142670063;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.19079138588606973;  // std dev = 1.660, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.14109961436842305;  // std dev = 2.546, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.07783690946986296;  // std dev = 17.376, 1,254.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=732 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06057589030452559;  // std dev = 17.752, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.248570228983697;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.15829515680824327;  // std dev = 1.660, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.042864080995676485;  // std dev = 17.305, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.08586705149010355;  // std dev = 2.992, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.108', 'seconds']
Refined model CLL: -0.673612


******************************************
Best model found
******************************************
Results 

CLL : -0.744239 

AUC ROC : 0.498228 

AUC PR : 0.32209 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 7.267 

Total Inference Time : 0.9893965721130371 

Total revision time: 10.414523519515992
Best scored revision CLL: -0.673612


Results 

CLL : -0.744239 

AUC ROC : 0.498228 

AUC PR : 0.32209 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 10.431606210708619 

Total Inference Time : 0.9893965721130371 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 2.021
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18182581532234854;  // std dev = 19.823, 1,795.000 (wgt'ed) examples reached here.  /* #neg=1,214 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16883546360722312;  // std dev = 19.667, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14265723729932306;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12357377243653175;  // std dev = 19.632, 1,726.000 (wgt'ed) examples reached here.  /* #neg=1,145 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09356935948378065;  // std dev = 19.758, 1,771.000 (wgt'ed) examples reached here.  /* #neg=1,190 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0837451267032019;  // std dev = 19.650, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0711692322215369;  // std dev = 19.597, 1,714.000 (wgt'ed) examples reached here.  /* #neg=1,133 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04868974189407353;  // std dev = 19.720, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03537437633580012;  // std dev = 19.769, 1,775.000 (wgt'ed) examples reached here.  /* #neg=1,194 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.031173768042599307;  // std dev = 19.723, 1,758.000 (wgt'ed) examples reached here.  /* #neg=1,177 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.216', 'seconds']
Parameter learned model CLL:-0.534971 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.823, 1, 581]}]
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.667, 1, 581]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.689, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.632, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.758, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.65, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.597, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.72, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.769, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.723, 1, 581]}]
{'': [nan, 0.2189101574320349], 'false': [nan, 0.2189101574320349], 'false,false': [nan, 0.2189101574320349], 'false,false,false': [nan, 0.2189101574320349]}
{'': [nan, 0.22254095484275227], 'false': [nan, 0.22254095484275227]}
{'': [nan, 0.2220309816317109], 'false': [nan, 0.2220309816317109], 'false,false': [nan, 0.2220309816317109], 'false,false,false': [nan, 0.2220309816317109]}
{'': [nan, 0.22330581697142904], 'false': [nan, 0.22330581697142904]}
{'': [nan, 0.22043775094126505], 'false': [nan, 0.22043775094126505], 'false,false': [nan, 0.22043775094126505]}
{'': [nan, 0.22292341150679457], 'false': [nan, 0.22292341150679457], 'false,false': [nan, 0.22292341150679457], 'false,false,false': [nan, 0.22292341150679457]}
{'': [nan, 0.2240703575060932], 'false': [nan, 0.2240703575060932]}
{'': [nan, 0.2213298201615998], 'false': [nan, 0.2213298201615998]}
{'': [nan, 0.22018297956753854], 'false': [nan, 0.22018297956753854], 'false,false': [nan, 0.22018297956753854], 'false,false,false': [nan, 0.22018297956753854]}
{'': [nan, 0.22126608606066414], 'false': [nan, 0.22126608606066414]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;title(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
1;false;author(E, A), title(E, F).;true;true
2;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;title(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;title(A, D), author(E, A).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;title(A, G), author(A, H).;true;true
5;false,false,false;title(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), title(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;title(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;title(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;title(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 10.024
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1884502426606216;  // std dev = 19.725, 1,759.000 (wgt'ed) examples reached here.  /* #neg=1,178 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.17405197060067704;  // std dev = 3.249, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.19373535631681224;  // std dev = 18.398, 1,469.000 (wgt'ed) examples reached here.  /* #neg=940 #pos=529 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.041373561314216774;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.011828106768762073;  // std dev = 5.361, 220.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=34 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13517863200282418;  // std dev = 19.734, 1,780.000 (wgt'ed) examples reached here.  /* #neg=1,199 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.14249993280531642;  // std dev = 0.480, 1,516.000 (wgt'ed) examples reached here.  /* #neg=971 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.007765099363777953;  // std dev = 3.815, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | | | else return -0.04239061863477753;  // std dev = 3.930, 127.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.11080028012732371;  // std dev = 18.778, 1,544.000 (wgt'ed) examples reached here.  /* #neg=999 #pos=545 */
%   | | | else return -0.014468070545163766;  // std dev = 5.476, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08488534565625246;  // std dev = 19.492, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.0779711733487325;  // std dev = 0.479, 1,523.000 (wgt'ed) examples reached here.  /* #neg=978 #pos=545 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.06517893314254508;  // std dev = 1.321, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.0158272580374818;  // std dev = 5.292, 193.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.04495956075860673;  // std dev = 3.250, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.058925782467199775;  // std dev = 18.474, 1,491.000 (wgt'ed) examples reached here.  /* #neg=962 #pos=529 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.05527060253804424;  // std dev = 1.321, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.020647920722758718;  // std dev = 5.315, 202.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03727032700971356;  // std dev = 19.572, 1,760.000 (wgt'ed) examples reached here.  /* #neg=1,179 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.035063422144552964;  // std dev = 3.231, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.03803295227400601;  // std dev = 18.481, 1,493.000 (wgt'ed) examples reached here.  /* #neg=964 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.01647283577528678;  // std dev = 3.862, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
%   | | | else return -0.03807104121975255;  // std dev = 3.895, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.639', 'seconds']
Refined model CLL: -0.527892


******************************************
Best model found
******************************************
Results 

CLL : -0.73245 

AUC ROC : 0.546193 

AUC PR : 0.489954 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 10.024 

Total Inference Time : 1.1647427082061768 

Total revision time: 14.192650003433226
Best scored revision CLL: -0.527892


Results 

CLL : -0.73245 

AUC ROC : 0.546193 

AUC PR : 0.489954 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.209732694625853 

Total Inference Time : 1.1647427082061768 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.586
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.277', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894], 'false,false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;title(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
1;false;author(E, A), title(E, F).;true;true
2;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;title(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;title(A, D), author(E, A).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;title(A, G), author(A, H).;true;true
5;false,false,false;title(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), title(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;title(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;title(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;title(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 11.465
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.24244540732216907;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3663511948402729;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05492410970068688;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.022047397371919752;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19667619803653544;  // std dev = 20.921, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16899795580450921;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.26887550606172433;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.019282199744917454;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.017774913805366794;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1394510420318216;  // std dev = 20.294, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.0027964579579912233;  // std dev = 4.675, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10251781245016016;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.08417964798315014;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.15646575873137442;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.0018275347304710296;  // std dev = 3.608, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.0338029435696429;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.24474355814149223;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.06552647525078999;  // std dev = 20.154, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.002212165244924518;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.03272840889716378;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04754699691148907;  // std dev = 20.824, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.17535218600992267;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.039151409896475094;  // std dev = 20.154, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.005764024408058402;  // std dev = 3.605, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.036673458243685404;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.246', 'seconds']
Refined model CLL: -0.671417


******************************************
Best model found
******************************************
Results 

CLL : -0.643304 

AUC ROC : 0.563878 

AUC PR : 0.409847 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 11.465 

Total Inference Time : 1.0908682346343994 

Total revision time: 15.036222101211548
Best scored revision CLL: -0.671417


Results 

CLL : -0.643304 

AUC ROC : 0.563878 

AUC PR : 0.409847 

Precision : 0.647059 

Recall : 0.004846 

F1 : 0.00962 

Total Learning Time : 15.053304792404175 

Total Inference Time : 1.0908682346343994 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.216
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.276', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'title(A, C), author(A, D)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G), author(A, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'title(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569], 'false,false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;title(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- title(A, C), author(A, D).;true;true
1;false;author(E, A), title(E, F).;true;true
2;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;title(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;title(A, D), author(E, A).;true;true
4;false,false;title(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;title(A, G), author(A, H).;true;true
5;false,false,false;title(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), title(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;title(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;title(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;title(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 6.48
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( title(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.3901243759297991;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6759989501634099;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.10132750452422182;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.030031208227926227;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27097424530732456;  // std dev = 15.939, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2657828086391973;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.48660433021657046;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.047737409723767464;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.025437704038210864;  // std dev = 5.273, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.21146560575340223;  // std dev = 14.131, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return -0.005702679805140304;  // std dev = 6.263, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1268380177337911;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.01139899929765286;  // std dev = 3.804, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.13844293212154485;  // std dev = 13.575, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.015204977465805057;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.04393194469215854;  // std dev = 5.273, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return -0.01677805378257548;  // std dev = 3.837, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.1059428563475725;  // std dev = 13.554, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.02187287180253657;  // std dev = 3.359, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.03867530033215705;  // std dev = 5.266, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0541025840239137;  // std dev = 15.475, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.05277500686300253;  // std dev = 13.945, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.2301878674328974;  // std dev = 1.875, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.007067417160384959;  // std dev = 3.359, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.04187223511358891;  // std dev = 5.266, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.196', 'seconds']
Refined model CLL: -0.64752


******************************************
Best model found
******************************************
Results 

CLL : -0.696354 

AUC ROC : 0.552643 

AUC PR : 0.397805 

Precision : 0.3748 

Recall : 0.94771 

F1 : 0.537163 

Total Learning Time : 6.48 

Total Inference Time : 0.9393737316131592 

Total revision time: 9.42056455230713
Best scored revision CLL: -0.64752


Results 

CLL : -0.696354 

AUC ROC : 0.552643 

AUC PR : 0.397805 

Precision : 0.3748 

Recall : 0.94771 

F1 : 0.537163 

Total Learning Time : 9.437647243499757 

Total Inference Time : 0.9393737316131592 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.212
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.307', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241], 'false,false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
1;false;author(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;haswordauthor(A, D), author(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;haswordauthor(A, G), author(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;haswordauthor(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;haswordauthor(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 6.372
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.2113708693222669;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4100365476024739;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.04247403920938365;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.029670314489465107;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15236935671071888;  // std dev = 15.387, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.15403479727599745;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.316049398423727;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.06013720564120336;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.04576132752236763;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13125584336403376;  // std dev = 14.513, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.045365928966132424;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08273237561836978;  // std dev = 15.250, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.08327714288583914;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.20162351178822374;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.0569091501064141;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.04427527861938991;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.06560087026487163;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.15321855573827303;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.049924555496911584;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.036210483307529476;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03968327055106814;  // std dev = 15.180, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04246559977708561;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.10552164302506484;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04877283758672123;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.03634896547856594;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.548', 'seconds']
Refined model CLL: -0.624998


******************************************
Best model found
******************************************
Results 

CLL : -0.656115 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.372 

Total Inference Time : 0.9429564476013184 

Total revision time: 9.280846723556518
Best scored revision CLL: -0.624998


Results 

CLL : -0.656115 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.33554709815979 

Total Inference Time : 0.9429564476013184 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.415
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.335', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175], 'false,false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
1;false;author(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;haswordauthor(A, D), author(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;haswordauthor(A, G), author(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;haswordauthor(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;haswordauthor(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 8.178
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.37252152204517247;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5511313179310542;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.5597396393083857;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2236051855268736;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3121757897287044;  // std dev = 17.831, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23917942893395805;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3767296944093981;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4144310296505997;  // std dev = 2.335, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.04717465654648138;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18703262656020503;  // std dev = 17.524, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.23435707661916816;  // std dev = 3.099, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14285355055321897;  // std dev = 17.797, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.10290991442156748;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.20270597061012893;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.22586021258439026;  // std dev = 2.308, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.06439987302736429;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.07720437651642656;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.15331093635943568;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19752453460394231;  // std dev = 2.206, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.11298787763364357;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.060647522653033074;  // std dev = 17.769, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.3153094616015316;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.22652505614822654;  // std dev = 1.663, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.04276735763494589;  // std dev = 17.304, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.08053383660002078;  // std dev = 2.921, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.255', 'seconds']
Refined model CLL: -0.67377


******************************************
Best model found
******************************************
Results 

CLL : -0.743147 

AUC ROC : 0.472378 

AUC PR : 0.310349 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 8.178 

Total Inference Time : 1.066584587097168 

Total revision time: 11.470831935882568
Best scored revision CLL: -0.67377


Results 

CLL : -0.743147 

AUC ROC : 0.472378 

AUC PR : 0.310349 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 11.52553231048584 

Total Inference Time : 1.066584587097168 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 2.039
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18901453874415425;  // std dev = 19.717, 1,756.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1810361980861926;  // std dev = 19.471, 1,672.000 (wgt'ed) examples reached here.  /* #neg=1,091 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13274871031396468;  // std dev = 19.791, 1,783.000 (wgt'ed) examples reached here.  /* #neg=1,202 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12256601736540242;  // std dev = 19.624, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09185981175007406;  // std dev = 19.761, 1,772.000 (wgt'ed) examples reached here.  /* #neg=1,191 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08778117816038147;  // std dev = 19.571, 1,705.000 (wgt'ed) examples reached here.  /* #neg=1,124 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07224036762871015;  // std dev = 19.550, 1,698.000 (wgt'ed) examples reached here.  /* #neg=1,117 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0481728726070798;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031005820384673692;  // std dev = 19.799, 1,786.000 (wgt'ed) examples reached here.  /* #neg=1,205 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.025072809418966783;  // std dev = 19.791, 1,783.000 (wgt'ed) examples reached here.  /* #neg=1,202 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.189', 'seconds']
Parameter learned model CLL:-0.535059 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.717, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.471, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.791, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.624, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.761, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.571, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.55, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.692, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.799, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.791, 1, 581]}]
{'': [nan, 0.22139355596949584], 'false': [nan, 0.22139355596949584], 'false,false': [nan, 0.22139355596949584], 'false,false,false': [nan, 0.22139355596949584]}
{'': [nan, 0.2267401015315473], 'false': [nan, 0.2267401015315473]}
{'': [nan, 0.21967362348142394], 'false': [nan, 0.21967362348142394], 'false,false': [nan, 0.21967362348142394], 'false,false,false': [nan, 0.21967362348142394]}
{'': [nan, 0.22349699147344876], 'false': [nan, 0.22349699147344876]}
{'': [nan, 0.22037405286141928], 'false': [nan, 0.22037405286141928], 'false,false': [nan, 0.22037405286141928]}
{'': [nan, 0.22464340691946166], 'false': [nan, 0.22464340691946166], 'false,false': [nan, 0.22464340691946166], 'false,false,false': [nan, 0.22464340691946166]}
{'': [nan, 0.22508882479351683], 'false': [nan, 0.22508882479351683]}
{'': [nan, 0.2219672353521942], 'false': [nan, 0.2219672353521942]}
{'': [nan, 0.21948268792110806], 'false': [nan, 0.21948268792110806], 'false,false': [nan, 0.21948268792110806], 'false,false,false': [nan, 0.21948268792110806]}
{'': [nan, 0.2196736234814503], 'false': [nan, 0.2196736234814503]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
1;false;author(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;haswordauthor(A, D), author(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;haswordauthor(A, G), author(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;haswordauthor(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;haswordauthor(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 9.841
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18995932916004415;  // std dev = 19.703, 1,751.000 (wgt'ed) examples reached here.  /* #neg=1,170 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.19032600479938513;  // std dev = 0.479, 1,527.000 (wgt'ed) examples reached here.  /* #neg=982 #pos=545 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03121923076136999;  // std dev = 3.800, 91.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   | | | else return -0.005868681326542026;  // std dev = 3.887, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13518321798390923;  // std dev = 19.734, 1,779.000 (wgt'ed) examples reached here.  /* #neg=1,198 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.14153703859972575;  // std dev = 0.480, 1,521.000 (wgt'ed) examples reached here.  /* #neg=976 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return -0.005317766067106255;  // std dev = 3.842, 100.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
%   | | | else return -0.038200173782533924;  // std dev = 3.905, 118.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.11796496549128967;  // std dev = 18.680, 1,515.000 (wgt'ed) examples reached here.  /* #neg=970 #pos=545 */
%   | | | else return -0.021068149346424606;  // std dev = 5.486, 220.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08201950098306802;  // std dev = 19.520, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.07896895144519267;  // std dev = 0.480, 1,517.000 (wgt'ed) examples reached here.  /* #neg=972 #pos=545 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.08326520806237919;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return -0.03523754596315588;  // std dev = 5.347, 214.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.06491007682868688;  // std dev = 0.480, 1,508.000 (wgt'ed) examples reached here.  /* #neg=963 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return -0.018469021749202497;  // std dev = 3.865, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return -0.03410789336250774;  // std dev = 3.901, 117.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03967440331687279;  // std dev = 19.510, 1,739.000 (wgt'ed) examples reached here.  /* #neg=1,158 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.03421499951279735;  // std dev = 0.478, 1,544.000 (wgt'ed) examples reached here.  /* #neg=999 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.05806479381730056;  // std dev = 1.324, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.019024164841779854;  // std dev = 5.306, 198.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.394', 'seconds']
Refined model CLL: -0.528595


******************************************
Best model found
******************************************
Results 

CLL : -0.731159 

AUC ROC : 0.548539 

AUC PR : 0.491309 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.841 

Total Inference Time : 1.1015112400054932 

Total revision time: 13.917740230560302
Best scored revision CLL: -0.528595


Results 

CLL : -0.731159 

AUC ROC : 0.548539 

AUC PR : 0.491309 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.972440605163573 

Total Inference Time : 1.1015112400054932 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.669
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.295', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894], 'false,false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
1;false;author(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;haswordauthor(A, D), author(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;haswordauthor(A, G), author(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;haswordauthor(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;haswordauthor(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 11.672
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.24244540732216907;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3663511948402729;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05492410970068688;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.022047397371919752;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19667619803653558;  // std dev = 20.921, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16899795580450921;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.26887550606172433;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.019282199744917326;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.017774913805366863;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13945104203182163;  // std dev = 20.294, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.00279645795799122;  // std dev = 4.675, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10251781245016021;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.08417964798315014;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.15646575873137442;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.0018275347304710357;  // std dev = 3.608, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.0338029435696429;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.0651415680917476;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.11873245461224761;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.002212165244924582;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.03272840889716378;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04752399953605503;  // std dev = 20.828, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.0389359617573029;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.07767582238042792;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.0057598467541618405;  // std dev = 3.605, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.03666930358295191;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.228', 'seconds']
Refined model CLL: -0.671749


******************************************
Best model found
******************************************
Results 

CLL : -0.642759 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.672 

Total Inference Time : 1.1427586078643799 

Total revision time: 15.320771614074708
Best scored revision CLL: -0.671749


Results 

CLL : -0.642759 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.37547198867798 

Total Inference Time : 1.1427586078643799 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.227
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.377', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(A, D)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'author(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G), author(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E), author(A, F)', 'false,false': 'author(A, G), author(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D), author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569], 'false,false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
0;false;author(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;author(A, G), author(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), author(A, D).;true;true
1;false;author(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
2;false;author(A, E).;true;true
2;false,false;author(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- author(A, C).;true;true
4;false;haswordauthor(A, D), author(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
5;false;author(A, E), author(E, F).;true;true
5;false,false;haswordauthor(A, G), author(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
6;false;author(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
8;false;haswordauthor(A, E), author(A, F).;true;true
8;false,false;author(A, G), author(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
9;false;haswordauthor(A, D), author(A, E).;true;true


Refining candidate
***************************
Model training time 6.592
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.3901243759297991;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6759989501634099;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.10132750452422182;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.030031208227926227;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2709742453073246;  // std dev = 15.939, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2657828086391973;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.48660433021657046;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.04773740972376753;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.02543770403821083;  // std dev = 5.273, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.2114656057534022;  // std dev = 14.131, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return -0.005702679805140175;  // std dev = 6.263, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), author(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12683801773379094;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.011398999297652904;  // std dev = 3.804, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.13844293212154485;  // std dev = 13.575, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.014882981509977862;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.043823271057066904;  // std dev = 5.273, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return -0.01677805378257554;  // std dev = 3.837, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.10594285634757257;  // std dev = 13.554, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.011863982725745688;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.035298960721002345;  // std dev = 5.273, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.054096571753494055;  // std dev = 15.476, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.05277650287822271;  // std dev = 13.945, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.23018924880967867;  // std dev = 1.875, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.016942506683345508;  // std dev = 3.361, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.04524181652737137;  // std dev = 5.261, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.257', 'seconds']
Refined model CLL: -0.647521


******************************************
Best model found
******************************************
Results 

CLL : -0.696354 

AUC ROC : 0.552643 

AUC PR : 0.397805 

Precision : 0.3748 

Recall : 0.94771 

F1 : 0.537163 

Total Learning Time : 6.592 

Total Inference Time : 0.950427770614624 

Total revision time: 9.611510271072387
Best scored revision CLL: -0.647521


Results 

CLL : -0.696354 

AUC ROC : 0.552643 

AUC PR : 0.397805 

Precision : 0.3748 

Recall : 0.94771 

F1 : 0.537163 

Total Learning Time : 9.666210645675658 

Total Inference Time : 0.950427770614624 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.253
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.317', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'sameauthor(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E), sameauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241], 'false,false': [nan, 0.2270431588613241], 'false,false,false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546], 'false,false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467], 'false,false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
0;false;sameauthor(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
1;false;sameauthor(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
2;false;sameauthor(A, E).;true;true
2;false,false;sameauthor(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;haswordauthor(A, D), sameauthor(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
5;false;sameauthor(A, E), sameauthor(E, F).;true;true
5;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
6;false;sameauthor(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
8;false;haswordauthor(A, E), sameauthor(A, F).;true;true
8;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
9;false;haswordauthor(A, D), sameauthor(A, E).;true;true


Refining candidate
***************************
Model training time 6.592
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.2113708693222669;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4100365476024739;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.04247403920938365;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.029670314489465107;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15236935671071913;  // std dev = 15.387, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.15403479727599745;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.316049398423727;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.06013720564120336;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.04576132752236763;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.13125584336403384;  // std dev = 14.513, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.045365928966132445;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08273237561836998;  // std dev = 15.250, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.08327714288583914;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.20162351178822374;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.05690915010641416;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.04427527861938995;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.06560087026487163;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.15321855573827303;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return -0.049924555496911605;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0362104833075295;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03968327055106816;  // std dev = 15.180, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04246559977708561;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.10552164302506462;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.04877283758672127;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.036348965478565955;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.526', 'seconds']
Refined model CLL: -0.624998


******************************************
Best model found
******************************************
Results 

CLL : -0.656115 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 6.592 

Total Inference Time : 0.9074537754058838 

Total revision time: 9.52989384651184
Best scored revision CLL: -0.624998


Results 

CLL : -0.656115 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.561415882110595 

Total Inference Time : 0.9074537754058838 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.394
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.325', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'sameauthor(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E), sameauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175], 'false,false': [nan, 0.2425502754124175], 'false,false,false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958], 'false,false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849], 'false,false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
0;false;sameauthor(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
1;false;sameauthor(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
2;false;sameauthor(A, E).;true;true
2;false,false;sameauthor(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;haswordauthor(A, D), sameauthor(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
5;false;sameauthor(A, E), sameauthor(E, F).;true;true
5;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
6;false;sameauthor(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
8;false;haswordauthor(A, E), sameauthor(A, F).;true;true
8;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
9;false;haswordauthor(A, D), sameauthor(A, E).;true;true


Refining candidate
***************************
Model training time 6.745
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.37252152204517247;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5511313179310542;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.5597396393083857;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2236051855268736;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31217578972870463;  // std dev = 17.831, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23917942893395805;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3767296944093981;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.4144310296505997;  // std dev = 2.335, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.04717465654648138;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.18703262656020467;  // std dev = 17.524, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.23435707661916816;  // std dev = 3.099, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1428535505532191;  // std dev = 17.797, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.3754221493318452;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.16770222277482122;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | | then return 0.1041821790261034;  // std dev = 17.312, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.15452858922427629;  // std dev = 3.032, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.3460292322055321;  // std dev = 1.592, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.17450100237285676;  // std dev = 1.705, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.07757416365953058;  // std dev = 17.285, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.11839107105668606;  // std dev = 3.017, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06054971459608867;  // std dev = 17.739, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.24537402815017564;  // std dev = 1.592, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.14206689701167846;  // std dev = 1.700, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.04313623053400845;  // std dev = 17.287, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.07499213840307035;  // std dev = 3.024, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.934', 'seconds']
Refined model CLL: -0.673013


******************************************
Best model found
******************************************
Results 

CLL : -0.747573 

AUC ROC : 0.476867 

AUC PR : 0.315622 

Precision : 0.336043 

Recall : 0.993767 

F1 : 0.50225 

Total Learning Time : 6.745 

Total Inference Time : 1.0227153301239014 

Total revision time: 10.000876487731933
Best scored revision CLL: -0.673013


Results 

CLL : -0.747573 

AUC ROC : 0.476867 

AUC PR : 0.315622 

Precision : 0.336043 

Recall : 0.993767 

F1 : 0.50225 

Total Learning Time : 10.032398523330688 

Total Inference Time : 1.0227153301239014 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 2.007
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19282635445434604;  // std dev = 19.661, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1616385239219054;  // std dev = 19.750, 1,768.000 (wgt'ed) examples reached here.  /* #neg=1,187 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13961164116835736;  // std dev = 19.725, 1,759.000 (wgt'ed) examples reached here.  /* #neg=1,178 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11675638544941376;  // std dev = 19.731, 1,761.000 (wgt'ed) examples reached here.  /* #neg=1,180 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09764619779279698;  // std dev = 19.714, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08665521012694342;  // std dev = 19.612, 1,719.000 (wgt'ed) examples reached here.  /* #neg=1,138 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07078966477878121;  // std dev = 19.600, 1,715.000 (wgt'ed) examples reached here.  /* #neg=1,134 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.046707375562097544;  // std dev = 19.748, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04091697550360152;  // std dev = 19.692, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.027700374048939342;  // std dev = 19.761, 1,772.000 (wgt'ed) examples reached here.  /* #neg=1,191 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.273', 'seconds']
Parameter learned model CLL:-0.535034 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.661, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.75, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'sameauthor(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.725, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.731, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.714, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.612, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.6, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.748, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E), sameauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.692, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.761, 1, 581]}]
{'': [nan, 0.22266844432880978], 'false': [nan, 0.22266844432880978], 'false,false': [nan, 0.22266844432880978], 'false,false,false': [nan, 0.22266844432880978]}
{'': [nan, 0.22062886458098782], 'false': [nan, 0.22062886458098782]}
{'': [nan, 0.2212023537845213], 'false': [nan, 0.2212023537845213], 'false,false': [nan, 0.2212023537845213], 'false,false,false': [nan, 0.2212023537845213]}
{'': [nan, 0.22107489517501408], 'false': [nan, 0.22107489517501408]}
{'': [nan, 0.221457293366103], 'false': [nan, 0.221457293366103], 'false,false': [nan, 0.221457293366103]}
{'': [nan, 0.2237518532393681], 'false': [nan, 0.2237518532393681], 'false,false': [nan, 0.2237518532393681], 'false,false,false': [nan, 0.2237518532393681]}
{'': [nan, 0.22400666389004043], 'false': [nan, 0.22400666389004043]}
{'': [nan, 0.22069257522287758], 'false': [nan, 0.22069257522287758]}
{'': [nan, 0.22196723535218268], 'false': [nan, 0.22196723535218268], 'false,false': [nan, 0.22196723535218268], 'false,false,false': [nan, 0.22196723535218268]}
{'': [nan, 0.22037405286142697], 'false': [nan, 0.22037405286142697]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
0;false;sameauthor(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
1;false;sameauthor(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
2;false;sameauthor(A, E).;true;true
2;false,false;sameauthor(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;haswordauthor(A, D), sameauthor(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
5;false;sameauthor(A, E), sameauthor(E, F).;true;true
5;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
6;false;sameauthor(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
8;false;haswordauthor(A, E), sameauthor(A, F).;true;true
8;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
9;false;haswordauthor(A, D), sameauthor(A, E).;true;true


Refining candidate
***************************
Model training time 9.204
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18958076624611314;  // std dev = 19.709, 1,753.000 (wgt'ed) examples reached here.  /* #neg=1,172 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.1917864801602103;  // std dev = 0.480, 1,521.000 (wgt'ed) examples reached here.  /* #neg=976 #pos=545 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.005816130903926016;  // std dev = 3.887, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | | else return -0.020188953203577574;  // std dev = 3.920, 123.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14241058859576863;  // std dev = 19.626, 1,742.000 (wgt'ed) examples reached here.  /* #neg=1,161 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13755014449739963;  // std dev = 0.479, 1,532.000 (wgt'ed) examples reached here.  /* #neg=987 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.0680768008623619;  // std dev = 1.327, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.015266339741765833;  // std dev = 5.313, 200.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1241921299447209;  // std dev = 18.577, 1,486.000 (wgt'ed) examples reached here.  /* #neg=941 #pos=545 */
%   | | | else return -0.013439256196046877;  // std dev = 5.469, 213.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08718866707283113;  // std dev = 19.417, 1,696.000 (wgt'ed) examples reached here.  /* #neg=1,115 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.0764989903885921;  // std dev = 0.480, 1,514.000 (wgt'ed) examples reached here.  /* #neg=969 #pos=545 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.021406145981245947;  // std dev = 3.860, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
%   | | | else return -0.03936823451633714;  // std dev = 3.900, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.027263917279005605;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.06281407163233708;  // std dev = 18.370, 1,461.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=529 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.0645885363491806;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.009986728262913757;  // std dev = 5.283, 190.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03182366998129736;  // std dev = 19.587, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.039318428382992036;  // std dev = 0.480, 1,520.000 (wgt'ed) examples reached here.  /* #neg=975 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.06690878199600335;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.01980592775757675;  // std dev = 5.304, 197.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.411', 'seconds']
Refined model CLL: -0.529337


******************************************
Best model found
******************************************
Results 

CLL : -0.730279 

AUC ROC : 0.546007 

AUC PR : 0.489901 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 9.204 

Total Inference Time : 1.0983610153198242 

Total revision time: 13.312425647735596
Best scored revision CLL: -0.529337


Results 

CLL : -0.730279 

AUC ROC : 0.546007 

AUC PR : 0.489901 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.34394768333435 

Total Inference Time : 1.0983610153198242 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.6
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.251', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'sameauthor(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E), sameauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894], 'false,false': [nan, 0.24218017894954894], 'false,false,false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464], 'false,false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942], 'false,false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
0;false;sameauthor(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
1;false;sameauthor(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
2;false;sameauthor(A, E).;true;true
2;false,false;sameauthor(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;haswordauthor(A, D), sameauthor(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
5;false;sameauthor(A, E), sameauthor(E, F).;true;true
5;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
6;false;sameauthor(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
8;false;haswordauthor(A, E), sameauthor(A, F).;true;true
8;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
9;false;haswordauthor(A, D), sameauthor(A, E).;true;true


Refining candidate
***************************
Model training time 9.909
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.24244540732216907;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3663511948402729;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.05492410970068688;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.022047397371919752;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19667619803653547;  // std dev = 20.921, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16899795580450921;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.26887550606172433;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.019282199744917277;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.017774913805366863;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1394510420318216;  // std dev = 20.294, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.002796457957991201;  // std dev = 4.675, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1025178124501603;  // std dev = 20.858, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.08417964798315014;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.15646575873137442;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.001827534730471042;  // std dev = 3.608, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.0338029435696429;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.0651415680917476;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.1187324546122477;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0022121652449245636;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.03272840889716386;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.047523999536054885;  // std dev = 20.828, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.1276680274884615;  // std dev = 1.968, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.4185379518070424;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.03861707104838428;  // std dev = 20.151, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | | else return -0.017337792699416744;  // std dev = 4.667, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.132', 'seconds']
Refined model CLL: -0.671424


******************************************
Best model found
******************************************
Results 

CLL : -0.644104 

AUC ROC : 0.563947 

AUC PR : 0.40812 

Precision : 0.625 

Recall : 0.004405 

F1 : 0.008749 

Total Learning Time : 9.909 

Total Inference Time : 1.0557098388671875 

Total revision time: 13.485847648620606
Best scored revision CLL: -0.671424


Results 

CLL : -0.644104 

AUC ROC : 0.563947 

AUC PR : 0.40812 

Precision : 0.625 

Recall : 0.004405 

F1 : 0.008749 

Total Learning Time : 13.51736968421936 

Total Inference Time : 1.0557098388671875 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
0;true;follows(E, A), tweets(E, F).;true;false
0;true,true;follows(D, E), tweets(D, C).;false;false
0;false;follows(G, A).;true;true
0;false,true;follows(A, H), follows(H, G).;true;false
0;false,true,true;follows(H, A).;false;false
0;false,false;tweets(A, I).;false;true
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- tweets(A, C), follows(A, D).;true;true
1;true;follows(D, E).;true;true
1;true,true;tweets(E, C), tweets(D, C).;true;true
1;true,true,true;follows(D, A).;false;false
1;true,true,false;follows(A, E).;false;false
1;true,false;follows(F, A), follows(F, D).;false;true
1;true,false,false;follows(G, A).;false;false
1;false;follows(H, A), tweets(H, I).;false;false
2;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
2;true;follows(D, E), follows(E, A).;true;false
2;true,true;tweets(D, C), tweets(E, F).;true;false
2;true,true,true;follows(A, G).;false;false
2;false;follows(A, H).;true;true
2;false,true;follows(H, I), tweets(A, J).;false;false
2;false,false;follows(K, A).;false;true
2;false,false,false;tweets(A, L).;false;false
3;;accounttype(A, B) :- follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, A), tweets(A, E).;true;false
3;true,true,true;tweets(D, E), tweets(C, F).;false;false
3;true,false;follows(G, C), follows(G, A).;false;true
3;true,false,false;tweets(A, H).;false;false
3;false;tweets(A, I).;true;false
3;false,true;follows(J, A).;false;false
4;;accounttype(A, B) :- follows(A, C).;true;true
4;true;follows(C, A), tweets(C, D).;true;true
4;true,true;follows(A, E), follows(C, E).;true;true
4;true,true,true;follows(E, F), follows(F, A).;false;false
4;true,true,false;tweets(A, G).;false;false
4;true,false;follows(C, H), follows(I, A).;false;false
4;false;tweets(A, J), follows(K, A).;false;true
4;false,false;tweets(A, L).;false;false
5;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
5;true;follows(A, E), follows(C, E).;true;false
5;true,true;tweets(C, F), tweets(E, G).;true;true
5;true,true,true;tweets(A, G), follows(E, C).;false;false
5;true,true,false;follows(A, C).;false;false
5;false;follows(A, H), follows(H, I).;false;true
5;false,false;tweets(A, J), follows(A, K).;false;true
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
6;true;tweets(A, E), follows(A, D).;true;true
6;true,true;follows(C, A), follows(D, A).;true;false
6;true,true,true;follows(A, F), follows(F, C).;false;false
6;true,false;tweets(A, G), follows(C, A).;true;true
6;true,false,true;tweets(C, G).;false;false
6;true,false,false;follows(H, A), follows(H, C).;false;false
6;false;follows(I, A), tweets(A, J).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;true
7;true;follows(C, D), follows(A, D).;true;true
7;true,true;follows(E, A), follows(F, E).;true;true
7;true,true,true;follows(E, C), follows(D, F).;false;false
7;true,true,false;follows(G, A).;false;false
7;true,false;follows(H, A), follows(C, I).;false;true
7;true,false,false;follows(C, J), tweets(A, K).;false;false
7;false;follows(L, A).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
8;true;tweets(C, E), tweets(D, E).;true;false
8;true,true;follows(A, F), follows(C, F).;false;false
8;false;tweets(A, G), follows(A, H).;true;true
8;false,true;follows(I, A).;false;true
8;false,true,false;follows(H, J), tweets(J, G).;false;false
8;false,false;follows(A, K), follows(K, L).;false;true
8;false,false,false;tweets(A, M).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
9;true;follows(C, D), follows(D, A).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), follows(E, C).;false;false
9;true,true,false;follows(A, F), follows(C, F).;false;false
9;false;tweets(A, G), follows(A, H).;true;false
9;false,true;follows(H, I), follows(I, A).;false;true
9;false,true,false;follows(A, J), follows(H, J).;false;false


Model training time 1.286
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.372', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(A, D)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'sameauthor(F, A)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G), sameauthor(A, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E), sameauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)', 'false,false,false': 'haswordauthor(A, I)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569], 'false,false': [nan, 0.2494331065759569], 'false,false,false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508], 'false,false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066], 'false,false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
0;false;sameauthor(E, A).;true;true
0;false,false;haswordauthor(A, F).;true;true
0;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true
1;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(A, D).;true;true
1;false;sameauthor(E, A), haswordauthor(E, F).;true;true
2;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
2;false;sameauthor(A, E).;true;true
2;false,false;sameauthor(F, A).;true;true
2;false,false,false;haswordauthor(A, G).;true;true
3;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- sameauthor(A, C).;true;true
4;false;haswordauthor(A, D), sameauthor(E, A).;true;true
4;false,false;haswordauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
5;false;sameauthor(A, E), sameauthor(E, F).;true;true
5;false,false;haswordauthor(A, G), sameauthor(A, H).;true;true
5;false,false,false;haswordauthor(A, I).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
6;false;sameauthor(E, A), haswordauthor(A, F).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
8;false;haswordauthor(A, E), sameauthor(A, F).;true;true
8;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
8;false,false,false;haswordauthor(A, I).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
9;false;haswordauthor(A, D), sameauthor(A, E).;true;true


Refining candidate
***************************
Model training time 6.501
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.3901243759297991;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6759989501634099;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.10132750452422182;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.030031208227926227;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27097424530732456;  // std dev = 15.939, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2657828086391973;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.48660433021657046;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.04773740972376755;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.025437704038210822;  // std dev = 5.273, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.21146560575340212;  // std dev = 14.131, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return -0.005702679805140188;  // std dev = 6.263, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G), sameauthor(A, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12683801773379105;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.01139899929765286;  // std dev = 3.804, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.13844293212154485;  // std dev = 13.575, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.015204977465805035;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.043931944692158505;  // std dev = 5.273, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.01677805378257548;  // std dev = 3.837, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.1059428563475726;  // std dev = 13.554, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.02187287180253658;  // std dev = 3.359, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.03867530033215716;  // std dev = 5.266, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, I) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05410258402391345;  // std dev = 15.475, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.052775006863002294;  // std dev = 13.945, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.2301878674328974;  // std dev = 1.875, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.007067417160385018;  // std dev = 3.359, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.04187223511358891;  // std dev = 5.266, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.229', 'seconds']
Refined model CLL: -0.64752


******************************************
Best model found
******************************************
Results 

CLL : -0.696354 

AUC ROC : 0.552643 

AUC PR : 0.397805 

Precision : 0.3748 

Recall : 0.94771 

F1 : 0.537163 

Total Learning Time : 6.501 

Total Inference Time : 1.0156240463256836 

Total revision time: 9.601316034317017
Best scored revision CLL: -0.64752


Results 

CLL : -0.696354 

AUC ROC : 0.552643 

AUC PR : 0.397805 

Precision : 0.3748 

Recall : 0.94771 

F1 : 0.537163 

Total Learning Time : 9.632838069915772 

Total Inference Time : 1.0156240463256836 

Run: 3
Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

Model training time 540.823 

Building refine structure 

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, A), tweets(D, E) )
%   | then if ( follows(C, A) )
%   | | then if ( follows(D, C), tweets(A, F) )
%   | | | then return 0.1829896994307197;  // std dev = 8.299, 314.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=102 */
%   | | | else return 0.20248855774102273;  // std dev = 6.918, 212.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=73 */
%   | | else if ( follows(G, D), tweets(A, E) )
%   | | | then return 0.224815601766179;  // std dev = 2.639, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.16962434493557885;  // std dev = 0.463, 183.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=57 */
%   else if ( follows(H, A) )
%   | then if ( follows(H, I), follows(I, A) )
%   | | then if ( tweets(A, J), follows(I, H) )
%   | | | then return 0.27119241336038186;  // std dev = 3.339, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.18167834686421824;  // std dev = 0.468, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(D, E) )
%   | then if ( follows(E, C), tweets(C, F) )
%   | | then if ( follows(A, C) )
%   | | | then return 0.18055638950071284;  // std dev = 10.657, 501.000 (wgt'ed) examples reached here.  /* #neg=327 #pos=174 */
%   | | | else return 0.09297173365685255;  // std dev = 2.264, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( tweets(A, G), tweets(E, G) )
%   | | | then return 0.17518392810968997;  // std dev = 1.586, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.8321376034779254;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( tweets(A, H) )
%   | | then if ( follows(C, I), follows(I, A) )
%   | | | then return 0.17252700071668484;  // std dev = 3.784, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return 0.19363128276558195;  // std dev = 1.377, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.4211321733653402;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( follows(A, J), follows(J, K) )
%   | then return 0.12389232613237457;  // std dev = 0.453, 146.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=42 */
%   | else return 0.18327845762935568;  // std dev = 0.476, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(C, E), follows(A, E) )
%   | then return 0.13230551300633875;  // std dev = 0.470, 446.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=146 */
%   | else if ( follows(A, F), tweets(C, D) )
%   | | then return 0.25899600596494954;  // std dev = 0.498, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else return 0.1502279925255995;  // std dev = 0.479, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   else if ( follows(A, G), tweets(A, H) )
%   | then if ( follows(G, I), follows(A, I) )
%   | | then return 0.06853945149530918;  // std dev = 0.433, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( follows(G, J), tweets(G, H) )
%   | | | then return 0.25187278482864295;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.34870422346392616;  // std dev = 1.800, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | else if ( follows(A, K), follows(K, L) )
%   | | then if ( follows(A, M), follows(M, K) )
%   | | | then return 0.14284907215519;  // std dev = 4.750, 100.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | | else return 0.22110735516890526;  // std dev = 3.332, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | else return 0.12488255584323016;  // std dev = 0.467, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( tweets(C, D), tweets(A, D) )
%   | then if ( follows(A, E), follows(C, E) )
%   | | then if ( tweets(E, D) )
%   | | | then return 0.12284215960386778;  // std dev = 9.031, 365.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=123 */
%   | | | else return 0.03455704441181062;  // std dev = 1.937, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( follows(A, F), follows(F, C) )
%   | | | then return 0.033240191508752154;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.17207789489203648;  // std dev = 2.308, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( follows(A, G), follows(G, C) )
%   | | then if ( follows(G, A), tweets(A, H) )
%   | | | then return 0.1198656570997317;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.19417172456410212;  // std dev = 3.908, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | else return 0.07071774508499806;  // std dev = 0.456, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   else if ( follows(A, I), follows(I, J) )
%   | then return 0.10800117374467809;  // std dev = 0.470, 165.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=54 */
%   | else return 0.09136552876269644;  // std dev = 0.466, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( tweets(A, E), follows(A, D) )
%   | then if ( tweets(C, E), tweets(D, E) )
%   | | then if ( follows(D, F), follows(F, C) )
%   | | | then return 0.08520189352611823;  // std dev = 9.628, 427.000 (wgt'ed) examples reached here.  /* #neg=291 #pos=136 */
%   | | | else return 0.20418896163888892;  // std dev = 2.110, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( tweets(D, E), follows(C, A) )
%   | | | then return 0.576430002455352;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.10815148137524805;  // std dev = 1.412, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( tweets(C, G), tweets(A, G) )
%   | | then return 0.016817758471326442;  // std dev = 0.448, 87.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | else if ( follows(A, D) )
%   | | | then return 0.06934004901604257;  // std dev = 5.158, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   | | | else return 0.18052068517618491;  // std dev = 3.040, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
%   else if ( follows(H, A), follows(A, I) )
%   | then return 0.11382104205772099;  // std dev = 0.482, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | else return 0.03856682965346152;  // std dev = 0.452, 169.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=48 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A), tweets(A, D) )
%   | then if ( tweets(C, D) )
%   | | then if ( follows(A, E), follows(C, E) )
%   | | | then return 0.07446007105076777;  // std dev = 9.281, 391.000 (wgt'ed) examples reached here.  /* #neg=263 #pos=128 */
%   | | | else return 0.0426379781332678;  // std dev = 2.610, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else return 0.032826379740121536;  // std dev = 0.468, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else return 0.046428977502672726;  // std dev = 0.465, 337.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=104 */
%   else if ( follows(F, A) )
%   | then if ( tweets(A, G) )
%   | | then if ( follows(F, H), follows(H, A) )
%   | | | then return 0.12355867149226242;  // std dev = 3.533, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.058065865668915105;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.30043884734213666;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( tweets(A, I) )
%   | | then return 0.09832218019026422;  // std dev = 0.471, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0.08317066503874916;  // std dev = 0.466, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(A, E), tweets(C, F) )
%   | then return 0.046747063425159344;  // std dev = 0.465, 549.000 (wgt'ed) examples reached here.  /* #neg=375 #pos=174 */
%   | else return 0.005904501684878873;  // std dev = 0.458, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   else if ( follows(A, G), follows(G, H) )
%   | then if ( follows(H, G) )
%   | | then if ( follows(I, A) )
%   | | | then return 0.18250829023080273;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06146093377810644;  // std dev = 5.231, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | else return -0.012593622381609215;  // std dev = 0.431, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( tweets(A, J) )
%   | | then if ( follows(A, K) )
%   | | | then return 0.11545588504033422;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.14685452575946162;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( follows(A, L) )
%   | | | then return 0.07693450962764592;  // std dev = 2.185, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.09970838563131271;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(C, D), follows(D, A) )
%   | then if ( follows(D, C), follows(A, D) )
%   | | then if ( tweets(C, E), tweets(D, F) )
%   | | | then return 0.059833154876465934;  // std dev = 8.021, 289.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=97 */
%   | | | else return 0.07939188681173899;  // std dev = 2.546, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( follows(A, G), follows(C, G) )
%   | | | then return 0.2405518517287597;  // std dev = 2.400, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.046419996277200726;  // std dev = 1.407, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else return 0.03792382376917661;  // std dev = 0.465, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
%   else if ( follows(H, A) )
%   | then if ( tweets(A, I) )
%   | | then if ( follows(A, J), follows(J, K) )
%   | | | then return 0.06789500105794442;  // std dev = 2.530, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.013267981253457345;  // std dev = 4.183, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   | | else return -0.07341743013187174;  // std dev = 0.457, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else return 0.05025400845489112;  // std dev = 0.465, 207.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=66 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, A) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(C, D) )
%   | | then if ( tweets(D, E), tweets(C, E) )
%   | | | then return 0.060031226345598945;  // std dev = 9.521, 397.000 (wgt'ed) examples reached here.  /* #neg=258 #pos=139 */
%   | | | else return 0.23583040748919268;  // std dev = 1.656, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( follows(A, F), follows(C, F) )
%   | | | then return 0.17984228711577538;  // std dev = 1.426, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.08125179409541157;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( follows(G, A), follows(G, C) )
%   | | then return 0.3582092587990118;  // std dev = 0.836, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.024910914254642428;  // std dev = 0.466, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   else if ( follows(H, A), tweets(H, I) )
%   | then return -0.033560971678150794;  // std dev = 0.452, 142.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=39 */
%   | else if ( tweets(A, J) )
%   | | then return 0.04001336231541915;  // std dev = 0.468, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | | else return 0.08103012386682552;  // std dev = 0.480, 91.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=33 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(A, D), follows(E, A) )
%   | then if ( follows(F, E), follows(F, D) )
%   | | then if ( tweets(E, C), follows(D, G) )
%   | | | then return 0.03320079964956323;  // std dev = 9.797, 429.000 (wgt'ed) examples reached here.  /* #neg=284 #pos=145 */
%   | | | else return 0.18228685714020204;  // std dev = 1.906, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else return -0.0720907318640831;  // std dev = 0.431, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(H, I), follows(I, A) )
%   | | | then return 0.1089349006542335;  // std dev = 3.491, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | | else return 0.040888486933852795;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.07312533910705403;  // std dev = 4.392, 83.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=30 */
%   | | | else return -0.014813847247176909;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( follows(A, K), follows(L, A) )
%   | then return 0.022479827766662717;  // std dev = 0.469, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | else return 0.006337683072645545;  // std dev = 0.462, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.068
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.306', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E), title(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), title(D, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
2;false;author(A, E), title(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;title(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;title(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;title(A, F).;true;true
9;;samevenue(A, B) :- title(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 7.599
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23843062524035266;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4370963035205641;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.015414283291292274;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00261055857137374;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20686012285620575;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.37517858762297;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.014883205992041787;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -8.229340790782751E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.18083342838986066;  // std dev = 14.515, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.007203212463194873;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.1441265645223528;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.27039411344684394;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012353825541705521;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8371159705265007E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.11714897171203428;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2099446554977447;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.012052489766867545;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 0.0015368196808772995;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.09663394563690579;  // std dev = 14.499, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.004921824975294533;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06364924931450983;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.0599650623818253;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.12041929846033926;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.017951389171280734;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.005516977251776916;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.04863475754750561;  // std dev = 14.496, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.010554513289568362;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.03587496117518709;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.07825128401144371;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.01553932179454186;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.0023559288541604;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.662', 'seconds']
Refined model CLL: -0.623472


******************************************
Best model found
******************************************
Results 

CLL : -0.655856 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 7.599 

Total Inference Time : 0.9843180179595947 

Total revision time: 10.41194743347168
Best scored revision CLL: -0.623472


Results 

CLL : -0.655856 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 10.42916697692871 

Total Inference Time : 0.9843180179595947 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.269
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.420', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E), title(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), title(D, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
2;false;author(A, E), title(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;title(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;title(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;title(A, F).;true;true
9;;samevenue(A, B) :- title(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 11.813
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.4356367001892301;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.6142464960751212;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37395569825543723;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5220782826498102;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.5518334294031213;  // std dev = 2.371, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.19300554036354514;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.3102004678110396;  // std dev = 17.526, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.3614015549008065;  // std dev = 3.121, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24127269103163454;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3435575041783941;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.36540351775923596;  // std dev = 2.318, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.07423795041043602;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.18549286559631611;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.25857685297680905;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.30270683625986117;  // std dev = 2.206, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.0074476139905962436;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.14225018919536966;  // std dev = 17.516, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.16052208758088143;  // std dev = 2.971, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10754461081504202;  // std dev = 17.767, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.07839945835582514;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.1495937400197709;  // std dev = 2.921, 53.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.008613222271575884;  // std dev = 2.678, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | | else return 0.3779039583543081;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.061841827499222915;  // std dev = 17.543, 1,279.000 (wgt'ed) examples reached here.  /* #neg=531 #pos=748 */
%   | | | else return 0.02149812621852306;  // std dev = 2.754, 36.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.31590436952739986;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.2271255024278396;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.10894980352878214;  // std dev = 2.534, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.0427645976795242;  // std dev = 17.352, 1,254.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=732 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.733', 'seconds']
Refined model CLL: -0.673071


******************************************
Best model found
******************************************
Results 

CLL : -0.744162 

AUC ROC : 0.500674 

AUC PR : 0.326996 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 11.813 

Total Inference Time : 1.0381810665130615 

Total revision time: 14.937462312698365
Best scored revision CLL: -0.673071


Results 

CLL : -0.744162 

AUC ROC : 0.500674 

AUC PR : 0.326996 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 14.954681856155396 

Total Inference Time : 1.0381810665130615 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.953
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19014893509950734;  // std dev = 19.700, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17059326140350936;  // std dev = 19.624, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14033969174585142;  // std dev = 19.700, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1152047468857145;  // std dev = 19.737, 1,763.000 (wgt'ed) examples reached here.  /* #neg=1,182 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09761481964027972;  // std dev = 19.700, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07682481080072685;  // std dev = 19.742, 1,765.000 (wgt'ed) examples reached here.  /* #neg=1,184 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06094123495175466;  // std dev = 19.758, 1,771.000 (wgt'ed) examples reached here.  /* #neg=1,190 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047184200964865655;  // std dev = 19.783, 1,780.000 (wgt'ed) examples reached here.  /* #neg=1,199 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04471010541905577;  // std dev = 19.678, 1,742.000 (wgt'ed) examples reached here.  /* #neg=1,161 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02923989769870719;  // std dev = 19.769, 1,775.000 (wgt'ed) examples reached here.  /* #neg=1,194 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.232', 'seconds']
Parameter learned model CLL:-0.534207 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.7, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.624, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E), title(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.7, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.737, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.7, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.742, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.758, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.783, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), title(D, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.678, 1, 581]}]
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.769, 1, 581]}]
{'': [nan, 0.22177599999998554], 'false': [nan, 0.22177599999998554]}
{'': [nan, 0.2234969914734398], 'false': [nan, 0.2234969914734398]}
{'': [nan, 0.22177599999998382], 'false': [nan, 0.22177599999998382], 'false,false': [nan, 0.22177599999998382]}
{'': [nan, 0.22094744526438226], 'false': [nan, 0.22094744526438226]}
{'': [nan, 0.2217760000000167], 'false': [nan, 0.2217760000000167]}
{'': [nan, 0.2208200049755691], 'false': [nan, 0.2208200049755691], 'false,false': [nan, 0.2208200049755691]}
{'': [nan, 0.2204377509412587], 'false': [nan, 0.2204377509412587], 'false,false': [nan, 0.2204377509412587], 'false,false,false': [nan, 0.2204377509412587]}
{'': [nan, 0.2198646004292471], 'false': [nan, 0.2198646004292471]}
{'': [nan, 0.22228596925292668], 'false': [nan, 0.22228596925292668], 'false,false': [nan, 0.22228596925292668]}
{'': [nan, 0.22018297956754598], 'false': [nan, 0.22018297956754598]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
2;false;author(A, E), title(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;title(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;title(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;title(A, F).;true;true
9;;samevenue(A, B) :- title(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 11.213
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.22027518094668344;  // std dev = 0.481, 1,505.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.0346195233348065;  // std dev = 3.850, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return 0.009409439301193045;  // std dev = 3.909, 119.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.20219771186134225;  // std dev = 0.484, 1,461.000 (wgt'ed) examples reached here.  /* #neg=916 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.031756947278176934;  // std dev = 3.854, 103.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=18 */
%   | | | else return 0.01185902123717515;  // std dev = 3.893, 114.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.16144308312165048;  // std dev = 18.635, 1,502.000 (wgt'ed) examples reached here.  /* #neg=957 #pos=545 */
%   | | | else return 0.029232763505253747;  // std dev = 5.445, 204.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1250401266537334;  // std dev = 0.478, 1,541.000 (wgt'ed) examples reached here.  /* #neg=996 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.007976052508064973;  // std dev = 1.310, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.024356814169268517;  // std dev = 5.295, 194.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordauthor(H, G) )
%   | | | then return 0.24857824332422016;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.10895058374976242;  // std dev = 18.619, 1,504.000 (wgt'ed) examples reached here.  /* #neg=962 #pos=542 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.023137679357390667;  // std dev = 3.850, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return 9.548089352533847E-4;  // std dev = 3.898, 116.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.08201739517838655;  // std dev = 18.753, 1,537.000 (wgt'ed) examples reached here.  /* #neg=992 #pos=545 */
%   | | | else return 0.01133769856798274;  // std dev = 5.476, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05727077272600239;  // std dev = 19.557, 1,768.000 (wgt'ed) examples reached here.  /* #neg=1,187 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.05994988317806138;  // std dev = 3.177, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.06616185927430918;  // std dev = 18.298, 1,441.000 (wgt'ed) examples reached here.  /* #neg=912 #pos=529 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.016395333987914304;  // std dev = 3.841, 100.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
%   | | | else return -0.006306073214277816;  // std dev = 3.890, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.04157371880507682;  // std dev = 18.723, 1,528.000 (wgt'ed) examples reached here.  /* #neg=983 #pos=545 */
%   | | | else return -0.009377049591338475;  // std dev = 5.512, 231.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.017434848499123166;  // std dev = 3.312, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.03774987227751173;  // std dev = 18.374, 1,462.000 (wgt'ed) examples reached here.  /* #neg=933 #pos=529 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.01836267420449378;  // std dev = 3.838, 99.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=18 */
%   | | | else return -0.016793345088790854;  // std dev = 3.915, 122.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.589', 'seconds']
Refined model CLL: -0.529074


******************************************
Best model found
******************************************
Results 

CLL : -0.728029 

AUC ROC : 0.552001 

AUC PR : 0.501434 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 11.213 

Total Inference Time : 1.0625956058502197 

Total revision time: 15.18777357673645
Best scored revision CLL: -0.529074


Results 

CLL : -0.728029 

AUC ROC : 0.552001 

AUC PR : 0.501434 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 15.204993120193482 

Total Inference Time : 1.0625956058502197 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.538
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.218', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E), title(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), title(D, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
2;false;author(A, E), title(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;title(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;title(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;title(A, F).;true;true
9;;samevenue(A, B) :- title(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 12.856
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.27854694504975613;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.40245273256786723;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0910256474282795;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.2411503606196619;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3460981859178489;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08275848618217187;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.0467032057251723;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.20676068655410654;  // std dev = 20.296, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.05842144111536193;  // std dev = 4.675, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.16566793394213453;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24375552389960758;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06417818286192126;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03211216496973908;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.13296294553594484;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.19017350087960896;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05812098897679594;  // std dev = 3.607, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.023416969238971023;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.10688125746810205;  // std dev = 20.286, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.036864505161648055;  // std dev = 4.673, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07958768234066256;  // std dev = 20.825, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.0634056415737676;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.100142514965384;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03220096344850349;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.0012277905113744305;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.20778508630508874;  // std dev = 2.231, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.0456846424929814;  // std dev = 20.686, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2137007689244071;  // std dev = 2.177, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.03664577490566421;  // std dev = 20.146, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.02254512249987027;  // std dev = 3.604, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.011012318417519946;  // std dev = 2.969, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.329', 'seconds']
Refined model CLL: -0.670937


******************************************
Best model found
******************************************
Results 

CLL : -0.641986 

AUC ROC : 0.563204 

AUC PR : 0.417728 

Precision : 0.666667 

Recall : 0.007048 

F1 : 0.013949 

Total Learning Time : 12.856 

Total Inference Time : 1.0899808406829834 

Total revision time: 16.314063734054564
Best scored revision CLL: -0.670937


Results 

CLL : -0.641986 

AUC ROC : 0.563204 

AUC PR : 0.417728 

Precision : 0.666667 

Recall : 0.007048 

F1 : 0.013949 

Total Learning Time : 16.331283277511595 

Total Inference Time : 1.0899808406829834 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.272
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.260', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E), title(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'title(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), title(D, E)', 'false,false': 'title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
2;false;author(A, E), title(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;title(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;title(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), title(D, E).;true;true
8;false,false;title(A, F).;true;true
9;;samevenue(A, B) :- title(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 7.259
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.443242102801371;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08314893509951105;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3803254334818479;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6157326050686436;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14262154001125393;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07001067783705692;  // std dev = 5.276, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.3178463751414104;  // std dev = 14.134, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.0763972806702429;  // std dev = 6.266, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.6090745246277838;  // std dev = 0.193, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24566654892033604;  // std dev = 14.083, 826.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=488 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11210108939026059;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.0498004671762839;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.05996649926635625;  // std dev = 3.697, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.20200096197679754;  // std dev = 13.575, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.10281518723651319;  // std dev = 3.358, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.0397356335065603;  // std dev = 5.269, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.14490148621708002;  // std dev = 14.092, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.046940314321404615;  // std dev = 6.257, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0947748971472398;  // std dev = 15.445, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.08051978429334082;  // std dev = 14.003, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | | else return 0.2715043504295006;  // std dev = 1.326, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06212009050165054;  // std dev = 3.359, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.010684146764961617;  // std dev = 5.268, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), title(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.006489460467610378;  // std dev = 5.054, 115.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=46 */
%   | | | else return 0.06267846055571451;  // std dev = 14.551, 935.000 (wgt'ed) examples reached here.  /* #neg=431 #pos=504 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.06704047405841686;  // std dev = 2.976, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return -0.04593501938095095;  // std dev = 3.996, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.03243125689618358;  // std dev = 4.701, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | | else return 0.057372696798566;  // std dev = 13.756, 840.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=470 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.364', 'seconds']
Refined model CLL: -0.644546


******************************************
Best model found
******************************************
Results 

CLL : -0.699723 

AUC ROC : 0.555053 

AUC PR : 0.402248 

Precision : 0.375381 

Recall : 0.949331 

F1 : 0.53802 

Total Learning Time : 7.259 

Total Inference Time : 1.0311400890350342 

Total revision time: 10.316725355148316
Best scored revision CLL: -0.644546


Results 

CLL : -0.699723 

AUC ROC : 0.555053 

AUC PR : 0.402248 

Precision : 0.375381 

Recall : 0.949331 

F1 : 0.53802 

Total Learning Time : 10.333944898605347 

Total Inference Time : 1.0311400890350342 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.109
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.270', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E), haswordauthor(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
2;false;author(A, E), haswordauthor(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 7.624
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23843062524035266;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4370963035205641;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.015414283291292274;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00261055857137374;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20686012285620575;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.37517858762297;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.014883205992041789;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -8.229340790782722E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.18083342838986044;  // std dev = 14.515, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.007203212463194942;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.1441265645223528;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.27039411344684394;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012353825541705504;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8371159705264443E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.11714897171203428;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2099446554977447;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.012052489766867522;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 0.0015368196808772966;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.09663394563690586;  // std dev = 14.499, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.004921824975294488;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06364924931450974;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.0599650623818253;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.12041929846033926;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.017951389171280734;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.005516977251776914;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.04863475754750561;  // std dev = 14.496, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.010554513289568442;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.03587496117518709;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.07825128401144371;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.01553932179454186;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.002355928854160397;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.606', 'seconds']
Refined model CLL: -0.623472


******************************************
Best model found
******************************************
Results 

CLL : -0.655856 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 7.624 

Total Inference Time : 0.9754879474639893 

Total revision time: 10.437161643981934
Best scored revision CLL: -0.623472


Results 

CLL : -0.655856 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 10.492894609451294 

Total Inference Time : 0.9754879474639893 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.248
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.264', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E), haswordauthor(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
2;false;author(A, E), haswordauthor(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 11.001
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.4356367001892301;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.6142464960751212;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37395569825543723;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5220782826498102;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.5518334294031212;  // std dev = 2.371, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.19300554036354514;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.3102004678110394;  // std dev = 17.526, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.3614015549008065;  // std dev = 3.121, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24127269103163454;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.3435575041783941;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.3654035177592359;  // std dev = 2.318, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.07423795041043602;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.4580051005065866;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.08768906434484489;  // std dev = 1.673, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.25159436698178045;  // std dev = 2.530, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.18591617510443545;  // std dev = 17.374, 1,254.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=732 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.14193944890378565;  // std dev = 17.489, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.16775922872180624;  // std dev = 3.029, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10750114925133883;  // std dev = 17.750, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordvenue(A, E) )
%   | | | then return 0.07758275505961232;  // std dev = 17.265, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.16938514526833082;  // std dev = 2.935, 53.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.1679431280317605;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return -0.11734058924083314;  // std dev = 1.837, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.05994072269007454;  // std dev = 17.486, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.08078991678760407;  // std dev = 2.976, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.29773928197009586;  // std dev = 1.593, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.21699785306347733;  // std dev = 1.711, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.08581506692674566;  // std dev = 2.351, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | else return 0.043466755277458365;  // std dev = 17.362, 1,254.000 (wgt'ed) examples reached here.  /* #neg=522 #pos=732 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.397', 'seconds']
Refined model CLL: -0.672229


******************************************
Best model found
******************************************
Results 

CLL : -0.74475 

AUC ROC : 0.476699 

AUC PR : 0.315103 

Precision : 0.336799 

Recall : 0.995102 

F1 : 0.503265 

Total Learning Time : 11.001 

Total Inference Time : 1.0283820629119873 

Total revision time: 14.091445611953734
Best scored revision CLL: -0.672229


Results 

CLL : -0.74475 

AUC ROC : 0.476699 

AUC PR : 0.315103 

Precision : 0.336799 

Recall : 0.995102 

F1 : 0.503265 

Total Learning Time : 14.147178577423094 

Total Inference Time : 1.0283820629119873 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 2.011
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19090953074670092;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17206058195116636;  // std dev = 19.600, 1,715.000 (wgt'ed) examples reached here.  /* #neg=1,134 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14383244134500328;  // std dev = 19.644, 1,730.000 (wgt'ed) examples reached here.  /* #neg=1,149 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12110943860262394;  // std dev = 19.635, 1,727.000 (wgt'ed) examples reached here.  /* #neg=1,146 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09666442731168488;  // std dev = 19.684, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07148226186442767;  // std dev = 19.791, 1,783.000 (wgt'ed) examples reached here.  /* #neg=1,202 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06805963461757293;  // std dev = 19.638, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.042666803223527075;  // std dev = 19.812, 1,791.000 (wgt'ed) examples reached here.  /* #neg=1,210 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.047147587051407897;  // std dev = 19.618, 1,721.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02724997279315037;  // std dev = 19.767, 1,774.000 (wgt'ed) examples reached here.  /* #neg=1,193 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.242', 'seconds']
Parameter learned model CLL:-0.535027 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.689, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.6, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E), haswordauthor(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.644, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.635, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.684, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.791, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.638, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.812, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.618, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.767, 1, 581]}]
{'': [nan, 0.22203098163170407], 'false': [nan, 0.22203098163170407]}
{'': [nan, 0.22400666389004525], 'false': [nan, 0.22400666389004525]}
{'': [nan, 0.2230508870994627], 'false': [nan, 0.2230508870994627], 'false,false': [nan, 0.2230508870994627]}
{'': [nan, 0.22324208750358532], 'false': [nan, 0.22324208750358532]}
{'': [nan, 0.22215847519148452], 'false': [nan, 0.22215847519148452]}
{'': [nan, 0.21967362348145306], 'false': [nan, 0.21967362348145306], 'false,false': [nan, 0.21967362348145306]}
{'': [nan, 0.22317835594562646], 'false': [nan, 0.22317835594562646], 'false,false': [nan, 0.22317835594562646], 'false,false,false': [nan, 0.22317835594562646]}
{'': [nan, 0.21916456156333902], 'false': [nan, 0.21916456156333902]}
{'': [nan, 0.22362442818505385], 'false': [nan, 0.22362442818505385], 'false,false': [nan, 0.22362442818505385]}
{'': [nan, 0.22024666706492177], 'false': [nan, 0.22024666706492177]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
2;false;author(A, E), haswordauthor(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 13.842
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.21693761186053437;  // std dev = 0.480, 1,519.000 (wgt'ed) examples reached here.  /* #neg=974 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.04564893509951238;  // std dev = 3.824, 96.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=18 */
%   | | | else return 0.009409439301193045;  // std dev = 3.909, 119.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.20114426547415878;  // std dev = 0.483, 1,467.000 (wgt'ed) examples reached here.  /* #neg=922 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.017638373103567483;  // std dev = 3.877, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return 0.0045406493313363315;  // std dev = 3.917, 122.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.1595103828194542;  // std dev = 18.673, 1,513.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=545 */
%   | | | else return 0.011656540628962266;  // std dev = 5.504, 228.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1296298464765442;  // std dev = 0.479, 1,526.000 (wgt'ed) examples reached here.  /* #neg=981 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.007030139955606603;  // std dev = 1.307, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.015562074566808843;  // std dev = 5.333, 208.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.09759287573574177;  // std dev = 0.477, 1,563.000 (wgt'ed) examples reached here.  /* #neg=1,018 #pos=545 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.015748888122685104;  // std dev = 1.315, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.015939423739994126;  // std dev = 5.326, 205.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.0872537002157641;  // std dev = 18.718, 1,526.000 (wgt'ed) examples reached here.  /* #neg=981 #pos=545 */
%   | | | else return 0.015027000118966703;  // std dev = 5.477, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06729407900484892;  // std dev = 19.449, 1,718.000 (wgt'ed) examples reached here.  /* #neg=1,137 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.052495512697773826;  // std dev = 0.478, 1,540.000 (wgt'ed) examples reached here.  /* #neg=995 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.019911884155344128;  // std dev = 3.829, 97.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=18 */
%   | | | else return 0.004080971369695123;  // std dev = 3.879, 110.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.05004030095458811;  // std dev = 18.638, 1,503.000 (wgt'ed) examples reached here.  /* #neg=958 #pos=545 */
%   | | | else return -0.007898132945841945;  // std dev = 5.512, 230.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return -0.0024919372858452408;  // std dev = 16.804, 1,329.000 (wgt'ed) examples reached here.  /* #neg=917 #pos=412 */
%   | | | else return 0.16373230045317375;  // std dev = 8.352, 283.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=136 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.012072214759557196;  // std dev = 4.099, 116.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=21 */
%   | | | else return 0.5094296714911398;  // std dev = 1.295, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.368', 'seconds']
Refined model CLL: -0.525312


******************************************
Best model found
******************************************
Results 

CLL : -0.7326 

AUC ROC : 0.557019 

AUC PR : 0.512118 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.842 

Total Inference Time : 1.2357642650604248 

Total revision time: 17.9938588886261
Best scored revision CLL: -0.525312


Results 

CLL : -0.7326 

AUC ROC : 0.557019 

AUC PR : 0.512118 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.04959185409546 

Total Inference Time : 1.2357642650604248 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.604
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.366', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E), haswordauthor(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
2;false;author(A, E), haswordauthor(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 13.102
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.27854694504975613;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.40245273256786723;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0910256474282795;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.2411503606196619;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3460981859178489;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08275848618217187;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.0467032057251723;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.20676068655410657;  // std dev = 20.296, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.058421441115361884;  // std dev = 4.675, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.16566793394213453;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24375552389960758;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06417818286192134;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03211216496973908;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.13296294553594484;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.19017350087960896;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05812098897679593;  // std dev = 3.607, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.023416969238971023;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.10688125746810205;  // std dev = 20.286, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.03686450516164805;  // std dev = 4.673, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07958768234066267;  // std dev = 20.825, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.0634056415737676;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.10014251496538396;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03220096344850347;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.0012277905113744305;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.20797745918071045;  // std dev = 2.230, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | | else return 0.045682390636577835;  // std dev = 20.686, 1,794.000 (wgt'ed) examples reached here.  /* #neg=1,059 #pos=735 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.21369655718457853;  // std dev = 2.177, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.036645795961995846;  // std dev = 20.146, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.022164060159536425;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.01049919706039138;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.394', 'seconds']
Refined model CLL: -0.670938


******************************************
Best model found
******************************************
Results 

CLL : -0.641984 

AUC ROC : 0.563321 

AUC PR : 0.417756 

Precision : 0.666667 

Recall : 0.007048 

F1 : 0.013949 

Total Learning Time : 13.102 

Total Inference Time : 1.0751674175262451 

Total revision time: 16.727941661834716
Best scored revision CLL: -0.670938


Results 

CLL : -0.641984 

AUC ROC : 0.563321 

AUC PR : 0.417756 

Precision : 0.666667 

Recall : 0.007048 

F1 : 0.013949 

Total Learning Time : 16.783674627304077 

Total Inference Time : 1.0751674175262451 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.156
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.262', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E), haswordauthor(A, F)', 'false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(A, D), author(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), author(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'author(A, E), author(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'author(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, A)', 'false': 'author(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(C, A).;true;true
1;false;author(A, D), author(D, E).;true;true
2;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
2;false;author(A, E), haswordauthor(A, F).;true;true
2;false,false;author(A, G), author(G, H).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;author(A, D), author(D, E).;true;true
4;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
4;false;author(E, A), author(A, F).;true;true
5;;samevenue(A, B) :- author(A, C).;true;true
5;false;author(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
6;false;author(A, E), author(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;author(A, H).;true;true
7;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
7;false;author(D, A).;true;true
8;;samevenue(A, B) :- author(A, C), author(C, A).;true;true
8;false;author(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;author(A, D), author(E, A).;true;true


Refining candidate
***************************
Model training time 7.022
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.443242102801371;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08314893509951105;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3803254334818479;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6157326050686436;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.13458565557492252;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07272278883431843;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, G), author(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.31784637514141034;  // std dev = 14.134, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.07631962997914424;  // std dev = 6.267, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.1323519804460471;  // std dev = 3.804, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.2592746372222789;  // std dev = 13.576, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.12082709812613336;  // std dev = 3.358, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.046765188259261896;  // std dev = 5.270, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), author(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.07731951792514156;  // std dev = 3.833, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.20064426077785363;  // std dev = 13.554, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.09475764704463151;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.042483978374783786;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.14487971586270518;  // std dev = 14.102, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.04691582861448117;  // std dev = 6.258, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E), author(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09474445739067419;  // std dev = 15.455, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.07889319628524696;  // std dev = 13.945, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.25117114572654764;  // std dev = 1.875, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.07084574989408528;  // std dev = 3.360, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.007721793562011021;  // std dev = 5.263, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.06420525603094548;  // std dev = 14.090, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.019487892517944617;  // std dev = 6.253, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.4491682256230212;  // std dev = 0.261, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.04232400003695398;  // std dev = 4.872, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.030978131179239674;  // std dev = 4.682, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | | else return 0.055632101668672995;  // std dev = 13.749, 840.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=470 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.262', 'seconds']
Refined model CLL: -0.643714


******************************************
Best model found
******************************************
Results 

CLL : -0.701163 

AUC ROC : 0.554813 

AUC PR : 0.400224 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 7.022 

Total Inference Time : 0.992424726486206 

Total revision time: 10.000993993759156
Best scored revision CLL: -0.643714


Results 

CLL : -0.701163 

AUC ROC : 0.554813 

AUC PR : 0.400224 

Precision : 0.37542 

Recall : 0.952169 

F1 : 0.538514 

Total Learning Time : 10.056726959228516 

Total Inference Time : 0.992424726486206 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.207
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.297', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546], 'false,false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772], 'false,false': [nan, 0.22704315886133772], 'false,false,false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467], 'false,false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(C, A).;true;true
1;false;sameauthor(A, D), sameauthor(D, E).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
2;false;sameauthor(A, E), haswordauthor(A, F).;true;true
2;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;sameauthor(A, D), sameauthor(D, E).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
4;false;sameauthor(E, A), sameauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
6;false;sameauthor(A, E), sameauthor(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;sameauthor(A, D), sameauthor(E, A).;true;true


Refining candidate
***************************
Model training time 7.492
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23843062524035266;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4370963035205641;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.015414283291292274;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00261055857137374;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.20686012285620575;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.37517858762297;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.014883205992041794;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -8.229340790782694E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.1808334283898605;  // std dev = 14.515, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.00720321246319491;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.1441265645223528;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.27039411344684394;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.012353825541705494;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8371159705265007E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.11714897171203428;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2099446554977447;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.012052489766867508;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 0.0015368196808772825;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.09663394563690586;  // std dev = 14.499, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.00492182497529445;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06364924931450978;  // std dev = 15.172, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.0599650623818253;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.12041929846033926;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.017951389171280734;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.005516977251776959;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.048634757547505646;  // std dev = 14.496, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.010554513289568324;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.03587496117518709;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.07825128401144371;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.015539321794541889;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.002355928854160404;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.671', 'seconds']
Refined model CLL: -0.623472


******************************************
Best model found
******************************************
Results 

CLL : -0.655856 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 7.492 

Total Inference Time : 1.0057570934295654 

Total revision time: 10.503929733276367
Best scored revision CLL: -0.623472


Results 

CLL : -0.655856 

AUC ROC : 0.55556 

AUC PR : 0.428223 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 10.534416316986084 

Total Inference Time : 1.0057570934295654 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.289
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.294', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958], 'false,false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307], 'false,false': [nan, 0.24255027541239307], 'false,false,false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849], 'false,false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(C, A).;true;true
1;false;sameauthor(A, D), sameauthor(D, E).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
2;false;sameauthor(A, E), haswordauthor(A, F).;true;true
2;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;sameauthor(A, D), sameauthor(D, E).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
4;false;sameauthor(E, A), sameauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
6;false;sameauthor(A, E), sameauthor(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;sameauthor(A, D), sameauthor(E, A).;true;true


Refining candidate
***************************
Model training time 8.046
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.4356367001892301;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.6142464960751212;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.37395569825543723;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.5220782826498102;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.5518334294031212;  // std dev = 2.371, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.19300554036354514;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.3102004678110395;  // std dev = 17.526, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.3614015549008065;  // std dev = 3.121, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.5137849259419167;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.029518450872317355;  // std dev = 1.667, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.24262757833680668;  // std dev = 17.312, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.29387680600432464;  // std dev = 3.040, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.4543735190654702;  // std dev = 1.592, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.06778701715083502;  // std dev = 1.702, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | | then return 0.1857906760588942;  // std dev = 17.286, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.22455981829530555;  // std dev = 3.017, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.14231851075978263;  // std dev = 17.470, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.15699341052240992;  // std dev = 3.069, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10747116088917884;  // std dev = 17.737, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2804943612812167;  // std dev = 1.592, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.1114198295274654;  // std dev = 1.705, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.07858926497696025;  // std dev = 17.285, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.10405166193007369;  // std dev = 3.020, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.06034405999167855;  // std dev = 17.456, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.06816136111585246;  // std dev = 3.067, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04211688593661676;  // std dev = 17.227, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.1422139509416687;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.13537276904333465;  // std dev = 2.297, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.15027785720238107;  // std dev = 1.826, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.381', 'seconds']
Refined model CLL: -0.67216


******************************************
Best model found
******************************************
Results 

CLL : -0.748439 

AUC ROC : 0.475916 

AUC PR : 0.314419 

Precision : 0.337164 

Recall : 0.992876 

F1 : 0.503386 

Total Learning Time : 8.046 

Total Inference Time : 1.0084924697875977 

Total revision time: 11.145319662094115
Best scored revision CLL: -0.67216


Results 

CLL : -0.748439 

AUC ROC : 0.475916 

AUC PR : 0.314419 

Precision : 0.337164 

Recall : 0.992876 

F1 : 0.503386 

Total Learning Time : 11.175806245803832 

Total Inference Time : 1.0084924697875977 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.923
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19692444530358896;  // std dev = 19.600, 1,715.000 (wgt'ed) examples reached here.  /* #neg=1,134 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16984617147542036;  // std dev = 19.621, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.14776720274635197;  // std dev = 19.577, 1,707.000 (wgt'ed) examples reached here.  /* #neg=1,126 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12254917077661112;  // std dev = 19.594, 1,713.000 (wgt'ed) examples reached here.  /* #neg=1,132 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08753426661648335;  // std dev = 19.794, 1,784.000 (wgt'ed) examples reached here.  /* #neg=1,203 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.07991074759351188;  // std dev = 19.667, 1,738.000 (wgt'ed) examples reached here.  /* #neg=1,157 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06140947337721833;  // std dev = 19.712, 1,754.000 (wgt'ed) examples reached here.  /* #neg=1,173 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05470953994824691;  // std dev = 19.629, 1,725.000 (wgt'ed) examples reached here.  /* #neg=1,144 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.041944076190709924;  // std dev = 19.652, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026724263553591386;  // std dev = 19.748, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.228', 'seconds']
Parameter learned model CLL:-0.535838 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.6, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.621, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.577, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.594, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.794, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.667, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.712, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.629, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.652, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.748, 1, 581]}]
{'': [nan, 0.22400666389003163], 'false': [nan, 0.22400666389003163]}
{'': [nan, 0.22356071121686472], 'false': [nan, 0.22356071121686472]}
{'': [nan, 0.2245160953776389], 'false': [nan, 0.2245160953776389], 'false,false': [nan, 0.2245160953776389]}
{'': [nan, 0.22413404721765268], 'false': [nan, 0.22413404721765268]}
{'': [nan, 0.21960997355667683], 'false': [nan, 0.21960997355667683]}
{'': [nan, 0.22254095484272488], 'false': [nan, 0.22254095484272488], 'false,false': [nan, 0.22254095484272488]}
{'': [nan, 0.22152103223255948], 'false': [nan, 0.22152103223255948], 'false,false': [nan, 0.22152103223255948], 'false,false,false': [nan, 0.22152103223255948]}
{'': [nan, 0.22336954421340222], 'false': [nan, 0.22336954421340222]}
{'': [nan, 0.22285967151347377], 'false': [nan, 0.22285967151347377], 'false,false': [nan, 0.22285967151347377]}
{'': [nan, 0.22069257522284802], 'false': [nan, 0.22069257522284802]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(C, A).;true;true
1;false;sameauthor(A, D), sameauthor(D, E).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
2;false;sameauthor(A, E), haswordauthor(A, F).;true;true
2;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;sameauthor(A, D), sameauthor(D, E).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
4;false;sameauthor(E, A), sameauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
6;false;sameauthor(A, E), sameauthor(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;sameauthor(A, D), sameauthor(E, A).;true;true


Refining candidate
***************************
Model training time 14.508
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.16584124279182005;  // std dev = 3.328, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.21582303922391577;  // std dev = 18.433, 1,479.000 (wgt'ed) examples reached here.  /* #neg=950 #pos=529 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.02481560176617905;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return 0.009409439301193045;  // std dev = 3.909, 119.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15076732438749135;  // std dev = 3.300, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.1890959827722305;  // std dev = 18.413, 1,473.000 (wgt'ed) examples reached here.  /* #neg=944 #pos=529 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.026810986479495872;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return 0.011672481391801008;  // std dev = 3.896, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.1596957051165411;  // std dev = 18.707, 1,523.000 (wgt'ed) examples reached here.  /* #neg=978 #pos=545 */
%   | | | else return 0.011592822747453027;  // std dev = 5.506, 228.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordauthor(G, F) )
%   | | | then return 0.38979592216983094;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.12847564714622375;  // std dev = 18.721, 1,534.000 (wgt'ed) examples reached here.  /* #neg=992 #pos=542 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.04253682700586483;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.02748917689431058;  // std dev = 5.295, 194.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.10986093484946782;  // std dev = 0.479, 1,522.000 (wgt'ed) examples reached here.  /* #neg=977 #pos=545 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.017519105900427955;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.006169174335684953;  // std dev = 5.352, 216.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.09338824031185078;  // std dev = 18.636, 1,503.000 (wgt'ed) examples reached here.  /* #neg=958 #pos=545 */
%   | | | else return 0.009401698357447513;  // std dev = 5.496, 224.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06629928918899529;  // std dev = 19.458, 1,720.000 (wgt'ed) examples reached here.  /* #neg=1,139 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.046884628198812436;  // std dev = 0.477, 1,563.000 (wgt'ed) examples reached here.  /* #neg=1,018 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 1.385083094190095E-4;  // std dev = 3.886, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | | else return -0.014170558596918141;  // std dev = 3.916, 122.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.037918034173440314;  // std dev = 18.823, 1,559.000 (wgt'ed) examples reached here.  /* #neg=1,014 #pos=545 */
%   | | | else return 0.0016843131155804773;  // std dev = 5.492, 222.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.007683061472059149;  // std dev = 16.717, 1,307.000 (wgt'ed) examples reached here.  /* #neg=895 #pos=412 */
%   | | | else return 0.16592725086958515;  // std dev = 8.357, 284.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=136 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.029788154029207942;  // std dev = 4.047, 105.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=21 */
%   | | | else return 0.5998303601016667;  // std dev = 0.958, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.553', 'seconds']
Refined model CLL: -0.524501


******************************************
Best model found
******************************************
Results 

CLL : -0.733262 

AUC ROC : 0.559122 

AUC PR : 0.516865 

Precision : 1.0 

Recall : 0.000411 

F1 : 0.000821 

Total Learning Time : 14.508 

Total Inference Time : 1.3032464981079102 

Total revision time: 18.644162183761594
Best scored revision CLL: -0.524501


Results 

CLL : -0.733262 

AUC ROC : 0.559122 

AUC PR : 0.516865 

Precision : 1.0 

Recall : 0.000411 

F1 : 0.000821 

Total Learning Time : 18.67464876747131 

Total Inference Time : 1.3032464981079102 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.478
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.248', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464], 'false,false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094], 'false,false': [nan, 0.2421801789495094], 'false,false,false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942], 'false,false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(C, A).;true;true
1;false;sameauthor(A, D), sameauthor(D, E).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
2;false;sameauthor(A, E), haswordauthor(A, F).;true;true
2;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;sameauthor(A, D), sameauthor(D, E).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
4;false;sameauthor(E, A), sameauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
6;false;sameauthor(A, E), sameauthor(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;sameauthor(A, D), sameauthor(E, A).;true;true


Refining candidate
***************************
Model training time 13.182
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.27854694504975613;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.40245273256786723;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0910256474282795;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.2411503606196619;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3460981859178489;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.08275848618217185;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.0467032057251723;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.20676068655410662;  // std dev = 20.296, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.058421441115361905;  // std dev = 4.675, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.16566793394213453;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.2437555238996073;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.06417818286192124;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03211216496973908;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.13296294553594484;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.19017350087960896;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05812098897679589;  // std dev = 3.607, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.023416969238971023;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.10688125746810197;  // std dev = 20.286, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.036864505161648145;  // std dev = 4.673, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07958768234066269;  // std dev = 20.825, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.0634056415737676;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.100142514965384;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.032200963448503456;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.0012277905113744305;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.049967357387942196;  // std dev = 20.284, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.015834402588728487;  // std dev = 4.671, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.03698087159160958;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.06284043753652105;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.027458741760071518;  // std dev = 3.604, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.005581639048338426;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.371', 'seconds']
Refined model CLL: -0.671445


******************************************
Best model found
******************************************
Results 

CLL : -0.64165 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.182 

Total Inference Time : 1.1099581718444824 

Total revision time: 16.647051486968994
Best scored revision CLL: -0.671445


Results 

CLL : -0.64165 

AUC ROC : 0.564281 

AUC PR : 0.4187 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.67753807067871 

Total Inference Time : 1.1099581718444824 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(A, C).;true;true
0;true;follows(D, A), tweets(D, E).;true;false
0;true,true;follows(C, A).;true;true
0;true,true,true;follows(D, C), tweets(A, F).;false;false
0;true,true,false;follows(G, D), tweets(A, E).;false;false
0;false;follows(H, A).;true;false
0;false,true;follows(H, I), follows(I, A).;true;false
0;false,true,true;tweets(A, J), follows(I, H).;false;false
1;;accounttype(A, B) :- follows(C, A).;true;true
1;true;follows(A, D), follows(D, E).;true;true
1;true,true;follows(E, C), tweets(C, F).;true;true
1;true,true,true;follows(A, C).;false;false
1;true,true,false;tweets(A, G), tweets(E, G).;false;false
1;true,false;tweets(A, H).;true;false
1;true,false,true;follows(C, I), follows(I, A).;false;false
1;false;follows(A, J), follows(J, K).;false;false
2;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
2;true;follows(C, E), follows(A, E).;false;true
2;true,false;follows(A, F), tweets(C, D).;false;false
2;false;follows(A, G), tweets(A, H).;true;true
2;false,true;follows(G, I), follows(A, I).;false;true
2;false,true,false;follows(G, J), tweets(G, H).;false;false
2;false,false;follows(A, K), follows(K, L).;true;false
2;false,false,true;follows(A, M), follows(M, K).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;tweets(C, D), tweets(A, D).;true;true
3;true,true;follows(A, E), follows(C, E).;true;true
3;true,true,true;tweets(E, D).;false;false
3;true,true,false;follows(A, F), follows(F, C).;false;false
3;true,false;follows(A, G), follows(G, C).;true;false
3;true,false,true;follows(G, A), tweets(A, H).;false;false
3;false;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
4;true;tweets(A, E), follows(A, D).;true;true
4;true,true;tweets(C, E), tweets(D, E).;true;true
4;true,true,true;follows(D, F), follows(F, C).;false;false
4;true,true,false;tweets(D, E), follows(C, A).;false;false
4;true,false;tweets(C, G), tweets(A, G).;false;true
4;true,false,false;follows(A, D).;false;false
4;false;follows(H, A), follows(A, I).;false;false
5;;accounttype(A, B) :- follows(A, C).;true;true
5;true;follows(C, A), tweets(A, D).;true;false
5;true,true;tweets(C, D).;true;false
5;true,true,true;follows(A, E), follows(C, E).;false;false
5;false;follows(F, A).;true;true
5;false,true;tweets(A, G).;true;false
5;false,true,true;follows(F, H), follows(H, A).;false;false
5;false,false;tweets(A, I).;false;false
6;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
6;true;tweets(A, E), tweets(C, F).;false;false
6;false;follows(A, G), follows(G, H).;true;true
6;false,true;follows(H, G).;true;false
6;false,true,true;follows(I, A).;false;false
6;false,false;tweets(A, J).;true;true
6;false,false,true;follows(A, K).;false;false
6;false,false,false;follows(A, L).;false;false
7;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
7;true;follows(C, D), follows(D, A).;true;false
7;true,true;follows(D, C), follows(A, D).;true;true
7;true,true,true;tweets(C, E), tweets(D, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;false;follows(H, A).;true;false
7;false,true;tweets(A, I).;true;false
7;false,true,true;follows(A, J), follows(J, K).;false;false
8;;accounttype(A, B) :- follows(A, C), follows(C, A).;true;true
8;true;follows(A, D), follows(D, C).;true;true
8;true,true;follows(C, D).;true;true
8;true,true,true;tweets(D, E), tweets(C, E).;false;false
8;true,true,false;follows(A, F), follows(C, F).;false;false
8;true,false;follows(G, A), follows(G, C).;false;false
8;false;follows(H, A), tweets(H, I).;false;true
8;false,false;tweets(A, J).;false;false
9;;accounttype(A, B) :- tweets(A, C).;true;true
9;true;follows(A, D), follows(E, A).;true;true
9;true,true;follows(F, E), follows(F, D).;true;false
9;true,true,true;tweets(E, C), follows(D, G).;false;false
9;true,false;follows(H, A).;true;true
9;true,false,true;follows(H, I), follows(I, A).;false;false
9;true,false,false;follows(A, J).;false;false
9;false;follows(A, K), follows(L, A).;false;false


Model training time 1.104
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.290', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E), haswordauthor(A, F)', 'false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(D, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), sameauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'sameauthor(A, E), sameauthor(E, F)', 'false,false': 'haswordauthor(A, G)', 'false,false,false': 'sameauthor(A, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, A)', 'false': 'sameauthor(D, A), haswordauthor(D, E)', 'false,false': 'haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508], 'false,false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572], 'false,false': [nan, 0.2494331065759572], 'false,false,false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066], 'false,false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(C, A).;true;true
1;false;sameauthor(A, D), sameauthor(D, E).;true;true
2;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
2;false;sameauthor(A, E), haswordauthor(A, F).;true;true
2;false,false;sameauthor(A, G), sameauthor(G, H).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;sameauthor(A, D), sameauthor(D, E).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
4;false;sameauthor(E, A), sameauthor(A, F).;true;true
5;;samevenue(A, B) :- sameauthor(A, C).;true;true
5;false;sameauthor(D, A).;true;true
5;false,false;haswordauthor(A, E).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
6;false;sameauthor(A, E), sameauthor(E, F).;true;true
6;false,false;haswordauthor(A, G).;true;true
6;false,false,false;sameauthor(A, H).;true;true
7;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
7;false;sameauthor(D, A).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, A).;true;true
8;false;sameauthor(D, A), haswordauthor(D, E).;true;true
8;false,false;haswordauthor(A, F).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C).;true;true
9;false;sameauthor(A, D), sameauthor(E, A).;true;true


Refining candidate
***************************
Model training time 7.378
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.443242102801371;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08314893509951105;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3803254334818479;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.6157326050686436;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.14262154001125385;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.07001067783705692;  // std dev = 5.276, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.31784637514141034;  // std dev = 14.134, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.07639728067024307;  // std dev = 6.266, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.24403586908066613;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.40524000143674654;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.11210108939026056;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.0498004671762839;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), sameauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06908203470054267;  // std dev = 3.776, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.201258666883003;  // std dev = 13.567, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.10281518723651317;  // std dev = 3.358, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.039735633506560376;  // std dev = 5.269, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.14493075250660206;  // std dev = 14.103, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.046940314321404414;  // std dev = 6.257, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E), sameauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09482271105369788;  // std dev = 15.455, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.08125154255011348;  // std dev = 14.020, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | | else return 0.24596262250641682;  // std dev = 1.342, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.06211151930949344;  // std dev = 3.359, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.010676100807441441;  // std dev = 5.268, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A), haswordauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | | then return 0.06431219481941815;  // std dev = 14.097, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.019452023254361094;  // std dev = 6.253, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return -0.06709322769213721;  // std dev = 3.404, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | | else return 0.029450297716216465;  // std dev = 3.787, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.034339432457747766;  // std dev = 4.664, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | | else return 0.05775682106271444;  // std dev = 13.747, 840.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=470 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.512', 'seconds']
Refined model CLL: -0.645409


******************************************
Best model found
******************************************
Results 

CLL : -0.700316 

AUC ROC : 0.552657 

AUC PR : 0.399782 

Precision : 0.37522 

Recall : 0.951358 

F1 : 0.538179 

Total Learning Time : 7.378 

Total Inference Time : 0.9855997562408447 

Total revision time: 10.243857509613036
Best scored revision CLL: -0.645409


Results 

CLL : -0.700316 

AUC ROC : 0.552657 

AUC PR : 0.399782 

Precision : 0.37522 

Recall : 0.951358 

F1 : 0.538179 

Total Learning Time : 10.274344093322753 

Total Inference Time : 0.9855997562408447 

Run: 4
Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

Model training time 1161.874 

Building refine structure 

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), follows(A, E) )
%   | then if ( follows(E, D), tweets(E, C) )
%   | | then if ( tweets(D, C), follows(A, D) )
%   | | | then return 0.181353354989011;  // std dev = 8.899, 362.000 (wgt'ed) examples reached here.  /* #neg=245 #pos=117 */
%   | | | else return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | else return 0.13087620782678427;  // std dev = 0.445, 110.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=30 */
%   | else if ( follows(F, A) )
%   | | then return 0.2024112301814791;  // std dev = 0.475, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | else if ( follows(A, G), follows(G, H) )
%   | | | then return 0.21109011157009963;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.2581489350995123;  // std dev = 2.449, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else if ( follows(I, A) )
%   | then if ( follows(A, I), tweets(I, J) )
%   | | then return 0.16882854674999637;  // std dev = 0.463, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | | else return 0.28672036367094084;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0.1572143556602586;  // std dev = 0.458, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, A), tweets(A, D) )
%   | then if ( follows(C, E), follows(E, A) )
%   | | then return 0.15796721528397378;  // std dev = 0.469, 326.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=106 */
%   | | else if ( tweets(C, D) )
%   | | | then return 0.1870075725080899;  // std dev = 4.698, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | | else return 0.43491539910928206;  // std dev = 1.084, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.14961370197097046;  // std dev = 0.464, 330.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=104 */
%   else if ( follows(F, A) )
%   | then if ( follows(F, G), follows(G, A) )
%   | | then if ( follows(G, F) )
%   | | | then return 0.19509685129754223;  // std dev = 3.565, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.03168111261275679;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.42197361474333894;  // std dev = 1.100, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( tweets(A, H) )
%   | | then return 0.22373365448410584;  // std dev = 0.490, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else return 0.1422614502880542;  // std dev = 0.460, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), follows(D, C) )
%   | then if ( follows(D, A), follows(A, D) )
%   | | then if ( tweets(C, E), tweets(D, F) )
%   | | | then return 0.13310656657126715;  // std dev = 9.811, 441.000 (wgt'ed) examples reached here.  /* #neg=299 #pos=142 */
%   | | | else return 0.03240985682746301;  // std dev = 1.523, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( tweets(A, G), follows(C, A) )
%   | | | then return 0.2507815701092;  // std dev = 3.552, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | else return 0.1290110024009947;  // std dev = 6.345, 186.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=59 */
%   | else if ( follows(H, A), follows(H, C) )
%   | | then return 0.09319360028317511;  // std dev = 0.445, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.2565681160863057;  // std dev = 2.223, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.2871421218189114;  // std dev = 2.058, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else if ( tweets(A, J), follows(K, A) )
%   | then return 0.11224198012932245;  // std dev = 0.461, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | else return 0.08822103936701908;  // std dev = 0.456, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(A, C) )
%   then if ( follows(A, D), follows(C, D) )
%   | then if ( follows(D, C), tweets(D, E) )
%   | | then if ( tweets(C, E), follows(D, A) )
%   | | | then return 0.13453934744607884;  // std dev = 7.813, 270.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=93 */
%   | | | else return 0.1666590964527607;  // std dev = 5.631, 135.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=51 */
%   | | else if ( follows(F, A), follows(D, F) )
%   | | | then return 0.5333099510992226;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.23932774978072652;  // std dev = 2.903, 34.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=16 */
%   | else if ( tweets(A, G), tweets(C, G) )
%   | | then return 0.07039856492931061;  // std dev = 0.458, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else return 0.18119407157309225;  // std dev = 0.488, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( tweets(A, H) )
%   | then if ( follows(A, I), follows(I, J) )
%   | | then return 0.1002308047891599;  // std dev = 0.464, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | else return 0.12158389209459873;  // std dev = 0.475, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | else return 0.06676802025683451;  // std dev = 0.447, 133.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=37 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(E, D), follows(A, E) )
%   | then if ( follows(A, D), tweets(D, C) )
%   | | then if ( follows(E, A), tweets(E, C) )
%   | | | then return 0.13193142162756624;  // std dev = 7.250, 226.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=83 */
%   | | | else return 0.08504032147611443;  // std dev = 5.048, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | | else if ( follows(E, A), tweets(E, C) )
%   | | | then return 0.006370000083165184;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.2342779757029163;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | else if ( tweets(D, C), follows(F, D) )
%   | | then if ( follows(F, A), follows(D, F) )
%   | | | then return 0.09040694825977422;  // std dev = 3.757, 64.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=21 */
%   | | | else return 0.12597934673391617;  // std dev = 3.658, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | else return 0.04448644335129798;  // std dev = 0.454, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   else if ( follows(G, A), tweets(G, H) )
%   | then return 0.0679150007138083;  // std dev = 0.460, 121.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=37 */
%   | else return 0.11784848856216093;  // std dev = 0.476, 193.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=67 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(E, D), follows(E, A) )
%   | then if ( follows(A, D), follows(A, E) )
%   | | then return 0.06014100838535336;  // std dev = 0.467, 312.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=100 */
%   | | else return 0.09391907944300507;  // std dev = 0.477, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | else return 0.03641110959990956;  // std dev = 0.460, 165.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=50 */
%   else if ( follows(A, F) )
%   | then if ( follows(F, G), follows(G, F) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.15230564950665407;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | else return 0.08639896681544451;  // std dev = 5.903, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
%   | | else return 0.02437680852865627;  // std dev = 0.458, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( tweets(A, I) )
%   | | then return 0.22917955939735757;  // std dev = 0.500, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( follows(J, A) )
%   | | | then return 0.14583060357869848;  // std dev = 1.315, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.14183447936620755;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(C, D) )
%   then if ( follows(A, E), follows(E, F) )
%   | then if ( follows(A, C), follows(C, E) )
%   | | then if ( tweets(E, D), follows(A, F) )
%   | | | then return 0.05524567410857974;  // std dev = 9.956, 452.000 (wgt'ed) examples reached here.  /* #neg=305 #pos=147 */
%   | | | else return 0.11457270324246399;  // std dev = 2.267, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( tweets(A, D), follows(G, C) )
%   | | | then return 0.17458051754829804;  // std dev = 3.225, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
%   | | | else return 0.01972341663688926;  // std dev = 2.815, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | else if ( follows(A, H) )
%   | | then return 0.005798882200050507;  // std dev = 0.443, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( tweets(A, D) )
%   | | | then return 0.045068486585014465;  // std dev = 3.786, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | | else return 0.07208858661147632;  // std dev = 1.353, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else if ( follows(A, I) )
%   | then return 0.018659515622722982;  // std dev = 0.456, 195.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=57 */
%   | else return 0.11454126294530106;  // std dev = 0.491, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( tweets(A, D), follows(C, A) )
%   | then if ( follows(A, E), follows(E, C) )
%   | | then if ( follows(C, E), tweets(E, F) )
%   | | | then return 0.060386016020510754;  // std dev = 8.853, 349.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=119 */
%   | | | else return -0.0847057056438012;  // std dev = 2.087, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( follows(A, G), follows(C, G) )
%   | | | then return -0.052618231337504935;  // std dev = 2.371, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.046097573511447276;  // std dev = 2.538, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), tweets(I, J) )
%   | | | then return 0.0834191247869241;  // std dev = 5.370, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
%   | | | else return 0.559448465645257;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.08766015081317331;  // std dev = 4.329, 80.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=30 */
%   | | | else return 0.05211688706231508;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   else return 0.03719684221039608;  // std dev = 0.469, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), tweets(A, D) )
%   then if ( follows(E, C), follows(E, A) )
%   | then if ( tweets(E, D), follows(F, E) )
%   | | then if ( tweets(C, G), follows(F, A) )
%   | | | then return 0.043194110342656175;  // std dev = 8.463, 321.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=108 */
%   | | | else return -0.015787524282383857;  // std dev = 3.046, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | else return -0.04966446779869576;  // std dev = 0.433, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else return -0.03125615613892701;  // std dev = 0.447, 181.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=50 */
%   else if ( follows(A, H) )
%   | then if ( follows(H, I), follows(I, H) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.048305384398463165;  // std dev = 4.953, 110.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
%   | | | else return 0.014434224629150996;  // std dev = 5.134, 124.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=38 */
%   | | else if ( follows(H, J) )
%   | | | then return 0.3766072749771839;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.13389434789883115;  // std dev = 2.717, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | else return -0.018129993661451443;  // std dev = 0.460, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(A, E), tweets(E, C) )
%   | then if ( follows(D, E), tweets(D, C) )
%   | | then if ( follows(E, F), follows(A, F) )
%   | | | then return 0.0378480142397374;  // std dev = 9.064, 366.000 (wgt'ed) examples reached here.  /* #neg=242 #pos=124 */
%   | | | else return 0.13750160016874108;  // std dev = 2.351, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | else if ( follows(A, D), follows(D, E) )
%   | | | then return 0.3033273392351556;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.12839469397767758;  // std dev = 3.206, 42.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=18 */
%   | else return 0.010378002392068743;  // std dev = 0.463, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   else if ( follows(G, A) )
%   | then return -0.01561112231551008;  // std dev = 0.454, 131.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=38 */
%   | else if ( tweets(A, H) )
%   | | then return -0.007753872703539341;  // std dev = 0.462, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.10020192683943281;  // std dev = 3.361, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | | else return 0.06350103420853125;  // std dev = 3.000, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.2
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.275', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'title(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;title(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;title(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
4;false;author(E, A), title(E, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;title(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;title(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 11.319
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23843062524035266;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4370963035205641;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.015414283291292274;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00261055857137374;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21404675393613154;  // std dev = 14.529, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.0081918717684025;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17400600202837588;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.3382494393289777;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892053551630496;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.608342952691277E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14406176292147885;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711863128647758;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353361616062493;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.834584646478759E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.11709188476554443;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.210625130010873;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.012052768633161078;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 0.0015373497336434404;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08065020943532478;  // std dev = 15.190, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.07699865257050023;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.1406674475320914;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020680497241387288;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.008252462181851026;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06048670129622468;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.12684376509731657;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.10260134085489232;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.1416157272078957;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 3.848394953468263E-4;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.001657231162551106;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14976784499467605;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04718836407290774;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.0793692036925101;  // std dev = 3.043, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.01698668974620841;  // std dev = 3.090, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.005289168049182555;  // std dev = 3.075, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03011630938982216;  // std dev = 15.146, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.012', 'seconds']
Refined model CLL: -0.623436


******************************************
Best model found
******************************************
Results 

CLL : -0.656226 

AUC ROC : 0.555615 

AUC PR : 0.426442 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 11.319 

Total Inference Time : 0.9558455944061279 

Total revision time: 14.22026986503601
Best scored revision CLL: -0.623436


Results 

CLL : -0.656226 

AUC ROC : 0.555615 

AUC PR : 0.426442 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 14.237851566314697 

Total Inference Time : 0.9558455944061279 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.364
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.265', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'title(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;title(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;title(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
4;false;author(E, A), title(E, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;title(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;title(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 13.188
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.4356367001892301;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.6142464960751212;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.378748931057459;  // std dev = 17.538, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.44717529509991155;  // std dev = 3.214, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3057085733564915;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.44756839086499706;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4679396582741059;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10337009312661717;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.2412054366784133;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.34500150374750593;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3654929147714289;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.07380773102127074;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.1854370738010634;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.25970616788213113;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.30227857555195264;  // std dev = 2.205, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.0065202036084580405;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1429013904244306;  // std dev = 17.767, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.3775625039383379;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.1644699145834634;  // std dev = 1.663, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.10484216657356628;  // std dev = 17.303, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.13841268554879263;  // std dev = 2.912, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.34799065555184716;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.06827872032463554;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2781961298214316;  // std dev = 1.250, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.07612638293482475;  // std dev = 17.053, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.1352811183488055;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.18185785482078473;  // std dev = 2.102, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return -0.06947734566758423;  // std dev = 1.836, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.058890319345862245;  // std dev = 17.237, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.1281064763930636;  // std dev = 2.847, 53.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.02616159698407241;  // std dev = 2.667, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | | else return 0.3478969775364975;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04581633105793955;  // std dev = 17.690, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.633', 'seconds']
Refined model CLL: -0.670859


******************************************
Best model found
******************************************
Results 

CLL : -0.746391 

AUC ROC : 0.506816 

AUC PR : 0.329135 

Precision : 0.337566 

Recall : 0.994212 

F1 : 0.504006 

Total Learning Time : 13.188 

Total Inference Time : 1.0378479957580566 

Total revision time: 16.379184677124023
Best scored revision CLL: -0.670859


Results 

CLL : -0.746391 

AUC ROC : 0.506816 

AUC PR : 0.329135 

Precision : 0.337566 

Recall : 0.994212 

F1 : 0.504006 

Total Learning Time : 16.39676637840271 

Total Inference Time : 1.0378479957580566 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.934
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19418132376347494;  // std dev = 19.641, 1,729.000 (wgt'ed) examples reached here.  /* #neg=1,148 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.15813800575544187;  // std dev = 19.799, 1,786.000 (wgt'ed) examples reached here.  /* #neg=1,205 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.147235652102323;  // std dev = 19.618, 1,721.000 (wgt'ed) examples reached here.  /* #neg=1,140 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12429076629329058;  // std dev = 19.606, 1,717.000 (wgt'ed) examples reached here.  /* #neg=1,136 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09287553313158331;  // std dev = 19.750, 1,768.000 (wgt'ed) examples reached here.  /* #neg=1,187 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08648310773723135;  // std dev = 19.591, 1,712.000 (wgt'ed) examples reached here.  /* #neg=1,131 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06337938068043042;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.049957673096953314;  // std dev = 19.698, 1,749.000 (wgt'ed) examples reached here.  /* #neg=1,168 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03915941072825581;  // std dev = 19.706, 1,752.000 (wgt'ed) examples reached here.  /* #neg=1,171 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03953382712413248;  // std dev = 19.580, 1,708.000 (wgt'ed) examples reached here.  /* #neg=1,127 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.179', 'seconds']
Parameter learned model CLL:-0.536436 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.641, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.799, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.618, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.606, 1, 581]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.75, 1, 581]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'title(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.591, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.698, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.706, 1, 581]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.58, 1, 581]}]
{'': [nan, 0.22311462243274152], 'false': [nan, 0.22311462243274152]}
{'': [nan, 0.2194826879211117], 'false': [nan, 0.2194826879211117], 'false,false': [nan, 0.2194826879211117]}
{'': [nan, 0.22362442818504724], 'false': [nan, 0.22362442818504724]}
{'': [nan, 0.22387926551741755], 'false': [nan, 0.22387926551741755]}
{'': [nan, 0.22062886458099198], 'false': [nan, 0.22062886458099198]}
{'': [nan, 0.2241977328806159], 'false': [nan, 0.2241977328806159], 'false,false': [nan, 0.2241977328806159], 'false,false,false': [nan, 0.2241977328806159]}
{'': [nan, 0.22209472828631677], 'false': [nan, 0.22209472828631677]}
{'': [nan, 0.2218397444132886]}
{'': [nan, 0.22164851389671036], 'false': [nan, 0.22164851389671036]}
{'': [nan, 0.22445243214190885], 'false': [nan, 0.22445243214190885], 'false,false': [nan, 0.22445243214190885], 'false,false,false': [nan, 0.22445243214190885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;title(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;title(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
4;false;author(E, A), title(E, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;title(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;title(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 12.31
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordauthor(F, E) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.21425931617703695;  // std dev = 18.681, 1,522.000 (wgt'ed) examples reached here.  /* #neg=980 #pos=542 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.016043671941617644;  // std dev = 3.893, 114.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=18 */
%   | | | else return 0.00814893509951237;  // std dev = 3.912, 120.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.18626337082609087;  // std dev = 18.728, 1,529.000 (wgt'ed) examples reached here.  /* #neg=984 #pos=545 */
%   | | | else return 0.014572628910721645;  // std dev = 5.506, 228.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.15884656141953157;  // std dev = 0.479, 1,527.000 (wgt'ed) examples reached here.  /* #neg=982 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.022605310358628703;  // std dev = 3.869, 107.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | | else return 0.009206636311430122;  // std dev = 3.903, 117.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=18 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13955385440620866;  // std dev = 0.481, 1,497.000 (wgt'ed) examples reached here.  /* #neg=952 #pos=545 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return -0.028921023058057382;  // std dev = 1.330, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.026337615732022028;  // std dev = 5.301, 196.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.10598485529855389;  // std dev = 0.479, 1,532.000 (wgt'ed) examples reached here.  /* #neg=987 #pos=545 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.03159473250783791;  // std dev = 3.842, 100.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=18 */
%   | | | else return 0.018205636331104853;  // std dev = 3.865, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07375893351093185;  // std dev = 19.592, 1,763.000 (wgt'ed) examples reached here.  /* #neg=1,182 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.06672470640258805;  // std dev = 0.477, 1,550.000 (wgt'ed) examples reached here.  /* #neg=1,005 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.004549717501343386;  // std dev = 3.889, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
%   | | | else return -0.013342933766576782;  // std dev = 3.914, 121.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.05730006593259074;  // std dev = 0.479, 1,531.000 (wgt'ed) examples reached here.  /* #neg=986 #pos=545 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, A) )
%   | | | then return 0.031886535383254415;  // std dev = 3.588, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return -0.03841626197032521;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.006360350607586974;  // std dev = 3.902, 117.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=18 */
%   | | | else return -0.157891910235125;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.05745763679096953;  // std dev = 0.482, 1,480.000 (wgt'ed) examples reached here.  /* #neg=935 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.047428722786548534;  // std dev = 1.337, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return 0.0070333606851521865;  // std dev = 5.308, 200.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027864275593332915;  // std dev = 19.539, 1,754.000 (wgt'ed) examples reached here.  /* #neg=1,173 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.616', 'seconds']
Refined model CLL: -0.528061


******************************************
Best model found
******************************************
Results 

CLL : -0.729824 

AUC ROC : 0.550766 

AUC PR : 0.500991 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 12.31 

Total Inference Time : 1.1687722206115723 

Total revision time: 16.348867458343506
Best scored revision CLL: -0.528061


Results 

CLL : -0.729824 

AUC ROC : 0.550766 

AUC PR : 0.500991 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 16.366449159622192 

Total Inference Time : 1.1687722206115723 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.515
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.292', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'title(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;title(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;title(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
4;false;author(E, A), title(E, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;title(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;title(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 18.916
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.27854694504975613;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.40245273256786723;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0910256474282795;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2460649297948579;  // std dev = 20.304, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06726598286080536;  // std dev = 4.676, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.2020617206886203;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040853652764693;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397329195650597;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.037767261546891945;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562700107096087;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24432461057022728;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0641856935913566;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210387386820287;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.1329271688812747;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.19066269668354863;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05811304673070833;  // std dev = 3.607, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.023429166884510088;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10193412061703314;  // std dev = 20.831, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.17103333157842368;  // std dev = 1.969, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.4621383688011999;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.0822188571545035;  // std dev = 20.151, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | | else return 0.02291072999612146;  // std dev = 4.667, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06342980064501579;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05681769699923226;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.1775073521716461;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.02100931150712791;  // std dev = 3.298, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.09043495135929822;  // std dev = 1.447, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return -1.191213544218866E-4;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04874358075385849;  // std dev = 19.785, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.07602035092221555;  // std dev = 4.413, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.027821817221844874;  // std dev = 3.602, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.0032058579705371683;  // std dev = 2.969, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0363773661916501;  // std dev = 20.805, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.699', 'seconds']
Refined model CLL: -0.67093


******************************************
Best model found
******************************************
Results 

CLL : -0.642864 

AUC ROC : 0.564407 

AUC PR : 0.418632 

Precision : 0.681818 

Recall : 0.026432 

F1 : 0.050891 

Total Learning Time : 18.916 

Total Inference Time : 1.129521131515503 

Total revision time: 22.422976976394654
Best scored revision CLL: -0.67093


Results 

CLL : -0.642864 

AUC ROC : 0.564407 

AUC PR : 0.418632 

Precision : 0.681818 

Recall : 0.026432 

F1 : 0.050891 

Total Learning Time : 22.44055867767334 

Total Inference Time : 1.129521131515503 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.153
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.300', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'title(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'title(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'title(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A), title(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'title(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), title(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), title(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'title(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;title(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;title(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;title(A, D).;true;true
4;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
4;false;author(E, A), title(E, F).;true;true
5;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;title(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), title(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), title(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;title(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 8.49
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.443242102801371;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08314893509951105;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.38905464678231566;  // std dev = 14.162, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08833304492774158;  // std dev = 6.270, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30975463796301556;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5351144586319452;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1307795294621531;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.058088015343719636;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24389258995814633;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.40758064528849386;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.11209725509319499;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.049795111000272195;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.18774213145211874;  // std dev = 14.037, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | | else return 0.339912637770255;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.10280136026142116;  // std dev = 3.358, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.03973439506556141;  // std dev = 5.269, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12498194372105448;  // std dev = 15.489, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), title(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.009463351707334373;  // std dev = 3.766, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.123749177546779;  // std dev = 13.563, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.06510301296169303;  // std dev = 3.359, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.013481952123355631;  // std dev = 5.268, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5276705245265684;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3749779866221882;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.07828908292262958;  // std dev = 13.918, 799.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=465 */
%   | | | else return 0.16787770703944757;  // std dev = 1.834, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.16281984765197605;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03773964953429148;  // std dev = 2.963, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.0651745060723772;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.01412718955865508;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), title(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(B, F) )
%   | | | then return 0.34558749659838994;  // std dev = 0.228, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.052836486161736286;  // std dev = 4.868, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.022549080069742104;  // std dev = 4.649, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | | else return 0.07379219284153081;  // std dev = 13.752, 840.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=470 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( title(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041927834654503816;  // std dev = 15.365, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.800', 'seconds']
Refined model CLL: -0.642644


******************************************
Best model found
******************************************
Results 

CLL : -0.698213 

AUC ROC : 0.554858 

AUC PR : 0.402131 

Precision : 0.375367 

Recall : 0.933928 

F1 : 0.535503 

Total Learning Time : 8.49 

Total Inference Time : 0.9914505481719971 

Total revision time: 11.43274223136902
Best scored revision CLL: -0.642644


Results 

CLL : -0.698213 

AUC ROC : 0.554858 

AUC PR : 0.402131 

Precision : 0.375367 

Recall : 0.933928 

F1 : 0.535503 

Total Learning Time : 11.450323932647706 

Total Inference Time : 0.9914505481719971 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.136
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.234', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;haswordauthor(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
4;false;author(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 11.379
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23843062524035266;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4370963035205641;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.015414283291292274;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00261055857137374;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.21404675393613154;  // std dev = 14.529, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.00819187176840251;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17400600202837588;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.3382494393289777;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.013892053551630524;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6083429526913894E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14406176292147885;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711863128647758;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353361616062488;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8345846464788147E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.11709188476554443;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.210625130010873;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.012052768633161029;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 0.0015373497336434194;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08065020943532487;  // std dev = 15.190, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.07699865257050023;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.1406674475320914;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.02068049724138731;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.008252462181851043;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06048670129622468;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.19351043176398322;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09827233652588799;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return -0.008431869674063015;  // std dev = 3.079, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.14228231291695628;  // std dev = 0.004, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.001657231162551106;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14976784499467605;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04718836407290774;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.07937021745230065;  // std dev = 3.042, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.017078179344126226;  // std dev = 3.094, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00510474086324415;  // std dev = 3.074, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03012199351380171;  // std dev = 15.146, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.898', 'seconds']
Refined model CLL: -0.6235


******************************************
Best model found
******************************************
Results 

CLL : -0.655979 

AUC ROC : 0.555797 

AUC PR : 0.429904 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 11.379 

Total Inference Time : 1.0409362316131592 

Total revision time: 14.32960404396057
Best scored revision CLL: -0.6235


Results 

CLL : -0.655979 

AUC ROC : 0.555797 

AUC PR : 0.429904 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 14.384706153869628 

Total Inference Time : 1.0409362316131592 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.344
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.249', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;haswordauthor(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
4;false;author(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 23.147
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.4356367001892301;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.6142464960751212;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.3787489310574591;  // std dev = 17.538, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.44717529509991155;  // std dev = 3.214, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3057085733564915;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.44756839086499706;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.467939658274106;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10337009312661717;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5137176715886728;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.02951306648264292;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.24261049516643227;  // std dev = 17.312, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.29379466510350666;  // std dev = 3.039, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.18463610110993578;  // std dev = 17.268, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.28527080993506565;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.29621531156939035;  // std dev = 2.287, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.004081883453183967;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1428671567528268;  // std dev = 17.751, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.10445940656613871;  // std dev = 17.267, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.19379715795557464;  // std dev = 2.929, 53.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.195521731329698;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return -0.09221649914217056;  // std dev = 1.835, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.07838315844389478;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | | then return 0.34302838983428857;  // std dev = 0.049, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.013610207995797693;  // std dev = 2.659, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then return 0.008725453472675554;  // std dev = 0.481, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else return 0.3759359999753552;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( haswordauthor(H, F) )
%   | | | then return 0.2647998771065557;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return 0.05803645529136833;  // std dev = 17.404, 1,259.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=731 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.12845613341368783;  // std dev = 1.925, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return -0.08270206893336843;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04586236358150177;  // std dev = 17.701, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.848', 'seconds']
Refined model CLL: -0.671377


******************************************
Best model found
******************************************
Results 

CLL : -0.745512 

AUC ROC : 0.53364 

AUC PR : 0.342263 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 23.147 

Total Inference Time : 1.034851312637329 

Total revision time: 26.355122867584228
Best scored revision CLL: -0.671377


Results 

CLL : -0.745512 

AUC ROC : 0.53364 

AUC PR : 0.342263 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 26.410224977493286 

Total Inference Time : 1.034851312637329 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.871
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19554730908324716;  // std dev = 19.621, 1,722.000 (wgt'ed) examples reached here.  /* #neg=1,141 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16014824587177165;  // std dev = 19.767, 1,774.000 (wgt'ed) examples reached here.  /* #neg=1,193 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1415001972372266;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11698384589464272;  // std dev = 19.720, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09479859889187102;  // std dev = 19.748, 1,767.000 (wgt'ed) examples reached here.  /* #neg=1,186 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08305882875167053;  // std dev = 19.664, 1,737.000 (wgt'ed) examples reached here.  /* #neg=1,156 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06179978110074225;  // std dev = 19.742, 1,765.000 (wgt'ed) examples reached here.  /* #neg=1,184 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04803608635847986;  // std dev = 19.764, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04351575988897481;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036983928590423445;  // std dev = 19.650, 1,732.000 (wgt'ed) examples reached here.  /* #neg=1,151 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.171', 'seconds']
Parameter learned model CLL:-0.535145 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.621, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.767, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.72, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.748, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.664, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.742, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.764, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.65, 1, 581]}]
{'': [nan, 0.22356071121685403], 'false': [nan, 0.22356071121685403]}
{'': [nan, 0.22024666706490487], 'false': [nan, 0.22024666706490487], 'false,false': [nan, 0.22024666706490487]}
{'': [nan, 0.22190348957158423], 'false': [nan, 0.22190348957158423]}
{'': [nan, 0.2213298201615811], 'false': [nan, 0.2213298201615811]}
{'': [nan, 0.2206925752228385], 'false': [nan, 0.2206925752228385]}
{'': [nan, 0.22260469996875426], 'false': [nan, 0.22260469996875426], 'false,false': [nan, 0.22260469996875426], 'false,false,false': [nan, 0.22260469996875426]}
{'': [nan, 0.22082000497556326], 'false': [nan, 0.22082000497556326]}
{'': [nan, 0.2203103581993443]}
{'': [nan, 0.2220947282862981], 'false': [nan, 0.2220947282862981]}
{'': [nan, 0.22292341150682252], 'false': [nan, 0.22292341150682252], 'false,false': [nan, 0.22292341150682252], 'false,false,false': [nan, 0.22292341150682252]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;haswordauthor(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
4;false;author(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 13.952
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2137044906550679;  // std dev = 3.211, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.21058064729137946;  // std dev = 18.508, 1,501.000 (wgt'ed) examples reached here.  /* #neg=972 #pos=529 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.027960255854229364;  // std dev = 3.866, 106.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=18 */
%   | | | else return 0.023286549778411467;  // std dev = 3.877, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.1893103222699975;  // std dev = 18.694, 1,519.000 (wgt'ed) examples reached here.  /* #neg=974 #pos=545 */
%   | | | else return 0.028086139483361486;  // std dev = 5.456, 208.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.1623976055100675;  // std dev = 0.480, 1,513.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.04833862418384287;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.00960848190447762;  // std dev = 5.350, 215.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then return 0.13066147606331852;  // std dev = 0.479, 1,533.000 (wgt'ed) examples reached here.  /* #neg=988 #pos=545 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.04094767602345103;  // std dev = 3.819, 95.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=18 */
%   | | | else return 2.1863999686053356E-4;  // std dev = 3.910, 120.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=18 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09191731883017888;  // std dev = 3.248, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.10611993111062186;  // std dev = 18.478, 1,492.000 (wgt'ed) examples reached here.  /* #neg=963 #pos=529 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.02593367433913737;  // std dev = 1.324, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.0033079166050530725;  // std dev = 5.358, 219.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07774868683213496;  // std dev = 19.558, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.07455225242258177;  // std dev = 0.480, 1,519.000 (wgt'ed) examples reached here.  /* #neg=974 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.019019604206473043;  // std dev = 3.833, 98.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=18 */
%   | | | else return 7.45344773921473E-4;  // std dev = 3.885, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then return 0.07525393724733448;  // std dev = 0.483, 43.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=16 */
%   | | else return 0.06458647673601146;  // std dev = 0.481, 1,452.000 (wgt'ed) examples reached here.  /* #neg=923 #pos=529 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.017545433523791416;  // std dev = 3.627, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   | | | else return -0.06555693429157707;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return -6.364783926261373E-4;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.15824263277840775;  // std dev = 0.007, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.04772041971726784;  // std dev = 0.480, 1,509.000 (wgt'ed) examples reached here.  /* #neg=964 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.010680424528858073;  // std dev = 3.859, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
%   | | | else return -0.0011325815828301172;  // std dev = 3.872, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.033902859770452695;  // std dev = 19.440, 1,719.000 (wgt'ed) examples reached here.  /* #neg=1,138 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.753', 'seconds']
Refined model CLL: -0.529055


******************************************
Best model found
******************************************
Results 

CLL : -0.728757 

AUC ROC : 0.546032 

AUC PR : 0.489878 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.952 

Total Inference Time : 1.2503917217254639 

Total revision time: 17.995980070114136
Best scored revision CLL: -0.529055


Results 

CLL : -0.728757 

AUC ROC : 0.546032 

AUC PR : 0.489878 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.051082180023194 

Total Inference Time : 1.2503917217254639 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.472
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.311', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;haswordauthor(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
4;false;author(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 14.938
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.27854694504975613;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.40245273256786723;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0910256474282795;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2460649297948579;  // std dev = 20.304, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06726598286080536;  // std dev = 4.676, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.2020617206886203;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040853652764693;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.073973291956506;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.037767261546891945;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562700107096087;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24432461057022728;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418569359135654;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210387386820287;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.1329271688812747;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.19066269668354863;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05811304673070833;  // std dev = 3.607, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.023429166884510088;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10193412061703305;  // std dev = 20.831, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.08253637875145625;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.12130512937011921;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.034525380050887296;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.003523049800534695;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( author(F, E), venue(F, A) )
%   | | then if ( samebib(F, G), venue(G, B) )
%   | | | then return 0.6434343747527183;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.3366241398574443;  // std dev = 0.149, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.44343437475271824;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.06157039490384706;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.0914558718744798;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.03517127783440269;  // std dev = 3.596, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return -0.0010304016156128717;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04896853035678079;  // std dev = 19.745, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.06871301450093517;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.02763713195431613;  // std dev = 3.603, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.0016840794598412822;  // std dev = 2.963, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.036329807227484655;  // std dev = 20.769, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.688', 'seconds']
Refined model CLL: -0.669184


******************************************
Best model found
******************************************
Results 

CLL : -0.640602 

AUC ROC : 0.569668 

AUC PR : 0.431688 

Precision : 0.715976 

Recall : 0.053304 

F1 : 0.099221 

Total Learning Time : 14.938 

Total Inference Time : 1.1077470779418945 

Total revision time: 18.40387001991272
Best scored revision CLL: -0.669184


Results 

CLL : -0.640602 

AUC ROC : 0.569668 

AUC PR : 0.431688 

Precision : 0.715976 

Recall : 0.053304 

F1 : 0.099221 

Total Learning Time : 18.458972129821777 

Total Inference Time : 1.1077470779418945 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.2
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.258', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'author(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'author(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)', 'false': 'haswordauthor(A, D), author(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(C, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), haswordauthor(A, D)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'author(A, G), author(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;author(D, A).;true;true
1;;samevenue(A, B) :- author(A, C).;true;true
1;false;author(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
2;false;haswordauthor(A, D), author(E, A).;true;true
3;;samevenue(A, B) :- author(C, A), author(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
4;false;author(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
5;false;author(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;author(G, A).;true;true
6;;samevenue(A, B) :- author(C, A), haswordauthor(C, D).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C).;true;true
8;;samevenue(A, B) :- author(C, A), haswordauthor(A, D).;true;true
8;false;author(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
9;false;author(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;author(A, G), author(G, H).;true;true


Refining candidate
***************************
Model training time 8.548
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.443242102801371;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08314893509951105;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.3890546467823156;  // std dev = 14.162, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08833304492774162;  // std dev = 6.270, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30975463796301556;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5351144586319452;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.13077952946215307;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.058088015343719636;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(C, A), author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordauthor(F, E) )
%   | | | then return 0.6099248146949757;  // std dev = 0.189, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24560446340593267;  // std dev = 14.084, 826.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=488 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.11209725509319496;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.049795111000272216;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.1870602911627617;  // std dev = 14.023, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | | else return 0.36733474125316795;  // std dev = 1.334, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.10280136026142113;  // std dev = 3.358, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.03973439506556146;  // std dev = 5.269, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12495324943492973;  // std dev = 15.479, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10995779756413064;  // std dev = 14.022, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | | else return 0.26983098616143736;  // std dev = 1.305, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06510811091338484;  // std dev = 3.359, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.013486734553737945;  // std dev = 5.268, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then if ( author(G, E), title(G, F) )
%   | | | then return 0.2245949625007913;  // std dev = 2.222, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return -0.2048030195328298;  // std dev = 1.487, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( author(H, E), venue(H, B) )
%   | | | then return -0.3175434310683735;  // std dev = 1.669, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.09004523325951816;  // std dev = 3.232, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.11151796763916126;  // std dev = 3.360, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.11048454861998837;  // std dev = 13.054, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.07406271815125315;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.014123262895017573;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.03410901563888198;  // std dev = 3.444, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.07244067905593751;  // std dev = 13.527, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.04719925068366226;  // std dev = 3.352, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.0065268518819785164;  // std dev = 5.243, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(A, G), author(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04152509783751029;  // std dev = 15.304, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.467', 'seconds']
Refined model CLL: -0.638933


******************************************
Best model found
******************************************
Results 

CLL : -0.699304 

AUC ROC : 0.560077 

AUC PR : 0.409554 

Precision : 0.376912 

Recall : 0.948926 

F1 : 0.539525 

Total Learning Time : 8.548 

Total Inference Time : 0.9501383304595947 

Total revision time: 11.438785408020019
Best scored revision CLL: -0.638933


Results 

CLL : -0.699304 

AUC ROC : 0.560077 

AUC PR : 0.409554 

Precision : 0.376912 

Recall : 0.948926 

F1 : 0.539525 

Total Learning Time : 11.493887517929076 

Total Inference Time : 0.9501383304595947 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.156
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.270', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241], 'false': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309], 'false': [nan, 0.2270431588613309], 'false,false': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546], 'false': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467], 'false': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364], 'false': [nan, 0.22704315886133364], 'false,false': [nan, 0.22704315886133364], 'false,false,false': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
1;false;sameauthor(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;haswordauthor(A, D), sameauthor(E, A).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
4;false;sameauthor(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(G, A).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
8;false;sameauthor(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
9;false;sameauthor(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true


Refining candidate
***************************
Model training time 11.497
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.23843062524035266;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.4370963035205641;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.015414283291292274;  // std dev = 3.100, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.00261055857137374;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2140467539361315;  // std dev = 14.529, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.0081918717684025;  // std dev = 4.368, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.17400600202837588;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.3382494393289777;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.01389205355163051;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 1.6083429526913615E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.14406176292147885;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.2711863128647758;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return -0.012353361616062502;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 2.8345846464787025E-4;  // std dev = 3.077, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.11709188476554443;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.210625130010873;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.012052768633161053;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return 0.0015373497336434376;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08065020943532479;  // std dev = 15.190, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.07699865257050023;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.1406674475320914;  // std dev = 3.044, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.020680497241387295;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.008252462181851024;  // std dev = 3.078, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06048670129622468;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.19351043176398322;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09827233652588799;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.1416157272078957;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 3.848394953468263E-4;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.001657231162551106;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14976784499467605;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04718836407291094;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.07937021745230066;  // std dev = 3.042, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.016986689746208417;  // std dev = 3.090, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.005289168049182556;  // std dev = 3.075, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030116441931515615;  // std dev = 15.146, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.962', 'seconds']
Refined model CLL: -0.623417


******************************************
Best model found
******************************************
Results 

CLL : -0.656216 

AUC ROC : 0.555673 

AUC PR : 0.429873 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 11.497 

Total Inference Time : 1.067796230316162 

Total revision time: 14.480053546905518
Best scored revision CLL: -0.623417


Results 

CLL : -0.656216 

AUC ROC : 0.555673 

AUC PR : 0.429873 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 14.511410358428956 

Total Inference Time : 1.067796230316162 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.256
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.291', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175], 'false': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804], 'false': [nan, 0.2425502754123804], 'false,false': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958], 'false': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849], 'false': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885], 'false': [nan, 0.24255027541239885], 'false,false': [nan, 0.24255027541239885], 'false,false,false': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
1;false;sameauthor(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;haswordauthor(A, D), sameauthor(E, A).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
4;false;sameauthor(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(G, A).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
8;false;sameauthor(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
9;false;sameauthor(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true


Refining candidate
***************************
Model training time 18.979
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.4356367001892301;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.6142464960751212;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.6228548174524527;  // std dev = 2.473, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.3787489310574591;  // std dev = 17.538, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.44717529509991155;  // std dev = 3.214, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.3057085733564915;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.44756839086499706;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.4679396582741059;  // std dev = 2.347, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.10337009312661717;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.5137176715886728;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.02951306648264292;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.24261049516643227;  // std dev = 17.312, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.29379466510350655;  // std dev = 3.039, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.18463610110993578;  // std dev = 17.268, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.28527080993506565;  // std dev = 2.750, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.29621531156939035;  // std dev = 2.287, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.004081883453183967;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14286715675282685;  // std dev = 17.751, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.1044594065661387;  // std dev = 17.267, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.19379715795557464;  // std dev = 2.929, 53.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=40 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.195521731329698;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | | | else return -0.09221649914217056;  // std dev = 1.835, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( haswordvenue(B, D) )
%   | | then return 0.07838315844389473;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordtitle(E, F), haswordvenue(B, F) )
%   | | | then return 0.3430283898342887;  // std dev = 0.049, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.013610207995797693;  // std dev = 2.659, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then return 0.00872545347267555;  // std dev = 0.481, 31.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=18 */
%   | | else return 0.3759359999753552;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.2647998771065558;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.14087460728976364;  // std dev = 1.660, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.05908219850794676;  // std dev = 17.297, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.07661612594295351;  // std dev = 2.817, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0458403238484031;  // std dev = 17.699, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.999', 'seconds']
Refined model CLL: -0.671283


******************************************
Best model found
******************************************
Results 

CLL : -0.748571 

AUC ROC : 0.532769 

AUC PR : 0.3415 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 18.979 

Total Inference Time : 1.0999464988708496 

Total revision time: 22.151815757751464
Best scored revision CLL: -0.671283


Results 

CLL : -0.748571 

AUC ROC : 0.532769 

AUC PR : 0.3415 

Precision : 0.336187 

Recall : 0.996438 

F1 : 0.502752 

Total Learning Time : 22.1831725692749 

Total Inference Time : 1.0999464988708496 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.985
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19014893509950734;  // std dev = 19.700, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16903484405545424;  // std dev = 19.647, 1,731.000 (wgt'ed) examples reached here.  /* #neg=1,150 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13480224012165962;  // std dev = 19.785, 1,781.000 (wgt'ed) examples reached here.  /* #neg=1,200 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10962316399347091;  // std dev = 19.836, 1,800.000 (wgt'ed) examples reached here.  /* #neg=1,219 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09855939854172939;  // std dev = 19.720, 1,757.000 (wgt'ed) examples reached here.  /* #neg=1,176 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08299576003930062;  // std dev = 19.684, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07175612601069335;  // std dev = 19.615, 1,720.000 (wgt'ed) examples reached here.  /* #neg=1,139 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.055948140488855665;  // std dev = 19.638, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041631171301081064;  // std dev = 19.681, 1,743.000 (wgt'ed) examples reached here.  /* #neg=1,162 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03938844179266793;  // std dev = 19.586, 1,710.000 (wgt'ed) examples reached here.  /* #neg=1,129 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.147', 'seconds']
Parameter learned model CLL:-0.536299 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.7, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.647, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.785, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.836, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.72, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.684, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.615, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.638, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.681, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.586, 1, 581]}]
{'': [nan, 0.22177599999998554], 'false': [nan, 0.22177599999998554]}
{'': [nan, 0.2229871500796977], 'false': [nan, 0.2229871500796977], 'false,false': [nan, 0.2229871500796977]}
{'': [nan, 0.21980093702286918], 'false': [nan, 0.21980093702286918]}
{'': [nan, 0.21859228395060504], 'false': [nan, 0.21859228395060504]}
{'': [nan, 0.22132982016156547], 'false': [nan, 0.22132982016156547]}
{'': [nan, 0.22215847519148024], 'false': [nan, 0.22215847519148024], 'false,false': [nan, 0.22215847519148024], 'false,false,false': [nan, 0.22215847519148024]}
{'': [nan, 0.22368814223903516], 'false': [nan, 0.22368814223903516]}
{'': [nan, 0.22317835594564675]}
{'': [nan, 0.22222222222221236], 'false': [nan, 0.22222222222221236]}
{'': [nan, 0.2243250914811445], 'false': [nan, 0.2243250914811445], 'false,false': [nan, 0.2243250914811445], 'false,false,false': [nan, 0.2243250914811445]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
1;false;sameauthor(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;haswordauthor(A, D), sameauthor(E, A).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
4;false;sameauthor(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(G, A).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
8;false;sameauthor(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
9;false;sameauthor(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true


Refining candidate
***************************
Model training time 13.936
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.18467954734441033;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.21727996021831253;  // std dev = 18.412, 1,473.000 (wgt'ed) examples reached here.  /* #neg=944 #pos=529 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return -0.024204006076958388;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.0170274397724087;  // std dev = 5.348, 214.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=34 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.18249070908781156;  // std dev = 18.781, 1,545.000 (wgt'ed) examples reached here.  /* #neg=1,000 #pos=545 */
%   | | | else return 0.02230820273867605;  // std dev = 5.479, 217.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.16571750068341085;  // std dev = 0.481, 1,500.000 (wgt'ed) examples reached here.  /* #neg=955 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.021707153242363587;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.0163373472296934;  // std dev = 5.335, 209.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=34 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.12807409772308512;  // std dev = 3.230, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.12940271363216777;  // std dev = 18.475, 1,491.000 (wgt'ed) examples reached here.  /* #neg=962 #pos=529 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.05598945249169496;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.01996028013124566;  // std dev = 5.317, 202.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=34 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.07197059422907805;  // std dev = 3.301, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.10904755653791708;  // std dev = 18.433, 1,479.000 (wgt'ed) examples reached here.  /* #neg=950 #pos=529 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.01771760607081734;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.01736898607645746;  // std dev = 5.317, 202.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08598612575601444;  // std dev = 19.409, 1,709.000 (wgt'ed) examples reached here.  /* #neg=1,128 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.03493239646264479;  // std dev = 3.317, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return 0.0720759870933103;  // std dev = 18.416, 1,474.000 (wgt'ed) examples reached here.  /* #neg=945 #pos=529 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 7.767724552328173E-4;  // std dev = 3.876, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.006629362159569973;  // std dev = 3.893, 114.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E) )
%   | | | then return 0.22034005752528366;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03052739923968591;  // std dev = 2.980, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else return 0.06357141931196543;  // std dev = 0.482, 1,448.000 (wgt'ed) examples reached here.  /* #neg=919 #pos=529 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, B) )
%   | | | then return 0.003321414194060864;  // std dev = 3.651, 96.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=16 */
%   | | | else return 0.1215605061341681;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.00381714213670595;  // std dev = 3.869, 107.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | | else return -0.16331587396818556;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.049759944835453526;  // std dev = 0.481, 1,495.000 (wgt'ed) examples reached here.  /* #neg=950 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.02215031407089706;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.009493883662083537;  // std dev = 5.355, 218.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025468531413002163;  // std dev = 19.527, 1,764.000 (wgt'ed) examples reached here.  /* #neg=1,183 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.950', 'seconds']
Refined model CLL: -0.528888


******************************************
Best model found
******************************************
Results 

CLL : -0.728465 

AUC ROC : 0.551551 

AUC PR : 0.501314 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 13.936 

Total Inference Time : 1.2340247631072998 

Total revision time: 18.154309984207153
Best scored revision CLL: -0.528888


Results 

CLL : -0.728465 

AUC ROC : 0.551551 

AUC PR : 0.501314 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.18566679573059 

Total Inference Time : 1.2340247631072998 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.465
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.231', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894], 'false': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783], 'false': [nan, 0.24218017894954783], 'false,false': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464], 'false': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942], 'false': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138], 'false': [nan, 0.2421801789495138], 'false,false': [nan, 0.2421801789495138], 'false,false,false': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
1;false;sameauthor(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;haswordauthor(A, D), sameauthor(E, A).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
4;false;sameauthor(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(G, A).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
8;false;sameauthor(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
9;false;sameauthor(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true


Refining candidate
***************************
Model training time 19.675
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.27854694504975613;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.40245273256786723;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0910256474282795;  // std dev = 3.611, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.2460649297948579;  // std dev = 20.304, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.06726598286080536;  // std dev = 4.676, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.2020617206886203;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.3040853652764693;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.07397329195650598;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.037767261546891945;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.16562700107096087;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.24432461057022728;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06418569359135656;  // std dev = 3.609, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.03210387386820287;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.1329271688812747;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.19066269668354863;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.05811304673070833;  // std dev = 3.607, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.023429166884510088;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10193412061703315;  // std dev = 20.831, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.08253637875145625;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.12130512937011921;  // std dev = 4.427, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0345253800508871;  // std dev = 3.606, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return 0.003523049800534695;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.06383238470296204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.04715207440612575;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.16784172957853938;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.12067522661224565;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.002966257871418066;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.0010304016156128717;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.04905727818992043;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.06869466614601363;  // std dev = 4.413, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.026481901165164495;  // std dev = 3.596, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -8.649523973459538E-4;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03636531007157548;  // std dev = 20.812, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.931', 'seconds']
Refined model CLL: -0.671232


******************************************
Best model found
******************************************
Results 

CLL : -0.641876 

AUC ROC : 0.564308 

AUC PR : 0.420023 

Precision : 0.694118 

Recall : 0.025991 

F1 : 0.050106 

Total Learning Time : 19.675 

Total Inference Time : 1.1285550594329834 

Total revision time: 23.09944333076477
Best scored revision CLL: -0.671232


Results 

CLL : -0.641876 

AUC ROC : 0.564308 

AUC PR : 0.420023 

Precision : 0.694118 

Recall : 0.025991 

F1 : 0.050106 

Total Learning Time : 23.13080014228821 

Total Inference Time : 1.1285550594329834 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;true
0;true;follows(D, A), follows(A, E).;true;true
0;true,true;follows(E, D), tweets(E, C).;true;false
0;true,true,true;tweets(D, C), follows(A, D).;false;false
0;true,false;follows(F, A).;false;true
0;true,false,false;follows(A, G), follows(G, H).;false;false
0;false;follows(I, A).;true;false
0;false,true;follows(A, I), tweets(I, J).;false;false
1;;accounttype(A, B) :- follows(A, C).;true;true
1;true;follows(C, A), tweets(A, D).;true;false
1;true,true;follows(C, E), follows(E, A).;false;true
1;true,true,false;tweets(C, D).;false;false
1;false;follows(F, A).;true;true
1;false,true;follows(F, G), follows(G, A).;true;false
1;false,true,true;follows(G, F).;false;false
1;false,false;tweets(A, H).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;true
2;true;follows(C, D), follows(D, C).;true;true
2;true,true;follows(D, A), follows(A, D).;true;true
2;true,true,true;tweets(C, E), tweets(D, F).;false;false
2;true,true,false;tweets(A, G), follows(C, A).;false;false
2;true,false;follows(H, A), follows(H, C).;false;true
2;true,false,false;tweets(A, I).;false;false
2;false;tweets(A, J), follows(K, A).;false;false
3;;accounttype(A, B) :- follows(C, A), follows(A, C).;true;true
3;true;follows(A, D), follows(C, D).;true;true
3;true,true;follows(D, C), tweets(D, E).;true;true
3;true,true,true;tweets(C, E), follows(D, A).;false;false
3;true,true,false;follows(F, A), follows(D, F).;false;false
3;true,false;tweets(A, G), tweets(C, G).;false;false
3;false;tweets(A, H).;true;false
3;false,true;follows(A, I), follows(I, J).;false;false
4;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
4;true;follows(E, D), follows(A, E).;true;true
4;true,true;follows(A, D), tweets(D, C).;true;true
4;true,true,true;follows(E, A), tweets(E, C).;false;false
4;true,true,false;follows(E, A), tweets(E, C).;false;false
4;true,false;tweets(D, C), follows(F, D).;true;false
4;true,false,true;follows(F, A), follows(D, F).;false;false
4;false;follows(G, A), tweets(G, H).;false;false
5;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
5;true;follows(E, D), follows(E, A).;true;false
5;true,true;follows(A, D), follows(A, E).;false;false
5;false;follows(A, F).;true;true
5;false,true;follows(F, G), follows(G, F).;true;false
5;false,true,true;tweets(A, H).;false;false
5;false,false;tweets(A, I).;false;true
5;false,false,false;follows(J, A).;false;false
6;;accounttype(A, B) :- follows(C, A), tweets(C, D).;true;true
6;true;follows(A, E), follows(E, F).;true;true
6;true,true;follows(A, C), follows(C, E).;true;true
6;true,true,true;tweets(E, D), follows(A, F).;false;false
6;true,true,false;tweets(A, D), follows(G, C).;false;false
6;true,false;follows(A, H).;false;true
6;true,false,false;tweets(A, D).;false;false
6;false;follows(A, I).;false;false
7;;accounttype(A, B) :- follows(A, C).;true;false
7;true;tweets(A, D), follows(C, A).;true;true
7;true,true;follows(A, E), follows(E, C).;true;true
7;true,true,true;follows(C, E), tweets(E, F).;false;false
7;true,true,false;follows(A, G), follows(C, G).;false;false
7;true,false;follows(H, A).;true;true
7;true,false,true;follows(I, H), tweets(I, J).;false;false
7;true,false,false;tweets(A, K).;false;false
8;;accounttype(A, B) :- follows(C, A), tweets(A, D).;true;true
8;true;follows(E, C), follows(E, A).;true;false
8;true,true;tweets(E, D), follows(F, E).;true;false
8;true,true,true;tweets(C, G), follows(F, A).;false;false
8;false;follows(A, H).;true;false
8;false,true;follows(H, I), follows(I, H).;true;true
8;false,true,true;follows(A, I).;false;false
8;false,true,false;follows(H, J).;false;false
9;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
9;true;follows(A, E), tweets(E, C).;true;false
9;true,true;follows(D, E), tweets(D, C).;true;true
9;true,true,true;follows(E, F), follows(A, F).;false;false
9;true,true,false;follows(A, D), follows(D, E).;false;false
9;false;follows(G, A).;false;true
9;false,false;tweets(A, H).;false;true
9;false,false,false;follows(A, I), follows(I, J).;false;false


Model training time 1.175
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.348', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)', 'false': 'sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'sameauthor(D, A)', 'false,false': 'haswordauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)', 'false': 'haswordauthor(A, D), sameauthor(E, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(A, C)', 'false': 'haswordauthor(A, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A), haswordauthor(E, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(C, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), haswordauthor(A, D)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(E, A)', 'false,false': 'haswordauthor(A, F)', 'false,false,false': 'sameauthor(A, G), sameauthor(G, H)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569], 'false': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634], 'false': [nan, 0.2494331065759634], 'false,false': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508], 'false': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066], 'false': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963], 'false': [nan, 0.24943310657595963], 'false,false': [nan, 0.24943310657595963], 'false,false,false': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
0;false;sameauthor(D, A).;true;true
1;;samevenue(A, B) :- sameauthor(A, C).;true;true
1;false;sameauthor(D, A).;true;true
1;false,false;haswordauthor(A, E).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
2;false;haswordauthor(A, D), sameauthor(E, A).;true;true
3;;samevenue(A, B) :- sameauthor(C, A), sameauthor(A, C).;true;true
3;false;haswordauthor(A, D).;true;true
4;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
4;false;sameauthor(E, A), haswordauthor(E, F).;true;true
5;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
5;false;sameauthor(A, E).;true;true
5;false,false;haswordauthor(A, F).;true;true
5;false,false,false;sameauthor(G, A).;true;true
6;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(C, D).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), haswordauthor(A, D).;true;true
8;false;sameauthor(A, E).;true;true
9;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
9;false;sameauthor(E, A).;true;true
9;false,false;haswordauthor(A, F).;true;true
9;false,false,false;sameauthor(A, G), sameauthor(G, H).;true;true


Refining candidate
***************************
Model training time 11.949
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.443242102801371;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.7291166770349955;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08314893509951105;  // std dev = 5.282, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, E) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | | then return 0.38905464678231566;  // std dev = 14.162, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.08833304492774158;  // std dev = 6.270, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D), sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.30975463796301556;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.5351144586319452;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.13077952946215313;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.058088015343719636;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | | then if ( haswordtitle(F, E) )
%   | | | then return 0.24389258995814633;  // std dev = 13.979, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.40758064528849386;  // std dev = 1.867, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.11209725509319501;  // std dev = 3.357, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.04979511100027214;  // std dev = 5.275, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(E, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.0692373528239819;  // std dev = 3.777, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.20119293419921128;  // std dev = 13.567, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.10280136026142117;  // std dev = 3.358, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.039734395065561444;  // std dev = 5.269, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12492463643950351;  // std dev = 15.482, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.02197790367089757;  // std dev = 3.777, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.12116767901411843;  // std dev = 13.568, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.06511319434437277;  // std dev = 3.359, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.013491503356791012;  // std dev = 5.268, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then return 0.08118127988178188;  // std dev = 0.491, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.15648333411708454;  // std dev = 1.268, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.34444880973564934;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.16282845423947023;  // std dev = 1.545, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0377482110536663;  // std dev = 2.963, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0651830814405386;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return -0.014119347397427288;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), haswordauthor(A, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( haswordvenue(A, F) )
%   | | | then return 0.449650003679072;  // std dev = 0.312, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.047711286196223696;  // std dev = 4.878, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.07364166662891185;  // std dev = 13.524, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | | else return 0.00685745504944611;  // std dev = 5.257, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(A, G), sameauthor(G, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041322740271108147;  // std dev = 15.373, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.466', 'seconds']
Refined model CLL: -0.643092


******************************************
Best model found
******************************************
Results 

CLL : -0.69955 

AUC ROC : 0.554876 

AUC PR : 0.40387 

Precision : 0.375367 

Recall : 0.933928 

F1 : 0.535503 

Total Learning Time : 11.949 

Total Inference Time : 0.9432969093322754 

Total revision time: 14.816511558532715
Best scored revision CLL: -0.643092


Results 

CLL : -0.69955 

AUC ROC : 0.554876 

AUC PR : 0.40387 

Precision : 0.375367 

Recall : 0.933928 

F1 : 0.535503 

Total Learning Time : 14.847868370056153 

Total Inference Time : 0.9432969093322754 

Run: 5
Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

Model training time 1661.545 

Building refine structure 

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( tweets(A, C) )
%   then if ( follows(D, A), tweets(D, C) )
%   | then if ( follows(A, E), follows(D, E) )
%   | | then if ( tweets(E, C), follows(A, D) )
%   | | | then return 0.17762945458002766;  // std dev = 9.149, 385.000 (wgt'ed) examples reached here.  /* #neg=262 #pos=123 */
%   | | | else return 0.24276431971489698;  // std dev = 3.038, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | else if ( follows(F, A), follows(F, D) )
%   | | | then return 0.21635789032339198;  // std dev = 3.925, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.1914822684328457;  // std dev = 2.708, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | else if ( follows(G, A), tweets(G, H) )
%   | | then if ( follows(G, I), follows(I, A) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.2102616111558493;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.18072958026080266;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   else return 0.17064893509951373;  // std dev = 0.464, 224.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=70 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(D, A) )
%   then if ( follows(E, D), follows(D, C) )
%   | then if ( follows(E, A), follows(C, E) )
%   | | then if ( follows(C, D), follows(A, D) )
%   | | | then return 0.15642922743158155;  // std dev = 7.453, 255.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=82 */
%   | | | else return 0.09331979869989701;  // std dev = 2.847, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( follows(A, E), tweets(A, F) )
%   | | | then return 0.21095319985990446;  // std dev = 5.173, 114.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=43 */
%   | | | else return 0.1645231923817387;  // std dev = 5.110, 118.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=39 */
%   | else if ( follows(G, D), tweets(A, H) )
%   | | then if ( follows(C, G), tweets(C, H) )
%   | | | then return 0.23320549123154835;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.07272685275270789;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( follows(D, C) )
%   | | | then return 0.5759563331837879;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4360807217799289;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else return 0.14336194765751106;  // std dev = 0.463, 290.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=90 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(C, D), tweets(C, E) )
%   | then if ( tweets(A, E), tweets(D, E) )
%   | | then if ( follows(F, A), follows(F, C) )
%   | | | then return 0.12924525288670585;  // std dev = 9.502, 414.000 (wgt'ed) examples reached here.  /* #neg=281 #pos=133 */
%   | | | else return 0.17465057313005022;  // std dev = 4.895, 103.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=38 */
%   | | else if ( follows(D, C), follows(A, D) )
%   | | | then return 0.1265063718870531;  // std dev = 4.603, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return 0.08414771916272881;  // std dev = 4.420, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | else if ( follows(G, A), tweets(A, H) )
%   | | then if ( follows(G, C) )
%   | | | then return 0.20907246665937448;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1525301415999539;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.24252521258216703;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.25974185752228635;  // std dev = 2.107, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else return 0.08677189854570748;  // std dev = 0.447, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(A, D), tweets(C, E) )
%   | then return 0.11999938333750289;  // std dev = 0.471, 566.000 (wgt'ed) examples reached here.  /* #neg=378 #pos=188 */
%   | else if ( tweets(A, F), follows(C, A) )
%   | | then return 0.2711123365783063;  // std dev = 0.500, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | else return 0.12428643352775558;  // std dev = 0.475, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   else if ( tweets(A, G) )
%   | then if ( follows(H, A) )
%   | | then if ( follows(A, I) )
%   | | | then return 0.2283758777090357;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.16333568532042883;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | else return 0.07128625707552591;  // std dev = 0.451, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | else if ( follows(A, J) )
%   | | then return 0.18492578798479606;  // std dev = 0.492, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( follows(K, A) )
%   | | | then return 0.40205964360475466;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.19094853249364385;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(A, E), follows(D, A) )
%   | then if ( tweets(C, E), follows(F, D) )
%   | | then if ( follows(F, C), follows(A, F) )
%   | | | then return 0.12373321060631108;  // std dev = 7.194, 227.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=80 */
%   | | | else return 0.08063505706088485;  // std dev = 5.556, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
%   | | else return -0.03635702699582722;  // std dev = 0.421, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( follows(A, C) )
%   | | then return 0.06595600938843493;  // std dev = 0.462, 227.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=70 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.0853458506523149;  // std dev = 2.585, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return 0.1982441901134839;  // std dev = 1.671, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( tweets(A, H) )
%   | then return 0.0676272840540579;  // std dev = 0.464, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
%   | else if ( follows(A, I), follows(I, J) )
%   | | then return 0.08015083793216023;  // std dev = 0.459, 60.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=18 */
%   | | else return 0.11550301816682917;  // std dev = 0.478, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(C, A) )
%   then if ( follows(A, D), follows(E, C) )
%   | then return 0.08911630249961497;  // std dev = 0.474, 553.000 (wgt'ed) examples reached here.  /* #neg=364 #pos=189 */
%   | else return 0.026518106016136606;  // std dev = 0.455, 93.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=27 */
%   else if ( follows(A, F), follows(F, G) )
%   | then if ( follows(A, H), follows(H, F) )
%   | | then return 0.08000899947924739;  // std dev = 0.469, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | else if ( tweets(A, I), tweets(F, I) )
%   | | | then return 0.15427813759680983;  // std dev = 2.777, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
%   | | | else return 0.20119909342327968;  // std dev = 2.714, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | else if ( follows(A, J) )
%   | | then if ( tweets(A, K) )
%   | | | then return 0.10216364040215871;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.06622617086335798;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( tweets(A, L) )
%   | | | then return 0.085030774456406;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.13779104598005998;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( tweets(A, C), follows(D, A) )
%   then if ( follows(D, E), follows(E, A) )
%   | then if ( tweets(E, C), tweets(D, F) )
%   | | then if ( follows(A, D), follows(A, E) )
%   | | | then return 0.10054943985548728;  // std dev = 7.501, 242.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=89 */
%   | | | else return 0.06337919389746552;  // std dev = 4.517, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
%   | | else return 0.014076713965047337;  // std dev = 0.452, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | else return 0.03097784479461417;  // std dev = 0.464, 159.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=50 */
%   else if ( follows(A, G) )
%   | then if ( follows(A, H), follows(G, H) )
%   | | then if ( follows(G, A), follows(H, I) )
%   | | | then return 0.13005161193490636;  // std dev = 4.075, 70.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=27 */
%   | | | else return 0.038437912516861884;  // std dev = 3.922, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( follows(J, G), tweets(J, K) )
%   | | | then return 0.11879206631308911;  // std dev = 4.904, 100.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=40 */
%   | | | else return 0.0296383342018602;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.037213937086816064;  // std dev = 0.471, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(A, C), follows(C, D) )
%   then if ( follows(E, A), tweets(E, F) )
%   | then if ( follows(D, A), follows(C, A) )
%   | | then if ( follows(D, E), follows(E, C) )
%   | | | then return 0.07615725636946948;  // std dev = 6.526, 184.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=67 */
%   | | | else return 0.034494959408954126;  // std dev = 6.128, 173.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=55 */
%   | | else return 0.009803781201390763;  // std dev = 0.456, 215.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=64 */
%   | else if ( follows(D, C), follows(A, D) )
%   | | then if ( tweets(A, G) )
%   | | | then return 0.03194436674819302;  // std dev = 2.353, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.0723541827184196;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( tweets(A, H), tweets(C, H) )
%   | | | then return 0.077946992966249;  // std dev = 3.146, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | else return 0.12520771145035361;  // std dev = 3.068, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   else if ( follows(I, A), tweets(A, J) )
%   | then return 0.08720253642638236;  // std dev = 0.480, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | else return -0.028778334441661987;  // std dev = 0.441, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( tweets(A, E), tweets(C, E) )
%   | then if ( follows(A, F) )
%   | | then if ( follows(F, D) )
%   | | | then return 0.029268629328770467;  // std dev = 9.859, 444.000 (wgt'ed) examples reached here.  /* #neg=300 #pos=144 */
%   | | | else return -0.0679705279698176;  // std dev = 1.945, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( follows(C, D), follows(D, A) )
%   | | | then return 0.06942142892840822;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.135639215608825;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( tweets(C, G), follows(A, C) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.18446646765161923;  // std dev = 1.425, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08685798658890714;  // std dev = 4.473, 85.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=32 */
%   | | else if ( tweets(C, I) )
%   | | | then return -0.013244983033410145;  // std dev = 1.873, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.18182279693011608;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else return 0.009710876576219557;  // std dev = 0.462, 223.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=69 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(C, A), follows(D, C) )
%   then if ( follows(D, A), follows(C, D) )
%   | then if ( tweets(C, E), tweets(D, F) )
%   | | then if ( tweets(A, E), tweets(A, F) )
%   | | | then return 0.032292496110532115;  // std dev = 8.311, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
%   | | | else return 0.052607927851027476;  // std dev = 3.461, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.11440177239012855;  // std dev = 2.312, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.3591692425684818;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( follows(A, C), tweets(D, H) )
%   | | then if ( tweets(A, H), follows(D, A) )
%   | | | then return 0.1252154516832778;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.04302893890980018;  // std dev = 6.125, 166.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=57 */
%   | | else if ( follows(A, I), follows(D, I) )
%   | | | then return 0.1539949994169182;  // std dev = 2.339, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.04361585107395415;  // std dev = 1.977, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else return 0.00634524925250685;  // std dev = 0.459, 226.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=69 */
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.178
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.302', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'title(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624], 'false,false': [nan, 0.22704315886134624], 'false,false,false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;title(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;title(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;title(A, G).;true;true
6;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), title(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 26.352
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4295775065280833;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.45884191663785473;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.36797300713520104;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return -0.0036637537051137188;  // std dev = 3.076, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.12787230110394693;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3315399042152861;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.30388127489624195;  // std dev = 2.836, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return -0.11855890509857496;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004868266800416272;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12477563577725866;  // std dev = 15.255, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.12591066194262418;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.022385447148433983;  // std dev = 4.351, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08194315161120802;  // std dev = 15.207, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.08019805836372615;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.16495443195806314;  // std dev = 3.040, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return -0.03534915672858488;  // std dev = 3.082, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.024811169652409436;  // std dev = 3.069, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.06308863942343809;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.124469345187436;  // std dev = 3.040, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.03088015071614477;  // std dev = 3.082, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.021152895983022304;  // std dev = 3.070, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.049270012008985356;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.15442270075571626;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08826357709299297;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return -0.018754872117317925;  // std dev = 3.069, 80.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=11 */
%   | | | else return -0.1299716650467817;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.01216784060901966;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11494024203566636;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.038270155035766175;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.11600659684185814;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06620698213281749;  // std dev = 2.929, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.11081720301858795;  // std dev = 0.002, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.010548923517824231;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.010482277481601899;  // std dev = 3.063, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.10375485245520392;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.426', 'seconds']
Refined model CLL: -0.622869


******************************************
Best model found
******************************************
Results 

CLL : -0.656952 

AUC ROC : 0.555807 

AUC PR : 0.42909 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 26.352 

Total Inference Time : 1.0712909698486328 

Total revision time: 29.306122331619264
Best scored revision CLL: -0.622869


Results 

CLL : -0.656952 

AUC ROC : 0.555807 

AUC PR : 0.42909 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 29.323493509292604 

Total Inference Time : 1.0712909698486328 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.174
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.253', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'title(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616], 'false,false': [nan, 0.24255027541238616], 'false,false,false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;title(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;title(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;title(A, G).;true;true
6;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), title(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 23.72
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.5005053426630848;  // std dev = 1.921, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5406810030211525;  // std dev = 1.962, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordauthor(E, D) )
%   | then if ( haswordtitle(F, D) )
%   | | then return 0.5791684237702857;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(A, D) )
%   | | | then return 0.22916842377028543;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.04297102932558625;  // std dev = 1.239, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.3045453081923796;  // std dev = 17.080, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.4161777775101614;  // std dev = 2.748, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.4317030979309822;  // std dev = 2.002, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.20848477447886868;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2455807856490507;  // std dev = 17.715, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.18760139774169574;  // std dev = 17.489, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.21994358175261175;  // std dev = 2.786, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14308006650624358;  // std dev = 17.710, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.37394586532192;  // std dev = 1.592, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.1527989988630109;  // std dev = 1.659, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | | then return 0.10463233737149909;  // std dev = 17.277, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.14791937547631692;  // std dev = 2.737, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.07777355642388194;  // std dev = 17.238, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.149422840415959;  // std dev = 2.747, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.16553724441095424;  // std dev = 1.990, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return -0.04396979983524251;  // std dev = 1.828, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.058359097165316356;  // std dev = 0.492, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0962540989767018;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.1300583961048933;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.24390531819169467;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.03257228528873119;  // std dev = 1.836, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.03306390776675616;  // std dev = 0.489, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( haswordtitle(G, E) )
%   | | then return 0.24800528973357752;  // std dev = 0.356, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, E) )
%   | | | then return 0.05024070125667335;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.23699045752101458;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.04214149578530681;  // std dev = 17.051, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.08855669905703743;  // std dev = 2.747, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.12355827286494422;  // std dev = 1.882, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return -0.024886269264794734;  // std dev = 1.828, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.912', 'seconds']
Refined model CLL: -0.66803


******************************************
Best model found
******************************************
Results 

CLL : -0.749224 

AUC ROC : 0.535948 

AUC PR : 0.345289 

Precision : 0.353755 

Recall : 0.956367 

F1 : 0.51647 

Total Learning Time : 23.72 

Total Inference Time : 1.0577144622802734 

Total revision time: 26.733135885238646
Best scored revision CLL: -0.66803


Results 

CLL : -0.749224 

AUC ROC : 0.535948 

AUC PR : 0.345289 

Precision : 0.353755 

Recall : 0.956367 

F1 : 0.51647 

Total Learning Time : 26.750507062911986 

Total Inference Time : 1.0577144622802734 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.757
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19321237223906904;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16345410524649628;  // std dev = 19.723, 1,758.000 (wgt'ed) examples reached here.  /* #neg=1,177 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14192162516756335;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12307946771387454;  // std dev = 19.626, 1,724.000 (wgt'ed) examples reached here.  /* #neg=1,143 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09702770041291559;  // std dev = 19.695, 1,748.000 (wgt'ed) examples reached here.  /* #neg=1,167 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08141823116752422;  // std dev = 19.661, 1,736.000 (wgt'ed) examples reached here.  /* #neg=1,155 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06303626220745358;  // std dev = 19.700, 1,750.000 (wgt'ed) examples reached here.  /* #neg=1,169 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.044318280938792115;  // std dev = 19.791, 1,783.000 (wgt'ed) examples reached here.  /* #neg=1,202 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04274573602312336;  // std dev = 19.681, 1,743.000 (wgt'ed) examples reached here.  /* #neg=1,162 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03674914693501509;  // std dev = 19.638, 1,728.000 (wgt'ed) examples reached here.  /* #neg=1,147 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.170', 'seconds']
Parameter learned model CLL:-0.535602 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.655, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [19.723, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'title(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.626, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.695, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.661, 1, 581]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.7, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.791, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [19.681, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [19.638, 1, 581]}]
{'': [nan, 0.22279593023177036]}
{'': [nan, 0.2212660860606782]}
{'': [nan, 0.22209472828628532]}
{'': [nan, 0.22343326909309036], 'false': [nan, 0.22343326909309036], 'false,false': [nan, 0.22343326909309036], 'false,false,false': [nan, 0.22343326909309036]}
{'': [nan, 0.2219034895715905], 'false': [nan, 0.2219034895715905], 'false,false': [nan, 0.2219034895715905]}
{'': [nan, 0.22266844432883384], 'false': [nan, 0.22266844432883384], 'false,false': [nan, 0.22266844432883384], 'false,false,false': [nan, 0.22266844432883384]}
{'': [nan, 0.22177600000000747], 'false': [nan, 0.22177600000000747]}
{'': [nan, 0.21967362348142772], 'false': [nan, 0.21967362348142772]}
{'': [nan, 0.22222222222221016]}
{'': [nan, 0.22317835594565577]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;title(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;title(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;title(A, G).;true;true
6;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), title(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 14.03
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21021611856203967;  // std dev = 0.478, 1,548.000 (wgt'ed) examples reached here.  /* #neg=1,003 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then return -0.0168510649004878;  // std dev = 0.331, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04205698107652387;  // std dev = 3.614, 87.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=16 */
%   | | | else return 0.02178529873587602;  // std dev = 3.880, 110.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=18 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then return 0.19271194037329875;  // std dev = 0.481, 1,505.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=545 */
%   | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then return -0.0199970524032635;  // std dev = 0.331, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.014312207772014982;  // std dev = 3.888, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | | else return 0.0023949448115658982;  // std dev = 3.694, 109.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1684752316783502;  // std dev = 0.482, 1,486.000 (wgt'ed) examples reached here.  /* #neg=941 #pos=545 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.02775975531146868;  // std dev = 3.639, 93.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | | else return -0.05786355562595361;  // std dev = 1.351, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.005230833832306092;  // std dev = 3.928, 126.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=18 */
%   | | | else return -0.143876146945038;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11744439157046514;  // std dev = 19.551, 1,741.000 (wgt'ed) examples reached here.  /* #neg=1,160 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.10762418958723127;  // std dev = 18.745, 1,534.000 (wgt'ed) examples reached here.  /* #neg=989 #pos=545 */
%   | | | else return 0.013038132948895075;  // std dev = 5.446, 206.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07492997796651672;  // std dev = 19.578, 1,764.000 (wgt'ed) examples reached here.  /* #neg=1,183 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.07700229437698795;  // std dev = 0.480, 1,513.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=545 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.06615504066451813;  // std dev = 1.336, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.020141578545439135;  // std dev = 5.358, 221.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.02743241472262856;  // std dev = 3.283, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.06422597830191759;  // std dev = 18.352, 1,456.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=529 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.05917577059338406;  // std dev = 1.337, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.0033099642242197884;  // std dev = 5.314, 203.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then return 0.04301402538891317;  // std dev = 0.479, 1,533.000 (wgt'ed) examples reached here.  /* #neg=988 #pos=545 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.026938321800690463;  // std dev = 3.579, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | | | else return -0.060876304585901334;  // std dev = 1.342, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return -0.004177365564943881;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | | | else return -0.14747696058107929;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then return 0.033214835499829655;  // std dev = 0.479, 1,535.000 (wgt'ed) examples reached here.  /* #neg=990 #pos=545 */
%   | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return 0.013307627714174179;  // std dev = 3.602, 85.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=16 */
%   | | | else return -0.0278269617348188;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0027419727660578067;  // std dev = 3.858, 104.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=18 */
%   | | | else return -0.128176577366192;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.937', 'seconds']
Refined model CLL: -0.528141


******************************************
Best model found
******************************************
Results 

CLL : -0.73044 

AUC ROC : 0.545576 

AUC PR : 0.489784 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 14.03 

Total Inference Time : 1.213911533355713 

Total revision time: 17.951435863494872
Best scored revision CLL: -0.528141


Results 

CLL : -0.73044 

AUC ROC : 0.545576 

AUC PR : 0.489784 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 17.968807041168212 

Total Inference Time : 1.213911533355713 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.503
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.227', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'title(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252], 'false,false': [nan, 0.24218017894951252], 'false,false,false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;title(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;title(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;title(A, G).;true;true
6;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), title(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 41.764
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3581489350995113;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.47883859027192616;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0803711573217346;  // std dev = 3.300, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3002199788127198;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.4247561750638162;  // std dev = 2.608, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.17626717210462292;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05092203251355405;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.047893852432752584;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3158346306230407;  // std dev = 1.932, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.5825012972897073;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.2006373174408249;  // std dev = 19.656, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.28512978481613427;  // std dev = 4.405, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.06200265321718561;  // std dev = 3.291, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.12599222348940822;  // std dev = 1.445, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.0416136419399542;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16081095072170956;  // std dev = 20.847, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.13736072603040875;  // std dev = 20.275, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.02643003453222107;  // std dev = 4.664, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10231394164171852;  // std dev = 20.824, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.08343024362720988;  // std dev = 19.785, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.13467431314660303;  // std dev = 4.400, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.01580576347445898;  // std dev = 3.596, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.007808422238012358;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.23877227144536578;  // std dev = 2.171, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.06422213782346399;  // std dev = 20.139, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.015930742649011623;  // std dev = 3.594, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.010267252991049431;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.04917723965401377;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05036248989546514;  // std dev = 3.520, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.14724186648048582;  // std dev = 2.606, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.08155912626329356;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.00856742818992256;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.00914870852375084;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.03763069016856606;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.027653926555625253;  // std dev = 3.510, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.12811929302533803;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.0658862263118572;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.007156784994175743;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.0076395068160535285;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.196', 'seconds']
Refined model CLL: -0.670092


******************************************
Best model found
******************************************
Results 

CLL : -0.643413 

AUC ROC : 0.562649 

AUC PR : 0.417838 

Precision : 0.657343 

Recall : 0.04141 

F1 : 0.077911 

Total Learning Time : 41.764 

Total Inference Time : 1.3657875061035156 

Total revision time: 45.4544372959137
Best scored revision CLL: -0.670092


Results 

CLL : -0.643413 

AUC ROC : 0.562649 

AUC PR : 0.417838 

Precision : 0.657343 

Recall : 0.04141 

F1 : 0.077911 

Total Learning Time : 45.47180847358704 

Total Inference Time : 1.3657875061035156 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.075
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.220', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'title(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'title(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'title(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'title(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'title(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), title(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204], 'false,false': [nan, 0.24943310657597204], 'false,false,false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- title(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;title(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;title(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;title(A, G).;true;true
6;;samevenue(A, B) :- title(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), title(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 20.532
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( title(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7100007869513637;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, A) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.051131391239862906;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.5454907572981614;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6490137408654374;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.22373365448410584;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11418623766746618;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.14154274242296505;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04479249977758044;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7263997659160313;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.608456896213577;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.30837723775582815;  // std dev = 13.942, 799.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=465 */
%   | | | else return 0.4684679260950658;  // std dev = 1.838, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.18886832215749735;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0983529971467659;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.024798684113639464;  // std dev = 3.137, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.08931411673328135;  // std dev = 4.209, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21210910620706938;  // std dev = 15.606, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( title(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.2006528756544115;  // std dev = 14.099, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.03167482079832153;  // std dev = 6.234, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( title(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12645047051284922;  // std dev = 15.502, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( title(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return -0.01469246075867939;  // std dev = 3.676, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.13148807053125947;  // std dev = 13.567, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.034992708369796274;  // std dev = 3.344, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.00615862265107055;  // std dev = 5.252, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), title(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.03860229044580653;  // std dev = 3.711, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.10090157137842876;  // std dev = 13.543, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.031656483572879944;  // std dev = 3.341, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.006240600357841667;  // std dev = 5.252, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(H, E) )
%   | | | then return 0.39383949365731596;  // std dev = 0.205, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.11205928532321345;  // std dev = 3.404, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return -0.09835558401313205;  // std dev = 3.362, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.08753352698626875;  // std dev = 13.058, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, B) )
%   | | | then return 0.13676694976028417;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0036316024509674945;  // std dev = 2.940, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.02086536533525379;  // std dev = 4.191, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.045476652355821566;  // std dev = 3.134, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | then return 0.04701407801876146;  // std dev = 0.487, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.13826899523976602;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2944094928617399;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return -0.046893214315071076;  // std dev = 1.183, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.03551966867967342;  // std dev = 3.105, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.03785175033147361;  // std dev = 3.136, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.01756072779579073;  // std dev = 4.193, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.708', 'seconds']
Refined model CLL: -0.639404


******************************************
Best model found
******************************************
Results 

CLL : -0.700335 

AUC ROC : 0.554717 

AUC PR : 0.404029 

Precision : 0.375312 

Recall : 0.915687 

F1 : 0.532406 

Total Learning Time : 20.532 

Total Inference Time : 1.0797984600067139 

Total revision time: 23.492939598083495
Best scored revision CLL: -0.639404


Results 

CLL : -0.700335 

AUC ROC : 0.554717 

AUC PR : 0.404029 

Precision : 0.375312 

Recall : 0.915687 

F1 : 0.532406 

Total Learning Time : 23.510310775756835 

Total Inference Time : 1.0797984600067139 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.122
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.232', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624], 'false,false': [nan, 0.22704315886134624], 'false,false,false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 26.379
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.433906510857088;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3967482646957417;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3719067372535156;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.39658075729303227;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.299952545999878;  // std dev = 2.927, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12476191851358004;  // std dev = 15.255, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.1259135444648057;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.022478052440904735;  // std dev = 4.350, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0819324218404932;  // std dev = 15.208, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.08020258761300712;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.16495437381150677;  // std dev = 3.041, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.034518994156709205;  // std dev = 3.080, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.02589436750611883;  // std dev = 3.070, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.06309232893677334;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.12446022822081276;  // std dev = 3.041, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.03093699670359442;  // std dev = 3.080, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.02123886566886044;  // std dev = 3.070, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.04927296732443186;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.16056284684030533;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08772225768519784;  // std dev = 2.927, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.11296045278541443;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.013258299850379289;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.013114128287211648;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11480946098716109;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.03827249329154762;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.14871048879740342;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06338489860030132;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.10212693202719315;  // std dev = 1.05e-08, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.011485081989696451;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.011361390133487801;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.1036474576314771;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.492', 'seconds']
Refined model CLL: -0.62282


******************************************
Best model found
******************************************
Results 

CLL : -0.657396 

AUC ROC : 0.55561 

AUC PR : 0.427985 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 26.379 

Total Inference Time : 1.0342817306518555 

Total revision time: 29.2965641746521
Best scored revision CLL: -0.62282


Results 

CLL : -0.657396 

AUC ROC : 0.55561 

AUC PR : 0.427985 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 29.35161502456665 

Total Inference Time : 1.0342817306518555 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.249
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.307', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616], 'false,false': [nan, 0.24255027541238616], 'false,false,false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 26.999
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.5005053426630848;  // std dev = 1.921, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5406810030211525;  // std dev = 1.962, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30665618885999163;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3980165213163664;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.4318624987684384;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.20848477447886868;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24556732721118826;  // std dev = 17.735, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.1876203016927059;  // std dev = 17.518, 1,267.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=739 */
%   | | | else return 0.22022878929891565;  // std dev = 2.742, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.143138179870279;  // std dev = 17.732, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.10431836835250252;  // std dev = 17.296, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.17464056413076587;  // std dev = 2.746, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.18093158074621518;  // std dev = 1.977, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.03867376321129147;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordtitle(I, G) )
%   | | | then return 0.35077680826716523;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.1864898848292607;  // std dev = 1.653, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( haswordvenue(A, J), haswordvenue(B, J) )
%   | | | then return 0.07803580883163531;  // std dev = 17.303, 1,235.000 (wgt'ed) examples reached here.  /* #neg=517 #pos=718 */
%   | | | else return 0.12093136146629965;  // std dev = 2.683, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | then if ( haswordtitle(G, E) )
%   | | then return 0.263947657473102;  // std dev = 0.357, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else if ( haswordvenue(B, E) )
%   | | | then return 0.04725779989525558;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.22339043143528858;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordtitle(I, H) )
%   | | | then return 0.05665350016425439;  // std dev = 17.080, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.1147096828339902;  // std dev = 2.747, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.13481280164007103;  // std dev = 1.906, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 1.1147380045083739E-4;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.04385779957454245;  // std dev = 0.493, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06875627660684619;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.10607013086737452;  // std dev = 1.957, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.20123412898779813;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 8.417565313420925E-5;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.057216710917195455;  // std dev = 0.487, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.128', 'seconds']
Refined model CLL: -0.669473


******************************************
Best model found
******************************************
Results 

CLL : -0.749354 

AUC ROC : 0.533978 

AUC PR : 0.342396 

Precision : 0.352912 

Recall : 0.957703 

F1 : 0.515765 

Total Learning Time : 26.999 

Total Inference Time : 1.0833144187927246 

Total revision time: 30.14372501182556
Best scored revision CLL: -0.669473


Results 

CLL : -0.749354 

AUC ROC : 0.533978 

AUC PR : 0.342396 

Precision : 0.352912 

Recall : 0.957703 

F1 : 0.515765 

Total Learning Time : 30.19877586174011 

Total Inference Time : 1.0833144187927246 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.821
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19110022449778813;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16431270973929674;  // std dev = 19.714, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1402181110268398;  // std dev = 19.714, 1,755.000 (wgt'ed) examples reached here.  /* #neg=1,174 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12318580695073203;  // std dev = 19.632, 1,726.000 (wgt'ed) examples reached here.  /* #neg=1,145 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.09285364560331652;  // std dev = 19.764, 1,773.000 (wgt'ed) examples reached here.  /* #neg=1,192 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0810183148730603;  // std dev = 19.686, 1,745.000 (wgt'ed) examples reached here.  /* #neg=1,164 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06074220225502416;  // std dev = 19.756, 1,770.000 (wgt'ed) examples reached here.  /* #neg=1,189 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.047012620780084044;  // std dev = 19.780, 1,779.000 (wgt'ed) examples reached here.  /* #neg=1,198 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04669647710477322;  // std dev = 19.644, 1,730.000 (wgt'ed) examples reached here.  /* #neg=1,149 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0343089265803787;  // std dev = 19.684, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.175', 'seconds']
Parameter learned model CLL:-0.535054 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [19.714, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.714, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.632, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.764, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.686, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.756, 1, 581]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.78, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [19.644, 1, 581]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [19.684, 1, 581]}]
{'': [nan, 0.22209472828628862]}
{'': [nan, 0.22145729336611555]}
{'': [nan, 0.2214572933661346]}
{'': [nan, 0.22330581697141977], 'false': [nan, 0.22330581697141977], 'false,false': [nan, 0.22330581697141977], 'false,false,false': [nan, 0.22330581697141977]}
{'': [nan, 0.22031035819933403], 'false': [nan, 0.22031035819933403], 'false,false': [nan, 0.22031035819933403]}
{'': [nan, 0.22209472828628718], 'false': [nan, 0.22209472828628718], 'false,false': [nan, 0.22209472828628718], 'false,false,false': [nan, 0.22209472828628718]}
{'': [nan, 0.2205014523285097], 'false': [nan, 0.2205014523285097]}
{'': [nan, 0.21992826811837016], 'false': [nan, 0.21992826811837016]}
{'': [nan, 0.2230508870994708]}
{'': [nan, 0.22215847519147836]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 44.748
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(B, E), haswordtitle(G, D) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1996123497336587;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | else return 0.21509900257589065;  // std dev = 0.479, 1,482.000 (wgt'ed) examples reached here.  /* #neg=953 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.00851773156715447;  // std dev = 0.340, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.017440970497742472;  // std dev = 3.890, 113.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=18 */
%   | | | else return 0.004937925925200435;  // std dev = 3.695, 109.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(H, E) )
%   | | | then return 0.3068507486036643;  // std dev = 1.206, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.2035011290606046;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else return 0.185408251949332;  // std dev = 0.479, 1,488.000 (wgt'ed) examples reached here.  /* #neg=959 #pos=529 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.05053466498505787;  // std dev = 3.594, 83.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=16 */
%   | | | else return -0.03719006116488512;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01264456898740613;  // std dev = 3.896, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
%   | | | else return -0.142453219059622;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D) )
%   | | | then return 0.11429343588868952;  // std dev = 3.182, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | | else return 0.03474524480906826;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.16768734941560703;  // std dev = 0.482, 1,447.000 (wgt'ed) examples reached here.  /* #neg=918 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.04964700385004298;  // std dev = 3.588, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | | else return -0.012219633595965123;  // std dev = 1.317, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025139853302360488;  // std dev = 3.857, 105.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=18 */
%   | | | else return -0.12592108158723156;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11610472809062063;  // std dev = 19.579, 1,747.000 (wgt'ed) examples reached here.  /* #neg=1,166 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.11328333413974587;  // std dev = 18.672, 1,514.000 (wgt'ed) examples reached here.  /* #neg=969 #pos=545 */
%   | | | else return 0.0015730177419480402;  // std dev = 5.470, 216.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07292035639474229;  // std dev = 19.598, 1,774.000 (wgt'ed) examples reached here.  /* #neg=1,193 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then return 0.07995395825393012;  // std dev = 0.481, 1,502.000 (wgt'ed) examples reached here.  /* #neg=957 #pos=545 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.033075674274432386;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.016113537217847848;  // std dev = 5.337, 214.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.06007074700532088;  // std dev = 0.480, 1,516.000 (wgt'ed) examples reached here.  /* #neg=971 #pos=545 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return -0.05336676045851335;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.0013905013648029024;  // std dev = 5.299, 198.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then return 0.037182156012634665;  // std dev = 0.477, 1,560.000 (wgt'ed) examples reached here.  /* #neg=1,015 #pos=545 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, B) )
%   | | | then return -0.0030158034464998432;  // std dev = 3.640, 94.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=16 */
%   | | | else return 0.05894157332546336;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.1621835273497271;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.02832303914469236;  // std dev = 3.916, 125.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=18 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | then if ( title(G, F), venue(G, A) )
%   | | then if ( samebib(G, H), venue(H, B) )
%   | | | then return 0.5815963951866494;  // std dev = 6.447, 442.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=396 */
%   | | | else return -0.28886110507198137;  // std dev = 4.102, 864.000 (wgt'ed) examples reached here.  /* #neg=848 #pos=16 */
%   | | else if ( haswordvenue(A, E) )
%   | | | then return 0.14121596066513392;  // std dev = 8.431, 286.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=132 */
%   | | | else return 0.10039033738527944;  // std dev = 1.565, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( haswordvenue(A, I), haswordvenue(B, I) )
%   | | then if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.18065193854789985;  // std dev = 1.222, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.4800672748951639;  // std dev = 1.550, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.08640284694884887;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.009439615455326962;  // std dev = 3.608, 88.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '7.725', 'seconds']
Refined model CLL: -0.435885


******************************************
Best model found
******************************************
Results 

CLL : -0.580508 

AUC ROC : 0.856298 

AUC PR : 0.779425 

Precision : 1.0 

Recall : 0.004926 

F1 : 0.009804 

Total Learning Time : 44.748 

Total Inference Time : 1.7391185760498047 

Total revision time: 49.2312245311737
Best scored revision CLL: -0.435885


Results 

CLL : -0.580508 

AUC ROC : 0.856298 

AUC PR : 0.779425 

Precision : 1.0 

Recall : 0.004926 

F1 : 0.009804 

Total Learning Time : 49.28627538108825 

Total Inference Time : 1.7391185760498047 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.435
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.270', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252], 'false,false': [nan, 0.24218017894951252], 'false,false,false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 40.368
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3581489350995113;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.47883859027192616;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1914822684328457;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05814893509951237;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3002199788127198;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.4247561750638162;  // std dev = 2.608, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.16653882456488167;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.05092203251355405;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.05092203251355405;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.24760701674977223;  // std dev = 3.523, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.3498242125167599;  // std dev = 2.607, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1420942428155646;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.04434629760466855;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.04434629760466855;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16079484923158655;  // std dev = 20.852, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.13737552418907872;  // std dev = 20.282, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.026048425688652267;  // std dev = 4.657, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10230185552620998;  // std dev = 20.830, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.08345142984262664;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.13453197958631363;  // std dev = 4.391, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.012888058240226777;  // std dev = 3.587, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.00465707434144854;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.2441631580368208;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.06416862245480232;  // std dev = 20.143, 1,667.000 (wgt'ed) examples reached here.  /* #neg=960 #pos=707 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.012834835145033661;  // std dev = 3.586, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.006762882921400225;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( author(H, G), venue(H, B) )
%   | | | then return 0.15979771836048326;  // std dev = 1.922, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return 0.4207483070492567;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( haswordtitle(I, E) )
%   | | | then return 0.04697250554820146;  // std dev = 19.651, 1,588.000 (wgt'ed) examples reached here.  /* #neg=924 #pos=664 */
%   | | | else return 0.0859128943693633;  // std dev = 4.390, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(B, L) )
%   | | | then return 0.06143582589073371;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.005655888544944511;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.0059914046688218005;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.03762302336512762;  // std dev = 0.493, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02760890528333297;  // std dev = 3.509, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.12834275657908553;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.04910449249412654;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.00473347193659903;  // std dev = 2.966, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.005013182924701529;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.598', 'seconds']
Refined model CLL: -0.670037


******************************************
Best model found
******************************************
Results 

CLL : -0.643649 

AUC ROC : 0.562713 

AUC PR : 0.417933 

Precision : 0.657343 

Recall : 0.04141 

F1 : 0.077911 

Total Learning Time : 40.368 

Total Inference Time : 1.237462043762207 

Total revision time: 43.861357715606694
Best scored revision CLL: -0.670037


Results 

CLL : -0.643649 

AUC ROC : 0.562713 

AUC PR : 0.417933 

Precision : 0.657343 

Recall : 0.04141 

F1 : 0.077911 

Total Learning Time : 43.916408565521245 

Total Inference Time : 1.237462043762207 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.115
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.205', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(D, A)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F)', 'false,false,false': 'author(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'author(A, F), author(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A)', 'false': 'author(A, D), author(D, E)', 'false,false': 'author(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), author(D, A)', 'false': 'author(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(A, C), author(C, D)', 'false': 'author(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'author(C, A), author(D, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204], 'false,false': [nan, 0.24943310657597204], 'false,false,false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- author(A, C), author(D, A).;true;true
2;;samevenue(A, B) :- author(A, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;author(A, F).;true;true
3;false,false,false;author(G, A).;true;true
4;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;author(A, F), author(F, G).;true;true
5;;samevenue(A, B) :- author(C, A).;true;true
5;false;author(A, D), author(D, E).;true;true
5;false,false;author(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), author(D, A).;true;true
6;false;author(A, E).;true;true
7;;samevenue(A, B) :- author(A, C), author(C, D).;true;true
7;false;author(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- author(C, A), author(D, C).;true;true
9;;samevenue(A, B) :- author(C, A), author(D, C).;true;true


Refining candidate
***************************
Model training time 20.325
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7100007869513637;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.051131391239862906;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.5454907572981614;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6490137408654374;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.22373365448410584;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11418623766746618;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.032078136196191376;  // std dev = 3.135, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.10106546954416978;  // std dev = 4.218, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordauthor(G, E) )
%   | | | then return 0.3201497659160316;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=19 */
%   | | | else return 0.3123322529800052;  // std dev = 13.761, 783.000 (wgt'ed) examples reached here.  /* #neg=323 #pos=460 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.4293558044710166;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.601984149523128;  // std dev = 0.046, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.22643086319039477;  // std dev = 1.548, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.09526168725802414;  // std dev = 2.945, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.018747870932328246;  // std dev = 3.125, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.09133205448701433;  // std dev = 4.211, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( author(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21221636465803786;  // std dev = 15.618, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F), author(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.20066472877947217;  // std dev = 14.112, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.03192599168755787;  // std dev = 6.233, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, D), author(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( author(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1264756071518347;  // std dev = 15.514, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), author(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return -0.003360112323570429;  // std dev = 3.765, 61.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=30 */
%   | | | else return 0.13054538870343305;  // std dev = 13.565, 775.000 (wgt'ed) examples reached here.  /* #neg=307 #pos=468 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.03728733861241858;  // std dev = 3.336, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.006680011746265808;  // std dev = 5.254, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( author(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.08572493581213518;  // std dev = 13.961, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | | else return 0.21958810206172566;  // std dev = 1.821, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.03007934917866308;  // std dev = 3.336, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.005495164457646422;  // std dev = 5.254, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(H, E) )
%   | | | then return 0.4194457763430267;  // std dev = 0.351, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1461543262451682;  // std dev = 3.395, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordtitle(I, E) )
%   | | | then return 0.0753034379902476;  // std dev = 13.440, 753.000 (wgt'ed) examples reached here.  /* #neg=304 #pos=449 */
%   | | | else return 0.16591815566788995;  // std dev = 1.571, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.03671703365205926;  // std dev = 0.455, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015149608987198703;  // std dev = 4.185, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.04369843928333738;  // std dev = 3.142, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(C, A), author(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | then if ( haswordtitle(G, E) )
%   | | then if ( author(H, F), venue(H, A) )
%   | | | then return -0.5101841573550175;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.20899820212859807;  // std dev = 2.335, 31.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=21 */
%   | | else if ( author(I, F), venue(I, B) )
%   | | | then return -0.32198555140789403;  // std dev = 1.658, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.06460490789654977;  // std dev = 3.219, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, B) )
%   | | | then return 0.02545090395730412;  // std dev = 3.064, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | | | else return -0.07234958803218419;  // std dev = 3.418, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | else if ( haswordvenue(A, M), haswordvenue(B, M) )
%   | | | then return 0.07082627956091768;  // std dev = 13.051, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | | | else return -0.023847727333814905;  // std dev = 4.213, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6.097', 'seconds']
Refined model CLL: -0.635373


******************************************
Best model found
******************************************
Results 

CLL : -0.70193 

AUC ROC : 0.549332 

AUC PR : 0.398525 

Precision : 0.373668 

Recall : 0.923794 

F1 : 0.532104 

Total Learning Time : 20.325 

Total Inference Time : 1.0429046154022217 

Total revision time: 23.22345990180969
Best scored revision CLL: -0.635373


Results 

CLL : -0.70193 

AUC ROC : 0.549332 

AUC PR : 0.398525 

Precision : 0.373668 

Recall : 0.923794 

F1 : 0.532104 

Total Learning Time : 23.27851075172424 

Total Inference Time : 1.0429046154022217 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 7463
Target train pos examples: 368
Target train neg examples: 688

Target test facts examples: 35095
Target test pos examples: 2649
Target test neg examples: 4334

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.176
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.206633783584356;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1795740276662767;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15284823090715774;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12767341054974374;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.10492681035702939;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08507951720187693;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06824339126365285;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05427420138764069;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04287965381087566;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03370506435366491;  // std dev = 15.484, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.212', 'seconds']
Parameter learned model CLL:-0.648077 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F), sameauthor(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [15.484, 688, 368]}]
{'': [nan, 0.2270431588613241]}
{'': [nan, 0.2270431588613309]}
{'': [nan, 0.22704315886134546]}
{'': [nan, 0.22704315886134624], 'false': [nan, 0.22704315886134624], 'false,false': [nan, 0.22704315886134624], 'false,false,false': [nan, 0.22704315886134624]}
{'': [nan, 0.22704315886133983], 'false': [nan, 0.22704315886133983], 'false,false': [nan, 0.22704315886133983]}
{'': [nan, 0.22704315886134535], 'false': [nan, 0.22704315886134535], 'false,false': [nan, 0.22704315886134535], 'false,false,false': [nan, 0.22704315886134535]}
{'': [nan, 0.22704315886133772], 'false': [nan, 0.22704315886133772]}
{'': [nan, 0.22704315886134457], 'false': [nan, 0.22704315886134457]}
{'': [nan, 0.2270431588613467]}
{'': [nan, 0.22704315886133364]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(D, A).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;sameauthor(A, F).;true;true
3;false,false,false;sameauthor(G, A).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;sameauthor(A, F), sameauthor(F, G).;true;true
5;;samevenue(A, B) :- sameauthor(C, A).;true;true
5;false;sameauthor(A, D), sameauthor(D, E).;true;true
5;false,false;sameauthor(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
7;false;sameauthor(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true


Refining candidate
***************************
Model training time 25.663
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.23843062524035266;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4295775065280833;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004815601766179008;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.20686012285620575;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.448295606241962;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3688769765977062;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004228390109386251;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1751801570305961;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.38614045132289815;  // std dev = 0.802, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3007528710134885;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0037111125833978686;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12475961612533167;  // std dev = 15.255, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.12591193772560483;  // std dev = 14.503, 890.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=346 */
%   | | | else return -0.02247775129470133;  // std dev = 4.350, 166.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08193205638558294;  // std dev = 15.207, 1,056.000 (wgt'ed) examples reached here.  /* #neg=688 #pos=368 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.08020348540976001;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.16493800685923463;  // std dev = 3.039, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return -0.03451867518178792;  // std dev = 3.080, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.025894041481593418;  // std dev = 3.070, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.0630930602814657;  // std dev = 14.170, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | | else return 0.12447466874704419;  // std dev = 3.039, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.030936726552272305;  // std dev = 3.080, 87.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=11 */
%   | | | else return -0.021238590031647527;  // std dev = 3.070, 79.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.04927355313576115;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.150500364982765;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.088619017000839;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.11296027467226043;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.01325806177274916;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.013113890593315893;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.11480928160984509;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.038272956788186846;  // std dev = 0.485, 852.000 (wgt'ed) examples reached here.  /* #neg=528 #pos=324 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.11313860914925711;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.06648028110262637;  // std dev = 2.930, 35.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=20 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return -0.102126785361792;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.011484877752434296;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.011361186182978853;  // std dev = 3.064, 75.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=11 */
%   | | | else return -0.1036473103165581;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.400', 'seconds']
Refined model CLL: -0.622811


******************************************
Best model found
******************************************
Results 

CLL : -0.657394 

AUC ROC : 0.555679 

AUC PR : 0.430557 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 25.663 

Total Inference Time : 1.0616087913513184 

Total revision time: 28.70000387573242
Best scored revision CLL: -0.622811


Results 

CLL : -0.657394 

AUC ROC : 0.555679 

AUC PR : 0.430557 

Precision : 0.637427 

Recall : 0.041148 

F1 : 0.077305 

Total Learning Time : 28.73216391944885 

Total Inference Time : 1.0616087913513184 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9016
Target train pos examples: 771
Target train neg examples: 544

Target test facts examples: 33542
Target test pos examples: 2246
Target test neg examples: 4478

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.175
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.44446072217175076;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3813455440277053;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3122663953203656;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2460049923919207;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.188818879614478;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14284488312562882;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10736397936396141;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08053569503438149;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06042468230471383;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04538710202635832;  // std dev = 17.859, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.247', 'seconds']
Parameter learned model CLL:-0.680543 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F), sameauthor(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [17.859, 544, 771]}]
{'': [nan, 0.2425502754124175]}
{'': [nan, 0.2425502754123804]}
{'': [nan, 0.24255027541238958]}
{'': [nan, 0.24255027541238616], 'false': [nan, 0.24255027541238616], 'false,false': [nan, 0.24255027541238616], 'false,false,false': [nan, 0.24255027541238616]}
{'': [nan, 0.24255027541240273], 'false': [nan, 0.24255027541240273], 'false,false': [nan, 0.24255027541240273]}
{'': [nan, 0.24255027541239554], 'false': [nan, 0.24255027541239554], 'false,false': [nan, 0.24255027541239554], 'false,false,false': [nan, 0.24255027541239554]}
{'': [nan, 0.24255027541239307], 'false': [nan, 0.24255027541239307]}
{'': [nan, 0.24255027541239338], 'false': [nan, 0.24255027541239338]}
{'': [nan, 0.24255027541239849]}
{'': [nan, 0.24255027541239885]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(D, A).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;sameauthor(A, F).;true;true
3;false,false,false;sameauthor(G, A).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;sameauthor(A, F), sameauthor(F, G).;true;true
5;;samevenue(A, B) :- sameauthor(C, A).;true;true
5;false;sameauthor(A, D), sameauthor(D, E).;true;true
5;false,false;sameauthor(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
7;false;sameauthor(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true


Refining candidate
***************************
Model training time 31.453
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.4356367001892301;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.5949910403626703;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.630876207826785;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2867203636709409;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.2867203636709409;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.37395569825543723;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.5005053426630848;  // std dev = 1.921, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.5406810030211525;  // std dev = 1.962, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.24811816884741297;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.24811816884741297;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.30665618885999163;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3980165213163664;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.4318624987684384;  // std dev = 1.960, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.20848477447886868;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return 0.20848477447886868;  // std dev = 0.495, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24556732721118849;  // std dev = 17.735, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.24675108617117997;  // std dev = 2.745, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   | | | else return 0.18731912502913975;  // std dev = 17.516, 1,282.000 (wgt'ed) examples reached here.  /* #neg=532 #pos=750 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14310985452194463;  // std dev = 17.731, 1,315.000 (wgt'ed) examples reached here.  /* #neg=544 #pos=771 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.10401331362773268;  // std dev = 17.294, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.1747207421949543;  // std dev = 2.746, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.18808443034267244;  // std dev = 1.976, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.04547091256719159;  // std dev = 1.855, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.07803549547991669;  // std dev = 17.294, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | | else return 0.1329052393410321;  // std dev = 2.747, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.16150477354498868;  // std dev = 1.955, 34.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=26 */
%   | | | else return 0.001202975372652626;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.058536142330641354;  // std dev = 0.494, 1,226.000 (wgt'ed) examples reached here.  /* #neg=518 #pos=708 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.08221141685767987;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return 0.11955196534509004;  // std dev = 1.957, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.22121941707734077;  // std dev = 2.58e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 9.085519460702891E-4;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.004471967206832239;  // std dev = 0.496, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, F) )
%   | | | then return 0.316103317279766;  // std dev = 1.596, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.20474512694776537;  // std dev = 1.627, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( haswordtitle(I, E) )
%   | | | then return 0.04188441135674556;  // std dev = 17.078, 1,194.000 (wgt'ed) examples reached here.  /* #neg=507 #pos=687 */
%   | | | else return 0.07949627426836661;  // std dev = 2.746, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordvenue(A, L) )
%   | | | then return 0.18545857993112932;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 6.86153501270516E-4;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else return -0.0033744180557071434;  // std dev = 0.496, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.585', 'seconds']
Refined model CLL: -0.670239


******************************************
Best model found
******************************************
Results 

CLL : -0.747683 

AUC ROC : 0.534118 

AUC PR : 0.342294 

Precision : 0.353386 

Recall : 0.957257 

F1 : 0.516206 

Total Learning Time : 31.453 

Total Inference Time : 1.0707828998565674 

Total revision time: 34.54115722465515
Best scored revision CLL: -0.670239


Results 

CLL : -0.747683 

AUC ROC : 0.534118 

AUC PR : 0.342294 

Precision : 0.353386 

Recall : 0.957257 

F1 : 0.516206 

Total Learning Time : 34.57331726837158 

Total Inference Time : 1.0707828998565674 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 9306
Target train pos examples: 581
Target train neg examples: 2222

Target test facts examples: 33252
Target test pos examples: 2436
Target test neg examples: 2800

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.904
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19535148878493971;  // std dev = 19.624, 1,723.000 (wgt'ed) examples reached here.  /* #neg=1,142 #pos=581 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1631562685997183;  // std dev = 19.723, 1,758.000 (wgt'ed) examples reached here.  /* #neg=1,177 #pos=581 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14182782923133957;  // std dev = 19.684, 1,744.000 (wgt'ed) examples reached here.  /* #neg=1,163 #pos=581 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1138417400537919;  // std dev = 19.758, 1,771.000 (wgt'ed) examples reached here.  /* #neg=1,190 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1010565574959305;  // std dev = 19.655, 1,734.000 (wgt'ed) examples reached here.  /* #neg=1,153 #pos=581 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07826047007635183;  // std dev = 19.717, 1,756.000 (wgt'ed) examples reached here.  /* #neg=1,175 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07012643957638295;  // std dev = 19.615, 1,720.000 (wgt'ed) examples reached here.  /* #neg=1,139 #pos=581 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051128289707103224;  // std dev = 19.689, 1,746.000 (wgt'ed) examples reached here.  /* #neg=1,165 #pos=581 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03541761254733734;  // std dev = 19.767, 1,774.000 (wgt'ed) examples reached here.  /* #neg=1,193 #pos=581 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03578895314940269;  // std dev = 19.652, 1,733.000 (wgt'ed) examples reached here.  /* #neg=1,152 #pos=581 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.184', 'seconds']
Parameter learned model CLL:-0.535501 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.624, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [19.723, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [19.684, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.758, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F), sameauthor(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [19.655, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [19.717, 1, 581]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.615, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [19.689, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [19.767, 1, 581]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [19.652, 1, 581]}]
{'': [nan, 0.22349699147344124]}
{'': [nan, 0.22126608606069048]}
{'': [nan, 0.22215847519149773]}
{'': [nan, 0.22043775094127044], 'false': [nan, 0.22043775094127044], 'false,false': [nan, 0.22043775094127044], 'false,false,false': [nan, 0.22043775094127044]}
{'': [nan, 0.22279593023178174], 'false': [nan, 0.22279593023178174], 'false,false': [nan, 0.22279593023178174]}
{'': [nan, 0.22139355596951707], 'false': [nan, 0.22139355596951707], 'false,false': [nan, 0.22139355596951707], 'false,false,false': [nan, 0.22139355596951707]}
{'': [nan, 0.22368814223903297], 'false': [nan, 0.22368814223903297]}
{'': [nan, 0.22203098163171417], 'false': [nan, 0.22203098163171417]}
{'': [nan, 0.22024666706492188]}
{'': [nan, 0.22285967151345007]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(D, A).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;sameauthor(A, F).;true;true
3;false,false,false;sameauthor(G, A).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;sameauthor(A, F), sameauthor(F, G).;true;true
5;;samevenue(A, B) :- sameauthor(C, A).;true;true
5;false;sameauthor(A, D), sameauthor(D, E).;true;true
5;false,false;sameauthor(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
7;false;sameauthor(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true


Refining candidate
***************************
Model training time 18.598
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.16767274462332188;  // std dev = 2.996, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | else return 0.21630736434798403;  // std dev = 0.479, 1,477.000 (wgt'ed) examples reached here.  /* #neg=948 #pos=529 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.058148935099512376;  // std dev = 3.578, 80.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=16 */
%   | | | else return -0.0168510649004878;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023286549778411467;  // std dev = 3.877, 109.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=18 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then return 0.1851745543554108;  // std dev = 0.479, 1,534.000 (wgt'ed) examples reached here.  /* #neg=989 #pos=545 */
%   | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | then if ( title(H, G), venue(H, A) )
%   | | | then return 0.03696854414146076;  // std dev = 3.609, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   | | | else return -0.034548991483819694;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05529056899706379;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.0037954725614068956;  // std dev = 3.690, 108.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E), haswordtitle(G, D) )
%   | | | then return 0.4571936870487678;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1510920047741992;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | else return 0.15767932570679913;  // std dev = 0.479, 1,488.000 (wgt'ed) examples reached here.  /* #neg=959 #pos=529 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.029857650853603097;  // std dev = 3.631, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | | else return -0.0399166672371444;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.04617134491028034;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.004241606800062341;  // std dev = 3.691, 110.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11207502406030947;  // std dev = 19.659, 1,777.000 (wgt'ed) examples reached here.  /* #neg=1,196 #pos=581 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.12466905169249161;  // std dev = 18.541, 1,477.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=545 */
%   | | | else return 0.0024326742206010614;  // std dev = 5.469, 217.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07854937020079247;  // std dev = 19.533, 1,740.000 (wgt'ed) examples reached here.  /* #neg=1,159 #pos=581 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.01962942212956665;  // std dev = 3.304, 52.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=16 */
%   | | | else return 0.07974338889444825;  // std dev = 18.352, 1,456.000 (wgt'ed) examples reached here.  /* #neg=927 #pos=529 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return -0.005727090432085237;  // std dev = 3.866, 107.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=18 */
%   | | | else return -0.019784417418663804;  // std dev = 3.887, 115.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=18 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then return 0.059215938073425615;  // std dev = 0.480, 1,518.000 (wgt'ed) examples reached here.  /* #neg=973 #pos=545 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0030488686517759363;  // std dev = 3.848, 102.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=18 */
%   | | | else return -0.009835729832377299;  // std dev = 3.871, 110.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=18 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then if ( haswordtitle(H, E) )
%   | | | then return 0.028971548283831933;  // std dev = 3.139, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.019632587630240228;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.04506610414212395;  // std dev = 0.479, 1,479.000 (wgt'ed) examples reached here.  /* #neg=950 #pos=529 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return 0.017711799326245368;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.008319675784449592;  // std dev = 3.833, 99.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=18 */
%   | | | else return -0.0029150874881170587;  // std dev = 3.640, 95.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then return 0.03231805747871734;  // std dev = 0.478, 1,538.000 (wgt'ed) examples reached here.  /* #neg=993 #pos=545 */
%   | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | then return -0.08288027844771922;  // std dev = 0.299, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 2.273831469157541E-4;  // std dev = 3.636, 93.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=16 */
%   | | | else return -0.012060270897555304;  // std dev = 3.875, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.172', 'seconds']
Refined model CLL: -0.528151


******************************************
Best model found
******************************************
Results 

CLL : -0.729747 

AUC ROC : 0.549598 

AUC PR : 0.49898 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 18.598 

Total Inference Time : 1.3339669704437256 

Total revision time: 22.748371030807494
Best scored revision CLL: -0.528151


Results 

CLL : -0.729747 

AUC ROC : 0.549598 

AUC PR : 0.49898 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 22.780531074523925 

Total Inference Time : 1.3339669704437256 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8129
Target train pos examples: 747
Target train neg examples: 1068

Target test facts examples: 34429
Target test pos examples: 2270
Target test neg examples: 3954

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.521
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2697191830333916;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23361764530579346;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19684311261415063;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16179663649598802;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.13027047306504644;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10320071280183025;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08076653568517075;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06264930471254161;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.048285687593879655;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03704475693617238;  // std dev = 20.966, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.226', 'seconds']
Parameter learned model CLL:-0.679108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F), sameauthor(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [20.966, 1, 747]}]
{'': [nan, 0.24218017894954894]}
{'': [nan, 0.24218017894954783]}
{'': [nan, 0.24218017894953464]}
{'': [nan, 0.24218017894951252], 'false': [nan, 0.24218017894951252], 'false,false': [nan, 0.24218017894951252], 'false,false,false': [nan, 0.24218017894951252]}
{'': [nan, 0.24218017894953156], 'false': [nan, 0.24218017894953156], 'false,false': [nan, 0.24218017894953156]}
{'': [nan, 0.24218017894950766], 'false': [nan, 0.24218017894950766], 'false,false': [nan, 0.24218017894950766], 'false,false,false': [nan, 0.24218017894950766]}
{'': [nan, 0.2421801789495094], 'false': [nan, 0.2421801789495094]}
{'': [nan, 0.24218017894952684], 'false': [nan, 0.24218017894952684]}
{'': [nan, 0.24218017894952942]}
{'': [nan, 0.2421801789495138]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(D, A).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;sameauthor(A, F).;true;true
3;false,false,false;sameauthor(G, A).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;sameauthor(A, F), sameauthor(F, G).;true;true
5;;samevenue(A, B) :- sameauthor(C, A).;true;true
5;false;sameauthor(A, D), sameauthor(D, E).;true;true
5;false,false;sameauthor(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
7;false;sameauthor(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true


Refining candidate
***************************
Model training time 44.066
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.27854694504975613;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3581489350995113;  // std dev = 3.536, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.47883859027192616;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0803711573217346;  // std dev = 3.300, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.05814893509951237;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.2411503606196619;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3002199788127198;  // std dev = 3.525, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.4247561750638162;  // std dev = 2.608, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.07126777220283681;  // std dev = 3.296, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | | | else return 0.14836512373499552;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return 0.04789385243275259;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.20289930723994204;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.24760701674977226;  // std dev = 3.523, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.3498242125167599;  // std dev = 2.607, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.16124854939809896;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.04161364193995419;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return 0.041461799387660724;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1608203074513839;  // std dev = 20.853, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.13737030092769206;  // std dev = 20.282, 1,687.000 (wgt'ed) examples reached here.  /* #neg=968 #pos=719 */
%   | | | else return 0.02640590539140249;  // std dev = 4.665, 128.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=28 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1023189513341763;  // std dev = 20.831, 1,815.000 (wgt'ed) examples reached here.  /* #neg=1,068 #pos=747 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordtitle(G, F) )
%   | | | then return 0.0834430895915975;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.13452297832181964;  // std dev = 4.391, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.015771373282892222;  // std dev = 3.596, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.00781551617634288;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordtitle(H, G) )
%   | | | then return 0.06455452284080958;  // std dev = 19.794, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | | else return 0.10173985139110636;  // std dev = 4.390, 79.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.01589198575737553;  // std dev = 3.594, 73.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=17 */
%   | | | else return -0.010259921413420643;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.049623644804684404;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.03959548144522033;  // std dev = 3.509, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.1403840575729834;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.08142615891737157;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.008561350379286752;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.009148244443788478;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.037974098044456187;  // std dev = 0.494, 1,608.000 (wgt'ed) examples reached here.  /* #neg=932 #pos=676 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02950859755832819;  // std dev = 3.509, 50.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=25 */
%   | | | else return 0.10584112881988761;  // std dev = 2.602, 29.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=18 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06577385488423551;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return -0.007151735729448821;  // std dev = 2.967, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | else return -0.0076391302490727234;  // std dev = 0.400, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4.225', 'seconds']
Refined model CLL: -0.670761


******************************************
Best model found
******************************************
Results 

CLL : -0.642377 

AUC ROC : 0.564268 

AUC PR : 0.422241 

Precision : 0.65625 

Recall : 0.037004 

F1 : 0.070058 

Total Learning Time : 44.066 

Total Inference Time : 1.179150104522705 

Total revision time: 47.60856019210816
Best scored revision CLL: -0.670761


Results 

CLL : -0.642377 

AUC ROC : 0.564268 

AUC PR : 0.422241 

Precision : 0.65625 

Recall : 0.037004 

F1 : 0.070058 

Total Learning Time : 47.64072023582459 

Total Inference Time : 1.179150104522705 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 8644
Target train pos examples: 550
Target train neg examples: 500

Target test facts examples: 33914
Target test pos examples: 2467
Target test neg examples: 4522

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- tweets(A, C).;true;false
0;true;follows(D, A), tweets(D, C).;true;true
0;true,true;follows(A, E), follows(D, E).;true;true
0;true,true,true;tweets(E, C), follows(A, D).;false;false
0;true,true,false;follows(F, A), follows(F, D).;false;false
0;true,false;follows(G, A), tweets(G, H).;true;true
0;true,false,true;follows(G, I), follows(I, A).;false;false
0;true,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(A, C), follows(D, A).;true;false
1;true;follows(E, D), follows(D, C).;true;true
1;true,true;follows(E, A), follows(C, E).;true;true
1;true,true,true;follows(C, D), follows(A, D).;false;false
1;true,true,false;follows(A, E), tweets(A, F).;false;false
1;true,false;follows(G, D), tweets(A, H).;true;true
1;true,false,true;follows(C, G), tweets(C, H).;false;false
1;true,false,false;follows(D, C).;false;false
2;;accounttype(A, B) :- follows(A, C).;true;false
2;true;follows(C, D), tweets(C, E).;true;true
2;true,true;tweets(A, E), tweets(D, E).;true;true
2;true,true,true;follows(F, A), follows(F, C).;false;false
2;true,true,false;follows(D, C), follows(A, D).;false;false
2;true,false;follows(G, A), tweets(A, H).;true;true
2;true,false,true;follows(G, C).;false;false
2;true,false,false;tweets(A, I).;false;false
3;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
3;true;follows(A, D), tweets(C, E).;false;true
3;true,false;tweets(A, F), follows(C, A).;false;false
3;false;tweets(A, G).;true;true
3;false,true;follows(H, A).;true;false
3;false,true,true;follows(A, I).;false;false
3;false,false;follows(A, J).;false;true
3;false,false,false;follows(K, A).;false;false
4;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;true
4;true;tweets(A, E), follows(D, A).;true;true
4;true,true;tweets(C, E), follows(F, D).;true;false
4;true,true,true;follows(F, C), follows(A, F).;false;false
4;true,false;follows(A, C).;false;true
4;true,false,false;tweets(A, G).;false;false
4;false;tweets(A, H).;false;true
4;false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(C, A).;true;true
5;true;follows(A, D), follows(E, C).;false;false
5;false;follows(A, F), follows(F, G).;true;true
5;false,true;follows(A, H), follows(H, F).;false;true
5;false,true,false;tweets(A, I), tweets(F, I).;false;false
5;false,false;follows(A, J).;true;true
5;false,false,true;tweets(A, K).;false;false
5;false,false,false;tweets(A, L).;false;false
6;;accounttype(A, B) :- tweets(A, C), follows(D, A).;true;true
6;true;follows(D, E), follows(E, A).;true;false
6;true,true;tweets(E, C), tweets(D, F).;true;false
6;true,true,true;follows(A, D), follows(A, E).;false;false
6;false;follows(A, G).;true;false
6;false,true;follows(A, H), follows(G, H).;true;true
6;false,true,true;follows(G, A), follows(H, I).;false;false
6;false,true,false;follows(J, G), tweets(J, K).;false;false
7;;accounttype(A, B) :- follows(A, C), follows(C, D).;true;true
7;true;follows(E, A), tweets(E, F).;true;true
7;true,true;follows(D, A), follows(C, A).;true;false
7;true,true,true;follows(D, E), follows(E, C).;false;false
7;true,false;follows(D, C), follows(A, D).;true;true
7;true,false,true;tweets(A, G).;false;false
7;true,false,false;tweets(A, H), tweets(C, H).;false;false
7;false;follows(I, A), tweets(A, J).;false;false
8;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
8;true;tweets(A, E), tweets(C, E).;true;true
8;true,true;follows(A, F).;true;true
8;true,true,true;follows(F, D).;false;false
8;true,true,false;follows(C, D), follows(D, A).;false;false
8;true,false;tweets(C, G), follows(A, C).;true;true
8;true,false,true;tweets(A, H).;false;false
8;true,false,false;tweets(C, I).;false;false
9;;accounttype(A, B) :- follows(C, A), follows(D, C).;true;false
9;true;follows(D, A), follows(C, D).;true;true
9;true,true;tweets(C, E), tweets(D, F).;true;true
9;true,true,true;tweets(A, E), tweets(A, F).;false;false
9;true,true,false;tweets(A, G).;false;false
9;true,false;follows(A, C), tweets(D, H).;true;true
9;true,false,true;tweets(A, H), follows(D, A).;false;false
9;true,false,false;follows(A, I), follows(D, I).;false;false


Model training time 1.136
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3819584589090313;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.32884073203746167;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.27204072267892837;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21744269676867875;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.16940117056975898;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12975869989867908;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09838832514850701;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07418037433956697;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05576312093600734;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041858103224517315;  // std dev = 16.183, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.189', 'seconds']
Parameter learned model CLL:-0.693985 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'haswordauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(D, A)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'sameauthor(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)', 'false': 'haswordauthor(A, E)', 'false,false': 'sameauthor(A, F), sameauthor(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A)', 'false': 'sameauthor(A, D), sameauthor(D, E)', 'false,false': 'sameauthor(A, F)', 'false,false,false': 'haswordauthor(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'haswordauthor(A, C), sameauthor(D, A)', 'false': 'sameauthor(A, E)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(C, D)', 'false': 'sameauthor(E, A), haswordauthor(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(D, C)'}, {'true': [0.0, 0, 0], 'false': [16.183, 500, 550]}]
{'': [nan, 0.2494331065759569]}
{'': [nan, 0.2494331065759634]}
{'': [nan, 0.2494331065759508]}
{'': [nan, 0.24943310657597204], 'false': [nan, 0.24943310657597204], 'false,false': [nan, 0.24943310657597204], 'false,false,false': [nan, 0.24943310657597204]}
{'': [nan, 0.24943310657595685], 'false': [nan, 0.24943310657595685], 'false,false': [nan, 0.24943310657595685]}
{'': [nan, 0.24943310657596054], 'false': [nan, 0.24943310657596054], 'false,false': [nan, 0.24943310657596054], 'false,false,false': [nan, 0.24943310657596054]}
{'': [nan, 0.2494331065759572], 'false': [nan, 0.2494331065759572]}
{'': [nan, 0.24943310657596562], 'false': [nan, 0.24943310657596562]}
{'': [nan, 0.24943310657596066]}
{'': [nan, 0.24943310657595963]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- haswordauthor(A, C).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(D, A).;true;true
2;;samevenue(A, B) :- sameauthor(A, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
3;false;haswordauthor(A, E).;true;true
3;false,false;sameauthor(A, F).;true;true
3;false,false,false;sameauthor(G, A).;true;true
4;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
4;false;haswordauthor(A, E).;true;true
4;false,false;sameauthor(A, F), sameauthor(F, G).;true;true
5;;samevenue(A, B) :- sameauthor(C, A).;true;true
5;false;sameauthor(A, D), sameauthor(D, E).;true;true
5;false,false;sameauthor(A, F).;true;true
5;false,false,false;haswordauthor(A, G).;true;true
6;;samevenue(A, B) :- haswordauthor(A, C), sameauthor(D, A).;true;true
6;false;sameauthor(A, E).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(C, D).;true;true
7;false;sameauthor(E, A), haswordauthor(A, F).;true;true
8;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true
9;;samevenue(A, B) :- sameauthor(C, A), sameauthor(D, C).;true;true


Refining candidate
***************************
Model training time 18.626
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.443242102801371;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7100007869513637;  // std dev = 1.846, 27.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=23 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return 0.16249676118646889;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.051131391239862906;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.3803254334818479;  // std dev = 0.493, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.5454907572981614;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6490137408654373;  // std dev = 1.340, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.22373365448410584;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.11418623766746618;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.14154274242296505;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.04479249977758044;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.6674283310648041;  // std dev = 0.229, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.10890834029897223;  // std dev = 3.434, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.12253181265650104;  // std dev = 3.382, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.3408865878733577;  // std dev = 13.067, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then return 0.11318828452086122;  // std dev = 0.456, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.12358095880871148;  // std dev = 3.116, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.039048804834509544;  // std dev = 4.214, 114.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( sameauthor(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21207193378216563;  // std dev = 15.561, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F), sameauthor(F, G) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | | then return 0.20060211073327588;  // std dev = 14.044, 836.000 (wgt'ed) examples reached here.  /* #neg=338 #pos=498 */
%   | | | else return 0.031581306823075424;  // std dev = 6.235, 214.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=52 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(C, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, D), sameauthor(D, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( sameauthor(A, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( haswordauthor(A, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.126379613233081;  // std dev = 15.450, 1,050.000 (wgt'ed) examples reached here.  /* #neg=500 #pos=550 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( haswordauthor(A, C), sameauthor(D, A) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, F), haswordvenue(B, F) )
%   | | then if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11589168156837953;  // std dev = 13.951, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | | else return 0.30947871584909636;  // std dev = 1.307, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.029775725567364936;  // std dev = 3.349, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.004485021851981238;  // std dev = 5.251, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(C, D) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( sameauthor(E, A), haswordauthor(A, F) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( haswordvenue(A, G), haswordvenue(B, G) )
%   | | then if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.08677812677385885;  // std dev = 13.950, 815.000 (wgt'ed) examples reached here.  /* #neg=336 #pos=479 */
%   | | | else return 0.2476485267824779;  // std dev = 1.296, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return 0.030573613266947516;  // std dev = 3.344, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return -0.005942439127168055;  // std dev = 5.252, 160.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | then if ( haswordauthor(H, E) )
%   | | | then return 0.31828858933524395;  // std dev = 0.294, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.09721164555190491;  // std dev = 3.399, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return -0.07734334672785761;  // std dev = 3.360, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0.08644249575576086;  // std dev = 13.054, 726.000 (wgt'ed) examples reached here.  /* #neg=278 #pos=448 */
%   | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | then if ( author(M, L), venue(M, B) )
%   | | | then return 0.0886089998406264;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.010023855347519676;  // std dev = 2.955, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return -0.03757393078561786;  // std dev = 3.142, 66.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=12 */
%   | | | else return 0.018053551035358797;  // std dev = 4.195, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(D, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, E), haswordvenue(B, E) )
%   | then if ( haswordtitle(F, E) )
%   | | then return 0.04722950085740192;  // std dev = 0.488, 805.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=471 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.11477304757427613;  // std dev = 1.248, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.19151695415975634;  // std dev = 1.291, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.12977908392567689;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.0031775765477909;  // std dev = 2.940, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.020561261261154835;  // std dev = 4.185, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return -0.04205294836988544;  // std dev = 3.139, 65.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2.864', 'seconds']
Refined model CLL: -0.638126


******************************************
Best model found
******************************************
Results 

CLL : -0.700517 

AUC ROC : 0.555062 

AUC PR : 0.404241 

Precision : 0.375312 

Recall : 0.915687 

F1 : 0.532406 

Total Learning Time : 18.626 

Total Inference Time : 0.9848110675811768 

Total revision time: 21.50891891670227
Best scored revision CLL: -0.638126


Results 

CLL : -0.700517 

AUC ROC : 0.555062 

AUC PR : 0.404241 

Precision : 0.375312 

Recall : 0.915687 

F1 : 0.532406 

Total Learning Time : 21.5410789604187 

Total Inference Time : 0.9848110675811768 

