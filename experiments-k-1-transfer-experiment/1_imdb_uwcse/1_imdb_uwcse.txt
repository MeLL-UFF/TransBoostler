Starting experiment 1_imdb_uwcse 

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

Model training time 4.0481648445129395 

Building refine structure 

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.1418510649004889;  // std dev = 0.000, 673.000 (wgt'ed) examples reached here.  /* #neg=673 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839238;  // std dev = 0.000, 698.000 (wgt'ed) examples reached here.  /* #neg=698 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 3.94e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.11231637819360672;  // std dev = 0.000, 718.000 (wgt'ed) examples reached here.  /* #neg=718 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.10159632948783512;  // std dev = 4.45e-07, 702.000 (wgt'ed) examples reached here.  /* #neg=702 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else return -0.09269127618926182;  // std dev = 0.000, 735.000 (wgt'ed) examples reached here.  /* #neg=735 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4.42e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else return -0.08518475138839675;  // std dev = 1.40e-07, 732.000 (wgt'ed) examples reached here.  /* #neg=732 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2.53e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109175;  // std dev = 1.97e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.07877675473109273;  // std dev = 0.000, 680.000 (wgt'ed) examples reached here.  /* #neg=680 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2.60e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.07324622576333636;  // std dev = 2.89e-07, 756.000 (wgt'ed) examples reached here.  /* #neg=756 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.0684269778442026;  // std dev = 1.81e-07, 706.000 (wgt'ed) examples reached here.  /* #neg=706 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.14876392017191037;  // std dev = 0.580, 389.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=382 */
%   | else return -0.06842697784420267;  // std dev = 2.47e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1344695715456369;  // std dev = 5.96e-08, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06432188895727305;  // std dev = 0.035, 662.000 (wgt'ed) examples reached here.  /* #neg=662 */
Starting experiments for fasttext using euclidean 

Starting experiment 1_imdb_uwcse 

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

Model training time 3.513763189315796 

Building refine structure 

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.14185106490048893;  // std dev = 0.000, 678.000 (wgt'ed) examples reached here.  /* #neg=678 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.12544463852839238;  // std dev = 0.000, 666.000 (wgt'ed) examples reached here.  /* #neg=666 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360626;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.11231637819360696;  // std dev = 0.000, 752.000 (wgt'ed) examples reached here.  /* #neg=752 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783509;  // std dev = 4.58e-07, 716.000 (wgt'ed) examples reached here.  /* #neg=716 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.09269127618926201;  // std dev = 0.000, 714.000 (wgt'ed) examples reached here.  /* #neg=714 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4.42e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0851847513883968;  // std dev = 1.83e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else return -0.08518475138839675;  // std dev = 1.30e-07, 711.000 (wgt'ed) examples reached here.  /* #neg=711 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2.53e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109168;  // std dev = 3.57e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.07877675473109279;  // std dev = 0.000, 724.000 (wgt'ed) examples reached here.  /* #neg=724 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2.60e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.07324622576333648;  // std dev = 2.52e-07, 724.000 (wgt'ed) examples reached here.  /* #neg=724 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.0684269778442027;  // std dev = 1.67e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.0684269778442025;  // std dev = 1.88e-07, 685.000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.0641918400820253;  // std dev = 2.23e-07, 729.000 (wgt'ed) examples reached here.  /* #neg=729 */
Starting experiments for fasttext using euclidean 

Run: 1
Starting experiment 1_imdb_uwcse 

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

Model training time 3.5331592559814453 

Building refine structure 

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5.58e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.14185106490048896;  // std dev = 0.000, 685.000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.12544463852839238;  // std dev = 0.000, 725.000 (wgt'ed) examples reached here.  /* #neg=725 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360635;  // std dev = 1.83e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.11231637819360665;  // std dev = 0.000, 721.000 (wgt'ed) examples reached here.  /* #neg=721 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783624;  // std dev = 3.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.1015963294878352;  // std dev = 4.28e-07, 696.000 (wgt'ed) examples reached here.  /* #neg=696 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.09269127618926197;  // std dev = 0.000, 685.000 (wgt'ed) examples reached here.  /* #neg=685 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4.42e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.08518475138839675;  // std dev = 1.30e-07, 696.000 (wgt'ed) examples reached here.  /* #neg=696 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2.53e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109173;  // std dev = 2.36e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.07877675473109273;  // std dev = 0.000, 699.000 (wgt'ed) examples reached here.  /* #neg=699 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2.60e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.07324622576333659;  // std dev = 2.23e-07, 690.000 (wgt'ed) examples reached here.  /* #neg=690 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420271;  // std dev = 1.05e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else return -0.06842697784420262;  // std dev = 1.78e-07, 739.000 (wgt'ed) examples reached here.  /* #neg=739 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else return -0.06419184008202526;  // std dev = 2.55e-07, 713.000 (wgt'ed) examples reached here.  /* #neg=713 */
Starting experiments for fasttext using euclidean 

Run: 1
Starting experiment 1_imdb_uwcse 

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

Model training time 3.4810500144958496 

Building refine structure 

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else return -0.14185106490048913;  // std dev = 0.000, 716.000 (wgt'ed) examples reached here.  /* #neg=716 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else return -0.12544463852839235;  // std dev = 0.000, 704.000 (wgt'ed) examples reached here.  /* #neg=704 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360629;  // std dev = 4.08e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.11231637819360628;  // std dev = 0.000, 661.000 (wgt'ed) examples reached here.  /* #neg=661 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783628;  // std dev = 2.69e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.10159632948783519;  // std dev = 4.28e-07, 687.000 (wgt'ed) examples reached here.  /* #neg=687 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.09269127618926194;  // std dev = 0.000, 723.000 (wgt'ed) examples reached here.  /* #neg=723 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4.42e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else return -0.08518475138839675;  // std dev = 1.23e-07, 695.000 (wgt'ed) examples reached here.  /* #neg=695 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109283;  // std dev = 0.000, 685.000 (wgt'ed) examples reached here.  /* #neg=685 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.2060298800981208;  // std dev = 0.641, 387.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=382 */
%   | else return -0.0787767547310917;  // std dev = 1.83e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17764042173315842;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else return -0.07327581937398926;  // std dev = 0.022, 738.000 (wgt'ed) examples reached here.  /* #neg=738 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15315635390643373;  // std dev = 4.21e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.06856276267286275;  // std dev = 0.046, 746.000 (wgt'ed) examples reached here.  /* #neg=746 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.1343289767874586;  // std dev = 3.77e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else return -0.06437938419136786;  // std dev = 0.051, 687.000 (wgt'ed) examples reached here.  /* #neg=687 */
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.273372 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 2.5452616214752197 

Total Inference Time : 0.7868857383728027 

Run: 2

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.285155 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 0.9350571632385254 

Total Inference Time : 0.7758891582489014 

Run: 3

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.265414 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 0.9539358615875244 

Total Inference Time : 0.7575445175170898 

Run: 4

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.280692 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 0.896895170211792 

Total Inference Time : 0.8009209632873535 

Run: 5

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.281578 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 1.0079302787780762 

Total Inference Time : 0.7595839500427246 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.282984 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 1.0040006637573242 

Total Inference Time : 0.7939448356628418 

Run: 2

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.275985 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 1.086087942123413 

Total Inference Time : 0.800358772277832 

Run: 3

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.276169 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 0.9731216430664062 

Total Inference Time : 0.7669804096221924 

Run: 4

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.275926 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 1.036475419998169 

Total Inference Time : 0.765831708908081 

Run: 5

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.286624 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 0.9938957691192627 

Total Inference Time : 0.7733557224273682 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.275616 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 1.0724353790283203 

Total Inference Time : 0.817204475402832 

Run: 2

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.282672 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 0.9411661624908447 

Total Inference Time : 0.8069484233856201 

Run: 3

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.283381 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 1.0439774990081787 

Total Inference Time : 0.8123915195465088 

Run: 4

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.275429 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 0.9834747314453125 

Total Inference Time : 0.7838993072509766 

Run: 5

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.281558 

AUC ROC : 0.90215 

AUC PR : 0.089744 

Precision : 0.089744 

Recall : 1.0 

F1 : 0.164706 

Total Learning Time : 1.0207321643829346 

Total Inference Time : 0.7993292808532715 

Starting experiment 1_imdb_uwcse 

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

Model training time 3.5960872173309326 

Building refine structure 

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.14185106490048913;  // std dev = 0.000, 710.000 (wgt'ed) examples reached here.  /* #neg=710 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else return -0.12544463852839235;  // std dev = 0.000, 706.000 (wgt'ed) examples reached here.  /* #neg=706 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360636;  // std dev = 0.000, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else return -0.11231637819360638;  // std dev = 0.000, 676.000 (wgt'ed) examples reached here.  /* #neg=676 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else return -0.10159632948783509;  // std dev = 4.56e-07, 715.000 (wgt'ed) examples reached here.  /* #neg=715 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926104;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.09269127618926204;  // std dev = 0.000, 712.000 (wgt'ed) examples reached here.  /* #neg=712 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4.42e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1.29e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else return -0.08518475138839675;  // std dev = 1.40e-07, 742.000 (wgt'ed) examples reached here.  /* #neg=742 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2.53e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109173;  // std dev = 1.49e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109286;  // std dev = 0.000, 728.000 (wgt'ed) examples reached here.  /* #neg=728 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2.60e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 1.05e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else return -0.07324622576333652;  // std dev = 2.37e-07, 691.000 (wgt'ed) examples reached here.  /* #neg=691 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1.67e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.06842697784420253;  // std dev = 1.87e-07, 683.000 (wgt'ed) examples reached here.  /* #neg=683 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.06419184008202532;  // std dev = 2.52e-07, 697.000 (wgt'ed) examples reached here.  /* #neg=697 */
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Starting experiment 1_imdb_uwcse 

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

Model training time 3.681624412536621 

Building refine structure 

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.14185106490048913;  // std dev = 0.000, 721.000 (wgt'ed) examples reached here.  /* #neg=721 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1254446385283916;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.12544463852839233;  // std dev = 0.000, 667.000 (wgt'ed) examples reached here.  /* #neg=667 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360633;  // std dev = 2.36e-08, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else return -0.1123163781936065;  // std dev = 0.000, 684.000 (wgt'ed) examples reached here.  /* #neg=684 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783624;  // std dev = 2.98e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else return -0.10159632948783516;  // std dev = 4.34e-07, 693.000 (wgt'ed) examples reached here.  /* #neg=693 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926103;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.0926912761892618;  // std dev = 0.000, 732.000 (wgt'ed) examples reached here.  /* #neg=732 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4.42e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1.83e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.08518475138839675;  // std dev = 1.40e-07, 703.000 (wgt'ed) examples reached here.  /* #neg=703 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2.53e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07877675473109286;  // std dev = 0.000, 721.000 (wgt'ed) examples reached here.  /* #neg=721 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2.60e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else return -0.07324622576333652;  // std dev = 2.42e-07, 714.000 (wgt'ed) examples reached here.  /* #neg=714 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 2.24e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else return -0.0684269778442026;  // std dev = 1.81e-07, 720.000 (wgt'ed) examples reached here.  /* #neg=720 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else return -0.06419184008202526;  // std dev = 2.55e-07, 732.000 (wgt'ed) examples reached here.  /* #neg=732 */
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Starting experiment 1_imdb_uwcse 

Start learning from source dataset

Source train facts examples: 1078
Source train pos examples: 382
Source train neg examples: 14236

Model training time 3.5481410026550293 

Building refine structure 

WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1.43e-06, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.1418510649004888;  // std dev = 0.000, 647.000 (wgt'ed) examples reached here.  /* #neg=647 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.12544463852839235;  // std dev = 0.000, 683.000 (wgt'ed) examples reached here.  /* #neg=683 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360624;  // std dev = 6.05e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else return -0.11231637819360656;  // std dev = 0.000, 708.000 (wgt'ed) examples reached here.  /* #neg=708 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783635;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   else return -0.10159632948783523;  // std dev = 4.20e-07, 693.000 (wgt'ed) examples reached here.  /* #neg=693 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926107;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else return -0.09269127618926201;  // std dev = 0.000, 695.000 (wgt'ed) examples reached here.  /* #neg=695 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4.42e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839679;  // std dev = 1.67e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else return -0.08518475138839675;  // std dev = 1.37e-07, 729.000 (wgt'ed) examples reached here.  /* #neg=729 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2.53e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109176;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else return -0.07877675473109283;  // std dev = 0.000, 715.000 (wgt'ed) examples reached here.  /* #neg=715 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2.60e-07, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 7.45e-09, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else return -0.07324622576333664;  // std dev = 2.06e-07, 656.000 (wgt'ed) examples reached here.  /* #neg=656 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( director(B), actor(A) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420268;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else return -0.06842697784420249;  // std dev = 1.91e-07, 682.000 (wgt'ed) examples reached here.  /* #neg=682 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( actor(A), director(B) )
%   then if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else return -0.0641918400820253;  // std dev = 2.53e-07, 726.000 (wgt'ed) examples reached here.  /* #neg=726 */
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.192853 

AUC ROC : 0.954568 

AUC PR : 0.390127 

Precision : 0.134615 

Recall : 0.8 

F1 : 0.230453 

Total Learning Time : 9.126076936721802 

Total Inference Time : 1.1632320880889893 

Results 

CLL : -0.192853 

AUC ROC : 0.954568 

AUC PR : 0.390127 

Precision : 0.134615 

Recall : 0.8 

F1 : 0.230453 

Total Learning Time : 13.672791242599487 

Total Inference Time : 1.1632320880889893 

Run: 2

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.212821 

AUC ROC : 0.952268 

AUC PR : 0.281249 

Precision : 0.126087 

Recall : 0.828571 

F1 : 0.218868 

Total Learning Time : 9.370243787765503 

Total Inference Time : 1.1248798370361328 

Results 

CLL : -0.212821 

AUC ROC : 0.952268 

AUC PR : 0.281249 

Precision : 0.126087 

Recall : 0.828571 

F1 : 0.218868 

Total Learning Time : 12.347957372665405 

Total Inference Time : 1.1248798370361328 

Run: 3

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.211024 

AUC ROC : 0.955229 

AUC PR : 0.310308 

Precision : 0.13615 

Recall : 0.828571 

F1 : 0.233871 

Total Learning Time : 8.232978582382202 

Total Inference Time : 1.12530517578125 

Results 

CLL : -0.211024 

AUC ROC : 0.955229 

AUC PR : 0.310308 

Precision : 0.13615 

Recall : 0.828571 

F1 : 0.233871 

Total Learning Time : 11.250244140625 

Total Inference Time : 1.12530517578125 

Run: 4

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.199252 

AUC ROC : 0.948716 

AUC PR : 0.282629 

Precision : 0.130045 

Recall : 0.828571 

F1 : 0.224806 

Total Learning Time : 8.17988920211792 

Total Inference Time : 1.1059725284576416 

Results 

CLL : -0.199252 

AUC ROC : 0.948716 

AUC PR : 0.282629 

Precision : 0.130045 

Recall : 0.828571 

F1 : 0.224806 

Total Learning Time : 11.11352276802063 

Total Inference Time : 1.1059725284576416 

Run: 5

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.225083 

AUC ROC : 0.949409 

AUC PR : 0.275141 

Precision : 0.126582 

Recall : 0.857143 

F1 : 0.220588 

Total Learning Time : 7.870193243026733 

Total Inference Time : 1.1765527725219727 

Results 

CLL : -0.225083 

AUC ROC : 0.949409 

AUC PR : 0.275141 

Precision : 0.126582 

Recall : 0.857143 

F1 : 0.220588 

Total Learning Time : 10.892234802246094 

Total Inference Time : 1.1765527725219727 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.19891 

AUC ROC : 0.948197 

AUC PR : 0.36111 

Precision : 0.133333 

Recall : 0.8 

F1 : 0.228571 

Total Learning Time : 9.376220703125 

Total Inference Time : 1.2286348342895508 

Results 

CLL : -0.19891 

AUC ROC : 0.948197 

AUC PR : 0.36111 

Precision : 0.133333 

Recall : 0.8 

F1 : 0.228571 

Total Learning Time : 12.481750249862671 

Total Inference Time : 1.2286348342895508 

Run: 2

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.233134 

AUC ROC : 0.952662 

AUC PR : 0.395538 

Precision : 0.12253 

Recall : 0.885714 

F1 : 0.215278 

Total Learning Time : 9.880161046981812 

Total Inference Time : 1.2182257175445557 

Results 

CLL : -0.233134 

AUC ROC : 0.952662 

AUC PR : 0.395538 

Precision : 0.12253 

Recall : 0.885714 

F1 : 0.215278 

Total Learning Time : 12.90507435798645 

Total Inference Time : 1.2182257175445557 

Run: 3

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.211524 

AUC ROC : 0.951819 

AUC PR : 0.310345 

Precision : 0.147619 

Recall : 0.885714 

F1 : 0.253061 

Total Learning Time : 10.391774654388428 

Total Inference Time : 1.1384289264678955 

Results 

CLL : -0.211524 

AUC ROC : 0.951819 

AUC PR : 0.310345 

Precision : 0.147619 

Recall : 0.885714 

F1 : 0.253061 

Total Learning Time : 13.333861827850342 

Total Inference Time : 1.1384289264678955 

Run: 4

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.21053 

AUC ROC : 0.949874 

AUC PR : 0.287901 

Precision : 0.131818 

Recall : 0.828571 

F1 : 0.227451 

Total Learning Time : 8.296682596206665 

Total Inference Time : 1.1914687156677246 

Results 

CLL : -0.21053 

AUC ROC : 0.949874 

AUC PR : 0.287901 

Precision : 0.131818 

Recall : 0.828571 

F1 : 0.227451 

Total Learning Time : 11.456261157989502 

Total Inference Time : 1.1914687156677246 

Run: 5

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.214409 

AUC ROC : 0.949063 

AUC PR : 0.295876 

Precision : 0.126126 

Recall : 0.8 

F1 : 0.217899 

Total Learning Time : 9.973890781402588 

Total Inference Time : 1.1390552520751953 

Results 

CLL : -0.214409 

AUC ROC : 0.949063 

AUC PR : 0.295876 

Precision : 0.126126 

Recall : 0.8 

F1 : 0.217899 

Total Learning Time : 12.971382141113281 

Total Inference Time : 1.1390552520751953 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.2158 

AUC ROC : 0.954418 

AUC PR : 0.341854 

Precision : 0.134529 

Recall : 0.857143 

F1 : 0.232558 

Total Learning Time : 10.370579481124878 

Total Inference Time : 1.215294599533081 

Results 

CLL : -0.2158 

AUC ROC : 0.954418 

AUC PR : 0.341854 

Precision : 0.134529 

Recall : 0.857143 

F1 : 0.232558 

Total Learning Time : 13.509662866592407 

Total Inference Time : 1.215294599533081 

Run: 2

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.228791 

AUC ROC : 0.950449 

AUC PR : 0.28971 

Precision : 0.124481 

Recall : 0.857143 

F1 : 0.217391 

Total Learning Time : 9.930102348327637 

Total Inference Time : 1.2798795700073242 

Results 

CLL : -0.228791 

AUC ROC : 0.950449 

AUC PR : 0.28971 

Precision : 0.124481 

Recall : 0.857143 

F1 : 0.217391 

Total Learning Time : 13.08959150314331 

Total Inference Time : 1.2798795700073242 

Run: 3

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.209485 

AUC ROC : 0.94722 

AUC PR : 0.366594 

Precision : 0.120332 

Recall : 0.828571 

F1 : 0.210145 

Total Learning Time : 13.227375268936157 

Total Inference Time : 1.1838023662567139 

Results 

CLL : -0.209485 

AUC ROC : 0.94722 

AUC PR : 0.366594 

Precision : 0.120332 

Recall : 0.828571 

F1 : 0.210145 

Total Learning Time : 16.28376841545105 

Total Inference Time : 1.1838023662567139 

Run: 4

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.202844 

AUC ROC : 0.949953 

AUC PR : 0.29054 

Precision : 0.154696 

Recall : 0.8 

F1 : 0.259259 

Total Learning Time : 7.779530048370361 

Total Inference Time : 1.1857273578643799 

Results 

CLL : -0.202844 

AUC ROC : 0.949953 

AUC PR : 0.29054 

Precision : 0.154696 

Recall : 0.8 

F1 : 0.259259 

Total Learning Time : 10.80784010887146 

Total Inference Time : 1.1857273578643799 

Run: 5

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 1679
Target train pos examples: 78
Target train neg examples: 2265

Target test facts examples: 708
Target test pos examples: 35
Target test neg examples: 1814

Training using transfer 

Results 

CLL : -0.205442 

AUC ROC : 0.952237 

AUC PR : 0.348381 

Precision : 0.138614 

Recall : 0.8 

F1 : 0.236287 

Total Learning Time : 9.853431224822998 

Total Inference Time : 1.1408228874206543 

Results 

CLL : -0.205442 

AUC ROC : 0.952237 

AUC PR : 0.348381 

Precision : 0.138614 

Recall : 0.8 

F1 : 0.236287 

Total Learning Time : 12.921083927154541 

Total Inference Time : 1.1408228874206543 

