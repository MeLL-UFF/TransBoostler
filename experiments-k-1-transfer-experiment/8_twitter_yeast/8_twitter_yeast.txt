Starting experiment 8_twitter_yeast 

Start learning from source dataset

Source train facts examples: 3142
Source train pos examples: 282
Source train neg examples: 40776

Model training time 62.02766299247742 

Building refine structure 

WILL Produced-Tree #1
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D) )
%   | then return 0.8446354215859965;  // std dev = 0.115, 148.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=146 */
%   | else return 0.8146706742299468;  // std dev = 0.204, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( follows(A, F), follows(F, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( follows(A, G), follows(G, E) )
%   | | | then return 0.643863220813798;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( follows(H, A) )
%   | | then if ( follows(I, H), follows(I, A) )
%   | | | then return -0.12178417526838108;  // std dev = 2.425, 299.000 (wgt'ed) examples reached here.  /* #neg=293 #pos=6 */
%   | | | else return 0.00721725808087843;  // std dev = 4.519, 161.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=24 */
%   | | else if ( follows(A, J), follows(J, K) )
%   | | | then return 0.09123164186642853;  // std dev = 4.876, 133.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=31 */
%   | | | else return 0.2792015666784597;  // std dev = 3.728, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
WILL Produced-Tree #2
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, C), tweets(A, D) )
%   | then return 0.7025849141422827;  // std dev = 0.139, 102.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=100 */
%   | else return 0.7241247561785403;  // std dev = 0.023, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   else if ( follows(A, E), recursion_accounttype(E, B) )
%   | then if ( tweets(A, F), tweets(E, F) )
%   | | then return 0.7379938942424149;  // std dev = 0.092, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( follows(G, A), follows(E, H) )
%   | | | then return 0.43375912649666876;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.7400517255792439;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( follows(I, A) )
%   | | then if ( follows(I, J), recursion_accounttype(J, B) )
%   | | | then return 0.8284127568903171;  // std dev = 0.972, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.13222115763025102;  // std dev = 0.138, 400.000 (wgt'ed) examples reached here.  /* #neg=400 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.11441418807732309;  // std dev = 4.332, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | | else return 0.1327694432808082;  // std dev = 4.513, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
WILL Produced-Tree #3
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(C, D), follows(D, A) )
%   | then return 0.5549062606055598;  // std dev = 0.085, 136.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=135 */
%   | else return 0.5022895466291758;  // std dev = 0.232, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), follows(F, A) )
%   | | then return -0.09634140386672188;  // std dev = 0.130, 295.000 (wgt'ed) examples reached here.  /* #neg=288 #pos=7 */
%   | | else if ( follows(E, G), recursion_accounttype(G, B) )
%   | | | then return 0.5686000607596822;  // std dev = 2.103, 45.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=41 */
%   | | | else return -0.1273046048420505;  // std dev = 0.000, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( follows(A, H), follows(H, I) )
%   | | then if ( recursion_accounttype(I, B) )
%   | | | then return 0.69870833358711;  // std dev = 1.948, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | | | else return -0.16306405853560646;  // std dev = 0.717, 106.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=1 */
%   | | else if ( follows(A, J) )
%   | | | then return 0.26602192125755764;  // std dev = 2.638, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.11556343787335818;  // std dev = 2.747, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #4
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(A, D), tweets(C, D) )
%   | then return 0.3880286500204883;  // std dev = 0.192, 130.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=125 */
%   | else return 0.42661191035527274;  // std dev = 0.042, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   else if ( follows(E, A) )
%   | then if ( follows(F, E), recursion_accounttype(F, B) )
%   | | then if ( follows(A, G), recursion_accounttype(G, B) )
%   | | | then return 0.3857228953416782;  // std dev = 0.949, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.6035783831049197;  // std dev = 0.928, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | else return -0.10472457899078907;  // std dev = 1.013, 465.000 (wgt'ed) examples reached here.  /* #neg=462 #pos=3 */
%   | else if ( follows(A, H), recursion_accounttype(H, B) )
%   | | then if ( follows(A, I), follows(I, H) )
%   | | | then return 0.43020306701565186;  // std dev = 0.000629, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.18656115629918268;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( tweets(A, J), follows(A, K) )
%   | | | then return 0.09409391008699623;  // std dev = 3.499, 77.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=22 */
%   | | | else return 0.18801867041899628;  // std dev = 4.147, 81.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=33 */
WILL Produced-Tree #5
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( follows(A, D), follows(D, C) )
%   | then if ( follows(D, A) )
%   | | then return 0.30503226136472744;  // std dev = 0.160, 113.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=110 */
%   | | else if ( tweets(A, E) )
%   | | | then return -0.2575125854154853;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.33233087725086335;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.33603102949454694;  // std dev = 0.028, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   else if ( follows(F, A) )
%   | then return -0.04637684035850074;  // std dev = 0.179, 455.000 (wgt'ed) examples reached here.  /* #neg=407 #pos=48 */
%   | else if ( follows(A, G), recursion_accounttype(G, B) )
%   | | then if ( follows(G, H), follows(H, G) )
%   | | | then return 0.20431544189302733;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3848155244761352;  // std dev = 0.184, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( follows(A, I), follows(I, J) )
%   | | | then return 0.09039908157083634;  // std dev = 3.925, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.10130361356025712;  // std dev = 3.908, 66.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=24 */
WILL Produced-Tree #6
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(D, A), tweets(D, E) )
%   | then if ( recursion_accounttype(D, B) )
%   | | then return 0.23881177053344868;  // std dev = 0.175, 129.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=125 */
%   | | else return 0.3623290503295226;  // std dev = 0.073, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( follows(C, F), follows(F, C) )
%   | | then if ( tweets(C, G), recursion_accounttype(F, B) )
%   | | | then return 0.14304348735114747;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.0019466465497973706;  // std dev = 0.672, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3014529860879309;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( follows(A, H), follows(H, A) )
%   | then return -0.04987730924974552;  // std dev = 0.159, 413.000 (wgt'ed) examples reached here.  /* #neg=379 #pos=34 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then return 0.26512209374957935;  // std dev = 0.016, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( tweets(A, J), follows(K, A) )
%   | | | then return -0.08581616513538172;  // std dev = 0.550, 72.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=1 */
%   | | | else return 0.03558043508177353;  // std dev = 5.716, 203.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=56 */
WILL Produced-Tree #7
% FOR accounttype(A, B):
%   if ( follows(A, C) )
%   then if ( follows(D, C), recursion_accounttype(D, B) )
%   | then if ( recursion_accounttype(C, B) )
%   | | then if ( follows(E, A), follows(E, D) )
%   | | | then return 0.20892032769259947;  // std dev = 1.983, 152.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=148 */
%   | | | else return 0.049564196111731906;  // std dev = 1.487, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( follows(F, A), recursion_accounttype(F, B) )
%   | | | then return 0.23795379794468643;  // std dev = 0.112, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.6060784867601625;  // std dev = 0.773, 72.000 (wgt'ed) examples reached here.  /* #pos=72 */
%   | else return -0.11890839019001995;  // std dev = 0.055, 461.000 (wgt'ed) examples reached here.  /* #neg=461 */
%   else if ( follows(G, A), recursion_accounttype(G, B) )
%   | then return 0.13355600056050299;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( follows(H, A) )
%   | | then return -0.0747858467370858;  // std dev = 0.120, 57.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=2 */
%   | | else if ( tweets(A, I) )
%   | | | then return -0.05347263877028495;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.020115960697823326;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #8
% FOR accounttype(A, B):
%   if ( follows(C, A), recursion_accounttype(C, B) )
%   then if ( tweets(C, D), follows(A, C) )
%   | then return 0.17541618587413166;  // std dev = 0.122, 119.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=117 */
%   | else return 0.19352839618435008;  // std dev = 0.118, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   else if ( follows(E, A) )
%   | then if ( follows(E, F), recursion_accounttype(F, B) )
%   | | then if ( follows(F, E), follows(A, F) )
%   | | | then return 0.043260988956450044;  // std dev = 1.445, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.31738594255217406;  // std dev = 1.270, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | else return -0.08050166961990851;  // std dev = 0.078, 432.000 (wgt'ed) examples reached here.  /* #neg=432 */
%   | else if ( follows(A, G), recursion_accounttype(G, B) )
%   | | then if ( tweets(A, H) )
%   | | | then return 0.11843923949330687;  // std dev = 0.926, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.29572859837818216;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( follows(A, I) )
%   | | | then return 0.012594053899226021;  // std dev = 4.019, 154.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=44 */
%   | | | else return 0.08245581038464216;  // std dev = 2.667, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #9
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D), recursion_accounttype(D, B) )
%   | then return 0.17531600011148268;  // std dev = 0.378, 151.000 (wgt'ed) examples reached here.  /* #pos=151 */
%   | else if ( follows(A, E), follows(E, A) )
%   | | then return -0.31147544703310026;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.21022918838524482;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( follows(F, A), follows(A, G) )
%   | then if ( follows(G, A), follows(G, F) )
%   | | then return -0.05469459782575809;  // std dev = 0.086, 250.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=11 */
%   | | else if ( follows(H, F), recursion_accounttype(H, B) )
%   | | | then return 0.22900773601778932;  // std dev = 0.281, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | | else return -0.07760795857599312;  // std dev = 0.246, 135.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=1 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then return 0.16644168111590008;  // std dev = 0.006, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.062008667284283024;  // std dev = 0.743, 50.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=2 */
%   | | | else return -0.00861709023223137;  // std dev = 4.969, 210.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=55 */
WILL Produced-Tree #10
% FOR accounttype(A, B):
%   if ( follows(A, C), recursion_accounttype(C, B) )
%   then if ( follows(C, D) )
%   | then if ( follows(A, D) )
%   | | then if ( follows(E, A), recursion_accounttype(E, B) )
%   | | | then return 0.12624479787161658;  // std dev = 1.409, 125.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=123 */
%   | | | else return 0.20234951059608913;  // std dev = 0.159, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( tweets(C, F), follows(D, C) )
%   | | | then return -0.10257037284669085;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19053539772503283;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.2072525106824501;  // std dev = 1.029, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( follows(A, G), follows(H, A) )
%   | then return -0.03968785869378606;  // std dev = 0.096, 429.000 (wgt'ed) examples reached here.  /* #neg=385 #pos=44 */
%   | else if ( follows(I, A), recursion_accounttype(I, B) )
%   | | then return 0.061290161216169446;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else if ( follows(J, A) )
%   | | | then return -0.05039279071821942;  // std dev = 0.683, 47.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=2 */
%   | | | else return 0.016324064174376214;  // std dev = 4.854, 189.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=55 */
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.232946 

AUC ROC : 0.968667 

AUC PR : 0.282256 

Precision : 0.053861 

Recall : 0.954023 

F1 : 0.101966 

Total Learning Time : 20.491631746292114 

Total Inference Time : 16.182420015335083 

Results 

CLL : -0.232946 

AUC ROC : 0.968667 

AUC PR : 0.282256 

Precision : 0.053861 

Recall : 0.954023 

F1 : 0.101966 

Total Learning Time : 63.68903613090515 

Total Inference Time : 16.182420015335083 

Run: 2

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.216274 

AUC ROC : 0.977448 

AUC PR : 0.268472 

Precision : 0.130435 

Recall : 0.931034 

F1 : 0.228814 

Total Learning Time : 39.684120655059814 

Total Inference Time : 37.126710176467896 

Results 

CLL : -0.216274 

AUC ROC : 0.977448 

AUC PR : 0.268472 

Precision : 0.130435 

Recall : 0.931034 

F1 : 0.228814 

Total Learning Time : 103.22724318504333 

Total Inference Time : 37.126710176467896 

Run: 3

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.233229 

AUC ROC : 0.980225 

AUC PR : 0.277448 

Precision : 0.124444 

Recall : 0.965517 

F1 : 0.220472 

Total Learning Time : 44.216675758361816 

Total Inference Time : 35.13899040222168 

Results 

CLL : -0.233229 

AUC ROC : 0.980225 

AUC PR : 0.277448 

Precision : 0.124444 

Recall : 0.965517 

F1 : 0.220472 

Total Learning Time : 119.22556328773499 

Total Inference Time : 35.13899040222168 

Run: 4

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.2366 

AUC ROC : 0.96192 

AUC PR : 0.285426 

Precision : 0.070255 

Recall : 0.885057 

F1 : 0.130178 

Total Learning Time : 18.57141947746277 

Total Inference Time : 14.117815256118774 

Results 

CLL : -0.2366 

AUC ROC : 0.96192 

AUC PR : 0.285426 

Precision : 0.070255 

Recall : 0.885057 

F1 : 0.130178 

Total Learning Time : 72.3154308795929 

Total Inference Time : 14.117815256118774 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.261736 

AUC ROC : 0.943101 

AUC PR : 0.143123 

Precision : 0.052258 

Recall : 0.931034 

F1 : 0.098962 

Total Learning Time : 38.42850852012634 

Total Inference Time : 33.632246255874634 

Results 

CLL : -0.261736 

AUC ROC : 0.943101 

AUC PR : 0.143123 

Precision : 0.052258 

Recall : 0.931034 

F1 : 0.098962 

Total Learning Time : 84.81127166748047 

Total Inference Time : 33.632246255874634 

Run: 2

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.246398 

AUC ROC : 0.962821 

AUC PR : 0.25843 

Precision : 0.060458 

Recall : 0.850575 

F1 : 0.112891 

Total Learning Time : 18.24538516998291 

Total Inference Time : 11.883848667144775 

Results 

CLL : -0.246398 

AUC ROC : 0.962821 

AUC PR : 0.25843 

Precision : 0.060458 

Recall : 0.850575 

F1 : 0.112891 

Total Learning Time : 43.104482889175415 

Total Inference Time : 11.883848667144775 

Run: 3

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.245954 

AUC ROC : 0.956218 

AUC PR : 0.218567 

Precision : 0.048765 

Recall : 0.885057 

F1 : 0.092437 

Total Learning Time : 28.63765549659729 

Total Inference Time : 34.11320400238037 

Results 

CLL : -0.245954 

AUC ROC : 0.956218 

AUC PR : 0.218567 

Precision : 0.048765 

Recall : 0.885057 

F1 : 0.092437 

Total Learning Time : 75.60185694694519 

Total Inference Time : 34.11320400238037 

Run: 4

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.222474 

AUC ROC : 0.97604 

AUC PR : 0.187432 

Precision : 0.138112 

Recall : 0.908046 

F1 : 0.239757 

Total Learning Time : 39.88404178619385 

Total Inference Time : 33.82429027557373 

Results 

CLL : -0.222474 

AUC ROC : 0.97604 

AUC PR : 0.187432 

Precision : 0.138112 

Recall : 0.908046 

F1 : 0.239757 

Total Learning Time : 87.77885723114014 

Total Inference Time : 33.82429027557373 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.243267 

AUC ROC : 0.950822 

AUC PR : 0.266138 

Precision : 0.048254 

Recall : 0.873563 

F1 : 0.091456 

Total Learning Time : 29.306232929229736 

Total Inference Time : 22.490349054336548 

Results 

CLL : -0.243267 

AUC ROC : 0.950822 

AUC PR : 0.266138 

Precision : 0.048254 

Recall : 0.873563 

F1 : 0.091456 

Total Learning Time : 90.4848301410675 

Total Inference Time : 22.490349054336548 

Run: 2

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.213441 

AUC ROC : 0.977961 

AUC PR : 0.409111 

Precision : 0.072697 

Recall : 0.988506 

F1 : 0.135433 

Total Learning Time : 33.689046144485474 

Total Inference Time : 28.017401933670044 

Results 

CLL : -0.213441 

AUC ROC : 0.977961 

AUC PR : 0.409111 

Precision : 0.072697 

Recall : 0.988506 

F1 : 0.135433 

Total Learning Time : 100.11379504203796 

Total Inference Time : 28.017401933670044 

Run: 3

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.249462 

AUC ROC : 0.949138 

AUC PR : 0.228713 

Precision : 0.050174 

Recall : 0.827586 

F1 : 0.094612 

Total Learning Time : 19.885229349136353 

Total Inference Time : 14.760838985443115 

Results 

CLL : -0.249462 

AUC ROC : 0.949138 

AUC PR : 0.228713 

Precision : 0.050174 

Recall : 0.827586 

F1 : 0.094612 

Total Learning Time : 73.17552757263184 

Total Inference Time : 14.760838985443115 

Run: 4

 Starting fold 1 of 1 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

Results 

CLL : -0.233275 

AUC ROC : 0.968752 

AUC PR : 0.267694 

Precision : 0.080713 

Recall : 0.885057 

F1 : 0.147935 

Total Learning Time : 36.168051958084106 

Total Inference Time : 34.35021138191223 

Results 

CLL : -0.233275 

AUC ROC : 0.968752 

AUC PR : 0.267694 

Precision : 0.080713 

Recall : 0.885057 

F1 : 0.147935 

Total Learning Time : 97.91023087501526 

Total Inference Time : 34.35021138191223 

