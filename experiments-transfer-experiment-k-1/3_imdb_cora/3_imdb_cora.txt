Starting experiment 3_imdb_cora 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.270035028457642
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7365403175354004
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1067.0745429992676
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14309509431928658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.038139440494516716;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675658;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1685236708029212;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.409605459669476;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1241486430000413;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.033254011027631966;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03122601228946699;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436787;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903774;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189736;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03159256885958842;  // std dev = 8.401, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07204189585811431;  // std dev = 3.624, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.026371161776164758;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083849;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19125494210527302;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11454602773692053;  // std dev = 3.355, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.022652326509692875;  // std dev = 8.492, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.022843032308261565;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151824;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098651;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3872831094520758;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1420746001431661;  // std dev = 6.062, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0970964158772513;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019806997775476592;  // std dev = 8.491, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.019207414475893667;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245321;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0716682313022;  // std dev = 4.729, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1690071242872591;  // std dev = 3.878, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03390533410736042;  // std dev = 7.639, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.0024451822028019043;  // std dev = 5.006, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01647265089207651;  // std dev = 5.932, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.061108147661714136;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05571808877883239;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.041402968668914415;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1429430724015695;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07702123293370117;  // std dev = 3.352, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.014872045009873746;  // std dev = 8.490, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07741628227098434;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.016205336609063276;  // std dev = 5.766, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126457;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715676;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.25349161470484866;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05685981926127098;  // std dev = 6.035, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02999502261315774;  // std dev = 7.646, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.007030458674405689;  // std dev = 4.981, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06732610952800712;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013948574509371628;  // std dev = 5.766, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108181;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741376;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012444898700237812;  // std dev = 4.711, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09659824991700575;  // std dev = 3.859, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.025972922837751863;  // std dev = 7.626, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.0036223990035919615;  // std dev = 4.999, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1232953391873954;  // std dev = 0.956, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01168453871463522;  // std dev = 5.841, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.7094793319702148
Refined model CLL: -0.650489


******************************************
Best model found
******************************************
Results 

CLL : -0.624343 

AUC ROC : 0.582691 

AUC PR : 0.415178 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1067.0745429992676 

Total Inference Time : 26.618996620178223 

Total revision time: 1100.2898044586182
Best scored revision CLL: -0.650489


Results 

CLL : -0.624343 

AUC ROC : 0.582691 

AUC PR : 0.415178 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1100.3072435855865 

Total Inference Time : 26.618996620178223 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.7763450145721436
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7726287841796875
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 930.730899810791
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.48605591184369906;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703936;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6007717207169574;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36237423287057874;  // std dev = 6.198, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248213;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748988;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5160684793061486;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.29538891718547616;  // std dev = 6.190, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10459627439703681;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.048782996064003784;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010456166386326518;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894195;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051716;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19097319981969582;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29265314544791815;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09797266390427661;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07410552729615988;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04066377358700955;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.186139961084003E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.6898282146541137;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4253351568730247;  // std dev = 2.004, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.10649233819653568;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.18146987902698616;  // std dev = 6.293, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.08401745024449463;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 1.674607323361788E-5;  // std dev = 8.025, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.009181792409267852;  // std dev = 6.182, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13982439366528063;  // std dev = 0.008, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0871554412925922;  // std dev = 34.979, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08763619349538404;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10189591083183325;  // std dev = 4.441, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.17918300024581268;  // std dev = 4.447, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.082918547167235;  // std dev = 3.503, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06456645588865538;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.026014468170295867;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.957293484417291E-4;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0697163025846307;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07000240907819731;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06672935963492092;  // std dev = 4.431, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1443122655991919;  // std dev = 4.444, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1948991609460485;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.009187065835467592;  // std dev = 3.402, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.022143757326618767;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -8.748235435178594E-4;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05528821456685871;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05541743318072513;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05007443577067496;  // std dev = 4.434, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.10852314607440565;  // std dev = 4.442, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0655181580906713;  // std dev = 3.498, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06228010167483188;  // std dev = 1.337, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0017556813760247147;  // std dev = 8.011, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006555993198833096;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04355491007794768;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04358371675692123;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2100249978790394;  // std dev = 1.214, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.050763259541644214;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06313498669807292;  // std dev = 3.488, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0023203517872386514;  // std dev = 8.008, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006818078012373121;  // std dev = 6.187, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12302326096173123;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034137323887362514;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03410353251817122;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.015141548375428191;  // std dev = 4.420, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07420668037516444;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.16160705682975632;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0022145384699259556;  // std dev = 3.384, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0029116559063203963;  // std dev = 8.006, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006305145710858393;  // std dev = 6.048, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
Inference time using transfer learning 2.408282518386841
Refined model CLL: -0.62142


******************************************
Best model found
******************************************
Results 

CLL : -0.825985 

AUC ROC : 0.506008 

AUC PR : 0.608788 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 930.730899810791 

Total Inference Time : 20.32547163963318 

Total revision time: 957.131180524826
Best scored revision CLL: -0.62142


Results 

CLL : -0.825985 

AUC ROC : 0.506008 

AUC PR : 0.608788 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 957.1486196517944 

Total Inference Time : 20.32547163963318 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.7153828144073486
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8509838581085205
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 651.7849836349487
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.37820522294572756;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.51313373820162;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.33611531358553326;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23048590135751648;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.31038115199810845;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16605286691456164;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2453097669842213;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559886;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.288609621203731;  // std dev = 1.226, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14604447598759607;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04103392149496011;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2284030407915789;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07342398208298014;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021515757896624955;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27053738171522984;  // std dev = 4.129, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.10622245449948071;  // std dev = 2.878, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09192763723756966;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.10966930708413723;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03444964905968146;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971410384811948;  // std dev = 2.936, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.0753810403972603;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.019654783955741016;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07044289865892323;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.41163987395510354;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08240103791443026;  // std dev = 6.320, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.026909504547361178;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17209229993045544;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06822949779761049;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013844095690902197;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2330730909106554;  // std dev = 4.081, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.14089283631288865;  // std dev = 2.920, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.030409970087473995;  // std dev = 4.784, 100.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return 0.05301041028506693;  // std dev = 33.327, 4,459.000 (wgt'ed) examples reached here.  /* #neg=2,272 #pos=2,187 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.02228665736756695;  // std dev = 7.501, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1324868413652602;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.010039948414087875;  // std dev = 5.413, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08509700566691916;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040014483060206;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.019131670091211403;  // std dev = 4.637, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.08809896133792751;  // std dev = 4.295, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.016552720975986444;  // std dev = 7.485, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12725701098677794;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07082283628761575;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.010425527934967628;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.7005369663238525
Refined model CLL: -0.672719


******************************************
Best model found
******************************************
Results 

CLL : -0.602788 

AUC ROC : 0.559565 

AUC PR : 0.248967 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 651.7849836349487 

Total Inference Time : 4.318973779678345 

Total revision time: 661.0493433475494
Best scored revision CLL: -0.672719


Results 

CLL : -0.602788 

AUC ROC : 0.559565 

AUC PR : 0.248967 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 661.0667824745178 

Total Inference Time : 4.318973779678345 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.47751259803772
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8102114200592041
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 973.7296001911163
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D), haswordtitle(F, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.24543217209373325;  // std dev = 6.407, 173.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=67 */
%   | | | else return 0.2510675953865885;  // std dev = 35.304, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21826639547825577;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3740067474348655;  // std dev = 4.286, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.065633869831136;  // std dev = 4.508, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.16030210799273292;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.18460345017094582;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.1176714976902459;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08788879413761608;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.012866519535122746;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03272964550999356;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15225028988398262;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.007377849997013522;  // std dev = 7.692, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.080992962011132;  // std dev = 3.727, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.03970353031919212;  // std dev = 6.515, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.15224893805902856;  // std dev = 0.065, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3122053546098406;  // std dev = 4.247, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.012356251999272176;  // std dev = 4.539, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.12260720100251311;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09443289412548071;  // std dev = 3.500, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05842144190732943;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007507794379149583;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026126667201763255;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09826855178171283;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08009192577204532;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05196435222877838;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.03540724338945124;  // std dev = 3.638, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.009827459564225009;  // std dev = 9.403, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07742865430585494;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08957175269329151;  // std dev = 3.476, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08702810152381095;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.002915975923506668;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023107827051903562;  // std dev = 6.405, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.246474485191009;  // std dev = 3.702, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | | | else return -0.007338891449143735;  // std dev = 4.971, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else return 0.05994890831277841;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.0643825630046597;  // std dev = 3.488, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0494514152364941;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.003357528074041975;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01854288792857409;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2247794295699626;  // std dev = 3.693, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | | | else return -0.022615271169862027;  // std dev = 4.991, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else return 0.04648799233262918;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0049391988130657455;  // std dev = 7.666, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.076287642736919;  // std dev = 3.731, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0262158624141564;  // std dev = 6.482, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14206785139638056;  // std dev = 0.123, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030698025161390943;  // std dev = 34.200, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.0452229243026861;  // std dev = 8.380, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11299552396676128;  // std dev = 4.671, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.034778274475235404;  // std dev = 8.111, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.23424404399955304;  // std dev = 3.214, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.46448826632226464;  // std dev = 2.587, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.024518760939175026;  // std dev = 6.495, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1256998455025921;  // std dev = 0.111, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4579520225524902
Refined model CLL: -0.639248


******************************************
Best model found
******************************************
Results 

CLL : -0.677634 

AUC ROC : 0.543674 

AUC PR : 0.45719 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 973.7296001911163 

Total Inference Time : 6.172095537185669 

Total revision time: 985.6622796058655
Best scored revision CLL: -0.639248


Results 

CLL : -0.677634 

AUC ROC : 0.543674 

AUC PR : 0.45719 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 985.6797187328339 

Total Inference Time : 6.172095537185669 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.034197807312012
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7505614757537842
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 926.5938682556152
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533313;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06460962383370238;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03431836392095156;  // std dev = 8.054, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0018846352548022732;  // std dev = 5.549, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865122;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496462;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011163691670460841;  // std dev = 7.222, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07982461168953084;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0026584126525626213;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14188324099178215;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406545;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05863410755508213;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.058337771728287656;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.020941711624044065;  // std dev = 9.628, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1139834107002913;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708752;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488158;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2302435168284412;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05148455896399651;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.025066928431296324;  // std dev = 8.046, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004206655531656187;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611815;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0845360523843121;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997696;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766637;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0068721682472004195;  // std dev = 7.207, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07311146764936093;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0039848823943670186;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12731793882587247;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.2103106658963676;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.07238496687687827;  // std dev = 37.571, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158738;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04689395050246501;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01997147833460253;  // std dev = 8.044, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.004636324893725766;  // std dev = 5.535, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.415444985218629;  // std dev = 2.696, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.02614958935434394;  // std dev = 4.586, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05649041405694097;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.08092694290295285;  // std dev = 6.494, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004350708370665021;  // std dev = 7.204, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05976184277800935;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0030847828790710853;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11336324582537327;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04504392862867563;  // std dev = 36.673, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0404240385514732;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024621111621664304;  // std dev = 4.639, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09483781074317822;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.002259056644575401;  // std dev = 7.200, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06009161298661947;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.003403803977799911;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1024585115598027;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3884892267962052;  // std dev = 2.683, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.04542203067112226;  // std dev = 4.602, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03410665881337175;  // std dev = 37.137, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.046349379188874155;  // std dev = 6.487, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0021467514667562787;  // std dev = 7.198, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05084537846744743;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0030442646440024014;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09341270961796165;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 1.531745195388794
Refined model CLL: -0.635368


******************************************
Best model found
******************************************
Results 

CLL : -0.749785 

AUC ROC : 0.634535 

AUC PR : 0.623666 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 926.5938682556152 

Total Inference Time : 21.974008560180664 

Total revision time: 954.9027764797211
Best scored revision CLL: -0.635368


Results 

CLL : -0.749785 

AUC ROC : 0.634535 

AUC PR : 0.623666 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 954.9202156066895 

Total Inference Time : 21.974008560180664 

Run: 2

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.197603464126587
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7305090427398682
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 993.7341861724854
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.043688297190162616;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690137;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267565;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03722742813849784;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.0767983915607055;  // std dev = 3.619, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.031124381371230057;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.40805767272518967;  // std dev = 1.959, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.15314378660683756;  // std dev = 37.926, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2127671555190377;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189736006;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1324661228118402;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02642854306726794;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.026306190624831895;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12526662670730082;  // std dev = 37.053, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.10919548512677837;  // std dev = 8.361, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235597;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1912549421052729;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.041991407742996784;  // std dev = 7.651, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.011910979025781029;  // std dev = 5.025, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06973461203743729;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02548059638671594;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09973810004616351;  // std dev = 37.052, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08748257062797297;  // std dev = 8.362, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11082226745851521;  // std dev = 4.747, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20570300724483617;  // std dev = 3.883, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10954357611938056;  // std dev = 3.357, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019897226870995096;  // std dev = 8.493, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0972874855394337;  // std dev = 0.957, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.018549816509277475;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07850524352674385;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06847193869546893;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.35463210841979254;  // std dev = 0.886, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10375634102649121;  // std dev = 6.048, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1107769373887493;  // std dev = 3.350, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07779705556791837;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02796191290743763;  // std dev = 3.510, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.01545144964023149;  // std dev = 9.635, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06120658736176732;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05379865004082536;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.041469891986457216;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14286206936261026;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09384453117039865;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0682368098744577;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02371703173320673;  // std dev = 3.509, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.013283535618905457;  // std dev = 9.635, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04742863907693855;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04157584174853842;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.029004618838854725;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11129303261195576;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.030516678819510215;  // std dev = 7.626, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.005237339269593059;  // std dev = 4.998, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.08479248987727649;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014199243358787614;  // std dev = 5.765, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03655941521780425;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0322969155042144;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01272744670313029;  // std dev = 4.719, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09637172525567776;  // std dev = 3.851, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.026075296006978218;  // std dev = 7.625, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.00444870924966364;  // std dev = 4.998, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0984198200879979;  // std dev = 0.948, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.010984787392974267;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.69749116897583
Refined model CLL: -0.650322


******************************************
Best model found
******************************************
Results 

CLL : -0.624554 

AUC ROC : 0.582695 

AUC PR : 0.415179 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 993.7341861724854 

Total Inference Time : 25.05199122428894 

Total revision time: 1025.3432958126068
Best scored revision CLL: -0.650322


Results 

CLL : -0.624554 

AUC ROC : 0.582695 

AUC PR : 0.415179 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1025.356442451477 

Total Inference Time : 25.05199122428894 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.835115432739258
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7777862548828125
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 989.2811577320099
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.48605591184369906;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1887640315870393;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.32642508647238355;  // std dev = 4.484, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42395395073938485;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435782;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0034512830147094948;  // std dev = 8.041, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006783280105919446;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489902;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5340916763732723;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.294242497123681;  // std dev = 6.185, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.01915955637954567;  // std dev = 7.471, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -7.790021168715634E-4;  // std dev = 4.669, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00870198567466942;  // std dev = 6.180, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.14064433746503607;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1313659802989419;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051688;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4562525065244577;  // std dev = 1.236, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.22982609961673364;  // std dev = 6.174, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1090975631204276;  // std dev = 3.513, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06177939678720911;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04877609342372638;  // std dev = 3.651, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002987635355543525;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.41834438413173153;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.1068359480488228;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1462556220747866;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2254709358796855;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0938314975588532;  // std dev = 3.512, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.054691406637612135;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 1.979008451532824E-4;  // std dev = 7.976, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.004879631461562955;  // std dev = 6.120, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08716328008135353;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08760503851479634;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3056671268051731;  // std dev = 1.232, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.13122999671577754;  // std dev = 6.161, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09724974505813568;  // std dev = 3.503, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07541811177657781;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03738870325334022;  // std dev = 3.623, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0028631096455014812;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06972212787326944;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06997336076946745;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06609555975458978;  // std dev = 4.428, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1449359852389871;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08292863082674075;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06608939130208687;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03208809914498408;  // std dev = 3.622, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0025118717426668687;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05529225396582422;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05539331318508868;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.20498994727038372;  // std dev = 1.235, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07223424852902947;  // std dev = 6.151, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19539776813253107;  // std dev = 1.584, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.008576265884357993;  // std dev = 3.398, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.002289066421802096;  // std dev = 7.961, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006127143137427323;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04355766056246141;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04356245021987487;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.026939474498457062;  // std dev = 4.421, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09192557036363519;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06967745425793292;  // std dev = 3.493, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05997125284808767;  // std dev = 1.366, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02323106949165995;  // std dev = 3.614, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002316036957187941;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03413903652825583;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03408634795557444;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0145410194669344;  // std dev = 4.418, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07465484630831824;  // std dev = 4.441, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19012618382924987;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.001849389060619927;  // std dev = 3.381, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.019742292437596835;  // std dev = 3.613, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002032761188247597;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning 2.339219570159912
Refined model CLL: -0.621602


******************************************
Best model found
******************************************
Results 

CLL : -0.826006 

AUC ROC : 0.506552 

AUC PR : 0.609532 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 989.2811577320099 

Total Inference Time : 21.65354585647583 

Total revision time: 1017.044755935669
Best scored revision CLL: -0.621602


Results 

CLL : -0.826006 

AUC ROC : 0.506552 

AUC PR : 0.609532 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 1017.0579025745392 

Total Inference Time : 21.65354585647583 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.5603179931640625
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8509862422943115
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 636.7044007778168
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3073171177232835;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3865845097881263;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23066939715587145;  // std dev = 4.657, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30994712392327534;  // std dev = 4.308, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5489266171835913;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19885698018452488;  // std dev = 6.327, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.051424342215598724;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06821007189820737;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508127;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.30683567789883026;  // std dev = 4.117, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.07778638872937292;  // std dev = 2.877, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1204890902009401;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.1450710065838279;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.041621302877510924;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09335578437677157;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09276793270398087;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08744739590781146;  // std dev = 4.646, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1485534135304042;  // std dev = 4.304, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830446;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07583294993931636;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.019204361885541258;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07043295285316113;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05773658588384029;  // std dev = 4.643, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1203154482644144;  // std dev = 4.298, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026614411937304485;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17192093335745545;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0677562717892908;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014257170344382036;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05323535545253172;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.042724581426836265;  // std dev = 4.637, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.0919590643033961;  // std dev = 4.304, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1368204982310098;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021575227007179804;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06927269119882996;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012849843349586183;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4142900183023086;  // std dev = 1.259, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.012937109825738901;  // std dev = 4.831, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03950523956808506;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.041801158417278626;  // std dev = 6.195, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1315030269408918;  // std dev = 2.853, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.016691923117233377;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006632332665618607;  // std dev = 5.414, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08522731604003998;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.6767399311065674
Refined model CLL: -0.672947


******************************************
Best model found
******************************************
Results 

CLL : -0.603943 

AUC ROC : 0.560112 

AUC PR : 0.2486 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 636.7044007778168 

Total Inference Time : 4.495224475860596 

Total revision time: 646.0314207077026
Best scored revision CLL: -0.672947


Results 

CLL : -0.603943 

AUC ROC : 0.560112 

AUC PR : 0.2486 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 646.0445673465729 

Total Inference Time : 4.495224475860596 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.571769952774048
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.847846269607544
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 900.4101505279541
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12800246769009244;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697814;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.014740337475085357;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03695236799168648;  // std dev = 6.442, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.38576443858749054;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.06533753364830068;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.18374639001382412;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.11125506497562064;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06731420093509295;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012913281013131635;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03229664472527579;  // std dev = 6.442, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15227658980758396;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1074858184233996;  // std dev = 3.493, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07185133298228204;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.043360325056342394;  // std dev = 3.632, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.013871120972154663;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3211538813672436;  // std dev = 4.328, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.007334667105939012;  // std dev = 4.545, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.09178043602135162;  // std dev = 5.812, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.12351003142658834;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.09202215665971406;  // std dev = 3.492, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06325894470408776;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.008008210197975894;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026088381970368772;  // std dev = 6.428, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09827810581405076;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08614549513819432;  // std dev = 3.485, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06919554762492959;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.006974438300712062;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02210002050010208;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07743009464374472;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2054689849316885;  // std dev = 1.564, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.009267748981879737;  // std dev = 3.395, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.004953961985239311;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020188953925692036;  // std dev = 6.419, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06046214209442975;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07090382992293191;  // std dev = 3.475, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06535767634204886;  // std dev = 1.340, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.0043029240384494395;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.017429262457916796;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04690236220161596;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1999383890092081;  // std dev = 1.557, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0010609846604641609;  // std dev = 3.383, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.002680377132113859;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015882498039006616;  // std dev = 6.409, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.030862413023073597;  // std dev = 34.246, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.046323045901677656;  // std dev = 8.383, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11328618843016533;  // std dev = 4.675, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03687642352887339;  // std dev = 8.108, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.23168217957652476;  // std dev = 3.226, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4600673819623025;  // std dev = 2.572, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023105937344340226;  // std dev = 6.480, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1665335596544316;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.399383544921875
Refined model CLL: -0.640378


******************************************
Best model found
******************************************
Results 

CLL : -0.677889 

AUC ROC : 0.543586 

AUC PR : 0.458194 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 900.4101505279541 

Total Inference Time : 5.865046739578247 

Total revision time: 912.1124346256256
Best scored revision CLL: -0.640378


Results 

CLL : -0.677889 

AUC ROC : 0.543586 

AUC PR : 0.458194 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 912.1255812644958 

Total Inference Time : 5.865046739578247 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.218101739883423
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.6683683395385742
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1037.403434753418
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533294;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907925;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06261940488996087;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06323004872688665;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.025921138191458457;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651213;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496434;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010454445253590218;  // std dev = 7.215, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08335979610157908;  // std dev = 3.923, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.001985373474317731;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12831612019948824;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406558;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12836113163788107;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1835423643603245;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.056903079604074126;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.027062842103745773;  // std dev = 8.046, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0020183232128474465;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029164;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708752;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1412868163248815;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844127;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008659876937709214;  // std dev = 7.213, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06945244032377756;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0014875920042190488;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11443039045045311;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611802;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0845360523843122;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997696;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766626;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06066715472378065;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05171714209174467;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.017042940256365328;  // std dev = 9.617, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0729139248881668;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090487;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158738;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441782;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00682772995440601;  // std dev = 7.208, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.057753855000246504;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0033259848790192074;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10492592827731381;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41697328558963404;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.02314148456031116;  // std dev = 4.595, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05643083141141909;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.0808396249876664;  // std dev = 6.493, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.0313003246928872;  // std dev = 6.052, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.003286953736613378;  // std dev = 5.538, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.00289763300645445;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09547221600636435;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04497716189090248;  // std dev = 36.674, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04170703987256327;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02433036996667221;  // std dev = 4.636, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09513564674768656;  // std dev = 4.567, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04990678155648593;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0165712693072869;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00443201926892926;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.17435256867765836;  // std dev = 1.668, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.3968168329333617;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.0342268691452936;  // std dev = 37.512, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.046040555295672234;  // std dev = 6.518, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.058957663665996175;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.017389011576202287;  // std dev = 8.025, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007163791831670033;  // std dev = 5.537, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.6310632228851318
Refined model CLL: -0.635919


******************************************
Best model found
******************************************
Results 

CLL : -0.750255 

AUC ROC : 0.640002 

AUC PR : 0.633974 

Precision : 0.875 

Recall : 0.050909 

F1 : 0.09622 

Total Learning Time : 1037.403434753418 

Total Inference Time : 23.338040113449097 

Total revision time: 1067.2704524993896
Best scored revision CLL: -0.635919


Results 

CLL : -0.750255 

AUC ROC : 0.640002 

AUC PR : 0.633974 

Precision : 0.875 

Recall : 0.050909 

F1 : 0.09622 

Total Learning Time : 1067.28359913826 

Total Inference Time : 23.338040113449097 

Run: 3

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.142784833908081
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7211558818817139
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1039.9131593704224
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151715;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.038139440494516716;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675658;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40960545966947604;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1241486430000413;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.033254011027631904;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03122601228946699;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436795;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903766;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973598;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0315925688595883;  // std dev = 8.401, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07204189585811435;  // std dev = 3.624, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.10071049980613894;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.027413238102116596;  // std dev = 5.849, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083839;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.458764766850876;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19126976018982184;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1045613695708055;  // std dev = 3.352, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02421339114163629;  // std dev = 8.497, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09628224974976868;  // std dev = 0.958, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.023581391673695;  // std dev = 5.848, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151824;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098663;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3876145758721106;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14205848111588734;  // std dev = 6.062, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11359279983164143;  // std dev = 3.341, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08583523455766438;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.027239670347069124;  // std dev = 3.497, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.019819187626832702;  // std dev = 9.640, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245314;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07161067759080968;  // std dev = 4.729, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.16907744706606398;  // std dev = 3.878, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09642687467006597;  // std dev = 3.339, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07483626192847934;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.016876126498412757;  // std dev = 8.477, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.019559091162478597;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171409;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832296;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.041454560971067096;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14287914245027353;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08146197542295118;  // std dev = 3.331, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.014142682400820056;  // std dev = 8.480, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07921644167213274;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.017434735663360627;  // std dev = 5.768, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126448;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715662;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.029255100572998627;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11098879819010199;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02934032495410064;  // std dev = 7.629, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.006163296688071409;  // std dev = 4.980, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.013400443862576229;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10160248708886653;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036494598551081926;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.033566779947413854;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.012733661075563268;  // std dev = 4.720, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09636681556247773;  // std dev = 3.850, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07479150305257304;  // std dev = 3.326, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.008931844384063678;  // std dev = 8.475, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01040354554770011;  // std dev = 5.921, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09270970625967669;  // std dev = 0.042, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.9190053939819336
Refined model CLL: -0.650404


******************************************
Best model found
******************************************
Results 

CLL : -0.624445 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1039.9131593704224 

Total Inference Time : 26.736300945281982 

Total revision time: 1073.1784908771515
Best scored revision CLL: -0.650404


Results 

CLL : -0.624445 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1073.191696882248 

Total Inference Time : 26.736300945281982 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.793834924697876
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.8214266300201416
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 887.8306336402893
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.48605591184369906;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1887640315870394;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6007717207169574;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36237423287057874;  // std dev = 6.198, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248209;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489894;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5160684793061486;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2953889171854763;  // std dev = 6.190, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10459627439703681;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.048782996064003846;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010456166386326518;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1313659802989418;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051696;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19097319981969588;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29265314544791815;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09797266390427664;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07410552729615988;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04066377358700955;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.186139961084003E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933437;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842106;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.49267896345573975;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18146987902698625;  // std dev = 6.293, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.0835834377475886;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06499509620262611;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.03496000033724059;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -8.071159032256147E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357501;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10169858367930991;  // std dev = 4.440, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1795279598219672;  // std dev = 4.448, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.079018664365092;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06983341538206947;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -8.330000611136412E-4;  // std dev = 7.961, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007279263637662357;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081806;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06723395216236673;  // std dev = 4.434, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14394091569298;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19611747236544047;  // std dev = 1.584, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.008861479593055816;  // std dev = 3.403, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0234642900607154;  // std dev = 3.624, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.830780040294106E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530423;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04992980623706938;  // std dev = 4.433, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1087425417737777;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06630102193887905;  // std dev = 3.496, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06444673347379044;  // std dev = 1.338, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.019942789673838716;  // std dev = 3.624, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -8.637130462399319E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3878517455325388;  // std dev = 2.082, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.008513565917099855;  // std dev = 5.590, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04328923537091868;  // std dev = 35.490, 5,500.000 (wgt'ed) examples reached here.  /* #neg=3,547 #pos=1,953 */
%   | | | else return 0.050714793574341076;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.16452804984476072;  // std dev = 1.588, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0017762908069972774;  // std dev = 3.386, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.016909510607124614;  // std dev = 3.623, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -7.589107726705726E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5088968831160403;  // std dev = 0.315, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.25948788190112004;  // std dev = 2.005, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.006670856854983852;  // std dev = 5.590, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return 0.034041982084201595;  // std dev = 36.018, 5,657.000 (wgt'ed) examples reached here.  /* #neg=3,615 #pos=2,042 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.05608229462857992;  // std dev = 3.483, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0024761125638580288;  // std dev = 8.004, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007720733644348952;  // std dev = 6.187, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13830792173099926;  // std dev = 0.026, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning 2.207864761352539
Refined model CLL: -0.621212


******************************************
Best model found
******************************************
Results 

CLL : -0.826198 

AUC ROC : 0.502588 

AUC PR : 0.607357 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 887.8306336402893 

Total Inference Time : 19.13290786743164 

Total revision time: 913.0421416759491
Best scored revision CLL: -0.621212


Results 

CLL : -0.826198 

AUC ROC : 0.502588 

AUC PR : 0.607357 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 913.0553476810455 

Total Inference Time : 19.13290786743164 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.4673707485198975
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8941452503204346
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 637.4310257434845
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.37820522294572756;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.30731711772328374;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3865845097881261;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.2306693971558717;  // std dev = 4.657, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30994712392327534;  // std dev = 4.308, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3806505105719601;  // std dev = 1.227, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1942871802269227;  // std dev = 6.210, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.051424342215598794;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508106;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.31887263616605477;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.14428334209757182;  // std dev = 6.204, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751091;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0746582173009453;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02105752645551096;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.08502248663563444;  // std dev = 4.640, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.14788452372178543;  // std dev = 4.291, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0347187433283044;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960773;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027476;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.05542080348308013;  // std dev = 4.631, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.12037768882287281;  // std dev = 4.291, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02659322878595542;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302802;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05327696275075745;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.19564865634639522;  // std dev = 1.201, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05821546719724225;  // std dev = 6.193, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13682433256477533;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.02157735807032243;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0097731193130547;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08564686162744155;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22105036069873357;  // std dev = 4.121, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.1623260840894128;  // std dev = 2.854, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.0318619355653047;  // std dev = 4.958, 100.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return 0.03952553638563156;  // std dev = 33.324, 4,459.000 (wgt'ed) examples reached here.  /* #neg=2,272 #pos=2,187 */
%   | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.01705230253925985;  // std dev = 7.485, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12731447945880967;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.006633248604405755;  // std dev = 5.414, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07917581939199701;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.462292194366455
Refined model CLL: -0.673363


******************************************
Best model found
******************************************
Results 

CLL : -0.604051 

AUC ROC : 0.559579 

AUC PR : 0.247027 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 637.4310257434845 

Total Inference Time : 4.146295070648193 

Total revision time: 646.2699317932129
Best scored revision CLL: -0.673363


Results 

CLL : -0.604051 

AUC ROC : 0.559579 

AUC PR : 0.247027 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 646.2831377983093 

Total Inference Time : 4.146295070648193 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.5669121742248535
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8498783111572266
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 892.2471425533295
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449204;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.056276641057215464;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18446442968974686;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10835398529614793;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06961459904338328;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.04877290415819784;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01707792693870001;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.35361695176439173;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.03319004682520159;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.15159890319074093;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09281951314054324;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06139008364309995;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01067148276062174;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02977272744014408;  // std dev = 6.436, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12330619426052511;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09806612862917004;  // std dev = 3.490, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08095950234723914;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.007891124095858858;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026495928056606236;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2959816311293855;  // std dev = 4.326, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.01748246028141127;  // std dev = 4.547, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.06656798735928579;  // std dev = 5.805, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.09851331077001026;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.08339489660418349;  // std dev = 3.488, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07079880946541436;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.006869032989765537;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022980053671954444;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07741579558900231;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2028465833691785;  // std dev = 1.566, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.006703031812425925;  // std dev = 3.397, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.004946684769749392;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020977434888118065;  // std dev = 6.416, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06045061728337232;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0685112164158187;  // std dev = 3.479, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0672811205509494;  // std dev = 1.339, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.004296587709704315;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.018121271199352446;  // std dev = 6.416, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.046893215264839694;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19785392327572573;  // std dev = 1.559, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0012013984339655447;  // std dev = 3.384, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.002525441625019292;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.0168249462437862;  // std dev = 6.407, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.03085541183758385;  // std dev = 34.246, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04629126948519336;  // std dev = 8.384, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.1132336459456864;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03639102177395174;  // std dev = 8.111, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.06501132618453054;  // std dev = 7.107, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.10413611922132933;  // std dev = 1.682, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else return 0.24516856518057514;  // std dev = 0.438, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
Inference time using transfer learning 1.530867338180542
Refined model CLL: -0.64131


******************************************
Best model found
******************************************
Results 

CLL : -0.67848 

AUC ROC : 0.543591 

AUC PR : 0.458618 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 892.2471425533295 

Total Inference Time : 5.878620624542236 

Total revision time: 903.9923844337463
Best scored revision CLL: -0.64131


Results 

CLL : -0.67848 

AUC ROC : 0.543591 

AUC PR : 0.458618 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 904.0055904388428 

Total Inference Time : 5.878620624542236 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.071648597717285
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7909224033355713
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1174.266996383667
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533313;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05353224823028762;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02487405719357365;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651216;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1548320326649646;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011840909009238208;  // std dev = 7.219, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08211746034770337;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 7.16888884310725E-4;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14845578667093132;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406553;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12836113163788107;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0092549086742314;  // std dev = 7.211, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08065270911613845;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -8.58570424511473E-4;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1306504299697335;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029157;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1052503820870875;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844124;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008086755527559669;  // std dev = 7.211, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07012181256204073;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -7.493723980053176E-4;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11651333601934165;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0917038549161181;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431222;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997691;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.1854670900076664;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05121860238589734;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022350140367216987;  // std dev = 8.039, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0039946272267712855;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816677;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090482;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158736;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005563788602780449;  // std dev = 7.202, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06655593662471947;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004431614132610105;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10467013119027943;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.057480512491567465;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0533315294901014;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04401048386508491;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946214;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0048485809401013795;  // std dev = 7.202, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05725818006382755;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.12434699496419097;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.004383265521991215;  // std dev = 5.533, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04499836200047474;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0420308078202;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03195107228254375;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817377;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004223055400870667;  // std dev = 7.202, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.048928370663917045;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0030346909193092477;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09488195614198612;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035061421409153984;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.032722003866180495;  // std dev = 8.219, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.016733153509168198;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07331717420310026;  // std dev = 4.560, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.055638018570687564;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016015706641774964;  // std dev = 8.024, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.005345172348084116;  // std dev = 5.537, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.7306995391845703
Refined model CLL: -0.636696


******************************************
Best model found
******************************************
Results 

CLL : -0.751211 

AUC ROC : 0.639658 

AUC PR : 0.639833 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1174.266996383667 

Total Inference Time : 27.212294578552246 

Total revision time: 1207.819572210312
Best scored revision CLL: -0.636696


Results 

CLL : -0.751211 

AUC ROC : 0.639658 

AUC PR : 0.639833 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1207.8327782154083 

Total Inference Time : 27.212294578552246 

Run: 4

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.061398267745972
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7459728717803955
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1011.2400245666504
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4723963623785732;  // std dev = 1.967, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.22007296189803768;  // std dev = 37.927, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.0381394404945167;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18763296829746787;  // std dev = 37.055, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16417717100423798;  // std dev = 8.354, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03711211154702517;  // std dev = 8.412, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07693231806277194;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.031226012289466983;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15479770693358327;  // std dev = 37.055, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1358145297086939;  // std dev = 8.355, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903777;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973599;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.031711769663738676;  // std dev = 8.409, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07208194380010914;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02638082006689724;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12526420536301097;  // std dev = 37.053, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.10927243447800603;  // std dev = 8.361, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16116179168107544;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2558166315289217;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11427650035411349;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02278863954707004;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0942176139043304;  // std dev = 0.958, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.023952271466748224;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6321283812785414;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.26683902639101714;  // std dev = 2.165, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09829579689406351;  // std dev = 37.902, 6,009.000 (wgt'ed) examples reached here.  /* #neg=3,632 #pos=2,377 */
%   | | | else return 0.1476215066820688;  // std dev = 6.143, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.03771315077688445;  // std dev = 7.639, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.008378815691594462;  // std dev = 5.024, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.019175077659851804;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09265550348943948;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07859245143187103;  // std dev = 37.042, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0663153467235934;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07272550835551991;  // std dev = 4.755, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1686343224836599;  // std dev = 3.869, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09221172894322162;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.016927950004446152;  // std dev = 8.495, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07485058494012636;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.018828746560781068;  // std dev = 5.764, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.061322570224598014;  // std dev = 37.040, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.051224371252930334;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32961844760846926;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07560623528497593;  // std dev = 6.046, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10849960900113106;  // std dev = 3.342, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0905627877250292;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.012597834599928736;  // std dev = 8.468, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.017206798699447128;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04749978038447979;  // std dev = 37.040, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03996460399424215;  // std dev = 8.371, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.29086096243491594;  // std dev = 0.880, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05526688865335874;  // std dev = 6.036, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.030331377192368964;  // std dev = 7.639, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.00711085408557138;  // std dev = 4.988, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09146246139541842;  // std dev = 0.950, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.013033637961778291;  // std dev = 5.840, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036642022140389564;  // std dev = 37.039, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.030540627877648534;  // std dev = 8.374, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.013259657983054424;  // std dev = 4.720, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09596382488180705;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09092607554607991;  // std dev = 3.330, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07974988226309697;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009119922989554897;  // std dev = 8.419, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.011208339563131046;  // std dev = 5.840, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.696502923965454
Refined model CLL: -0.650114


******************************************
Best model found
******************************************
Results 

CLL : -0.624157 

AUC ROC : 0.583872 

AUC PR : 0.41696 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1011.2400245666504 

Total Inference Time : 22.484737157821655 

Total revision time: 1040.2090647220612
Best scored revision CLL: -0.650114


Results 

CLL : -0.624157 

AUC ROC : 0.583872 

AUC PR : 0.41696 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1040.222636938095 

Total Inference Time : 22.484737157821655 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.072098970413208
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7711541652679443
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 829.1426491737366
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1887640315870394;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3250797676554729;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317653;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248209;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489874;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25823475432072773;  // std dev = 4.469, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3560556535131384;  // std dev = 4.466, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1045962743970368;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.048782996064003825;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010456166386326518;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894217;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051727;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.20248800519733207;  // std dev = 4.464, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2819162254289217;  // std dev = 4.465, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09797266390427664;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07410552729615988;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04066377358700955;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.186139961084003E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.41834438413173153;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.10683594804882221;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4003614913952201;  // std dev = 1.238, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1734019605018526;  // std dev = 6.162, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08401745024449463;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06487206449610225;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03458604127161586;  // std dev = 3.636, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -8.071159032256147E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08716328008135336;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08760503851479627;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.30748028609802114;  // std dev = 1.231, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1311318880155481;  // std dev = 6.161, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07862627315344224;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06992498305089324;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.027887835171470334;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -7.092116739770095E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06972212787326941;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06997336076946817;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06612975258493027;  // std dev = 4.428, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1449277969357145;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19359234116140908;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005420566134960599;  // std dev = 3.402, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.023172331577672726;  // std dev = 3.624, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -6.232301483426398E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05529225396582418;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.055393313185088645;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23771227349978244;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07016025268525113;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06205132406207019;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0015685979689786939;  // std dev = 8.012, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00849550850305123;  // std dev = 6.184, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13870009448574652;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.5570430539089388;  // std dev = 0.299, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29077921371835125;  // std dev = 2.028, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.006489041173430598;  // std dev = 5.582, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return 0.04376825776167443;  // std dev = 36.018, 5,657.000 (wgt'ed) examples reached here.  /* #neg=3,615 #pos=2,042 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06253072452897364;  // std dev = 3.493, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06534931081237381;  // std dev = 1.337, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002711124194976045;  // std dev = 7.954, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006686206520782838;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034109305962490906;  // std dev = 34.971, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.032688154597843994;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.017267205555604563;  // std dev = 4.417, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07855780894266035;  // std dev = 4.438, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.16072986557182034;  // std dev = 1.586, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -5.650586813030173E-4;  // std dev = 3.383, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0027605609811124534;  // std dev = 8.005, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006836545356654092;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
Inference time using transfer learning 2.11841082572937
Refined model CLL: -0.621281


******************************************
Best model found
******************************************
Results 

CLL : -0.826225 

AUC ROC : 0.502588 

AUC PR : 0.607357 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 829.1426491737366 

Total Inference Time : 21.273407459259033 

Total revision time: 856.857522726059
Best scored revision CLL: -0.621281


Results 

CLL : -0.826225 

AUC ROC : 0.502588 

AUC PR : 0.607357 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 856.8710949420929 

Total Inference Time : 21.273407459259033 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.603179454803467
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9011020660400391
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 550.7981152534485
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.37820522294572756;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5132324625059775;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3361094371388452;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23079568926986874;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3100575419241595;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5108485339810798;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19954315417467497;  // std dev = 6.332, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.05142434221559893;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150811;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.30272282338107814;  // std dev = 4.125, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.07971229972838861;  // std dev = 2.863, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1204890902009401;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.14746931239655675;  // std dev = 6.217, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.041621302877510966;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.07465821730094528;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510945;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09278777125827653;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.0773358341251961;  // std dev = 4.651, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.15800339833255833;  // std dev = 4.289, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034718743328304304;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01594824973596077;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027476;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07044822978428009;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.249465300552043;  // std dev = 1.203, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.0782706630297264;  // std dev = 6.202, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955342;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302797;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.053246971065538544;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03439270013815848;  // std dev = 4.636, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09988201142222553;  // std dev = 4.290, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02242976577421203;  // std dev = 7.498, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13251849744708535;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009773119313054714;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08564686162744155;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.4055677891229421;  // std dev = 1.270, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.010625855782919568;  // std dev = 4.828, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0394936951707353;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04438756263320019;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1322594524578573;  // std dev = 2.865, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.01541998406249602;  // std dev = 7.510, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08266117688328131;  // std dev = 0.949, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.0073580695658245;  // std dev = 5.329, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
Inference time using transfer learning 1.7886652946472168
Refined model CLL: -0.672948


******************************************
Best model found
******************************************
Results 

CLL : -0.604204 

AUC ROC : 0.560205 

AUC PR : 0.248617 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 550.7981152534485 

Total Inference Time : 4.298866033554077 

Total revision time: 559.926965713501
Best scored revision CLL: -0.672948


Results 

CLL : -0.604204 

AUC ROC : 0.560205 

AUC PR : 0.248617 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 559.9405379295349 

Total Inference Time : 4.298866033554077 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.512087106704712
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7763190269470215
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 968.3888731002808
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449204;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.015535706605315776;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03670557311714249;  // std dev = 6.441, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.38576443858749054;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.06533753364830068;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.15924878235830972;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.18448040073009384;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | then if ( haswordtitle(K, L), haswordauthor(M, L) )
%   | | | then return 0.010644622148773125;  // std dev = 7.704, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.08363628979995621;  // std dev = 3.724, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.04310626114926371;  // std dev = 6.520, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14923807476001671;  // std dev = 0.041, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.35423467042207113;  // std dev = 4.328, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.039684848715471864;  // std dev = 4.536, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.15142017115262718;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10982619545610221;  // std dev = 3.500, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06647402483783174;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.045094397450778194;  // std dev = 3.641, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.013288528025349104;  // std dev = 9.403, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12327073749997561;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09418662475129863;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05876275702066379;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.007488714507632091;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026186291971305304;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.6145910567545041;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3227763677549128;  // std dev = 2.188, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else return 0.09672657980907806;  // std dev = 0.488, 5,379.000 (wgt'ed) examples reached here.  /* #neg=3,270 #pos=2,109 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.09480253481859163;  // std dev = 3.482, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08171646913408859;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.004461251012677228;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.025645492900025907;  // std dev = 6.412, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.21645957016931872;  // std dev = 4.257, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.021328142329699054;  // std dev = 4.484, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.07724481461308035;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.20369826266930124;  // std dev = 1.572, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.012102981126194689;  // std dev = 3.397, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.004467627090756159;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020521539290155037;  // std dev = 6.415, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordauthor(E, F), haswordtitle(G, F) )
%   | | | then return 0.22103008600629692;  // std dev = 1.758, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.4677908979431044;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.05918165209546699;  // std dev = 0.487, 5,379.000 (wgt'ed) examples reached here.  /* #neg=3,270 #pos=2,109 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07216861014650033;  // std dev = 3.483, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.061972027757718685;  // std dev = 1.337, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.003879020098362992;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.017718251876648713;  // std dev = 6.415, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.4700125805638016;  // std dev = 0.225, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19219425213466976;  // std dev = 2.134, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | else return 0.04592045696651905;  // std dev = 0.487, 5,379.000 (wgt'ed) examples reached here.  /* #neg=3,270 #pos=2,109 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.0747989371785945;  // std dev = 3.465, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07755635886709748;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 4.6462707268889734E-4;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01898100423478867;  // std dev = 6.400, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03096301829680588;  // std dev = 34.201, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04334955990015821;  // std dev = 8.386, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11243816818901128;  // std dev = 4.675, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03751969228010613;  // std dev = 8.110, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.22395058211324823;  // std dev = 3.242, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.45100267210041495;  // std dev = 2.543, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02456836216807287;  // std dev = 6.481, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14375078349865575;  // std dev = 0.118, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4623761177062988
Refined model CLL: -0.63915


******************************************
Best model found
******************************************
Results 

CLL : -0.677526 

AUC ROC : 0.544832 

AUC PR : 0.460351 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 968.3888731002808 

Total Inference Time : 6.293545722961426 

Total revision time: 980.50572681427
Best scored revision CLL: -0.63915


Results 

CLL : -0.677526 

AUC ROC : 0.544832 

AUC PR : 0.460351 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 980.519299030304 

Total Inference Time : 6.293545722961426 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.924044132232666
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.6916053295135498
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1005.7736287117004
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533305;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03296064436529559;  // std dev = 8.057, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.001124201174823702;  // std dev = 5.550, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865122;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1548320326649641;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05687552734234235;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03183643007687077;  // std dev = 8.051, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00492430185864866;  // std dev = 5.548, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406567;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00985334107483642;  // std dev = 7.217, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07716868281817481;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 2.930632534404034E-6;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1445890022641478;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.113983410700292;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708752;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844144;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.007239593415673903;  // std dev = 7.209, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07590166990160795;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -9.859747181636205E-4;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12760799945107845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611811;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431229;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997694;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766637;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0529654367089146;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02293635649640117;  // std dev = 8.040, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004608950904390392;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816684;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090491;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158728;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441784;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.046936046242816915;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02006097547171491;  // std dev = 8.044, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.00478041541733743;  // std dev = 5.535, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.4169732855896338;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.023141484560311346;  // std dev = 4.595, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05643083141141802;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.08083962498766636;  // std dev = 6.493, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004219745764576301;  // std dev = 7.204, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.060050616225447814;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.002968546782441581;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11311872724850536;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.4002065185000649;  // std dev = 2.687, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.032866830899712006;  // std dev = 4.609, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.04394438517720813;  // std dev = 37.137, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.06130679691249355;  // std dev = 6.494, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.042243303157452554;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05832012200814927;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.012463647616087993;  // std dev = 9.612, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03500581784181032;  // std dev = 36.644, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.032540404867602686;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.009690062465740916;  // std dev = 4.636, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08019361020674316;  // std dev = 4.567, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0019656196611686715;  // std dev = 7.197, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05832046025343359;  // std dev = 3.916, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0050255966044819465;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1034071035366322;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 1.6770412921905518
Refined model CLL: -0.6354


******************************************
Best model found
******************************************
Results 

CLL : -0.751053 

AUC ROC : 0.633789 

AUC PR : 0.623037 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 1005.7736287117004 

Total Inference Time : 23.626139402389526 

Total revision time: 1035.633863210678
Best scored revision CLL: -0.6354


Results 

CLL : -0.751053 

AUC ROC : 0.633789 

AUC PR : 0.623037 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 1035.647435426712 

Total Inference Time : 23.626139402389526 

Run: 5

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.014629364013672
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.742694616317749
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1105.626834154129
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151715;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05742828982964905;  // std dev = 7.665, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.03017111190737738;  // std dev = 5.041, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675653;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13476937700759767;  // std dev = 3.364, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03284935612678095;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.029720486965848728;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436798;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903766;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973598;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13182164589385853;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08067015192563698;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04638358869390875;  // std dev = 3.519, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.025954567956928975;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083842;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.191254942105273;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.043651533862899265;  // std dev = 7.652, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.01097059843826397;  // std dev = 5.015, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.021645530173449154;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10236034504047295;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098666;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11082226745851505;  // std dev = 4.747, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20570300724483617;  // std dev = 3.883, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.108144207360155;  // std dev = 3.358, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07403558822757754;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.037413287727297385;  // std dev = 3.521, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.018579974185901717;  // std dev = 9.639, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245303;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0704347090770259;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.17049971170696065;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10183179280340938;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.016046733072380297;  // std dev = 8.486, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08199009112162396;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.019070399535967144;  // std dev = 5.768, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171407;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832345;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05154525878740754;  // std dev = 4.741, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1306517903817226;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08879154098094953;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06830898038860884;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014382551817564987;  // std dev = 8.428, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.015527003086180088;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126445;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715663;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.26893446870573434;  // std dev = 0.888, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05619091822473754;  // std dev = 6.038, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.012599805809521223;  // std dev = 8.371, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.05488528120467582;  // std dev = 3.620, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.10791916393394631;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.013375160650211316;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036494598551081905;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.033566779947413763;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.012265927990638005;  // std dev = 4.721, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09692400385502618;  // std dev = 3.856, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07507937716575298;  // std dev = 3.339, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05943029665663803;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.02000970791616557;  // std dev = 3.501, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.008990156395103846;  // std dev = 9.636, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
Inference time using transfer learning 1.746664047241211
Refined model CLL: -0.650481


******************************************
Best model found
******************************************
Results 

CLL : -0.624534 

AUC ROC : 0.582225 

AUC PR : 0.413948 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1105.626834154129 

Total Inference Time : 27.665432691574097 

Total revision time: 1139.6138899326324
Best scored revision CLL: -0.650481


Results 

CLL : -0.624534 

AUC ROC : 0.582225 

AUC PR : 0.413948 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1139.6276836395264 

Total Inference Time : 27.665432691574097 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.039850473403931
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7389888763427734
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 878.3359105587006
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.38901313263037696;  // std dev = 4.491, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.48605591184369906;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703942;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3264250864723836;  // std dev = 4.484, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.4239539507393851;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05972507874716161;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489894;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5340916763732723;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.29424249712368095;  // std dev = 6.185, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11331510605281292;  // std dev = 3.510, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08518211742079719;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0019283839831688335;  // std dev = 7.975, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007181037715835213;  // std dev = 6.121, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894186;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051702;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.20207204644279456;  // std dev = 4.463, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.28229519701401623;  // std dev = 4.465, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0960169341414725;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05507585797833431;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04201536487722276;  // std dev = 3.651, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015235202657690671;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933452;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842092;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1481963649069832;  // std dev = 4.459, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.22352638991234902;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.20524231671636226;  // std dev = 1.597, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.019901500885885923;  // std dev = 3.412, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03614281999875309;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013379808763708115;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0871167719635749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.360420514661336;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.12770068075037824;  // std dev = 6.152, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07584483063547179;  // std dev = 3.510, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05516566251403785;  // std dev = 1.337, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 2.9901735081825146E-4;  // std dev = 8.025, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005295212305889293;  // std dev = 6.054, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081806;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.271544526219837;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.09616148732929909;  // std dev = 6.151, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0860455456065775;  // std dev = 3.490, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.001916959683802256;  // std dev = 8.013, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006732621554223846;  // std dev = 6.188, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1408190093335382;  // std dev = 0.049, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644021;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.056130481945304234;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04763074299332092;  // std dev = 4.426, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11091223222151374;  // std dev = 4.445, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.013716459347479486;  // std dev = 7.434, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.010926387541345558;  // std dev = 4.622, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.005898374491642072;  // std dev = 6.188, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12464521525716196;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04352837330557883;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04415110446269599;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.21603639347889506;  // std dev = 1.224, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.050400727611730436;  // std dev = 6.140, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1689887205193303;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00913180768658477;  // std dev = 3.388, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0020209994118662723;  // std dev = 7.963, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.004853243530176273;  // std dev = 6.119, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034112634947024656;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03459452826638872;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.013105917551486263;  // std dev = 4.413, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07610091881529348;  // std dev = 4.440, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07339187634991465;  // std dev = 3.484, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08706862330768689;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02168215836706747;  // std dev = 3.601, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002078166515156224;  // std dev = 9.356, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning 2.354079484939575
Refined model CLL: -0.621817


******************************************
Best model found
******************************************
Results 

CLL : -0.826026 

AUC ROC : 0.505846 

AUC PR : 0.608624 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 878.3359105587006 

Total Inference Time : 24.020275831222534 

Total revision time: 908.7719304561615
Best scored revision CLL: -0.621817


Results 

CLL : -0.826026 

AUC ROC : 0.505846 

AUC PR : 0.608624 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 908.7857241630554 

Total Inference Time : 24.020275831222534 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.8409199714660645
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9220197200775146
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 573.1648187637329
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5132324625059774;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.33610943713884495;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5810113050866531;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2641964568897133;  // std dev = 6.342, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(A, I) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1670114403017262;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24441526213885137;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559869;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11563981496986837;  // std dev = 4.646, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1943013144190184;  // std dev = 4.288, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041033921494960136;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22840304079157903;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07342398208298012;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021515757896624955;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27757243920696656;  // std dev = 4.117, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.10907355050008091;  // std dev = 2.858, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09192763723756966;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.10715205689161837;  // std dev = 6.205, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03444964905968146;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971410384811948;  // std dev = 2.936, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.0753810403972603;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.019654783955741016;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07042122856815221;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.05744757676155819;  // std dev = 4.642, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.12075426666772233;  // std dev = 4.293, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026909504547361143;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1720922999304555;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06822949779761049;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013844095690902163;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05322640372862293;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.20259307653343858;  // std dev = 1.214, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.058730412106687044;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13649768473406623;  // std dev = 2.866, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021468038250928245;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.010039948414087896;  // std dev = 5.413, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08509700566691915;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.40564488550269345;  // std dev = 1.269, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.010422727247290986;  // std dev = 4.826, 102.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03948989265883845;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.044479782109512;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13150064833807829;  // std dev = 2.854, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.016415089503116265;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07209748393638349;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.010080272516432438;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.6088488101959229
Refined model CLL: -0.672928


******************************************
Best model found
******************************************
Results 

CLL : -0.604196 

AUC ROC : 0.560112 

AUC PR : 0.2486 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 573.1648187637329 

Total Inference Time : 4.344067811965942 

Total revision time: 582.6293663978577
Best scored revision CLL: -0.672928


Results 

CLL : -0.604196 

AUC ROC : 0.560112 

AUC PR : 0.2486 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 582.6431601047516 

Total Inference Time : 4.344067811965942 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.272256851196289
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7821948528289795
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 899.0849249362946
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4530856439602724;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.132658739021081;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.2510675953865885;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21825179463547345;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04143619913752222;  // std dev = 7.583, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.018417041611247763;  // std dev = 3.967, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.046685245907012715;  // std dev = 6.536, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14572811071849262;  // std dev = 0.035, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1844298456806199;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11171001420691422;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06404272054031941;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.01267523023374333;  // std dev = 7.773, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.032207120878679586;  // std dev = 6.444, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3148905616847196;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.05433699646543532;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.1517440978769802;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09593352431633138;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.056718875640008194;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.0489720961099779;  // std dev = 3.663, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.013590867272760893;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12324118123676744;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.004747541354225769;  // std dev = 7.707, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07878225753833064;  // std dev = 3.716, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.034440210319518876;  // std dev = 6.503, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1345516801967793;  // std dev = 0.083, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.41022219957180894;  // std dev = 2.304, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.05513186164331807;  // std dev = 5.733, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.09792761118409338;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -1.4415223457510574E-4;  // std dev = 7.665, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.08277541797440954;  // std dev = 3.727, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.032592168158296395;  // std dev = 6.530, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.11967539027198874;  // std dev = 0.075, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07741598993119125;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10613168533269025;  // std dev = 3.479, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.09488943146484556;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0012091291572556124;  // std dev = 7.754, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023203263704967947;  // std dev = 6.401, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060456351146253764;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09080279346593445;  // std dev = 3.477, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0821835337899697;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0010473338796296063;  // std dev = 7.754, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02007863015855632;  // std dev = 6.400, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0469022394006987;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.19891564588844265;  // std dev = 1.572, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.008957696168045579;  // std dev = 3.380, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 1.0699213945356199E-4;  // std dev = 7.756, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01811258275730794;  // std dev = 6.404, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030994298080748686;  // std dev = 34.244, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.045444278790056816;  // std dev = 8.396, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11339893271887619;  // std dev = 4.670, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03491373638346748;  // std dev = 8.102, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.2228653356740479;  // std dev = 3.240, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4531336550384307;  // std dev = 2.548, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0228552553215911;  // std dev = 6.492, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.11152147847528376;  // std dev = 0.073, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4037549495697021
Refined model CLL: -0.640097


******************************************
Best model found
******************************************
Results 

CLL : -0.677765 

AUC ROC : 0.542624 

AUC PR : 0.456943 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 899.0849249362946 

Total Inference Time : 6.0788044929504395 

Total revision time: 910.7959895133972
Best scored revision CLL: -0.640097


Results 

CLL : -0.677765 

AUC ROC : 0.542624 

AUC PR : 0.456943 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 910.8097832202911 

Total Inference Time : 6.0788044929504395 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.221011400222778
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7305107116699219
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1157.202887058258
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533316;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907925;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03153053866875632;  // std dev = 8.067, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return 8.241136034949785E-4;  // std dev = 5.541, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651227;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496434;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04741720871610842;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.029362744821874613;  // std dev = 8.058, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0018793157558519486;  // std dev = 5.550, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406575;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010214372198185823;  // std dev = 7.223, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07711677799104616;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -7.456900824385912E-4;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14198425645101723;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029196;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708755;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488155;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844163;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00893137957966696;  // std dev = 7.223, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06686886345131698;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -6.509082179828874E-4;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12555005579251877;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611815;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431225;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997691;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766592;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.07431788989788678;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02435416072953063;  // std dev = 8.038, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004146884588542923;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816677;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090491;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158736;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441793;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04743620466508384;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.064812053005635;  // std dev = 1.658, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.015608747234897295;  // std dev = 9.618, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05748051249156735;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05333152949010164;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946222;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0029744897491175075;  // std dev = 7.198, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06903722139071446;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004210041412369757;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11355027551122462;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04499836200047489;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.042030807820199904;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03195107228254381;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817374;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05782163077045665;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.018018503777640135;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.005552782603158445;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03506142140915398;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03272200386618078;  // std dev = 8.219, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.016733153509168184;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07331717420310024;  // std dev = 4.560, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05104974920775728;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01629289468134541;  // std dev = 8.033, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return -0.006552988232589795;  // std dev = 5.533, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
Inference time using transfer learning 1.749570608139038
Refined model CLL: -0.636745


******************************************
Best model found
******************************************
Results 

CLL : -0.75223 

AUC ROC : 0.639629 

AUC PR : 0.639825 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1157.202887058258 

Total Inference Time : 28.444450616836548 

Total revision time: 1192.1943848133087
Best scored revision CLL: -0.636745


Results 

CLL : -0.75223 

AUC ROC : 0.639629 

AUC PR : 0.639825 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1192.2081785202026 

Total Inference Time : 28.444450616836548 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.977867364883423
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7464804649353027
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 996.7623610496521
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04368829719016249;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690136;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4393880538727892;  // std dev = 1.963, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.18576455810474907;  // std dev = 37.926, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.409605459669476;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13750710216629658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07786764027423052;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.052694590022659825;  // std dev = 3.529, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.030722231617226495;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15480115263444982;  // std dev = 37.055, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1357288653159277;  // std dev = 8.355, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903783;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973599;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11690579829576976;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.028559721378394073;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026422875570003532;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11362258592065529;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1252659395889596;  // std dev = 37.053, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.10922249334604668;  // std dev = 8.361, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19125494210527283;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11422528040923788;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07161836295141108;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.033200738507367426;  // std dev = 3.515, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.023174879522365036;  // std dev = 9.640, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09973751232413551;  // std dev = 37.052, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08750539274540481;  // std dev = 8.362, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11082226745851521;  // std dev = 4.747, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20570300724483612;  // std dev = 3.883, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09457205521358544;  // std dev = 3.349, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02076660896784418;  // std dev = 8.488, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01918408682892997;  // std dev = 5.928, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10333124413705798;  // std dev = 0.029, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07850386330462844;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06850789928699288;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07043470907702593;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1704997117069606;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09329251000528456;  // std dev = 3.349, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06556946427529833;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01668468699894717;  // std dev = 8.477, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.018963131249250125;  // std dev = 5.774, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06120547171879313;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.053827700885552776;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2877330134633448;  // std dev = 0.892, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07732256489387863;  // std dev = 6.045, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07649148071183573;  // std dev = 3.340, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01464933370872381;  // std dev = 8.481, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10784246765320944;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.0156437718804619;  // std dev = 5.847, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.5468455280402034;  // std dev = 0.264, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.20098975361750054;  // std dev = 2.143, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.01772514691722475;  // std dev = 6.100, 162.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=61 */
%   | | | else return 0.04751765505796768;  // std dev = 37.903, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,593 #pos=2,422 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07878213173968301;  // std dev = 3.333, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.05829046914774361;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.005366358465488545;  // std dev = 3.496, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.012864752975979353;  // std dev = 9.639, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036555126706044716;  // std dev = 37.039, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03023825002123744;  // std dev = 8.373, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.26344644895804203;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04364559025394355;  // std dev = 6.031, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.026929817067515696;  // std dev = 7.623, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.008673452524517346;  // std dev = 4.981, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.08588691650302306;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014293914902675968;  // std dev = 5.765, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning 1.687540054321289
Refined model CLL: -0.650094


******************************************
Best model found
******************************************
Results 

CLL : -0.623927 

AUC ROC : 0.585993 

AUC PR : 0.418278 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 996.7623610496521 

Total Inference Time : 23.222285270690918 

Total revision time: 1026.2617564201355
Best scored revision CLL: -0.650094


Results 

CLL : -0.623927 

AUC ROC : 0.585993 

AUC PR : 0.418278 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1026.3113086223602 

Total Inference Time : 23.222285270690918 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.9228527545928955
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7878570556640625
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 851.7536902427673
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703933;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3250797676554728;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317664;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05972507874716161;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06486143067461063;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002023530754329154;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748987;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.25823475432072773;  // std dev = 4.469, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.35605565351313845;  // std dev = 4.466, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11967205735959609;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0790632182576007;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04734808232173593;  // std dev = 3.638, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001776418755588994;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.131365980298942;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1338033667505171;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4566733222366558;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.22980630946181263;  // std dev = 6.174, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10375804508590272;  // std dev = 3.507, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06909236069048685;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 7.655092227653255E-4;  // std dev = 7.971, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006145624310958605;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933427;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842078;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.14646806234495327;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2252808712262613;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08889150237777879;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.060826971616041926;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04063288840443408;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019032556640804534;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357488;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.30834104836927334;  // std dev = 1.231, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1310631308907138;  // std dev = 6.161, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08394062439431878;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0668301922478171;  // std dev = 1.366, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0012274424687865938;  // std dev = 7.963, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006997945239207839;  // std dev = 6.121, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081788;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06636107970281388;  // std dev = 4.428, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14468839201103179;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19931174398132853;  // std dev = 1.583, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.013405886692006808;  // std dev = 3.404, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.027946741428515075;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019027743169720483;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644007;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530426;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2367111853231531;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07021383163121361;  // std dev = 6.146, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07041883462764671;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06133531640065825;  // std dev = 1.340, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.02382508832953211;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0016705635564271588;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3875875341701136;  // std dev = 2.082, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return 0.006440891389099301;  // std dev = 5.582, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.043289235370918284;  // std dev = 35.490, 5,500.000 (wgt'ed) examples reached here.  /* #neg=3,547 #pos=1,953 */
%   | | | else return 0.05274320003814119;  // std dev = 6.146, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1893932073635092;  // std dev = 1.578, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 6.45417891039306E-4;  // std dev = 3.392, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002455727196556704;  // std dev = 7.957, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006582040159749031;  // std dev = 6.116, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03416606622264327;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.032954168577396754;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.014872832794126038;  // std dev = 4.416, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07667690137076148;  // std dev = 4.438, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05920107618688789;  // std dev = 3.482, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07101264709127583;  // std dev = 1.341, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.021734285810891693;  // std dev = 3.611, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015879521618011245;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning 2.4037115573883057
Refined model CLL: -0.621446


******************************************
Best model found
******************************************
Results 

CLL : -0.826157 

AUC ROC : 0.502497 

AUC PR : 0.607153 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 851.7536902427673 

Total Inference Time : 21.397162675857544 

Total revision time: 879.3975021839142
Best scored revision CLL: -0.621446


Results 

CLL : -0.826157 

AUC ROC : 0.502497 

AUC PR : 0.607153 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 879.4470543861389 

Total Inference Time : 21.397162675857544 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.566352367401123
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.894233226776123
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 686.9953308105469
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5132324625059775;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.33610943713884517;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5810113050866531;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.26419645688971344;  // std dev = 6.342, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.1670114403017262;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24441526213885104;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559874;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.027832149581508134;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11563981496986828;  // std dev = 4.646, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1943013144190184;  // std dev = 4.288, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751087;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426377;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094524;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510924;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08601219245271391;  // std dev = 4.639, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.14684118075245192;  // std dev = 4.294, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034718743328304505;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01594824973596078;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027478;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.23368144881934896;  // std dev = 1.182, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07846385306584913;  // std dev = 6.200, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955308;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188575;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302783;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05327696275075745;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.03432756527215346;  // std dev = 4.629, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09902989395174906;  // std dev = 4.286, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1368243325647753;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.02157735807032237;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06923665802894201;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012802064843005875;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040154893573991046;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.02543475419668508;  // std dev = 4.629, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.0759466142771867;  // std dev = 4.287, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.017516466578412004;  // std dev = 7.483, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12729908192503678;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006633248604405744;  // std dev = 5.414, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08535272928885211;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.5239715576171875
Refined model CLL: -0.674054


******************************************
Best model found
******************************************
Results 

CLL : -0.605657 

AUC ROC : 0.557607 

AUC PR : 0.246183 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 686.9953308105469 

Total Inference Time : 4.209152698516846 

Total revision time: 696.0961542129517
Best scored revision CLL: -0.674054


Results 

CLL : -0.605657 

AUC ROC : 0.557607 

AUC PR : 0.246183 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 696.1457064151764 

Total Inference Time : 4.209152698516846 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.474445819854736
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8230733871459961
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 856.6437242031097
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18446442968974686;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09942490398628517;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05504701669119267;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.04985386106469921;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01707792693870001;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15231694286666383;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.2117289276839391;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0195296670071615;  // std dev = 3.413, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.010758032301708008;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02991599493989972;  // std dev = 6.449, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12334450536867779;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07904688747321773;  // std dev = 3.508, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05593596108774766;  // std dev = 1.338, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.03940206045741992;  // std dev = 3.670, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01275125279201619;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.29963997899528955;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.020786925943901333;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.09762193042160681;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0022212817050007876;  // std dev = 7.702, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07779921320616989;  // std dev = 3.725, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03313326252956364;  // std dev = 6.492, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1590286658926297;  // std dev = 0.122, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.27498474927222744;  // std dev = 4.325, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.03821537788874222;  // std dev = 4.549, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.07671033072486713;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10155325018324571;  // std dev = 3.478, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.10446591675932172;  // std dev = 1.368, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0038990523011303998;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020841656018504285;  // std dev = 6.398, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E) )
%   | | | then return 0.3729264507415132;  // std dev = 2.292, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.023719924233454478;  // std dev = 5.825, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.05989808766700008;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( author(I, H), venue(I, B) )
%   | | | then return 0.17656363208100212;  // std dev = 1.580, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00428641223307627;  // std dev = 3.377, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.012934350759676656;  // std dev = 8.461, 505.000 (wgt'ed) examples reached here.  /* #neg=418 #pos=87 */
%   | | | else return 0.0026151355773235234;  // std dev = 5.487, 223.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04687103836240978;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.05744870238456241;  // std dev = 3.482, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0585042755259965;  // std dev = 1.310, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 9.383363048306956E-4;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020565196245177383;  // std dev = 6.424, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030949259123046836;  // std dev = 34.234, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.044503868061429724;  // std dev = 8.380, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11293664288248537;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03593808618057412;  // std dev = 8.115, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.22711096950733006;  // std dev = 3.241, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4537129660319894;  // std dev = 2.549, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02460452490666565;  // std dev = 6.501, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14214414302212705;  // std dev = 0.122, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.2920780181884766
Refined model CLL: -0.640063


******************************************
Best model found
******************************************
Results 

CLL : -0.677753 

AUC ROC : 0.544891 

AUC PR : 0.460049 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 856.6437242031097 

Total Inference Time : 6.811881065368652 

Total revision time: 869.2303967475891
Best scored revision CLL: -0.640063


Results 

CLL : -0.677753 

AUC ROC : 0.544891 

AUC PR : 0.460049 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 869.2799489498138 

Total Inference Time : 6.811881065368652 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.206702709197998
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.724937915802002
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1128.4233222007751
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533294;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907925;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.014080153338777867;  // std dev = 7.226, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08413167004780364;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0027510083643892246;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14211285473534627;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865122;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1548320326649644;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972296;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0663708377176686;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05568717074276106;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.0233305106464342;  // std dev = 9.630, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1396752450040656;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1835423643603244;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.049244877568506706;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.058221183265013875;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02038339111529725;  // std dev = 9.630, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1139834107002918;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708752;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844124;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010038456482966569;  // std dev = 7.216, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06810392129633334;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.0027877759651035844;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1305334873439921;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611797;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431242;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997698;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766648;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.03873394504712067;  // std dev = 6.061, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.0026590630420688286;  // std dev = 5.537, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0024297155640791122;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11641938172835374;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816677;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090501;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158724;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441782;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(A, K) )
%   | | | then return 0.03361585325274564;  // std dev = 6.061, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.0023200083053777675;  // std dev = 5.537, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0021182114998408432;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10496809799671582;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.057480512491567305;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05333152949010136;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04401048386508491;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946219;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005576551725705341;  // std dev = 7.213, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.04851043830876269;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.001847074839441446;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09550734878599945;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.40448748754744573;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.03567455178980741;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.044006202294617915;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.061055417872812136;  // std dev = 6.486, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return -4.936805760433625E-4;  // std dev = 7.195, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06567693729237135;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.13036594994649325;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.0018522635527810818;  // std dev = 5.532, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0350176091435946;  // std dev = 36.674, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03287794756966619;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01712329675363258;  // std dev = 4.636, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.0731501060577751;  // std dev = 4.566, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05906435159327896;  // std dev = 0.272, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.052949741475907815;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.012021176806726422;  // std dev = 9.605, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
Inference time using transfer learning 1.726008415222168
Refined model CLL: -0.636035


******************************************
Best model found
******************************************
Results 

CLL : -0.751567 

AUC ROC : 0.635571 

AUC PR : 0.628637 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1128.4233222007751 

Total Inference Time : 26.235108137130737 

Total revision time: 1161.186122894287
Best scored revision CLL: -0.636035


Results 

CLL : -0.751567 

AUC ROC : 0.635571 

AUC PR : 0.628637 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1161.2356750965118 

Total Inference Time : 26.235108137130737 

Run: 2

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.04200553894043
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7307446002960205
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1129.0804414749146
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.043688297190162616;  // std dev = 8.421, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.08180409716690137;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267565;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.409605459669476;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13750710216629658;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07786764027423053;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0344730757439094;  // std dev = 8.438, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.030307509037482104;  // std dev = 5.853, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1546464444443679;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903766;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03205080553104158;  // std dev = 8.406, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.0717050534379611;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.026712042566051288;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11310454482878504;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083846;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.45876476685087614;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19126976018982184;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11399487162699586;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07066485473978906;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.044448139278396706;  // std dev = 3.526, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.021908239070929973;  // std dev = 9.638, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151821;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098651;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11011378719134576;  // std dev = 4.742, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2065682212062339;  // std dev = 3.887, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10855491525424542;  // std dev = 3.350, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019130427610727502;  // std dev = 8.486, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07780714558054892;  // std dev = 1.351, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022232066988903725;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245307;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.35203811203408975;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10388076509176025;  // std dev = 6.048, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09181850437534038;  // std dev = 3.349, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.016448525176872036;  // std dev = 8.485, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017629464397402424;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10311462640326488;  // std dev = 0.027, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171424;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832414;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04147681777623719;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1428561547083397;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03243653707588603;  // std dev = 7.639, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.004192279449148874;  // std dev = 4.989, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015173712564612491;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09396575275707177;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047327940801264436;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.043536294977156664;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.029142666825031038;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11112844339940178;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08655967897979806;  // std dev = 3.344, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.010556501492508816;  // std dev = 8.477, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.11768691695504005;  // std dev = 0.948, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.014253887598264162;  // std dev = 5.837, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108176;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0335667799474137;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.24038195318056957;  // std dev = 0.880, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.0410689080927033;  // std dev = 6.026, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07213358210707531;  // std dev = 3.343, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.009021959052749644;  // std dev = 8.477, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.101202884943513;  // std dev = 0.948, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.012269144849715152;  // std dev = 5.837, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.8052949905395508
Refined model CLL: -0.650424


******************************************
Best model found
******************************************
Results 

CLL : -0.62431 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1129.0804414749146 

Total Inference Time : 27.679272651672363 

Total revision time: 1163.1202063560486
Best scored revision CLL: -0.650424


Results 

CLL : -0.62431 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1163.1432592868805 

Total Inference Time : 27.679272651672363 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.981616258621216
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7744913101196289
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 974.8365767002106
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004584387893347046;  // std dev = 8.054, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006937862435151973;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703925;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5861333969918011;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36327055714680573;  // std dev = 6.203, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12730486140002475;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0701388309589216;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002676222005399689;  // std dev = 8.041, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006082028716741425;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748988;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2566020382312614;  // std dev = 4.462, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.35738676387641305;  // std dev = 4.468, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1110285663202679;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061698320402801335;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002346551564061833;  // std dev = 8.041, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.0053363745312062704;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894203;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051716;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19096925128064166;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29270920720177146;  // std dev = 4.457, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1106669948109255;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0637268403635253;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0469616221741325;  // std dev = 3.638, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0029371664924775468;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933435;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842081;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.34790872593639915;  // std dev = 1.236, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1768400985004482;  // std dev = 6.171, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09529754623881471;  // std dev = 3.505, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.056333681376126904;  // std dev = 1.366, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04055989185999516;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0025766843213364883;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3975528370337433;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.08621086450593571;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10009855544125376;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1809720996042175;  // std dev = 4.451, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0833824861605686;  // std dev = 3.499, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06652668345503754;  // std dev = 1.367, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03856412264767485;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0022610663328706724;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06973692973978092;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06966778847424313;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06665792392048307;  // std dev = 4.429, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14441647403549482;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19554006644084476;  // std dev = 1.583, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.008868401430607815;  // std dev = 3.402, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.033122806406489645;  // std dev = 3.626, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019845866135586765;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.055304381790686086;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.055143504686288;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.23916527247200642;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07006170670295105;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06598389894048325;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06390567808811946;  // std dev = 1.340, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.028340370531962932;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017422824772336373;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04356744966586779;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04336124044956995;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.2921568340667134;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.056158602435457027;  // std dev = 6.265, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, A) )
%   | | | then return 0.16392137843995808;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00179601848222232;  // std dev = 3.385, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0020530252478410146;  // std dev = 7.959, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006436773464588154;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03414684934743539;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.033926075724730685;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.014150713191714053;  // std dev = 4.416, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07541349033009066;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19170900253357104;  // std dev = 1.577, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.003459189601610514;  // std dev = 3.388, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.015005353147605467;  // std dev = 3.604, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0016735559811681703;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning 2.355837821960449
Refined model CLL: -0.621605


******************************************
Best model found
******************************************
Results 

CLL : -0.826149 

AUC ROC : 0.506468 

AUC PR : 0.609512 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 974.8365767002106 

Total Inference Time : 22.087126970291138 

Total revision time: 1003.1969571113586
Best scored revision CLL: -0.621605


Results 

CLL : -0.826149 

AUC ROC : 0.506468 

AUC PR : 0.609512 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 1003.2200100421906 

Total Inference Time : 22.087126970291138 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.539463520050049
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8808355331420898
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 667.9647121429443
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6984459746020693;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3400192693747403;  // std dev = 6.348, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23228051201687622;  // std dev = 4.662, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30843319502714456;  // std dev = 4.299, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16705344961592364;  // std dev = 4.650, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2442572865968671;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559858;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820737;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150812;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1254005574844129;  // std dev = 4.649, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1840701450166467;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041621302877510806;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2283906622842639;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094525;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510945;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.2685525638743186;  // std dev = 1.190, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.10667029006574406;  // std dev = 6.205, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830458;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960787;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027477;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.2346163399025755;  // std dev = 1.187, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07844025780086741;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026593228785955346;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302784;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05327696275075745;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.034616969655635633;  // std dev = 4.630, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09877907960928571;  // std dev = 4.286, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13682433256477536;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021577358070322353;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06923665802894201;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012802064843005858;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.22119588996748832;  // std dev = 4.121, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.16478521352417333;  // std dev = 2.838, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.039231798688960276;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04326403333687546;  // std dev = 6.195, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.017516466578412025;  // std dev = 7.483, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12729908192503678;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.006633248604405755;  // std dev = 5.414, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.0853527292888521;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.5982446670532227
Refined model CLL: -0.673345


******************************************
Best model found
******************************************
Results 

CLL : -0.604198 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 667.9647121429443 

Total Inference Time : 4.338261842727661 

Total revision time: 677.1253852844238
Best scored revision CLL: -0.673345


Results 

CLL : -0.604198 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 677.1484382152557 

Total Inference Time : 4.338261842727661 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.384758710861206
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7512722015380859
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 864.8400132656097
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449201;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05627664105721549;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18446442968974686;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10835398529614791;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06961459904338328;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.048772904158197836;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01707792693870001;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15231694286666383;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09281951314054318;  // std dev = 3.504, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06139008364309996;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.010671482760621753;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02977272744014408;  // std dev = 6.436, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12334450536867779;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09806612862917007;  // std dev = 3.490, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08095950234723914;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.007891124095858858;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02649592805660626;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.29963997899528955;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.020786925943901333;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.09762193042160681;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08339489660418344;  // std dev = 3.488, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07079880946541435;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006869032989765538;  // std dev = 7.778, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022980053671954416;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2749847492722275;  // std dev = 4.325, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.03821537788874209;  // std dev = 4.549, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.07671033072486688;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 1.1351475522950481E-4;  // std dev = 7.676, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07644591351380314;  // std dev = 3.731, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.030301568478366434;  // std dev = 6.490, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1596082680249569;  // std dev = 0.115, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.5732616978166809;  // std dev = 2.11e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.2885747677624955;  // std dev = 2.191, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.02371992423345444;  // std dev = 5.825, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | | else return 0.05989808766700006;  // std dev = 35.279, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordtitle(L, K) )
%   | | | then return 0.07219672533774786;  // std dev = 3.483, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05935626142981528;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.003239872262280727;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01814851842978012;  // std dev = 6.406, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04686592859315791;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.1985407864298196;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 9.990946529536387E-4;  // std dev = 3.377, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.00281054651115534;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015646058636493633;  // std dev = 6.405, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.030906677379905132;  // std dev = 34.230, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.043070137130763735;  // std dev = 8.390, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11312724378371054;  // std dev = 4.675, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03665536430681431;  // std dev = 8.111, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.06696983248072579;  // std dev = 7.104, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.1037243684438179;  // std dev = 1.686, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.45557716079267957;  // std dev = 2.555, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.14253659522043918;  // std dev = 0.118, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.3088910579681396
Refined model CLL: -0.640021


******************************************
Best model found
******************************************
Results 

CLL : -0.67806 

AUC ROC : 0.543659 

AUC PR : 0.458635 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 864.8400132656097 

Total Inference Time : 6.475046396255493 

Total revision time: 876.9530766010284
Best scored revision CLL: -0.640021


Results 

CLL : -0.67806 

AUC ROC : 0.543659 

AUC PR : 0.458635 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 876.9761295318604 

Total Inference Time : 6.475046396255493 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.06062912940979
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7594029903411865
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1110.0776748657227
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533305;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05353224823028762;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.03153053866875628;  // std dev = 8.067, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return 8.241136034949667E-4;  // std dev = 5.541, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.30064202036403054;  // std dev = 1.729, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1671806224070303;  // std dev = 37.571, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.36538039098940905;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011074185795563579;  // std dev = 7.222, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07974346360908241;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.002759826125214896;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1422133576581236;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13977190160827793;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12648107333047426;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032448;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.00819678484190868;  // std dev = 7.217, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07911243123217218;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0013173552286222037;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12573134027071317;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11411070551999605;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10277226757047024;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488146;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844124;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06953954442711723;  // std dev = 1.659, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.025352564138217928;  // std dev = 8.042, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0011516916523219313;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11254829852844518;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0917815989054978;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08302579417280202;  // std dev = 8.214, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997691;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766629;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.006667730197893123;  // std dev = 7.210, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06524029603464303;  // std dev = 3.921, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.00170859157273033;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10178744722220766;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07301088484387032;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06573912686517693;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158724;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441782;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0644954326446334;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.053474691387640834;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.015860781508220918;  // std dev = 9.613, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.05754297270468734;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05210799909720416;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946208;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.047368699591900876;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.0566567472922418;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.013781270351597536;  // std dev = 9.613, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.045066331046883255;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04069466816338491;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03195107228254379;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817362;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.050066178139669244;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.017732834294915036;  // std dev = 8.031, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006335890335751312;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03510308449476155;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03189681431117709;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.016733153509168184;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07331717420310016;  // std dev = 4.560, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04374321772711709;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.017749648512668352;  // std dev = 8.029, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.009923272462552079;  // std dev = 5.538, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.6796870231628418
Refined model CLL: -0.636703


******************************************
Best model found
******************************************
Results 

CLL : -0.751396 

AUC ROC : 0.642609 

AUC PR : 0.645862 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1110.0776748657227 

Total Inference Time : 27.52307367324829 

Total revision time: 1143.9595789909363
Best scored revision CLL: -0.636703


Results 

CLL : -0.751396 

AUC ROC : 0.642609 

AUC PR : 0.645862 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1143.9826319217682 

Total Inference Time : 27.52307367324829 

Run: 3

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.059950113296509
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7419817447662354
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1041.3548789024353
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151715;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14131665839554822;  // std dev = 3.366, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03792704271485758;  // std dev = 8.509, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675667;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13590836049502245;  // std dev = 3.360, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07762444073070456;  // std dev = 1.361, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05197889587174917;  // std dev = 3.525, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.030925716345782013;  // std dev = 9.646, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1546464444443679;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903758;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973598;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.0471259817754259;  // std dev = 7.652, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.01656853713912257;  // std dev = 5.020, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02738032547534355;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11362342782584063;  // std dev = 0.018, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083828;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1611617916810754;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.25581663152892165;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04293752676986629;  // std dev = 7.652, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.011410731798663037;  // std dev = 5.019, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.022475038005997823;  // std dev = 5.923, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10267477156978944;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098659;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4136148104086191;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14073340693244185;  // std dev = 6.058, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10684713157634533;  // std dev = 3.355, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019814692605858945;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07669711116153319;  // std dev = 1.347, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021221753284373916;  // std dev = 5.767, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245292;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.35159899143938156;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1039139586886236;  // std dev = 6.048, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10568441861659542;  // std dev = 3.350, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07753752264019607;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.028718504796416636;  // std dev = 3.502, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.01576142338902543;  // std dev = 9.638, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0611081476617142;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05571808877883232;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04153381569571975;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14280526817604033;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08596174043540088;  // std dev = 3.345, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.014003505932970384;  // std dev = 8.486, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10177843086522069;  // std dev = 0.948, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.015005744304142055;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047327940801264394;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715656;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.25295676843416653;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05689354188133383;  // std dev = 6.035, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08968016970503682;  // std dev = 3.334, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06842603254779271;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011182125074618;  // std dev = 8.471, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.013114115359823098;  // std dev = 5.773, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.036494598551081836;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03356677994741374;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012552690277232579;  // std dev = 4.714, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.096478913917015;  // std dev = 3.857, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07489674681059902;  // std dev = 3.333, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06043743573985995;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.009477617595417235;  // std dev = 8.423, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.011346306354167043;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.7283167839050293
Refined model CLL: -0.650441


******************************************
Best model found
******************************************
Results 

CLL : -0.624385 

AUC ROC : 0.582221 

AUC PR : 0.415051 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1041.3548789024353 

Total Inference Time : 27.791382789611816 

Total revision time: 1075.5488784313202
Best scored revision CLL: -0.650441


Results 

CLL : -0.624385 

AUC ROC : 0.582221 

AUC PR : 0.415051 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1075.5716598033905 

Total Inference Time : 27.791382789611816 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.981074333190918
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7855126857757568
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 966.5504384040833
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43131966680682676;  // std dev = 6.334, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703928;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32707187705684776;  // std dev = 4.484, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42326701029401653;  // std dev = 4.471, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248213;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489894;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5076785126518801;  // std dev = 1.224, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2958905147589285;  // std dev = 6.196, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10459627439703682;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.048782996064003846;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010456166386326518;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1313659802989418;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1338033667505171;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19351326071458613;  // std dev = 4.460, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29025754890501504;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08966093877419803;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.059296028226868;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04217331271291287;  // std dev = 3.651, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.186139961084003E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1077230198093345;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842078;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1471220761366239;  // std dev = 4.455, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.22469922259939845;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.20126106400581997;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.01463940309194308;  // std dev = 3.410, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0011171883514413767;  // std dev = 8.028, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006260901563742467;  // std dev = 6.053, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357487;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.2959371431538943;  // std dev = 1.217, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.13190054468993095;  // std dev = 6.170, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09130886719693757;  // std dev = 3.496, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0818074915811392;  // std dev = 1.368, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02797450576406041;  // std dev = 3.618, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011806230657955673;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081802;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0708104284025158;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.28354821033279753;  // std dev = 1.206, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.09552148848187672;  // std dev = 6.157, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07753881318025198;  // std dev = 3.495, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0016358137117293775;  // std dev = 8.014, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007973440276053153;  // std dev = 6.185, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1398820749382279;  // std dev = 0.018, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644019;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05613048194530421;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04065207965315776;  // std dev = 4.428, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11784312724648882;  // std dev = 4.440, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06626098442585028;  // std dev = 3.498, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06179733893768241;  // std dev = 1.337, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.02085428244122892;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010462685044244158;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0435283733055788;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04415110446269598;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2039464255548938;  // std dev = 1.206, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05134034840102517;  // std dev = 6.147, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.16357344404960197;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0026412288265740057;  // std dev = 3.386, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.017688830927545217;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.191900930415682E-4;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.369970767004433;  // std dev = 2.094, 24.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | else return -0.0029516852067530785;  // std dev = 5.582, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.03386566851316617;  // std dev = 35.490, 5,500.000 (wgt'ed) examples reached here.  /* #neg=3,547 #pos=1,953 */
%   | | | else return 0.038965127478540404;  // std dev = 6.148, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.05876827644806418;  // std dev = 3.482, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.002298634382149991;  // std dev = 8.005, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.006041345542768711;  // std dev = 6.189, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12345152685654133;  // std dev = 0.028, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
Inference time using transfer learning 2.27223801612854
Refined model CLL: -0.621436


******************************************
Best model found
******************************************
Results 

CLL : -0.826255 

AUC ROC : 0.502497 

AUC PR : 0.607153 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 966.5504384040833 

Total Inference Time : 20.295804738998413 

Total revision time: 993.1017944812775
Best scored revision CLL: -0.621436


Results 

CLL : -0.826255 

AUC ROC : 0.502497 

AUC PR : 0.607153 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 993.1245758533478 

Total Inference Time : 20.295804738998413 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.610703706741333
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8565988540649414
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 665.551764011383
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.51313373820162;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.33611531358553315;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5810353256529529;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2641958358309171;  // std dev = 6.342, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1666854607548882;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2447561390122285;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0514243422155986;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.11596030658343279;  // std dev = 4.646, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.19396662147540986;  // std dev = 4.288, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04103392149496015;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22840304079157905;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07342398208298012;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021515757896624955;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2775833729700615;  // std dev = 4.117, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.1090724073733167;  // std dev = 2.858, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09192763723756966;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.10714674165729121;  // std dev = 6.204, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03444964905968144;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971410384811948;  // std dev = 2.936, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.0753810403972603;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01965478395574103;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07042118336181084;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.21936839990985552;  // std dev = 1.217, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.08059444823280192;  // std dev = 6.205, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026909504547361126;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1720922999304555;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06822949779761045;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013844095690902189;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05322636939230782;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03484135038398349;  // std dev = 4.637, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.10020334369484808;  // std dev = 4.290, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13649768473406637;  // std dev = 2.866, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.02146803825092819;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.010039948414087896;  // std dev = 5.413, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08509700566691916;  // std dev = 0.021, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040119384824033405;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.017795860836284906;  // std dev = 4.632, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.0851445315639353;  // std dev = 4.286, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.017238751000876944;  // std dev = 7.483, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1274464532390392;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07209748393638349;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.010080272516432419;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.7151148319244385
Refined model CLL: -0.673343


******************************************
Best model found
******************************************
Results 

CLL : -0.604136 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 665.551764011383 

Total Inference Time : 4.176899194717407 

Total revision time: 674.6296017169952
Best scored revision CLL: -0.673343


Results 

CLL : -0.604136 

AUC ROC : 0.558096 

AUC PR : 0.246388 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 674.6523830890656 

Total Inference Time : 4.176899194717407 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.418672323226929
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.799098014831543
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 822.0661408901215
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.018505282538265628;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.04094463402424335;  // std dev = 6.456, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.8246556810121737;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.40360304943322656;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else return 0.2167359933379358;  // std dev = 0.488, 5,379.000 (wgt'ed) examples reached here.  /* #neg=3,270 #pos=2,109 */
%   | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.12800246769009246;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07644847710697814;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.014740337475085448;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.036952367991686434;  // std dev = 6.442, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18443316523915174;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11129332679128007;  // std dev = 3.503, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06707326593972926;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.05194611120504533;  // std dev = 3.649, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.016315986876149487;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15229315324475232;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10447893825138711;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07449107166568607;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.010616755031744833;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02868035335174717;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12332832813097284;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09200195781872998;  // std dev = 3.492, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0633661152908007;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.008059411484859889;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026021069863677252;  // std dev = 6.428, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09833046319725566;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08592659190483083;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06928879574438519;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.006949466046499685;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022197849523696987;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07746821919013225;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20302827299286408;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.006930140543261548;  // std dev = 3.396, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.029391720744792557;  // std dev = 3.616, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.008759024735398436;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.24689884662248857;  // std dev = 4.278, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.06580873322848504;  // std dev = 4.452, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.06013573537443288;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.0686806464189851;  // std dev = 3.477, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06703472991351336;  // std dev = 1.340, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.004811630971702793;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01724147801703855;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04689288288044827;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.20062699615803564;  // std dev = 1.558, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0017462795068636375;  // std dev = 3.383, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.0020086541186064076;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.016719393431664797;  // std dev = 6.408, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03100516136622901;  // std dev = 34.259, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.045552390618400704;  // std dev = 8.387, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11306816066436565;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03692366957065394;  // std dev = 8.109, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.2267522380267334;  // std dev = 3.240, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.452574248043265;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.023267591720023927;  // std dev = 6.474, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1659362221435322;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.515221118927002
Refined model CLL: -0.640617


******************************************
Best model found
******************************************
Results 

CLL : -0.678028 

AUC ROC : 0.542582 

AUC PR : 0.457281 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 822.0661408901215 

Total Inference Time : 5.616815567016602 

Total revision time: 833.3831624984741
Best scored revision CLL: -0.640617


Results 

CLL : -0.678028 

AUC ROC : 0.542582 

AUC PR : 0.457281 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 833.4059438705444 

Total Inference Time : 5.616815567016602 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.284795045852661
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7029774188995361
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1156.91858959198
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533297;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0134154052712285;  // std dev = 7.224, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08491618937816585;  // std dev = 3.923, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0036432205636573053;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1453387087638741;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651222;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496473;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.055647818185142535;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.055102718005339016;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.022694570011461405;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406536;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04921156537568642;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.028027911008278304;  // std dev = 8.048, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004943514555415166;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1139834107002912;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708748;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1412868163248816;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844135;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010099421953202773;  // std dev = 7.216, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06803592712565962;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0028639084922482145;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.13019610637379553;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09170385491611797;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0845360523843122;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997694;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.1854670900076666;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.038760104013530805;  // std dev = 6.061, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.00261957046623098;  // std dev = 5.538, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0024959274720222054;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11614823911317752;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816682;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090504;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158728;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04880085143635463;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.020250175008980572;  // std dev = 8.038, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004487055398685597;  // std dev = 5.542, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.057480512491567534;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.053331529490101504;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946219;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03192094534192688;  // std dev = 6.058, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.0017053912765518898;  // std dev = 5.537, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0046371039297587475;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10432586380686427;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.044998362000474586;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.042030807820200015;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0319510722825438;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817373;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.061672330466428796;  // std dev = 0.272, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01905474812861446;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006945945239392375;  // std dev = 5.537, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03506142140915401;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03272200386618058;  // std dev = 8.219, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.016733153509168194;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07331717420310026;  // std dev = 4.560, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.05239370284156707;  // std dev = 1.655, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.016190174568497057;  // std dev = 8.031, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0031391943655245647;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09437670453688374;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 1.7710611820220947
Refined model CLL: -0.636736


******************************************
Best model found
******************************************
Results 

CLL : -0.751697 

AUC ROC : 0.639547 

AUC PR : 0.639803 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1156.91858959198 

Total Inference Time : 28.547746181488037 

Total revision time: 1192.0525569915771
Best scored revision CLL: -0.636736


Results 

CLL : -0.751697 

AUC ROC : 0.639547 

AUC PR : 0.639803 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1192.0753383636475 

Total Inference Time : 28.547746181488037 

Run: 4

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.24440336227417
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7476058006286621
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1025.1392447948456
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.038139440494516626;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.035795635786599146;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267565;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40960545966947615;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03711211154702536;  // std dev = 8.412, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07693231806277194;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.031226012289467052;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436798;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309696;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903763;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03171176966373864;  // std dev = 8.409, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07208194380010913;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.02638082006689724;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.6940002417232961;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3317163407222326;  // std dev = 2.161, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.12348371480823789;  // std dev = 37.902, 6,009.000 (wgt'ed) examples reached here.  /* #neg=3,632 #pos=2,377 */
%   | | | else return 0.1978087020390192;  // std dev = 6.156, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.11427650035411346;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.022788639547069972;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.022850953096008358;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0997099385197471;  // std dev = 37.047, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08770734189916292;  // std dev = 8.361, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11237654050848597;  // std dev = 4.760, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2046344580213535;  // std dev = 3.886, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11030317670505334;  // std dev = 3.357, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01839275634937107;  // std dev = 8.489, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0191750776598518;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07848150275857428;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06868870051772835;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07177141710544849;  // std dev = 4.749, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.16951117333092292;  // std dev = 3.875, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.0342524514276337;  // std dev = 7.642, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.002008762053752222;  // std dev = 5.009, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0165222277928575;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.061188396169044756;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05397263774292767;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32841033345842374;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.0755561295272287;  // std dev = 6.046, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08925659262323603;  // std dev = 3.352, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.013569781242006522;  // std dev = 8.488, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01196604542274766;  // std dev = 5.930, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.07324622576333704;  // std dev = 3.73e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04741502222812233;  // std dev = 37.044, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04171218812229516;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.030762960044478246;  // std dev = 4.740, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.10949297779134955;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07450797606771536;  // std dev = 3.352, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.011620569181026563;  // std dev = 8.488, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.1081037900554391;  // std dev = 0.956, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.013671854857825965;  // std dev = 5.840, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03654864141075398;  // std dev = 37.044, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.032416631315174846;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.23827140088054322;  // std dev = 0.881, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.04130014693533021;  // std dev = 6.039, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09031006679755539;  // std dev = 3.338, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.09288882979805103;  // std dev = 1.368, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00800660467560586;  // std dev = 8.466, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.01431919684871719;  // std dev = 5.768, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning 1.7510943412780762
Refined model CLL: -0.650242


******************************************
Best model found
******************************************
Results 

CLL : -0.624042 

AUC ROC : 0.583483 

AUC PR : 0.417111 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1025.1392447948456 

Total Inference Time : 25.50313401222229 

Total revision time: 1057.240231513977
Best scored revision CLL: -0.650242


Results 

CLL : -0.624042 

AUC ROC : 0.583483 

AUC PR : 0.417111 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1057.2629554271698 

Total Inference Time : 25.50313401222229 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.8993754386901855
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7775523662567139
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 825.6353423595428
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43131966680682676;  // std dev = 6.334, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703936;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5738588241704818;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36404583875914304;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248215;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067012;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748989;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2573673546891605;  // std dev = 4.468, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3565968211842242;  // std dev = 4.463, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10459627439703681;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.0017388388470989113;  // std dev = 8.039, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009345128964586134;  // std dev = 6.180, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1411379214179515;  // std dev = 0.002, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894192;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1338033667505171;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19352357429218908;  // std dev = 4.460, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2902875841255672;  // std dev = 4.453, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1035000077837996;  // std dev = 3.510, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06721007502832631;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.03866888558351641;  // std dev = 3.640, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013696051400872492;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6782462365861;  // std dev = 0.258, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4207758858915918;  // std dev = 2.002, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.10649233819653604;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.1823381838384832;  // std dev = 6.302, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.08422515063936487;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07206525315036082;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 5.093538717550824E-4;  // std dev = 7.970, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007427404579413642;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.32531622104304736;  // std dev = 1.984, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.08642679201840385;  // std dev = 35.921, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10234345840231318;  // std dev = 4.448, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1786397291330148;  // std dev = 4.448, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08858889493153195;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061197499132794785;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0016106385202263288;  // std dev = 7.961, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006173657622672424;  // std dev = 6.118, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.069753747686326;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06897539041399502;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06948100733307594;  // std dev = 4.448, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1416754904871956;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07507783752310108;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05420482776752557;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.026438091238143627;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001749164942610831;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05532345602305825;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0545470372949805;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.25305890056656277;  // std dev = 1.203, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.06918398287074712;  // std dev = 6.152, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1943101709528329;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.006719660641222937;  // std dev = 3.388, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02251069936888105;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0015358873589304451;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.043585228792243025;  // std dev = 34.972, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04288898463155123;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.19080652534339865;  // std dev = 1.204, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05220950610668944;  // std dev = 6.153, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05881320172347161;  // std dev = 3.495, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05297264151418844;  // std dev = 1.339, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.01911534726651315;  // std dev = 3.626, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0013488350183781072;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034165237955654;  // std dev = 34.971, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03351721565587505;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.17634801639906947;  // std dev = 1.203, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.037457997224044644;  // std dev = 6.148, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06025384644880295;  // std dev = 3.481, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0758534127526174;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0037295241782661346;  // std dev = 7.953, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.008140065388208833;  // std dev = 6.111, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning 2.1715199947357178
Refined model CLL: -0.621309


******************************************
Best model found
******************************************
Results 

CLL : -0.826088 

AUC ROC : 0.506161 

AUC PR : 0.608825 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 825.6353423595428 

Total Inference Time : 19.404234409332275 

Total revision time: 851.2507586479187
Best scored revision CLL: -0.621309


Results 

CLL : -0.826088 

AUC ROC : 0.506161 

AUC PR : 0.608825 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 851.2734825611115 

Total Inference Time : 19.404234409332275 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.719592332839966
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9057049751281738
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 616.8025982379913
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.47682880772073083;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.30731711772328363;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3865845097881263;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23066939715587162;  // std dev = 4.657, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30994712392327534;  // std dev = 4.308, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5489266171835913;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19885698018452486;  // std dev = 6.327, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.05142434221559874;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06821007189820738;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150811;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.30683567789883004;  // std dev = 4.117, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.07778638872937292;  // std dev = 2.877, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1204890902009401;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.14507100658382804;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0416213028775109;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426375;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09335578437677157;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2731581811117205;  // std dev = 4.079, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.09636507716121291;  // std dev = 2.956, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0918560576787553;  // std dev = 33.093, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.10726490453501814;  // std dev = 6.205, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03471874332830437;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0150425973740627;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08574930983290485;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07034554590805407;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.24654864208364097;  // std dev = 1.253, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.08063402682862753;  // std dev = 6.205, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026099268429186806;  // std dev = 7.505, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1719399697169538;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06681747987124335;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014621132872864054;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.053172850723219506;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.03554584794171421;  // std dev = 4.642, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.10175855887431011;  // std dev = 4.299, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1368908149276319;  // std dev = 2.865, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.02157194387156432;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.009043549461090653;  // std dev = 5.420, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.0791675792140107;  // std dev = 0.019, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04008208460043669;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.1991024463082503;  // std dev = 1.226, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.04275432314650601;  // std dev = 6.198, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1305063169768983;  // std dev = 2.858, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.015975120567581956;  // std dev = 7.515, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0923555107034875;  // std dev = 0.945, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.00791843396103154;  // std dev = 5.327, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
Inference time using transfer learning 1.5222632884979248
Refined model CLL: -0.672711


******************************************
Best model found
******************************************
Results 

CLL : -0.60276 

AUC ROC : 0.55965 

AUC PR : 0.247039 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 616.8025982379913 

Total Inference Time : 4.533740520477295 

Total revision time: 626.4424295425415
Best scored revision CLL: -0.672711


Results 

CLL : -0.60276 

AUC ROC : 0.55965 

AUC PR : 0.247039 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 626.4651534557343 

Total Inference Time : 4.533740520477295 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.338317632675171
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7645523548126221
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 933.7789170742035
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4530856439602724;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.132658739021081;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.2510675953865885;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21825179463547356;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.1844298456806199;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11767149769024589;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08788879413761608;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.012866519535122726;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03272964550999359;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15229035135400862;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09553515798730457;  // std dev = 3.502, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.059531232184166276;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.010057372635391124;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.030045760497052095;  // std dev = 6.437, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12332626295192295;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.081085806089617;  // std dev = 3.501, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05290416479856551;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.008768574718856446;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026119396994685903;  // std dev = 6.436, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2561299207941254;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.003408660672275416;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.09779629457251786;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.09454195758680199;  // std dev = 3.482, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08507005836659041;  // std dev = 1.369, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.006227896450669681;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022835507682812832;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.27183795105523567;  // std dev = 4.296, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.035624031585354245;  // std dev = 4.583, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.03920290890083562;  // std dev = 5.704, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.07778712989528909;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.08020476858230724;  // std dev = 3.481, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07417487954267903;  // std dev = 1.368, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.005414643431543623;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01975581420352874;  // std dev = 6.412, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060401362130802584;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0016783807688223857;  // std dev = 7.667, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07600415495124518;  // std dev = 3.733, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.027665870990986705;  // std dev = 6.488, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16231151078781572;  // std dev = 0.131, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordvenue(A, E) )
%   | | | then return 0.35962596107954314;  // std dev = 2.273, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.010194567169551586;  // std dev = 5.826, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.046324743849461225;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | then if ( haswordauthor(H, I), haswordtitle(J, I) )
%   | | | then return 0.06507182663086034;  // std dev = 3.471, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.064847898173256;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0013458703177141385;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.018304826192516933;  // std dev = 6.404, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.03087003694278759;  // std dev = 34.214, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04450251736361549;  // std dev = 8.389, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11301407740115989;  // std dev = 4.675, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03680093913501239;  // std dev = 8.111, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.2284832869967027;  // std dev = 3.236, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4570228054966612;  // std dev = 2.560, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02382377531150922;  // std dev = 6.484, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14306783849716945;  // std dev = 0.130, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4773430824279785
Refined model CLL: -0.639558


******************************************
Best model found
******************************************
Results 

CLL : -0.677574 

AUC ROC : 0.543712 

AUC PR : 0.458842 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 933.7789170742035 

Total Inference Time : 6.14444637298584 

Total revision time: 945.5421049594879
Best scored revision CLL: -0.639558


Results 

CLL : -0.677574 

AUC ROC : 0.543712 

AUC PR : 0.458842 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 945.5648288726807 

Total Inference Time : 6.14444637298584 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.208498477935791
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.6943602561950684
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 897.9905548095703
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533305;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01408015333877784;  // std dev = 7.226, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08413167004780364;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0027510083643892246;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14211285473534627;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651225;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1548320326649644;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06637083771766858;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.030817106258793078;  // std dev = 8.049, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0016902463891608121;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1396752450040655;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008420771579378662;  // std dev = 7.214, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07848518521315014;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0012548140304437612;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12546624155873398;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029172;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708756;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488158;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844135;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05986441190320011;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05982470649118071;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.019189215724268967;  // std dev = 9.621, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.2281084052826149;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.4357791751928058;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09068670108632819;  // std dev = 37.541, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.1418527056509817;  // std dev = 6.545, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.052737739383662954;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.05277118456139995;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.01671349873784031;  // std dev = 9.620, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07300286372927403;  // std dev = 36.699, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06579282616736208;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06067932412913756;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15032151880898117;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04674243850412128;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.046770900615577336;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.014530217532696517;  // std dev = 9.620, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.41553714195275954;  // std dev = 2.696, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.031403627647336424;  // std dev = 4.541, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0565765200595658;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.08091853910951358;  // std dev = 6.500, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004906526123800168;  // std dev = 7.203, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.062054086731446655;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0048741802441766595;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11746194762437659;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.3985856128510091;  // std dev = 2.683, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.04061522114336189;  // std dev = 4.556, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.044088691932271794;  // std dev = 37.137, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.061242097765630374;  // std dev = 6.500, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.0030423069052306997;  // std dev = 7.197, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.061388119715371614;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005171025409280504;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10582171612643575;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.30556435293532647;  // std dev = 2.682, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.03169849284863175;  // std dev = 4.556, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.0343565433877554;  // std dev = 37.136, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.04616807981473071;  // std dev = 6.500, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.042881436013765976;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.04294013254661078;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.010546791958835093;  // std dev = 9.609, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
Inference time using transfer learning 1.6425807476043701
Refined model CLL: -0.634892


******************************************
Best model found
******************************************
Results 

CLL : -0.751739 

AUC ROC : 0.634084 

AUC PR : 0.621944 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 897.9905548095703 

Total Inference Time : 18.583818912506104 

Total revision time: 923.1080856323242
Best scored revision CLL: -0.634892


Results 

CLL : -0.751739 

AUC ROC : 0.634084 

AUC PR : 0.621944 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 923.130809545517 

Total Inference Time : 18.583818912506104 

Run: 5

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.049675941467285
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.70751953125
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 1132.0846846103668
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4723963623785732;  // std dev = 1.967, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.22007296189803768;  // std dev = 37.927, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03813944049451679;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3936572986787242;  // std dev = 1.966, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.1858886222941638;  // std dev = 37.927, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03711211154702526;  // std dev = 8.412, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07693231806277176;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.031226012289466983;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1550326349032294;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13097892618678517;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903777;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189736;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11884093411175968;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.0279283081154165;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0263808200668972;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.12541354214437017;  // std dev = 37.049, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.10620630457003254;  // std dev = 8.360, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16116179168107528;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2558166315289217;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11443001711808966;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.0226476997268841;  // std dev = 8.492, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.022846008361108894;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09992995056485163;  // std dev = 37.047, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08370374228572175;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.10960654337929138;  // std dev = 4.757, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20708374981303304;  // std dev = 3.877, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02183639091864056;  // std dev = 8.391, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.06468601363399225;  // std dev = 3.624, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.07260102307338477;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02248924098884472;  // std dev = 5.769, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.07861972595092456;  // std dev = 37.047, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06623150781276303;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.3776149864265999;  // std dev = 0.891, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10267733367002761;  // std dev = 6.045, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09388718222127201;  // std dev = 3.354, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.016054454406393328;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10515630357113503;  // std dev = 0.956, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.018913804912583126;  // std dev = 5.844, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06134153823588851;  // std dev = 37.046, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05119504225784753;  // std dev = 8.371, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.32859468583488005;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.07531533486234061;  // std dev = 6.034, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09403000568147689;  // std dev = 3.340, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.012287488381073745;  // std dev = 8.482, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11547502138304296;  // std dev = 0.952, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.017409584791011876;  // std dev = 5.840, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04751392754078401;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03994318158802089;  // std dev = 8.372, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.2513868295748327;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.056949720490486085;  // std dev = 6.035, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07969423740341063;  // std dev = 3.336, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.010573421878811023;  // std dev = 8.479, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07740344010295204;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.016389420843977952;  // std dev = 5.766, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03665467910823292;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.030481793913209414;  // std dev = 8.375, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.012638724395408937;  // std dev = 4.714, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09634244740516584;  // std dev = 3.858, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07683915155138972;  // std dev = 3.331, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.008029949210383242;  // std dev = 8.475, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06803318337545036;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013698632372401685;  // std dev = 5.766, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning 1.6484019756317139
Refined model CLL: -0.650198


******************************************
Best model found
******************************************
Results 

CLL : -0.62425 

AUC ROC : 0.58309 

AUC PR : 0.415283 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1132.0846846103668 

Total Inference Time : 24.44965362548828 

Total revision time: 1162.8838062286377
Best scored revision CLL: -0.650198


Results 

CLL : -0.62425 

AUC ROC : 0.58309 

AUC PR : 0.415283 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1162.9063296318054 

Total Inference Time : 24.44965362548828 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.91316819190979
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7877607345581055
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 968.2924716472626
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703928;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32507976765547286;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317653;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248221;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748988;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2582347543207278;  // std dev = 4.469, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3560556535131383;  // std dev = 4.466, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10459627439703681;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0025760352738960954;  // std dev = 8.036, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006588670209165306;  // std dev = 6.051, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894195;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051713;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4566733222366558;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.22980630946181269;  // std dev = 6.174, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10389293187462344;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06914428273873549;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 8.146878776669538E-4;  // std dev = 7.971, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006031399466483718;  // std dev = 6.122, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933428;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842084;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1464680623449533;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2252808712262613;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08946126992324085;  // std dev = 3.506, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061312345156491185;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0401931431048585;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018868973388992366;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3975528370337433;  // std dev = 2.002, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.08621086450593592;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.30834104836927334;  // std dev = 1.231, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.13106313089071392;  // std dev = 6.161, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08334370185665008;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.066370155880435;  // std dev = 1.366, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -6.0796819108479E-4;  // std dev = 7.964, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006021831095673028;  // std dev = 6.121, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06973692973978095;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.06966778847424318;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06636107970281395;  // std dev = 4.428, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14468839201103165;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07590598866326015;  // std dev = 3.498, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.001207005770626052;  // std dev = 8.018, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007450492947003522;  // std dev = 6.181, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13794363996209177;  // std dev = 0.029, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05530438179068588;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.055143504686288085;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.048117011187115165;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11038611061832221;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19418570230758292;  // std dev = 1.580, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00888409484283164;  // std dev = 3.400, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02439840354609449;  // std dev = 3.619, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019150184969895226;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04356744966586787;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04336124044956995;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.029712031270511967;  // std dev = 4.424, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.08909608865291285;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06547418769478026;  // std dev = 3.490, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06319686533926895;  // std dev = 1.340, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.020757635721757064;  // std dev = 3.618, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0016813073100889646;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.034146849347435275;  // std dev = 34.985, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.03392607572473082;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.020961858259001747;  // std dev = 4.423, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.06846724416086324;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.05464212182109424;  // std dev = 3.489, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05589573510119507;  // std dev = 1.341, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0029052896208176335;  // std dev = 8.006, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006507176737142322;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
Inference time using transfer learning 2.3280441761016846
Refined model CLL: -0.621609


******************************************
Best model found
******************************************
Results 

CLL : -0.826001 

AUC ROC : 0.506621 

AUC PR : 0.609549 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 968.2924716472626 

Total Inference Time : 21.255653858184814 

Total revision time: 995.7982995510101
Best scored revision CLL: -0.621609


Results 

CLL : -0.826001 

AUC ROC : 0.506621 

AUC PR : 0.609549 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 995.8208229541779 

Total Inference Time : 21.255653858184814 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.606085777282715
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8757588863372803
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 590.0493614673615
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3073171177232837;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3865845097881263;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23066939715587154;  // std dev = 4.657, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.30994712392327534;  // std dev = 4.308, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.3806505105719601;  // std dev = 1.227, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1942871802269228;  // std dev = 6.210, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559869;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.30277479885430086;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.07490975033145345;  // std dev = 2.899, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.1204890902009401;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.1462087795974448;  // std dev = 6.209, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.04103392149496014;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22840304079157903;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09277790244884798;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08530820317795139;  // std dev = 4.644, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.15032154794574254;  // std dev = 4.309, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034213083150765225;  // std dev = 7.529, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797175400585821;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.015042597374062692;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0704404963096088;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.27133863305894523;  // std dev = 1.221, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07724998456051504;  // std dev = 6.197, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026161070506565427;  // std dev = 7.505, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1721803758904671;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07792878242720494;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01564205293366738;  // std dev = 5.241, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05324098610740424;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.03331212546384354;  // std dev = 4.635, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.10136249378224882;  // std dev = 4.291, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.022041371738243973;  // std dev = 7.501, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1326213515729251;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07934944324624664;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014293238860480369;  // std dev = 5.241, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.04013036009621523;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.3575925840922742;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.04530045266189286;  // std dev = 6.303, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordauthor(I, G) )
%   | | | then return 0.13257746998975367;  // std dev = 2.865, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.015550089066091174;  // std dev = 7.510, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | | then return -0.08234665910991915;  // std dev = 0.951, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.007055101331022765;  // std dev = 5.330, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
Inference time using transfer learning 1.5115571022033691
Refined model CLL: -0.673358


******************************************
Best model found
******************************************
Results 

CLL : -0.604191 

AUC ROC : 0.558189 

AUC PR : 0.246405 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 590.0493614673615 

Total Inference Time : 4.327913522720337 

Total revision time: 599.3629984855652
Best scored revision CLL: -0.673358


Results 

CLL : -0.604191 

AUC ROC : 0.558189 

AUC PR : 0.246405 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 599.3855218887329 

Total Inference Time : 4.327913522720337 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.468535661697388
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7914578914642334
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 893.7147572040558
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.015619748472025229;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03687359988470556;  // std dev = 6.453, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18446442968974686;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09942490398628517;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05504701669119267;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.0529835572278066;  // std dev = 3.670, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01669422515309434;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15231694286666383;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return 0.0076278802544101675;  // std dev = 7.710, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.08167793998495765;  // std dev = 3.723, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.03884907771672278;  // std dev = 6.503, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.15332994710342374;  // std dev = 0.093, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12334450536867779;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20922179517637185;  // std dev = 1.591, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.01663603124159325;  // std dev = 3.401, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.006962781012382865;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.028876046731555378;  // std dev = 6.443, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.29963997899528955;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.020786925943901333;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.09762193042160681;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10902195269062895;  // std dev = 3.481, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.09626335446385648;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.004726420837208214;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02379444779976906;  // std dev = 6.406, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07743938303463965;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -9.345062762070259E-4;  // std dev = 7.664, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07784654041902986;  // std dev = 3.731, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.030731216936556262;  // std dev = 6.509, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1389558530991825;  // std dev = 0.082, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0604658985795851;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09076522694778914;  // std dev = 3.473, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08391495585182729;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 4.937782554298932E-4;  // std dev = 7.759, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.021471003707769755;  // std dev = 6.400, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04690231406252063;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.0035730949528934484;  // std dev = 7.662, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.06815330035055561;  // std dev = 3.731, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.02577456279814689;  // std dev = 6.491, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.12459378246517687;  // std dev = 0.081, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.030956405853686166;  // std dev = 34.278, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04334271986000613;  // std dev = 8.379, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11346437590822404;  // std dev = 4.671, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03486652896107068;  // std dev = 8.109, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.0663507685120077;  // std dev = 7.118, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.1057329685260226;  // std dev = 1.684, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.45609968788651367;  // std dev = 2.558, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.11166001359061632;  // std dev = 0.074, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.287919282913208
Refined model CLL: -0.640998


******************************************
Best model found
******************************************
Results 

CLL : -0.678337 

AUC ROC : 0.541519 

AUC PR : 0.454419 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 893.7147572040558 

Total Inference Time : 5.5525453090667725 

Total revision time: 905.0271916389465
Best scored revision CLL: -0.640998


Results 

CLL : -0.678337 

AUC ROC : 0.541519 

AUC PR : 0.454419 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 905.0497150421143 

Total Inference Time : 5.5525453090667725 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.142818927764893
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.801105260848999
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'author(C, A), author(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'author(A, C), author(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- author(C, A), author(C, B).;true;true
1;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
2;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
3;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
4;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
5;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
6;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
7;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
8;;samevenue(A, B) :- author(A, C), author(B, C).;true;true
9;;samevenue(A, B) :- author(A, C), author(B, C).;true;true


Refining candidate
***************************
Model training time 907.4593124389648
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( author(C, A), author(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.22710819619137584;  // std dev = 37.572, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.19824447642459914;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.18034215864680464;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011891393393414438;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0862077043203286;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.004983742099648497;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16823049603213028;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15203964224960684;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06474094755843035;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.029253790847881777;  // std dev = 8.049, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 7.88429556475548E-4;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13976813892818155;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12655794032952677;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1835423643603244;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.056860818271318156;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0255909437878857;  // std dev = 8.056, 450.000 (wgt'ed) examples reached here.  /* #neg=371 #pos=79 */
%   | | | else return 5.821172213550136E-5;  // std dev = 5.536, 245.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11410639824176584;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1028591731962569;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1412868163248816;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2302435168284414;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0711792778202207;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05023775324994821;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.019272601363219916;  // std dev = 9.621, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.2006940067291064;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.43591188068320197;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09074160257661919;  // std dev = 37.541, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.1418527056509817;  // std dev = 6.545, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then return -0.062217961308848116;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | | then return -0.044612575193155965;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.016787118844322158;  // std dev = 9.621, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0730734981421041;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06438113022697312;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06067932412913761;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15032151880898117;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.039791427483499356;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.0207065477200515;  // std dev = 8.040, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006546480352394846;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41437157684600856;  // std dev = 2.692, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.033636345763667905;  // std dev = 4.536, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.056621666075862054;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.08091040807480294;  // std dev = 6.500, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005516427328582082;  // std dev = 7.206, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06186995790803974;  // std dev = 3.916, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005771332751427967;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11537911437830371;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0451305934029654;  // std dev = 36.667, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.038690528885088095;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.025100856629932066;  // std dev = 4.640, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09429934789467223;  // std dev = 4.573, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05743148158070986;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01941332301353353;  // std dev = 8.029, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008190065953150681;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( author(A, C), author(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3872801359742676;  // std dev = 2.680, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.05267376752936904;  // std dev = 4.550, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.034238563653826694;  // std dev = 37.136, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.046277975639566725;  // std dev = 6.493, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.03819858938194566;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.01644843000840693;  // std dev = 8.030, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008334774838795456;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.4891295433044434
Refined model CLL: -0.635279


******************************************
Best model found
******************************************
Results 

CLL : -0.750519 

AUC ROC : 0.638262 

AUC PR : 0.626991 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 907.4593124389648 

Total Inference Time : 19.166916370391846 

Total revision time: 933.1392459869385
Best scored revision CLL: -0.635279


Results 

CLL : -0.750519 

AUC ROC : 0.638262 

AUC PR : 0.626991 

Precision : 0.828571 

Recall : 0.052727 

F1 : 0.099145 

Total Learning Time : 933.1617693901062 

Total Inference Time : 19.166916370391846 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.119825601577759
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7609386444091797
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1096.9373223781586
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.038139440494516744;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267566;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12414864300004128;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03325401102763189;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03122601228946699;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1546464444443678;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2127671555190377;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735995;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11908733057402583;  // std dev = 3.356, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.027779231969854323;  // std dev = 8.494, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.026371161776164703;  // std dev = 5.929, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802828;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083828;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.4590666853235596;  // std dev = 0.901, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1912549421052729;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026179938841979444;  // std dev = 8.393, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.06831786073509802;  // std dev = 3.624, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.07034535483845095;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.025606608078599945;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151821;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098749;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11082226745851516;  // std dev = 4.747, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20570300724483617;  // std dev = 3.883, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.022221025297550254;  // std dev = 8.388, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.06474649054584973;  // std dev = 3.624, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.07373931963297002;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022185413527395895;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245315;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07043470907702588;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.17049971170696065;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09408087904855604;  // std dev = 3.354, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.016090901978276596;  // std dev = 8.486, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10549666654284305;  // std dev = 0.953, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.01914095685164537;  // std dev = 5.842, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.061108147661714296;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832345;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.05154525878740746;  // std dev = 4.741, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.13065179038172256;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09436747665919189;  // std dev = 3.338, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.0804653091392266;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0224896166420934;  // std dev = 3.498, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.013934038685742974;  // std dev = 9.636, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04732794080126436;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715646;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.312178871999583;  // std dev = 0.881, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05406849352319891;  // std dev = 6.025, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07905578656645731;  // std dev = 3.337, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07044716222661321;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.01183453780903631;  // std dev = 8.423, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.01450846268913627;  // std dev = 5.842, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108176;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.033566779947413763;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.012630330787168933;  // std dev = 4.719, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09640344662974215;  // std dev = 3.851, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.02681534443139974;  // std dev = 7.620, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.00841266660458136;  // std dev = 4.992, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07158481538784478;  // std dev = 1.351, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01327456291151521;  // std dev = 5.766, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning 1.6680092811584473
Refined model CLL: -0.650434


******************************************
Best model found
******************************************
Results 

CLL : -0.624444 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1096.9373223781586 

Total Inference Time : 27.206008195877075 

Total revision time: 1130.6026453971863
Best scored revision CLL: -0.650434


Results 

CLL : -0.624444 

AUC ROC : 0.582517 

AUC PR : 0.41513 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1130.6190249919891 

Total Inference Time : 27.206008195877075 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.824641704559326
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7378437519073486
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 816.4764039516449
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.43131966680682676;  // std dev = 6.334, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.025981102931679878;  // std dev = 6.320, 286.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=48 */
%   | | | else return 0.008650607340314613;  // std dev = 6.183, 299.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=45 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.00966408661466345;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1887640315870394;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5738588241704818;  // std dev = 1.233, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.36404583875914304;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12515123991236143;  // std dev = 3.522, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06698129233448344;  // std dev = 1.358, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06374349288486873;  // std dev = 3.666, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0027577881818405757;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748988;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2573673546891605;  // std dev = 4.468, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3565968211842242;  // std dev = 4.463, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10896459309544185;  // std dev = 3.522, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.059061253792489866;  // std dev = 1.359, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0017239317396781908;  // std dev = 8.049, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006637440764596023;  // std dev = 6.046, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.7140831353402209;  // std dev = 0.215, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4482763309323716;  // std dev = 2.003, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.13016530926290873;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.23845619544385074;  // std dev = 6.316, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.1171615040573023;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07785905101453461;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.04577214836812492;  // std dev = 3.634, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.002859115514677447;  // std dev = 9.362, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10774607205528391;  // std dev = 34.979, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10884791350983598;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1378357032164439;  // std dev = 4.455, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.23333355549756976;  // std dev = 4.445, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.015318006067606024;  // std dev = 7.452, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.00391254576985943;  // std dev = 4.669, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.007915913603889907;  // std dev = 6.182, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12375908812870948;  // std dev = 0.013, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.08714528965010206;  // std dev = 34.979, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08789322340366293;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10245579543749431;  // std dev = 4.448, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.17884100025548555;  // std dev = 4.448, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08565983489225407;  // std dev = 3.512, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.058481412838823625;  // std dev = 1.358, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04726031880117368;  // std dev = 3.648, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.003469050564294377;  // std dev = 9.359, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06970936649013262;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07019016062445786;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.27372760761360254;  // std dev = 1.203, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.09613814600203029;  // std dev = 6.162, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09506970653132457;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07410232840217157;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0028553973385027635;  // std dev = 7.963, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0059336577805767085;  // std dev = 6.112, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05528252892540358;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05557090974312522;  // std dev = 8.470, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04128233201737766;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11730846370592891;  // std dev = 4.437, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07284894305833785;  // std dev = 3.503, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.002097758197459659;  // std dev = 8.027, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.006352424085336986;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1097072077480938;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.4781297168749286;  // std dev = 0.257, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2756755873116623;  // std dev = 2.004, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.04252632386771921;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.057417052827817644;  // std dev = 6.278, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.013973578526490981;  // std dev = 7.449, 410.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=67 */
%   | | | else return -0.016222182250205;  // std dev = 4.616, 175.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=26 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.005562824318117504;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.09944410894295974;  // std dev = 0.018, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.2023302356387949;  // std dev = 1.969, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.03358754378358199;  // std dev = 35.917, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.17106984326386804;  // std dev = 1.202, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.03750181105953504;  // std dev = 6.152, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07922310648883368;  // std dev = 3.494, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06509129306901272;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.004499337936813653;  // std dev = 8.010, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005674040468411788;  // std dev = 6.038, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
Inference time using transfer learning 2.0459256172180176
Refined model CLL: -0.621212


******************************************
Best model found
******************************************
Results 

CLL : -0.825591 

AUC ROC : 0.506185 

AUC PR : 0.609451 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 816.4764039516449 

Total Inference Time : 18.098392248153687 

Total revision time: 840.7201294898987
Best scored revision CLL: -0.621212


Results 

CLL : -0.825591 

AUC ROC : 0.506185 

AUC PR : 0.609451 

Precision : 0.75 

Recall : 0.038911 

F1 : 0.073983 

Total Learning Time : 840.7365090847015 

Total Inference Time : 18.098392248153687 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.487199544906616
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8805389404296875
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 596.7670783996582
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3073171177232837;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3865845097881263;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.4391504244376175;  // std dev = 1.234, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2593143492746027;  // std dev = 6.221, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16510362701131293;  // std dev = 4.645, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24635573236880834;  // std dev = 4.302, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0514243422155986;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820737;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.0278321495815081;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.3192945767283556;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1442419755472979;  // std dev = 6.204, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041621302877510764;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2283906622842639;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09335578437677157;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.27370833184939836;  // std dev = 4.123, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.10677325707637508;  // std dev = 2.874, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.09192763723756966;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.10834927588081435;  // std dev = 6.204, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03471874332830461;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.07583294993931636;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01920436188554127;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07043161645838363;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.056077349411044475;  // std dev = 4.640, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.12176232975609112;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02661441193730459;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17192093335745545;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.011338247714681978;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08568087954252014;  // std dev = 0.014, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05323422413304567;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.033484212353199184;  // std dev = 4.635, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.10135152418810202;  // std dev = 4.292, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.02203779887415814;  // std dev = 7.501, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.13234706229860305;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.009708368605760204;  // std dev = 5.416, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07920364750921868;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040125251003341;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.024725346246289994;  // std dev = 4.630, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.07771830079076136;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.016340951009342325;  // std dev = 7.487, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1273916462825766;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0064995990774559705;  // std dev = 5.417, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07361726729733353;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
Inference time using transfer learning 1.5046215057373047
Refined model CLL: -0.673402


******************************************
Best model found
******************************************
Results 

CLL : -0.603918 

AUC ROC : 0.558131 

AUC PR : 0.252053 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 596.7670783996582 

Total Inference Time : 4.242153644561768 

Total revision time: 605.7287471294403
Best scored revision CLL: -0.673402


Results 

CLL : -0.603918 

AUC ROC : 0.558131 

AUC PR : 0.252053 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 605.7451267242432 

Total Inference Time : 4.242153644561768 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.200354814529419
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7762463092803955
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 882.4131586551666
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21829238097522888;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.12470259009449203;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.015535706605315761;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03670557311714254;  // std dev = 6.441, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.38576443858749054;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.06533753364830068;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.18374639001382412;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.1081474014779304;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06960532368518532;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.013601092145752376;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03206846661555793;  // std dev = 6.441, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.152276589807584;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10752739198861762;  // std dev = 3.494, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.0719784374864968;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.00922804338257472;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029954988441400092;  // std dev = 6.428, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12331415249262853;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0920605661059543;  // std dev = 3.492, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06336454572997306;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.008040659727479601;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.026041952290643336;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09831893002240816;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08556442753367458;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06950164900142872;  // std dev = 1.367, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.006980288529870418;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.022254102203688175;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07745921588981414;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.20282507007708508;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.006641784785081463;  // std dev = 3.396, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0060720134153093245;  // std dev = 7.776, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.019240165873232982;  // std dev = 6.419, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2579383897758401;  // std dev = 4.324, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.05506898787944292;  // std dev = 4.550, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.028516999507296435;  // std dev = 5.797, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.060688018985218785;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( author(L, K), venue(L, A) )
%   | | | then return 0.2039767452696913;  // std dev = 1.564, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005931366379501029;  // std dev = 3.387, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0031123665669664236;  // std dev = 7.775, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.0188191991058516;  // std dev = 6.414, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.04688219236212473;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.0652837604668752;  // std dev = 3.469, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07007313263976268;  // std dev = 1.341, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.0036531688022794356;  // std dev = 7.774, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015550730316219162;  // std dev = 6.415, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.03084697533431027;  // std dev = 34.246, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04598536185203372;  // std dev = 8.392, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11342108403065007;  // std dev = 4.675, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03696836063995028;  // std dev = 8.106, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0649447155048227;  // std dev = 7.100, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.10455243220786352;  // std dev = 1.683, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.4600410047325547;  // std dev = 2.571, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.1662735364385342;  // std dev = 0.134, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4019389152526855
Refined model CLL: -0.640509


******************************************
Best model found
******************************************
Results 

CLL : -0.678236 

AUC ROC : 0.543589 

AUC PR : 0.457653 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 882.4131586551666 

Total Inference Time : 5.9801435470581055 

Total revision time: 893.8451251983643
Best scored revision CLL: -0.640509


Results 

CLL : -0.678236 

AUC ROC : 0.543589 

AUC PR : 0.457653 

Precision : nan 

Recall : 0.0 

F1 : nan 

Total Learning Time : 893.8615047931671 

Total Inference Time : 5.9801435470581055 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.984566926956177
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7498009204864502
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1023.6342368125916
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.22710819619137584;  // std dev = 37.572, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.035677024987153;  // std dev = 8.061, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 0.0021489350995115234;  // std dev = 5.551, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1982444764245991;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.18034215864680464;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.30463403419907914;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.446408274938219;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.01408015333877792;  // std dev = 7.226, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08413167004780364;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.002751008364389228;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.14211285473534627;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16823049603213017;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15203964224960706;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.06421896856598303;  // std dev = 1.657, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.030425502596377944;  // std dev = 8.051, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0024076568830899317;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1256518203747454;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.13976813892818155;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12655794032952677;  // std dev = 8.210, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1835423643603245;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.058871694308614435;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05879064361752442;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02095593496005911;  // std dev = 9.626, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11410639824176573;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10285917319625697;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488158;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844113;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.0518664555544372;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.05193508743851534;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.01827617960044211;  // std dev = 9.626, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09177791872787606;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.0830999532285044;  // std dev = 8.214, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.095264613269977;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766648;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04600081017109503;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02315434486987351;  // std dev = 8.044, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006164362356811921;  // std dev = 5.541, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07300823181004858;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06579290842891679;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158745;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441784;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005882036747834248;  // std dev = 7.204, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07129000607819236;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.006246691207037498;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11582772286647801;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.16679089157189322;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.05706238169507795;  // std dev = 37.571, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946214;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005127161699097078;  // std dev = 7.204, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06154755518390892;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005430422815415619;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10448310439289077;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04512519800903662;  // std dev = 36.702, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03951908562613236;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03195107228254382;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817365;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004466644241064184;  // std dev = 7.204, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05275772364623619;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.004723676255370173;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09510315449276875;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03516805191586843;  // std dev = 36.702, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03060453704336905;  // std dev = 8.220, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.016733153509168184;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07331717420310017;  // std dev = 4.560, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.049973840301685016;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016393450422558332;  // std dev = 8.028, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.006770806770538372;  // std dev = 5.537, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.6247615814208984
Refined model CLL: -0.636671


******************************************
Best model found
******************************************
Results 

CLL : -0.750597 

AUC ROC : 0.642602 

AUC PR : 0.64586 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1023.6342368125916 

Total Inference Time : 24.659459114074707 

Total revision time: 1054.5504970550537
Best scored revision CLL: -0.636671


Results 

CLL : -0.750597 

AUC ROC : 0.642602 

AUC PR : 0.64586 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1054.5668766498566 

Total Inference Time : 24.659459114074707 

Run: 2

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.013761043548584
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.6819977760314941
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1011.0346896648407
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05742828982964905;  // std dev = 7.665, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.030171111907377385;  // std dev = 5.041, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1874125148267566;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40960545966947587;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13476937700759767;  // std dev = 3.364, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.032849356126780825;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.029720486965848773;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436804;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903774;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.3352913018973601;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.13182164589385853;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.080670151925637;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04638358869390877;  // std dev = 3.519, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.025954567956928902;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1130107964508383;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.458764766850876;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19126976018982192;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1098929083063803;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02422931900455784;  // std dev = 8.498, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0745656561477373;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02420350436413471;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098676;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11011378719134579;  // std dev = 4.742, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20656822120623383;  // std dev = 3.887, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10982334156617768;  // std dev = 3.353, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07484620800281397;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03124098055443247;  // std dev = 3.500, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.019190067433584177;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.6278618756409843;  // std dev = 0.235, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2758340066675068;  // std dev = 2.142, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.0770143859924339;  // std dev = 37.902, 6,009.000 (wgt'ed) examples reached here.  /* #neg=3,632 #pos=2,377 */
%   | | | else return 0.1107097937521734;  // std dev = 6.133, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.08835891470521562;  // std dev = 3.342, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01743323450125279;  // std dev = 8.490, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.016319471218981006;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.10293713734885915;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.061191798200740735;  // std dev = 37.046, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.05399852146000676;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04325580810079778;  // std dev = 4.739, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.140670165470045;  // std dev = 3.860, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0897488932966954;  // std dev = 3.347, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06789180058611459;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.01331545363542678;  // std dev = 8.473, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.017110544758486185;  // std dev = 5.773, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.0474169302711707;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04174610424230972;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.28724237379667517;  // std dev = 0.881, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.055219157782259234;  // std dev = 6.035, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.07146543048223135;  // std dev = 3.333, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.012088490155992351;  // std dev = 8.483, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10825943256870559;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.013644188023218304;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03655064717783708;  // std dev = 37.045, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03243208254077334;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.013240508330383795;  // std dev = 4.718, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09567422318311257;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.028295122369811177;  // std dev = 7.633, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.01167319036489053;  // std dev = 4.972, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09374680513417737;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.011737311404097207;  // std dev = 5.843, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.5894699096679688
Refined model CLL: -0.650202


******************************************
Best model found
******************************************
Results 

CLL : -0.624193 

AUC ROC : 0.58324 

AUC PR : 0.416793 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1011.0346896648407 

Total Inference Time : 25.365576028823853 

Total revision time: 1042.7127995491028
Best scored revision CLL: -0.650202


Results 

CLL : -0.624193 

AUC ROC : 0.58324 

AUC PR : 0.416793 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1042.7292654514313 

Total Inference Time : 25.365576028823853 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.805131435394287
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7327113151550293
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 838.3487966060638
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703922;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3250797676554728;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317664;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11168486493253202;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05972507874716161;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489885;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5163560461381885;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.29537733019571455;  // std dev = 6.190, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11331510605281292;  // std dev = 3.510, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08518211742079719;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0019283839831688784;  // std dev = 7.975, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.007181037715835245;  // std dev = 6.121, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1313659802989421;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051707;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19096778712337115;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2926699721474652;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0960169341414725;  // std dev = 3.514, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05507585797833431;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0013696306785598732;  // std dev = 7.976, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.005505612620530125;  // std dev = 6.125, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1077230198093342;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842088;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.1466944551927963;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2250884566449083;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.09741786005504506;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -4.45908600584052E-4;  // std dev = 8.025, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00745793027502122;  // std dev = 6.184, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.13986673528681387;  // std dev = 0.035, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357487;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.30776067878620206;  // std dev = 1.232, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.13110796310379394;  // std dev = 6.161, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08308197542935604;  // std dev = 3.500, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07505326043815799;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.0390708517510657;  // std dev = 3.626, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0019586156275903503;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, B) )
%   | | | then return 0.6334584353191466;  // std dev = 0.281, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3779918853647144;  // std dev = 2.003, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.06841247679702106;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.10188136469358924;  // std dev = 6.278, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.07014492012030653;  // std dev = 3.499, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06578674358369839;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return 0.03357160778553901;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017195236656153425;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05531403300947627;  // std dev = 34.979, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.05500934167147044;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04065818267857311;  // std dev = 4.425, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.11707469271907643;  // std dev = 4.439, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19475487164340385;  // std dev = 1.580, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.009484851953678519;  // std dev = 3.400, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.002713808604134665;  // std dev = 7.956, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.006320004339605447;  // std dev = 6.117, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0435759372271076;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04325029234743008;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.028307906610206532;  // std dev = 4.421, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09022616713741718;  // std dev = 4.441, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06624146531633426;  // std dev = 3.490, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0632593629704994;  // std dev = 1.339, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0024614263857757313;  // std dev = 8.007, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005962468265568367;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03415524984689589;  // std dev = 34.978, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0338171233775142;  // std dev = 8.469, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.18559414286024084;  // std dev = 1.210, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.03642028783107282;  // std dev = 6.139, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.18805913144474598;  // std dev = 1.579, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -1.8413259157833029E-4;  // std dev = 3.383, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0033729249615467934;  // std dev = 7.954, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0068312784282512405;  // std dev = 6.112, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning 2.1732401847839355
Refined model CLL: -0.621417


******************************************
Best model found
******************************************
Results 

CLL : -0.826013 

AUC ROC : 0.506008 

AUC PR : 0.608788 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 838.3487966060638 

Total Inference Time : 19.767005681991577 

Total revision time: 864.2177078723907
Best scored revision CLL: -0.621417


Results 

CLL : -0.826013 

AUC ROC : 0.506008 

AUC PR : 0.608788 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 864.2341737747192 

Total Inference Time : 19.767005681991577 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.6794159412384033
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9311301708221436
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 525.5371692180634
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.51313373820162;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.3361153135855329;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.2304859013575165;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.31038115199810845;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16605286691456164;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.2453097669842214;  // std dev = 4.296, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0514243422155987;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.06821007189820737;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.02783214958150811;  // std dev = 5.247, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12388121425857113;  // std dev = 4.644, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.18561353655659285;  // std dev = 4.302, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.04162130287751093;  // std dev = 7.527, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.22839066228426388;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07465821730094524;  // std dev = 1.346, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.021057526455510976;  // std dev = 5.246, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.28277003992396643;  // std dev = 1.201, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.10578376185783668;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03471874332830442;  // std dev = 7.525, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1797059618185123;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015948249735960762;  // std dev = 5.415, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09342649776027476;  // std dev = 0.015, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2511149923323041;  // std dev = 4.121, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.12958986850476956;  // std dev = 2.871, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06956916656562182;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.07961216062306757;  // std dev = 6.200, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.02659322878595539;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17191951349138584;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.06777294304188576;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014249584286302783;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05322122755172925;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.21185729233250084;  // std dev = 1.226, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05821264621507259;  // std dev = 6.196, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.13682433256477525;  // std dev = 2.864, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.021577358070322378;  // std dev = 7.522, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06923665802894202;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012802064843005851;  // std dev = 5.244, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.21319420544255577;  // std dev = 4.092, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.15202364290685927;  // std dev = 2.934, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.039199657666009954;  // std dev = 33.092, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04409734059244998;  // std dev = 6.196, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1315028928406824;  // std dev = 2.853, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.016676853046868834;  // std dev = 7.511, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.09260619927480306;  // std dev = 0.944, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.00715401055211501;  // std dev = 5.329, 195.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=35 */
Inference time using transfer learning 1.5902431011199951
Refined model CLL: -0.672727


******************************************
Best model found
******************************************
Results 

CLL : -0.60267 

AUC ROC : 0.559675 

AUC PR : 0.252702 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 525.5371692180634 

Total Inference Time : 4.598417043685913 

Total revision time: 535.0700595378876
Best scored revision CLL: -0.672727


Results 

CLL : -0.60267 

AUC ROC : 0.559675 

AUC PR : 0.252702 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 535.0865254402161 

Total Inference Time : 4.598417043685913 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.37685489654541
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7589766979217529
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 925.9392304420471
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.8246556810121737;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.40360304943322656;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | else return 0.2167359933379358;  // std dev = 0.488, 5,379.000 (wgt'ed) examples reached here.  /* #neg=3,270 #pos=2,109 */
%   | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | then if ( title(I, H), venue(I, A) )
%   | | | then return 0.04143619913752221;  // std dev = 7.583, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.018417041611247763;  // std dev = 3.967, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(A, J), haswordtitle(K, J) )
%   | | | then return 0.04668524590701263;  // std dev = 6.536, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14572811071849262;  // std dev = 0.035, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.18443316523915176;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.037786752607724;  // std dev = 7.590, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.021506377505530732;  // std dev = 3.958, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.04134470889181496;  // std dev = 6.526, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.1285126714540508;  // std dev = 0.031, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15229315324475232;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10706241300853521;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06645878197027776;  // std dev = 1.357, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.049465590834645495;  // std dev = 3.657, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.012901744873648646;  // std dev = 9.400, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12332832813097289;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1101681847441856;  // std dev = 3.485, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.09189692430783193;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.00780225577016432;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02524882384810483;  // std dev = 6.413, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2853375292099191;  // std dev = 4.280, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.027557793459242863;  // std dev = 4.455, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.09796051945830518;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08860857840827384;  // std dev = 3.487, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06244912013918769;  // std dev = 1.358, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.005804306993473427;  // std dev = 7.768, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023041502626889414;  // std dev = 6.420, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.077435043592268;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.09163832991417659;  // std dev = 3.475, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08343921413441856;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.004774417033599648;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01945004288076137;  // std dev = 6.403, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06046612652186433;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.19916143346610057;  // std dev = 1.572, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00842628661474702;  // std dev = 3.382, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.0033099628525819643;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01782321145990507;  // std dev = 6.408, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.22597009811685065;  // std dev = 3.696, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | | | else return -0.029531926293800026;  // std dev = 4.943, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else return 0.046668225115869544;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.06839703852462185;  // std dev = 3.470, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06429516976091229;  // std dev = 1.333, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0028715470809234614;  // std dev = 7.769, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.015359570011987714;  // std dev = 6.408, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.0309294909275692;  // std dev = 34.243, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04433934481269796;  // std dev = 8.398, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11359489743123265;  // std dev = 4.672, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03845131021804849;  // std dev = 8.100, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.22474394935425793;  // std dev = 3.234, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.4550948308558363;  // std dev = 2.553, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02090610448996168;  // std dev = 6.483, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.12499731683859477;  // std dev = 0.095, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4537081718444824
Refined model CLL: -0.640148


******************************************
Best model found
******************************************
Results 

CLL : -0.677935 

AUC ROC : 0.541369 

AUC PR : 0.454829 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 925.9392304420471 

Total Inference Time : 6.009256601333618 

Total revision time: 937.7332458496094
Best scored revision CLL: -0.640148


Results 

CLL : -0.677935 

AUC ROC : 0.541369 

AUC PR : 0.454829 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 937.7497117519379 

Total Inference Time : 6.009256601333618 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.2241528034210205
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.6768808364868164
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1062.0602271556854
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533316;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.011891393393414572;  // std dev = 7.221, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0862077043203286;  // std dev = 3.924, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0049837420996485;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651225;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496434;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.365380390989409;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.06474094755843036;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.06470460236356838;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.023722058668509197;  // std dev = 9.625, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406578;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1283611316378811;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.009229958598870483;  // std dev = 7.215, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07253910944450329;  // std dev = 3.922, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.0016361211144187073;  // std dev = 5.535, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11470334101178124;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029192;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708751;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1412868163248816;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844132;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.058500609272991985;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.024747726493143392;  // std dev = 8.040, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0027671447654935032;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.2281084052826148;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.4357791751928056;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.09068670108632794;  // std dev = 37.541, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.1418527056509816;  // std dev = 6.545, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return -0.05834652788894547;  // std dev = 1.659, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.02320980996974649;  // std dev = 8.038, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return -0.0015048066532419714;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10330369144832405;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07300286372927384;  // std dev = 36.699, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06579282616736211;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06067932412913759;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.15032151880898117;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.004014585476515959;  // std dev = 7.202, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06545132607091418;  // std dev = 3.920, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0018767031990067874;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09411901618106656;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.057536987251293865;  // std dev = 36.699, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05215194843005951;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04482125352944238;  // std dev = 4.643, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11391016838293916;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05479449464703831;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01879772986729407;  // std dev = 8.031, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0045993733604367095;  // std dev = 5.539, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.04506156904501888;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.040738129194942435;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02404436496099199;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09498632729510964;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.056261916762714026;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.04848953342114062;  // std dev = 1.662, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.012643093486976877;  // std dev = 9.608, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0350998209397278;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03192847156932486;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.016918219957477464;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.072986887129812;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.003090095577173655;  // std dev = 7.197, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.05236294704981842;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.005387480174542554;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.08703214664145367;  // std dev = 4.56e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 1.727365493774414
Refined model CLL: -0.636582


******************************************
Best model found
******************************************
Results 

CLL : -0.750027 

AUC ROC : 0.643289 

AUC PR : 0.647456 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1062.0602271556854 

Total Inference Time : 29.008056163787842 

Total revision time: 1097.568162202835
Best scored revision CLL: -0.636582


Results 

CLL : -0.750027 

AUC ROC : 0.643289 

AUC PR : 0.647456 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1097.5846281051636 

Total Inference Time : 29.008056163787842 

Run: 3

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.166736841201782
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7714385986328125
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1088.9025688171387
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.14905802600860327;  // std dev = 3.368, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.04473174432383054;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381654;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151711;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1430950943192866;  // std dev = 3.362, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.0381394404945167;  // std dev = 8.501, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.03579563578659918;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.4393880538727892;  // std dev = 1.963, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.18576455810474918;  // std dev = 37.926, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.40960545966947615;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.037112111547025095;  // std dev = 8.412, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07693231806277193;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03122601228946699;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15480115263444968;  // std dev = 37.055, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13572886531592784;  // std dev = 8.355, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903783;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735995;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03171176966373867;  // std dev = 8.409, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07208194380010914;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.026380820066897254;  // std dev = 5.927, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1252659395889595;  // std dev = 37.053, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.10922249334604663;  // std dev = 8.361, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.16116179168107536;  // std dev = 4.763, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.2558166315289217;  // std dev = 3.895, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11427650035411346;  // std dev = 3.363, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.02278863954706991;  // std dev = 8.496, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0696806403523731;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.025543663063719857;  // std dev = 5.770, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.09973751232413547;  // std dev = 37.052, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08750539274540457;  // std dev = 8.362, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4136148104086191;  // std dev = 0.897, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1407334069324418;  // std dev = 6.058, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.11072392812016425;  // std dev = 3.354, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.01872255644122564;  // std dev = 8.487, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10434979380504163;  // std dev = 0.955, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.020914215439094185;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07850386330462833;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.06850789928699298;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.35159899143938156;  // std dev = 0.883, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10391395868862374;  // std dev = 6.048, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09690000413789032;  // std dev = 3.346, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07715425302638766;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.029705049167360133;  // std dev = 3.513, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.016375744268286856;  // std dev = 9.637, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06120547171879305;  // std dev = 37.051, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.053827700885551104;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04153381569571976;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14280526817604036;  // std dev = 3.862, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.03155032953594399;  // std dev = 7.628, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.0012564498350204352;  // std dev = 5.006, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.014496702244256605;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.09311785216081452;  // std dev = 0.038, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.047428415543294154;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04158619874766474;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02893387479588656;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11139632783529028;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.03025172003631008;  // std dev = 7.639, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return -0.007022278851851222;  // std dev = 4.986, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.11084999933455204;  // std dev = 0.949, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.014369825518493836;  // std dev = 5.837, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03655852061981778;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.03231886011375467;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23816057418770886;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.0411818245026877;  // std dev = 6.026, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.088253107523069;  // std dev = 3.334, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.008380689548098806;  // std dev = 8.473, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.0831541789342319;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.012321822971248977;  // std dev = 5.764, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
Inference time using transfer learning 1.7559919357299805
Refined model CLL: -0.650292


******************************************
Best model found
******************************************
Results 

CLL : -0.624345 

AUC ROC : 0.582853 

AUC PR : 0.415218 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1088.9025688171387 

Total Inference Time : 26.065972089767456 

Total revision time: 1121.5914165973663
Best scored revision CLL: -0.650292


Results 

CLL : -0.624345 

AUC ROC : 0.582853 

AUC PR : 0.415218 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1121.6080141067505 

Total Inference Time : 26.065972089767456 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.75860071182251
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.781358003616333
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 889.3149652481079
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.003742804831313513;  // std dev = 8.058, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.00966408661466345;  // std dev = 6.179, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703942;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3250797676554728;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317653;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12691587628979487;  // std dev = 3.517, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06817424577221033;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05424854493746695;  // std dev = 3.656, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018445117067543344;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489894;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.25823475432072773;  // std dev = 4.469, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.3560556535131383;  // std dev = 4.466, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10477358559619429;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07467371586176624;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.05641701288307905;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0016194905415429185;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894198;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1338033667505171;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.4566733222366559;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.22980630946181269;  // std dev = 6.174, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08982449513508246;  // std dev = 3.515, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06546736749808243;  // std dev = 1.360, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.002021933962470312;  // std dev = 7.980, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0065730493502318636;  // std dev = 6.119, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933437;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842085;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordauthor(G, D) )
%   | | | then return 0.4924892215163548;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18146707506616144;  // std dev = 6.293, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordtitle(J, H) )
%   | | | then return 0.10322894063831173;  // std dev = 3.502, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06953067212968825;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.03172542061421917;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0018790912050748166;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0871167719635749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.10190421177394028;  // std dev = 4.440, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1793248435705624;  // std dev = 4.448, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08840716912666513;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.061199779856526276;  // std dev = 1.365, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.02711309292486707;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001649807547293524;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0696838553808178;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0708104284025158;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06690815943541824;  // std dev = 4.434, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14424067937771062;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.19812945471340815;  // std dev = 1.585, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.013627735374064478;  // std dev = 3.404, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.023097358209155355;  // std dev = 3.626, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0014487547455118;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0561304819453042;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.22657685596117746;  // std dev = 1.215, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07089109056752452;  // std dev = 6.151, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06980876050241203;  // std dev = 3.496, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.05982019999177171;  // std dev = 1.339, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.019622403712170482;  // std dev = 3.626, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0012723988750058973;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04352837330557885;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.0441511044626959;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.02897778589637175;  // std dev = 4.424, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09007875675055398;  // std dev = 4.441, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, A) )
%   | | | then return 0.1658099835906827;  // std dev = 1.589, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005371263670637908;  // std dev = 3.387, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.01663110258465162;  // std dev = 3.625, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011176615781387496;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03411263494702459;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.034594528266388876;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.01491166942831534;  // std dev = 4.421, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.07438114726847603;  // std dev = 4.438, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.1821699599158946;  // std dev = 1.577, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.006091486938143264;  // std dev = 3.391, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.018511021243537342;  // std dev = 3.603, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.818583552870877E-4;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning 2.339543342590332
Refined model CLL: -0.621815


******************************************
Best model found
******************************************
Results 

CLL : -0.826073 

AUC ROC : 0.505846 

AUC PR : 0.608624 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 889.3149652481079 

Total Inference Time : 23.802331686019897 

Total revision time: 919.2712795734406
Best scored revision CLL: -0.621815


Results 

CLL : -0.826073 

AUC ROC : 0.505846 

AUC PR : 0.608624 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 919.2878770828247 

Total Inference Time : 23.802331686019897 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.506312608718872
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9505045413970947
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 553.1719901561737
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.6984459746020693;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.34001926937474014;  // std dev = 6.348, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordvenue(B, I) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, J), haswordtitle(K, J) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.23228051201687613;  // std dev = 4.662, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3084331950271445;  // std dev = 4.299, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16705344961592367;  // std dev = 4.650, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24425728659686713;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559885;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.12540055748441292;  // std dev = 4.649, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.18407014501664665;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041033921494960206;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2284030407915789;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.27130794486557896;  // std dev = 1.194, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1065062792924547;  // std dev = 6.203, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.03421308315076533;  // std dev = 7.529, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971754005858212;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07476430958110535;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01959338027920786;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2548936570259902;  // std dev = 4.116, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.13224204425764877;  // std dev = 2.852, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.06956916656562182;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.0786096330043804;  // std dev = 6.201, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.026635846322478087;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17215955769072236;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.07879931073189124;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.015336472820549752;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.2296990591106863;  // std dev = 4.084, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.1391633877238732;  // std dev = 2.932, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05229733112579827;  // std dev = 33.092, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.05906787981958121;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.13648617685336792;  // std dev = 2.867, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.02124347329777013;  // std dev = 7.524, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06844693100475512;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013185552104504153;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040050121391235656;  // std dev = 0.499, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.01886431231812055;  // std dev = 4.638, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.08642266946877517;  // std dev = 4.293, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.017535992491505777;  // std dev = 7.483, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.12754292393108518;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07245096048564086;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.009739297642183602;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.5144941806793213
Refined model CLL: -0.672704


******************************************
Best model found
******************************************
Results 

CLL : -0.602671 

AUC ROC : 0.559582 

AUC PR : 0.252685 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 553.1719901561737 

Total Inference Time : 4.348421812057495 

Total revision time: 562.2838201522827
Best scored revision CLL: -0.672704


Results 

CLL : -0.602671 

AUC ROC : 0.559582 

AUC PR : 0.252685 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 562.3004176616669 

Total Inference Time : 4.348421812057495 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.37940788269043
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.7874066829681396
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 907.5193212032318
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4530856439602724;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.132658739021081;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.2510675953865885;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.41696005198649183;  // std dev = 4.336, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.10140239176465485;  // std dev = 4.535, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.2175284810971181;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12470259009449204;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07951514279938432;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05627664105721549;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.3477119813190451;  // std dev = 4.330, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.08640985217451966;  // std dev = 4.536, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.1838248191100234;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.10814740147793035;  // std dev = 3.505, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06960532368518532;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.048925934483807075;  // std dev = 3.650, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.01707792693870001;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15215631696959356;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.1019038718633728;  // std dev = 3.497, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07649398550675916;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.010572788794873458;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.029427202949235443;  // std dev = 6.427, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12322760751164794;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08898367421939647;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06555199038452743;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.008013212358272624;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02689588460666014;  // std dev = 6.425, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.40910573108914483;  // std dev = 2.274, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.061883890946095386;  // std dev = 5.831, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.09772890474588795;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.07518465260794158;  // std dev = 3.494, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.05798720638395068;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.00697580550000124;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.023329960748269856;  // std dev = 6.425, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07742535110282964;  // std dev = 0.487, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2028613657581645;  // std dev = 1.573, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.002858573971573238;  // std dev = 3.385, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.006068001150145456;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02018362746773498;  // std dev = 6.424, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.060468942685488185;  // std dev = 0.487, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07720358600460965;  // std dev = 3.473, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07763617999538241;  // std dev = 1.370, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.002902851718559556;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.019424728840770174;  // std dev = 6.407, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.23183768037415373;  // std dev = 3.688, 59.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=36 */
%   | | | else return -0.024703544997022625;  // std dev = 4.952, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
%   | | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | | then return 0.00877333773755634;  // std dev = 5.695, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.0476308127732491;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(A, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.06473031172761541;  // std dev = 3.471, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06806781187756188;  // std dev = 1.370, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, N), haswordtitle(P, N) )
%   | | | then return 0.0025177007007836398;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.016763696676202068;  // std dev = 6.407, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(B, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, B) )
%   | | then if ( haswordvenue(A, D) )
%   | | | then return 0.03082018479914614;  // std dev = 34.195, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.0460599031150377;  // std dev = 8.392, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, A) )
%   | | | then return -0.11289809832860222;  // std dev = 4.674, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.036653424999569646;  // std dev = 8.110, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, A) )
%   | | | then return 0.064854317507422;  // std dev = 7.105, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.10369170639257085;  // std dev = 1.680, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return 0.22405968511495397;  // std dev = 1.512, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.2502724138487175;  // std dev = 3.156, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
Inference time using transfer learning 1.417884349822998
Refined model CLL: -0.640143


******************************************
Best model found
******************************************
Results 

CLL : -0.678172 

AUC ROC : 0.54352 

AUC PR : 0.455432 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 907.5193212032318 

Total Inference Time : 6.524582386016846 

Total revision time: 919.7637226581573
Best scored revision CLL: -0.640143


Results 

CLL : -0.678172 

AUC ROC : 0.54352 

AUC PR : 0.455432 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 919.7803201675415 

Total Inference Time : 6.524582386016846 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.0485899448394775
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7031521797180176
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1070.7600076198578
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.015110960415968286;  // std dev = 7.230, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08803399257077657;  // std dev = 3.925, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.006909265678023899;  // std dev = 5.536, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1981534758553332;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.06323004872688665;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.03266670217789259;  // std dev = 8.054, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 8.100339195512082E-4;  // std dev = 5.548, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.16808795298651225;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496454;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.055596679672389133;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0285734356543569;  // std dev = 8.054, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return 7.106338708900026E-4;  // std dev = 5.548, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1396752450040655;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12836113163788107;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.30011734151408936;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04916827147944293;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.06930526531616389;  // std dev = 1.659, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.020983944988161838;  // std dev = 9.628, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.1139834107002914;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708748;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.1412868163248815;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844144;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.060663398323715534;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02772706160873802;  // std dev = 8.042, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.007653565850696051;  // std dev = 5.543, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0917038549161181;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431225;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997696;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766665;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.008235097738594826;  // std dev = 7.215, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06347922571481089;  // std dev = 3.918, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.002691257617647699;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12708300472485548;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07291392488816674;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06763151292090484;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158728;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.14041504467441787;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.035042456372680664;  // std dev = 6.060, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.003112755636062389;  // std dev = 5.537, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.002345765033779074;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11364046424044484;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.057480512491567416;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05333152949010145;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.044010483865084875;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11470565173946216;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.057850421713172645;  // std dev = 0.272, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05083631452174792;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.014074397458122018;  // std dev = 9.614, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.044998362000474496;  // std dev = 36.704, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04203080782019989;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.03195107228254376;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.08771320653817365;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05107408932431335;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.04512435862296899;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.012213044526023767;  // std dev = 9.614, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.3945355786049577;  // std dev = 2.701, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.04555063991570598;  // std dev = 4.593, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03409987605430715;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.04619596743250465;  // std dev = 6.482, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04532632233808458;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.017010110592726533;  // std dev = 8.032, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008377187023591156;  // std dev = 5.538, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.7820558547973633
Refined model CLL: -0.63608


******************************************
Best model found
******************************************
Results 

CLL : -0.752339 

AUC ROC : 0.635524 

AUC PR : 0.628715 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1070.7600076198578 

Total Inference Time : 26.482742309570312 

Total revision time: 1103.6187164783478
Best scored revision CLL: -0.63608


Results 

CLL : -0.752339 

AUC ROC : 0.635524 

AUC PR : 0.628715 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1103.635313987732 

Total Inference Time : 26.482742309570312 

Run: 4

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.02667760848999
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.7998220920562744
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1053.939104795456
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.22191983436381657;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3578878444734629;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, B) )
%   | | | then return 0.05742828982964905;  // std dev = 7.665, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.03017111190737738;  // std dev = 5.041, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675658;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292122;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.409605459669476;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1347693770075977;  // std dev = 3.364, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03284935612678086;  // std dev = 8.508, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.029720486965848763;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436793;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.21276715551903777;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735995;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( title(K, J), venue(K, A) )
%   | | | then return 0.04804640153055683;  // std dev = 7.666, 360.000 (wgt'ed) examples reached here.  /* #neg=286 #pos=74 */
%   | | | else return 0.015701141233808225;  // std dev = 5.019, 172.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=31 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.025807625902185626;  // std dev = 5.925, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.11301079645083846;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.458764766850876;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19126976018982178;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12641181844511726;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08485782953882993;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.024402623650584977;  // std dev = 8.436, 465.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=88 */
%   | | | else return 0.022837623533362862;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151824;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098666;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3876145758721107;  // std dev = 0.887, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.14205848111588734;  // std dev = 6.062, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10829553968972662;  // std dev = 3.358, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07403078638915588;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03999725770963801;  // std dev = 3.521, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.018265453320856717;  // std dev = 9.639, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07835757136245317;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012984;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07161067759080973;  // std dev = 4.729, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.1690774470660649;  // std dev = 3.878, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1038865646644299;  // std dev = 3.346, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.0157520556410772;  // std dev = 8.486, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.10065342663626761;  // std dev = 0.951, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.017021620787359033;  // std dev = 5.847, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.06110814766171408;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.055718088778832275;  // std dev = 8.366, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04145456097106737;  // std dev = 4.723, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.14287914245027306;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09171860680568181;  // std dev = 3.341, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06588698302149207;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.014151141577066567;  // std dev = 8.480, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.015059583562690604;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.047327940801264436;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04353629497715673;  // std dev = 8.367, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.02925510057299865;  // std dev = 4.722, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.11098879819010189;  // std dev = 3.861, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08534404442500437;  // std dev = 3.337, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.010644372525459085;  // std dev = 8.479, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.08362690912771172;  // std dev = 1.348, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.015400644334591521;  // std dev = 5.764, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.03649459855108205;  // std dev = 37.057, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.033566779947413916;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23955663138853173;  // std dev = 0.882, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.041108931830094696;  // std dev = 6.026, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.0710746190591751;  // std dev = 3.335, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.009098215978689064;  // std dev = 8.479, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.094190285858579;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.011799329835709515;  // std dev = 5.842, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.6480576992034912
Refined model CLL: -0.650442


******************************************
Best model found
******************************************
Results 

CLL : -0.624392 

AUC ROC : 0.582221 

AUC PR : 0.415051 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1053.939104795456 

Total Inference Time : 27.319648027420044 

Total revision time: 1087.6266984939575
Best scored revision CLL: -0.650442


Results 

CLL : -0.624392 

AUC ROC : 0.582221 

AUC PR : 0.415051 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1087.6433486938477 

Total Inference Time : 27.319648027420044 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.829731225967407
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.7335553169250488
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 958.8709988594055
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18529314619377496;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703933;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.32507976765547286;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317664;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07683979386435784;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05628962009248205;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0011903099343518006;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.16042305417489885;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.5163560461381885;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.29537733019571455;  // std dev = 6.190, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1045962743970368;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06726361331927284;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.04878299606400387;  // std dev = 3.652, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0010456166386326518;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894178;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051713;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.19096778712337117;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2926699721474652;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09797266390427664;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.0741055272961599;  // std dev = 1.364, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04066377358700953;  // std dev = 3.637, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -9.186139961084003E-4;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933452;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842077;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14669445519279628;  // std dev = 4.447, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.2250884566449084;  // std dev = 4.456, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08401745024449463;  // std dev = 3.508, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06487206449610225;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 5.361712496763536E-4;  // std dev = 7.968, 510.000 (wgt'ed) examples reached here.  /* #neg=435 #pos=75 */
%   | | | else return 0.0066330265140799845;  // std dev = 6.123, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0871167719635748;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.30412057604558485;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.1313398167815403;  // std dev = 6.161, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.08345108656030374;  // std dev = 3.501, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -9.930850752709174E-4;  // std dev = 8.018, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.0080356815223525;  // std dev = 6.183, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.1390694505918712;  // std dev = 0.019, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081763;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.06510061450512022;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14589157071327621;  // std dev = 4.445, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19523038009523666;  // std dev = 1.587, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.009576356252824148;  // std dev = 3.402, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.02544743240318647;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001217307312533597;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644025;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.056130481945304234;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.23730587675899004;  // std dev = 1.223, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07017541799371926;  // std dev = 6.145, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.06590601746889986;  // std dev = 3.498, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06207607201611376;  // std dev = 1.337, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.001766129118405429;  // std dev = 8.012, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.00662903275689463;  // std dev = 6.050, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04352837330557884;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.044151104462695955;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.028446448546266316;  // std dev = 4.418, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.09048490035333603;  // std dev = 4.443, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.16349575421810433;  // std dev = 1.591, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.002325257185081398;  // std dev = 3.386, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.021725750414045;  // std dev = 3.627, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0012409985736452644;  // std dev = 9.360, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( author(F, E), venue(F, A) )
%   | | | then return 0.5838617746071393;  // std dev = 0.330, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.33652772384645757;  // std dev = 2.006, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.03280654016373131;  // std dev = 35.908, 5,638.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,996 */
%   | | | else return 0.041235465685865676;  // std dev = 6.260, 164.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=94 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.06224612131492941;  // std dev = 3.482, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.002420569730196108;  // std dev = 8.005, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.13033275523612836;  // std dev = 0.913, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return 0.005623367598907506;  // std dev = 6.120, 298.000 (wgt'ed) examples reached here.  /* #neg=254 #pos=44 */
Inference time using transfer learning 2.264491319656372
Refined model CLL: -0.621414


******************************************
Best model found
******************************************
Results 

CLL : -0.826081 

AUC ROC : 0.506008 

AUC PR : 0.608788 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 958.8709988594055 

Total Inference Time : 20.02948570251465 

Total revision time: 985.0629842281342
Best scored revision CLL: -0.621414


Results 

CLL : -0.826081 

AUC ROC : 0.506008 

AUC PR : 0.608788 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 985.0796344280243 

Total Inference Time : 20.02948570251465 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.6504127979278564
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.9277517795562744
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 673.5509488582611
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordauthor(G, F) )
%   | | | then return 0.5132324625059773;  // std dev = 1.247, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.336109437138845;  // std dev = 6.231, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.19937367766283512;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.23079568926986865;  // std dev = 4.659, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3100575419241597;  // std dev = 4.305, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(A, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.15694231532784036;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordauthor(F, D) )
%   | | | then return 0.5108485339810799;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19954315417467483;  // std dev = 6.332, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | then if ( haswordtitle(H, I), haswordauthor(J, I) )
%   | | | then return 0.05142434221559878;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1214121850859716;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.11561040216853057;  // std dev = 4.646, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.19435617282744352;  // std dev = 4.288, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041033921494960136;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2284030407915789;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09285073212259731;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08623829024191922;  // std dev = 4.639, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.14662360864152577;  // std dev = 4.294, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.0342130831507651;  // std dev = 7.529, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971754005858212;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07476430958110533;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01959338027920787;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.07049226145065242;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.23406656044217478;  // std dev = 1.182, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.07844868807649402;  // std dev = 6.200, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026635846322478177;  // std dev = 7.502, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1721595576907224;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.07879931073189123;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.015336472820550189;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.05327696275075745;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.03430759234811961;  // std dev = 4.629, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09906082087520313;  // std dev = 4.286, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.022055446273744898;  // std dev = 7.501, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1325406664262662;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.06844693100475503;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.013185552104504138;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.040154893573991046;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.025594973068992433;  // std dev = 4.629, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.07578681916101827;  // std dev = 4.287, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordauthor(J, H) )
%   | | | then return 0.1329772195254799;  // std dev = 2.863, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.015840863910056544;  // std dev = 7.508, 311.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=83 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.07117009041717642;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.01008686345545862;  // std dev = 5.243, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.4810640811920166
Refined model CLL: -0.674051


******************************************
Best model found
******************************************
Results 

CLL : -0.605648 

AUC ROC : 0.557607 

AUC PR : 0.246183 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 673.5509488582611 

Total Inference Time : 4.611071348190308 

Total revision time: 683.0249261856079
Best scored revision CLL: -0.674051


Results 

CLL : -0.605648 

AUC ROC : 0.557607 

AUC PR : 0.246183 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 683.041576385498 

Total Inference Time : 4.611071348190308 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.383727073669434
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8301091194152832
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 857.1317374706268
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.2517856350625112;  // std dev = 0.489, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( title(G, F), venue(G, B) )
%   | | | then return 0.04548402744779789;  // std dev = 7.596, 379.000 (wgt'ed) examples reached here.  /* #neg=308 #pos=71 */
%   | | | else return -0.015090501520205963;  // std dev = 3.965, 142.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=18 */
%   | | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | | then return 0.050876207826785;  // std dev = 6.541, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4195923898729339;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.09916548493374269;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.21757434129930542;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12726628821498737;  // std dev = 3.507, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07338741184909435;  // std dev = 1.359, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.014787906388754756;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.03671555753518675;  // std dev = 6.448, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3505212086862737;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.08436181645466527;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.18386514278157123;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.12448391460410628;  // std dev = 3.495, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07853096553657793;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.05174672948615038;  // std dev = 3.644, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.015551630113056918;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15219117259058526;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10386971635759672;  // std dev = 3.498, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07167868553052857;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.0489020018789266;  // std dev = 3.639, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.013574317104381756;  // std dev = 9.406, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.12325172597946424;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10150452118471076;  // std dev = 3.486, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07557025796325065;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.007690486393683025;  // std dev = 7.773, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02584654399888891;  // std dev = 6.418, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09827748003570003;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08653065272860606;  // std dev = 3.484, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06635054412706153;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.006693363746394528;  // std dev = 7.773, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.02240219622060475;  // std dev = 6.417, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.2717086405039732;  // std dev = 4.294, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.03544838364786589;  // std dev = 4.585, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.07670120115318897;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.08256747115158099;  // std dev = 3.480, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07032892781916451;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.0045428283976725005;  // std dev = 7.772, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.020468574979506056;  // std dev = 6.409, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.06043255509012157;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.1987932817139668;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.005659384205719235;  // std dev = 3.384, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | | then return 0.004061758738498984;  // std dev = 7.774, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.01726223431830166;  // std dev = 6.408, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(G, D) )
%   | | | then return 0.3596498378190408;  // std dev = 2.272, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.010224239794533185;  // std dev = 5.826, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
%   | | else return 0.046350230869122516;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( author(J, I), venue(J, B) )
%   | | | then return 0.19776825477464052;  // std dev = 1.564, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0017531557427374305;  // std dev = 3.379, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.002328505112366598;  // std dev = 7.770, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.016567930711202074;  // std dev = 6.404, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.030875813324051125;  // std dev = 34.214, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.0446540909769153;  // std dev = 8.393, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.11309499375234144;  // std dev = 4.673, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.03909138226986316;  // std dev = 8.103, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(A, H), haswordvenue(B, H) )
%   | | then if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.23054665858154116;  // std dev = 3.237, 43.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=25 */
%   | | | else return 0.45703986639396826;  // std dev = 2.559, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.021490694142363317;  // std dev = 6.482, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.14294838312987831;  // std dev = 0.103, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.4151594638824463
Refined model CLL: -0.639571


******************************************
Best model found
******************************************
Results 

CLL : -0.677636 

AUC ROC : 0.543596 

AUC PR : 0.458812 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 857.1317374706268 

Total Inference Time : 6.168811082839966 

Total revision time: 868.92990899086
Best scored revision CLL: -0.639571


Results 

CLL : -0.677636 

AUC ROC : 0.543596 

AUC PR : 0.458812 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 868.9465591907501 

Total Inference Time : 6.168811082839966 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.046198844909668
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7145791053771973
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1068.4893922805786
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533308;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013415405271228463;  // std dev = 7.224, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08491618937816585;  // std dev = 3.923, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0036432205636573035;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1453387087638741;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865122;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496443;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.24977258149722978;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.055102718005339016;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.055647818185142535;  // std dev = 1.661, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.022694570011461416;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406564;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12836113163788107;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04874952852122367;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.027273590890787673;  // std dev = 8.050, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.0036692062007420982;  // std dev = 5.545, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029176;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708751;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488155;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.23024351682844152;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05186031936805313;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.027243667863842146;  // std dev = 8.043, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.008149398560191444;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0917038549161179;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.08453605238431222;  // std dev = 8.215, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09526461326997694;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766592;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04581439066848507;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.023299932304342075;  // std dev = 8.044, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00635607261436504;  // std dev = 5.544, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.21031066589636768;  // std dev = 1.723, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.416983540145738;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.07198665280605906;  // std dev = 37.540, 6,056.000 (wgt'ed) examples reached here.  /* #neg=3,824 #pos=2,232 */
%   | | | else return 0.10691262244843329;  // std dev = 6.532, 182.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.005994723028282344;  // std dev = 7.204, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.07132640679022963;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.005928775041788095;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.12870505962622383;  // std dev = 9.13e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.057536601184867295;  // std dev = 36.699, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.05213884027326942;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.044822977575755256;  // std dev = 4.643, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.11393988704989023;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.005225833841327879;  // std dev = 7.203, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06158062301479016;  // std dev = 3.917, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.005155278082633264;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11494844493433401;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.045061139759133215;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.04072993174270652;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0241274186079195;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09493281461918286;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.04283446697784672;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordtitle(L, K) )
%   | | | then return 0.017141497244142576;  // std dev = 8.032, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.00627083751541222;  // std dev = 5.540, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.03509963537571746;  // std dev = 36.698, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.031918918196794155;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.016920331439726197;  // std dev = 4.638, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07300356017397434;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05105144888491891;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.01825327851808521;  // std dev = 8.027, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.009685798924099837;  // std dev = 5.538, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
Inference time using transfer learning 1.7633092403411865
Refined model CLL: -0.636619


******************************************
Best model found
******************************************
Results 

CLL : -0.751366 

AUC ROC : 0.643207 

AUC PR : 0.647434 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1068.4893922805786 

Total Inference Time : 24.857850790023804 

Total revision time: 1099.6676535606384
Best scored revision CLL: -0.636619


Results 

CLL : -0.751366 

AUC ROC : 0.643207 

AUC PR : 0.647434 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1099.6843037605286 

Total Inference Time : 24.857850790023804 

Run: 5

 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 35095
Target train pos examples: 2649
Target train neg examples: 4334

Target test facts examples: 7463
Target test pos examples: 368
Target test neg examples: 688

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.010101079940796
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23749878473433458;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2060618178036594;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.17453024670666556;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1446407501339931;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11767244800090106;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09430962074455004;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.074707177635281;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05865473052223055;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04574473720619161;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03549889774086067;  // std dev = 40.548, 6,983.000 (wgt'ed) examples reached here.  /* #neg=4,334 #pos=2,649 */
Inference time using transfer learning 0.680128812789917
Parameter learned model CLL:-0.665378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [40.548, 4, 2]}]
{'': [nan, 0.23544354121679714]}
{'': [nan, 0.23544354121687253]}
{'': [nan, 0.23544354121689864]}
{'': [nan, 0.23544354121683903]}
{'': [nan, 0.2354435412168111]}
{'': [nan, 0.235443541216926]}
{'': [nan, 0.23544354121692726]}
{'': [nan, 0.23544354121684707]}
{'': [nan, 0.23544354121692693]}
{'': [nan, 0.23544354121681993]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1085.4699156284332
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2559515161947286;  // std dev = 37.062, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.23063215657601857;  // std dev = 8.346, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.4326170202058961;  // std dev = 4.794, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5724346493852271;  // std dev = 3.964, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.06760839455897227;  // std dev = 7.001, 296.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=62 */
%   | | | else return 0.04035232493002018;  // std dev = 5.930, 236.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=43 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.04190961886019546;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.2219198343638166;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.19893044877511365;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.35788784447346306;  // std dev = 4.780, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.5042038727151713;  // std dev = 3.938, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.1413166583955482;  // std dev = 3.366, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.03792704271485758;  // std dev = 8.509, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.03673101633396252;  // std dev = 5.924, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.18741251482675658;  // std dev = 37.061, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.16852367080292127;  // std dev = 8.352, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2903869442291748;  // std dev = 4.777, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.4096054596694761;  // std dev = 3.930, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.03743967424313921;  // std dev = 8.420, 458.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=88 */
%   | | | else return 0.07411654196073598;  // std dev = 3.621, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return 0.03152189158325847;  // std dev = 5.926, 234.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=43 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.15464644444436798;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.13877229675309694;  // std dev = 8.358, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.2127671555190377;  // std dev = 4.765, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.33529130189735984;  // std dev = 3.900, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.1309414728018588;  // std dev = 3.360, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.08028547316610127;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.047342332381030056;  // std dev = 3.523, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.025898333016613515;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.12507102235802825;  // std dev = 37.059, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.1130107964508383;  // std dev = 8.359, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.45876476685087614;  // std dev = 0.900, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19126976018982184;  // std dev = 6.073, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.11255487155296053;  // std dev = 3.359, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.07026317571704688;  // std dev = 1.360, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.04069619069301989;  // std dev = 3.522, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.02243465907568746;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.09961342423151819;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.08991633070098656;  // std dev = 8.363, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.11011378719134579;  // std dev = 4.742, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.20656822120623383;  // std dev = 3.887, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10488176927270547;  // std dev = 3.348, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.019581407151618383;  // std dev = 8.488, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return -0.0798049349473709;  // std dev = 1.350, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.022280186575355482;  // std dev = 5.771, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0783575713624531;  // std dev = 37.058, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.07134003523012979;  // std dev = 8.364, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.07108354374935068;  // std dev = 4.741, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.16970151290637175;  // std dev = 3.865, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09231407982564015;  // std dev = 3.350, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.06550669074068209;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.026785047772695893;  // std dev = 3.503, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.01656004276332919;  // std dev = 9.642, 622.000 (wgt'ed) examples reached here.  /* #neg=508 #pos=114 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.31878601040794846;  // std dev = 1.947, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return 0.06011284238926407;  // std dev = 37.925, 6,015.000 (wgt'ed) examples reached here.  /* #neg=3,634 #pos=2,381 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.0510782773188697;  // std dev = 4.736, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.13122514640801755;  // std dev = 3.870, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.084379228306124;  // std dev = 3.339, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.013750519424349687;  // std dev = 8.482, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.10745527750701751;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.015983980278002408;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.047437442019553425;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.04137902354893825;  // std dev = 8.369, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.3102323210097182;  // std dev = 0.879, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.05416321661878833;  // std dev = 6.026, 163.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=102 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07792087219909935;  // std dev = 3.334, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return -0.058133464952952754;  // std dev = 1.362, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.010918659657552801;  // std dev = 8.474, 473.000 (wgt'ed) examples reached here.  /* #neg=384 #pos=89 */
%   | | | else return 0.015021466886517235;  // std dev = 5.776, 224.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=41 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.0365684937293856;  // std dev = 37.050, 5,734.000 (wgt'ed) examples reached here.  /* #neg=3,453 #pos=2,281 */
%   | | | else return 0.0320996781959364;  // std dev = 8.370, 298.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=111 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.01243077831218879;  // std dev = 4.719, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.09665560224706948;  // std dev = 3.851, 77.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=55 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.06827943978048083;  // std dev = 3.331, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | | else return 0.009214358066358189;  // std dev = 8.477, 477.000 (wgt'ed) examples reached here.  /* #neg=388 #pos=89 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.09883656365039667;  // std dev = 0.947, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.012228365214251472;  // std dev = 5.846, 232.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=42 */
Inference time using transfer learning 1.7742323875427246
Refined model CLL: -0.650302


******************************************
Best model found
******************************************
Results 

CLL : -0.624501 

AUC ROC : 0.582142 

AUC PR : 0.415031 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1085.4699156284332 

Total Inference Time : 31.392231464385986 

Total revision time: 1123.3250954151154
Best scored revision CLL: -0.650302


Results 

CLL : -0.624501 

AUC ROC : 0.582142 

AUC PR : 0.415031 

Precision : 0.578947 

Recall : 0.059783 

F1 : 0.108374 

Total Learning Time : 1123.3419907093048 

Total Inference Time : 31.392231464385986 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33542
Target train pos examples: 2246
Target train neg examples: 4478

Target test facts examples: 9016
Target test pos examples: 771
Target test neg examples: 544

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.787422180175781
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.19217629976339767;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.16713638120911187;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.14258842882632106;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11954222017840668;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09871555462348185;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0804912793883634;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06495809409335633;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05199278934611344;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.041346460903546045;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03271420126321413;  // std dev = 38.675, 6,724.000 (wgt'ed) examples reached here.  /* #neg=4,478 #pos=2,246 */
Inference time using transfer learning 0.762620210647583
Parameter learned model CLL:-0.63853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [38.675, 4, 2]}]
{'': [nan, 0.22245308431952357]}
{'': [nan, 0.22245308431959404]}
{'': [nan, 0.22245308431958877]}
{'': [nan, 0.22245308431962857]}
{'': [nan, 0.22245308431955624]}
{'': [nan, 0.22245308431956373]}
{'': [nan, 0.22245308431964844]}
{'': [nan, 0.2224530843195216]}
{'': [nan, 0.22245308431962652]}
{'': [nan, 0.22245308431955077]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 987.1979937553406
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.21330135701834016;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.2171232940738674;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.6581489350995123;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.4250279159912295;  // std dev = 6.209, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.12799020494078223;  // std dev = 3.523, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06777699082641374;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001355197131893661;  // std dev = 9.363, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1852931461937749;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.18876403158703914;  // std dev = 8.473, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3250797676554729;  // std dev = 4.477, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.42515523560317653;  // std dev = 4.476, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.12034593308451501;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.002553721030826049;  // std dev = 8.045, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.008795124278655588;  // std dev = 6.182, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.14176780549653756;  // std dev = 0.020, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.15754756052067018;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.1604230541748987;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.5163560461381884;  // std dev = 1.244, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.2953773301957146;  // std dev = 6.190, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return 0.10439255773233057;  // std dev = 3.516, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return 0.0022404709672401014;  // std dev = 8.045, 522.000 (wgt'ed) examples reached here.  /* #neg=446 #pos=76 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.007715761384024318;  // std dev = 6.182, 297.000 (wgt'ed) examples reached here.  /* #neg=252 #pos=45 */
%   | | | else return -0.12538172385888194;  // std dev = 0.018, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13136598029894211;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.13380336675051696;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.19096778712337115;  // std dev = 4.449, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.29266997214746515;  // std dev = 4.458, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.10979207729791728;  // std dev = 3.511, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.06028180796854378;  // std dev = 1.363, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -6.596533328646846E-4;  // std dev = 8.027, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.006671600508914725;  // std dev = 6.044, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.10772301980933427;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.10960511197842109;  // std dev = 8.472, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.347946444286524;  // std dev = 1.236, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17681779426250524;  // std dev = 6.171, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.09447981370310544;  // std dev = 3.510, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.053433946226673606;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.03597364686114506;  // std dev = 3.645, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0021442002784021075;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.08711677196357506;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.08864762197227534;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.09999393329869383;  // std dev = 4.435, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.1810399979501142;  // std dev = 4.451, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.0803992160229347;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.04761491682602858;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -0.0010405730981048033;  // std dev = 8.024, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005883779555992282;  // std dev = 6.045, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.06968385538081835;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.07081042840251583;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.06666111637652604;  // std dev = 4.429, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.14438881126655792;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( author(K, J), venue(K, B) )
%   | | | then return 0.19690960554766496;  // std dev = 1.599, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.012041459300367326;  // std dev = 3.393, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return -9.099673839440617E-4;  // std dev = 8.024, 519.000 (wgt'ed) examples reached here.  /* #neg=443 #pos=76 */
%   | | | else return 0.005162141622826144;  // std dev = 6.045, 289.000 (wgt'ed) examples reached here.  /* #neg=246 #pos=43 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.05525671877644014;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.056130481945304234;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.04868810120070818;  // std dev = 4.427, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.10983614813723515;  // std dev = 4.446, 86.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=54 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.08324844086353293;  // std dev = 3.487, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.08539959852949686;  // std dev = 1.370, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.027457311685074422;  // std dev = 3.609, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0022470383762048483;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04352837330557889;  // std dev = 34.994, 5,347.000 (wgt'ed) examples reached here.  /* #neg=3,448 #pos=1,899 */
%   | | | else return 0.04415110446269598;  // std dev = 8.471, 312.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=112 */
%   | | else if ( haswordvenue(A, G), haswordauthor(H, G) )
%   | | | then return 0.22066082951588922;  // std dev = 1.225, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.05007408345345567;  // std dev = 6.139, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then if ( haswordtitle(K, I) )
%   | | | then return 0.07030623888290141;  // std dev = 3.485, 63.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=17 */
%   | | | else return -0.07432186814644892;  // std dev = 1.369, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( haswordvenue(A, L), haswordauthor(M, L) )
%   | | | then return 0.023417302423585418;  // std dev = 3.608, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.001972323260620299;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.3440820187365658;  // std dev = 2.003, 18.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | else return 0.03315019952908494;  // std dev = 35.925, 5,641.000 (wgt'ed) examples reached here.  /* #neg=3,642 #pos=1,999 */
%   | | else if ( haswordvenue(B, G), haswordauthor(H, G) )
%   | | | then return 0.17128847218405496;  // std dev = 1.222, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.037509327741668104;  // std dev = 6.139, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then if ( haswordauthor(J, K), haswordvenue(B, K) )
%   | | | then return -0.17568273560824021;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.03638386190894406;  // std dev = 3.735, 84.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=19 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.01925382294453325;  // std dev = 3.621, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return -0.0017315572615680605;  // std dev = 9.358, 726.000 (wgt'ed) examples reached here.  /* #neg=624 #pos=102 */
Inference time using transfer learning 2.3438947200775146
Refined model CLL: -0.621562


******************************************
Best model found
******************************************
Results 

CLL : -0.826171 

AUC ROC : 0.506545 

AUC PR : 0.609531 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 987.1979937553406 

Total Inference Time : 21.299709796905518 

Total revision time: 1014.5953974723816
Best scored revision CLL: -0.621562


Results 

CLL : -0.826171 

AUC ROC : 0.506545 

AUC PR : 0.609531 

Precision : 0.74359 

Recall : 0.037613 

F1 : 0.071605 

Total Learning Time : 1014.612292766571 

Total Inference Time : 21.299709796905518 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33252
Target train pos examples: 2436
Target train neg examples: 2800

Target test facts examples: 9306
Target test pos examples: 581
Target test neg examples: 2222

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 3.5099997520446777
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.3233895768107371;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2793007008737935;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.23328649407241175;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.18916724063245646;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1498110457236774;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11660571223754278;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08968116396383638;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06842666944178562;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.051938581046928;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.039290221911838154;  // std dev = 36.093, 5,236.000 (wgt'ed) examples reached here.  /* #neg=2,800 #pos=2,436 */
Inference time using transfer learning 0.8513188362121582
Parameter learned model CLL:-0.692509 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [36.093, 2, 2]}]
{'': [nan, 0.24879178701129595]}
{'': [nan, 0.24879178701138563]}
{'': [nan, 0.24879178701132204]}
{'': [nan, 0.24879178701131163]}
{'': [nan, 0.24879178701132562]}
{'': [nan, 0.24879178701133703]}
{'': [nan, 0.24879178701133225]}
{'': [nan, 0.24879178701133212]}
{'': [nan, 0.24879178701138097]}
{'': [nan, 0.24879178701133148]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 631.2527973651886
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.3441551545575258;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.4515555285061065;  // std dev = 4.686, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.5478041075133061;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.26604367194161876;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.0427643197148959;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.29690255138011334;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.3782052229457276;  // std dev = 4.673, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.4768288077207307;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.23047917180575014;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.037478495152011904;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.247146690498353;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.3073171177232837;  // std dev = 4.671, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.3865845097881261;  // std dev = 4.311, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.19431433795125158;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.032712942227039486;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.11231637819360636;  // std dev = 1.18e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordauthor(E, D) )
%   | | then if ( haswordtitle(F, D) )
%   | | | then return 0.7133674582047752;  // std dev = 4.21e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.48465035582335547;  // std dev = 1.227, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( haswordtitle(G, D) )
%   | | | then return 0.19798627229309015;  // std dev = 33.473, 4,486.000 (wgt'ed) examples reached here.  /* #neg=2,312 #pos=2,174 */
%   | | | else return 0.2634479061240529;  // std dev = 6.337, 175.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=111 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordvenue(B, J) )
%   | | | then return 0.1598677387926497;  // std dev = 6.059, 152.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=62 */
%   | | | else return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02845043807057543;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1569023688750241;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.16737337957816528;  // std dev = 4.652, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.24510023429956504;  // std dev = 4.301, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.05142434221559881;  // std dev = 7.567, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.23866126949591177;  // std dev = 2.938, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02466453237780332;  // std dev = 5.418, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.09269127618926096;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.1213855481706736;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordtitle(G, F) )
%   | | | then return 0.1260008290740974;  // std dev = 4.651, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.18430962119829833;  // std dev = 4.301, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.041033921494960136;  // std dev = 7.530, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.2284030407915789;  // std dev = 2.937, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.017491416206777653;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.08518475138839686;  // std dev = 8.33e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.09283448716390993;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(B, F), haswordtitle(G, F) )
%   | | | then return 0.08658523239316027;  // std dev = 4.643, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.1469098038223168;  // std dev = 4.301, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.034213083150765364;  // std dev = 7.529, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.17971754005858212;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return 0.015042597374062692;  // std dev = 5.419, 195.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=36 */
%   | | | else return -0.07877675473109172;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then return 0.0704834272716452;  // std dev = 0.500, 4,502.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,188 */
%   | | else if ( haswordvenue(A, F), haswordauthor(G, F) )
%   | | | then return 0.253918647058102;  // std dev = 1.196, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.0775344146126874;  // std dev = 6.199, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return 0.026161070506565458;  // std dev = 7.505, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1721803758904671;  // std dev = 2.935, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return -0.07792878242720495;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.015642052933666967;  // std dev = 5.241, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.43950340916392555;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.052499406844639405;  // std dev = 33.497, 4,493.000 (wgt'ed) examples reached here.  /* #neg=2,314 #pos=2,179 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.04167125669276248;  // std dev = 4.633, 91.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=54 */
%   | | | else return 0.09167441659832101;  // std dev = 4.297, 87.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=60 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.022041371738243866;  // std dev = 7.501, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1326213515729251;  // std dev = 2.934, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(A, M), haswordauthor(N, M) )
%   | | | then return -0.0793494432462467;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.014293238860480324;  // std dev = 5.241, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E) )
%   | | | then return 0.1999845642499904;  // std dev = 4.002, 78.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=53 */
%   | | | else return -0.17227822879645918;  // std dev = 2.791, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.03978926967965929;  // std dev = 33.118, 4,391.000 (wgt'ed) examples reached here.  /* #neg=2,261 #pos=2,130 */
%   | | | else return 0.04080078723214856;  // std dev = 6.191, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.016506194708001777;  // std dev = 7.487, 312.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=80 */
%   | | | else return 0.1273981105796847;  // std dev = 2.933, 35.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=18 */
%   | | else if ( haswordvenue(B, M), haswordauthor(N, M) )
%   | | | then return -0.0705076836026735;  // std dev = 1.345, 24.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=2 */
%   | | | else return 0.010351761829593097;  // std dev = 5.242, 185.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=34 */
Inference time using transfer learning 1.5629491806030273
Refined model CLL: -0.672772


******************************************
Best model found
******************************************
Results 

CLL : -0.603563 

AUC ROC : 0.560146 

AUC PR : 0.254265 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 631.2527973651886 

Total Inference Time : 4.948420763015747 

Total revision time: 640.9583013057709
Best scored revision CLL: -0.672772


Results 

CLL : -0.603563 

AUC ROC : 0.560146 

AUC PR : 0.254265 

Precision : 0.473684 

Recall : 0.030981 

F1 : 0.058158 

Total Learning Time : 640.9751965999603 

Total Inference Time : 4.948420763015747 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 34429
Target train pos examples: 2270
Target train neg examples: 3954

Target test facts examples: 8129
Target test pos examples: 747
Target test neg examples: 1068

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 4.521407842636108
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.22286615874989274;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1935154405685214;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1642887262433117;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13666278671669155;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.11171555888479459;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09002630084157656;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0717310965916087;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05665493302668148;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.044448905993106524;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03469622643034082;  // std dev = 37.975, 6,224.000 (wgt'ed) examples reached here.  /* #neg=3,954 #pos=2,270 */
Inference time using transfer learning 0.8133249282836914
Parameter learned model CLL:-0.657691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [37.975, 3, 2]}]
{'': [nan, 0.2316985704230787]}
{'': [nan, 0.23169857042309244]}
{'': [nan, 0.23169857042312694]}
{'': [nan, 0.23169857042310815]}
{'': [nan, 0.23169857042316017]}
{'': [nan, 0.23169857042318218]}
{'': [nan, 0.23169857042308678]}
{'': [nan, 0.23169857042320033]}
{'': [nan, 0.2316985704231533]}
{'': [nan, 0.23169857042309308]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 972.8336410522461
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.4530856439602724;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.132658739021081;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.2510675953865885;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(A, H), haswordauthor(I, H) )
%   | | then if ( haswordauthor(I, J), haswordtitle(K, J) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07042249347191638;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, L), haswordauthor(M, L) )
%   | | | then return 0.06546600827024408;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.022235622406012474;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.21825179463547348;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.11545680573570644;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06206427265859217;  // std dev = 1.363, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | | then return 0.057308522353587604;  // std dev = 3.671, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.0195072795646717;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, E), haswordtitle(G, D) )
%   | | | then return 0.3505287039542607;  // std dev = 4.363, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return 0.08436806633674541;  // std dev = 4.507, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.15937424600391736;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.18460586437573223;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.11767149769024589;  // std dev = 3.499, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.08788879413761608;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordtitle(P, N) )
%   | | | then return 0.012866519535122752;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.032729645509993674;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.15219654767472818;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.10150859763217417;  // std dev = 3.498, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07646903290908726;  // std dev = 1.366, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | | then return 0.011241636358751639;  // std dev = 7.777, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.028512322326896943;  // std dev = 6.429, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, A) )
%   | | | then return 0.2827600119699133;  // std dev = 3.598, 61.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=36 */
%   | | | else return 0.05701263583354868;  // std dev = 5.113, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
%   | | else if ( haswordvenue(B, H), haswordauthor(I, H) )
%   | | | then return 0.1032202188390809;  // std dev = 5.947, 152.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=56 */
%   | | | else return 0.12350592913754935;  // std dev = 34.798, 5,073.000 (wgt'ed) examples reached here.  /* #neg=3,076 #pos=1,997 */
%   | else if ( haswordvenue(B, J), haswordauthor(K, J) )
%   | | then if ( haswordauthor(K, L), haswordtitle(M, L) )
%   | | | then return 0.08652879652687655;  // std dev = 3.497, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.06709102118190259;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, N), haswordauthor(P, N) )
%   | | | then return 0.03972525383350454;  // std dev = 3.631, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.012469359560779608;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.09824025375661256;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.07298703535036145;  // std dev = 3.496, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.059278774638501064;  // std dev = 1.365, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | | then return 0.034131969745710464;  // std dev = 3.630, 82.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=17 */
%   | | | else return 0.010858518631650374;  // std dev = 9.413, 646.000 (wgt'ed) examples reached here.  /* #neg=540 #pos=106 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.07740985184465952;  // std dev = 0.488, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordauthor(F, E) )
%   | | then if ( haswordauthor(F, G), haswordtitle(H, G) )
%   | | | then return 0.08150748714191;  // std dev = 3.481, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return -0.07373021555469551;  // std dev = 1.368, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.003964137942107583;  // std dev = 7.779, 449.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=72 */
%   | | | else return 0.021628780835189796;  // std dev = 6.410, 279.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=51 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( haswordtitle(G, D), haswordtitle(G, E) )
%   | | | then return 0.2631579190326529;  // std dev = 4.294, 79.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
%   | | | else return -0.04313510258707951;  // std dev = 4.581, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
%   | | else return 0.059412237088709664;  // std dev = 0.488, 5,225.000 (wgt'ed) examples reached here.  /* #neg=3,172 #pos=2,053 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( haswordtitle(I, J), haswordauthor(K, J) )
%   | | | then return -0.0018015307406471998;  // std dev = 7.674, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.07518754951421674;  // std dev = 3.732, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(A, L), haswordtitle(M, L) )
%   | | | then return 0.02791078695339766;  // std dev = 6.483, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.16121914078566726;  // std dev = 0.132, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordtitle(E, D) )
%   | then if ( title(F, E), venue(F, A) )
%   | | then if ( haswordvenue(B, D) )
%   | | | then return 0.04139872009119172;  // std dev = 34.212, 4,955.000 (wgt'ed) examples reached here.  /* #neg=3,030 #pos=1,925 */
%   | | | else return 0.04694358315986881;  // std dev = 8.394, 425.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=100 */
%   | | else if ( title(G, E), venue(G, B) )
%   | | | then return -0.10348643934203894;  // std dev = 4.671, 127.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=28 */
%   | | | else return 0.04287989610835222;  // std dev = 8.124, 335.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=105 */
%   | else if ( haswordvenue(B, H), haswordtitle(I, H) )
%   | | then if ( title(J, I), venue(J, B) )
%   | | | then return 0.0702188352335461;  // std dev = 7.132, 293.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=75 */
%   | | | else return -0.09887938325109764;  // std dev = 1.674, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordvenue(B, K) )
%   | | | then return 0.47549643585361523;  // std dev = 2.589, 42.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return -0.14069730410348089;  // std dev = 0.118, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then return 0.0372972017439583;  // std dev = 0.487, 5,406.000 (wgt'ed) examples reached here.  /* #neg=3,278 #pos=2,128 */
%   | else if ( haswordvenue(A, E), haswordtitle(F, E) )
%   | | then if ( haswordtitle(F, G), haswordauthor(H, G) )
%   | | | then return -0.011061848341108687;  // std dev = 7.648, 443.000 (wgt'ed) examples reached here.  /* #neg=372 #pos=71 */
%   | | | else return 0.06964242592394614;  // std dev = 3.743, 78.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=18 */
%   | | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | | then return 0.018566372614023018;  // std dev = 6.485, 275.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=53 */
%   | | | else return -0.12460743020206419;  // std dev = 0.107, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
Inference time using transfer learning 1.3303582668304443
Refined model CLL: -0.639687


******************************************
Best model found
******************************************
Results 

CLL : -0.677879 

AUC ROC : 0.543693 

AUC PR : 0.457095 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 972.8336410522461 

Total Inference Time : 7.003409385681152 

Total revision time: 985.8038284778595
Best scored revision CLL: -0.639687


Results 

CLL : -0.677879 

AUC ROC : 0.543693 

AUC PR : 0.457095 

Precision : 1.0 

Recall : 0.001339 

F1 : 0.002674 

Total Learning Time : 985.820723772049 

Total Inference Time : 7.003409385681152 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 33914
Target train pos examples: 2467
Target train neg examples: 4522

Target test facts examples: 8644
Target test pos examples: 550
Target test neg examples: 500

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;workedunder(A, B) :- director(B), actor(A).;true;false
0;true;movie(C, A), movie(C, B).;false;false
1;;workedunder(A, B) :- director(B), actor(A).;true;false
1;true;movie(C, A), movie(C, B).;false;false
2;;workedunder(A, B) :- director(B), actor(A).;true;false
2;true;movie(C, A), movie(C, B).;false;false
3;;workedunder(A, B) :- actor(A), director(B).;true;false
3;true;movie(C, A), movie(C, B).;false;false
4;;workedunder(A, B) :- director(B), actor(A).;true;false
4;true;movie(C, A), movie(C, B).;false;false
5;;workedunder(A, B) :- actor(A), director(B).;true;false
5;true;movie(C, A), movie(C, B).;false;false
6;;workedunder(A, B) :- director(B), actor(A).;true;false
6;true;movie(C, A), movie(C, B).;false;false
7;;workedunder(A, B) :- actor(A), director(B).;true;false
7;true;movie(C, A), movie(C, B).;false;false
8;;workedunder(A, B) :- director(B), actor(A).;true;false
8;true;movie(C, A), movie(C, B).;false;false
9;;workedunder(A, B) :- actor(A), director(B).;true;false
9;true;movie(C, A), movie(C, B).;false;false


Model training time 5.183291673660278
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.2111321945071477;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.1834400110087453;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.15602704447107354;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.13017937030369744;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.10682752122740194;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08647162920053506;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06923052182131084;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0549522535276705;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.043329703588355264;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03399163325643134;  // std dev = 39.952, 6,989.000 (wgt'ed) examples reached here.  /* #neg=4,522 #pos=2,467 */
Inference time using transfer learning 0.7560887336730957
Parameter learned model CLL:-0.650857 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['samevenue(A, B)', {'': 'sameauthor(C, A), sameauthor(C, B)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
['samevenue(A, B)', {'': 'sameauthor(A, C), sameauthor(B, C)'}, {'true': [0.0, 0, 0], 'false': [39.952, 4, 2]}]
{'': [nan, 0.22838607798553479]}
{'': [nan, 0.22838607798557076]}
{'': [nan, 0.2283860779855225]}
{'': [nan, 0.22838607798565272]}
{'': [nan, 0.22838607798564442]}
{'': [nan, 0.22838607798554508]}
{'': [nan, 0.2283860779856207]}
{'': [nan, 0.22838607798554997]}
{'': [nan, 0.22838607798564564]}
{'': [nan, 0.22838607798561553]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;samevenue(A, B) :- sameauthor(C, A), sameauthor(C, B).;true;true
1;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
2;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
3;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
4;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
5;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
6;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
7;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
8;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true
9;;samevenue(A, B) :- sameauthor(A, C), sameauthor(B, C).;true;true


Refining candidate
***************************
Model training time 1103.5741980075836
WILL Produced-Tree #1
% FOR samevenue(A, B):
%   if ( sameauthor(C, A), sameauthor(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.2282181392517563;  // std dev = 36.707, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.21069130798086477;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.3695125714631494;  // std dev = 4.689, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.5070851053122791;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.0607699838194067;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.0607699838194067;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.02836170105695747;  // std dev = 9.640, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #2
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.19815347585533308;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.1821443572831206;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.3046340341990792;  // std dev = 4.674, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.4464082749382189;  // std dev = 4.609, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.013415405271228491;  // std dev = 7.224, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.08491618937816585;  // std dev = 3.923, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return 0.0036432205636573035;  // std dev = 5.534, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.1453387087638741;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.1680879529865122;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.15483203266496448;  // std dev = 8.209, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.2497725814972297;  // std dev = 4.671, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3653803909894089;  // std dev = 4.604, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.05564781818514252;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(A, K), haswordauthor(L, K) )
%   | | | then return -0.055102718005339016;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.022694570011461555;  // std dev = 9.632, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #4
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.13967524500406556;  // std dev = 36.706, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.12836113163788107;  // std dev = 8.212, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.18354236436032442;  // std dev = 4.656, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.3001173415140894;  // std dev = 4.585, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordauthor(J, I) )
%   | | then return -0.04921156537568642;  // std dev = 0.273, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordtitle(L, K) )
%   | | | then return 0.02802791100827845;  // std dev = 8.048, 445.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=79 */
%   | | | else return -0.004943514555415213;  // std dev = 5.546, 250.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=36 */
WILL Produced-Tree #5
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.11398341070029153;  // std dev = 36.705, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.10525038208708751;  // std dev = 8.213, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.14128681632488152;  // std dev = 4.654, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.2302435168284414;  // std dev = 4.582, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 0.010099421953202875;  // std dev = 7.216, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.06803592712565962;  // std dev = 3.919, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(B, M), haswordtitle(N, M) )
%   | | | then return -0.0028639084922482323;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.13019610637379556;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #6
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( haswordauthor(F, D) )
%   | | | then return 0.22810840528261497;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.09108512551627126;  // std dev = 37.571, 6,063.000 (wgt'ed) examples reached here.  /* #neg=3,826 #pos=2,237 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.0952646132699769;  // std dev = 4.645, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.18546709000766637;  // std dev = 4.571, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03876010401353067;  // std dev = 6.061, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.0026195704662309804;  // std dev = 5.538, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0024959274720222227;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.11614823911317752;  // std dev = 6.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #7
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.07301262378382349;  // std dev = 36.703, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.06571308222372081;  // std dev = 8.216, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.07112594416158724;  // std dev = 4.644, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.1404150446744179;  // std dev = 4.570, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordvenue(B, K) )
%   | | | then return 0.03363924662929574;  // std dev = 6.061, 238.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=46 */
%   | | | else return -0.002285618855566922;  // std dev = 5.538, 244.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=36 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.0021758267174987926;  // std dev = 5.532, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.10474588814992189;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordvenue(B, E), haswordauthor(F, E) )
%   | | then if ( author(G, F), venue(G, B) )
%   | | | then return 0.41545405293282367;  // std dev = 2.696, 37.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=27 */
%   | | | else return -0.026130334561198114;  // std dev = 4.586, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
%   | | else if ( haswordtitle(H, D) )
%   | | | then return 0.05648984461728814;  // std dev = 37.166, 5,937.000 (wgt'ed) examples reached here.  /* #neg=3,750 #pos=2,187 */
%   | | | else return 0.08092694290295266;  // std dev = 6.494, 180.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=105 */
%   | else if ( haswordvenue(A, I), haswordauthor(J, I) )
%   | | then return -0.05975261492595838;  // std dev = 0.272, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | else if ( haswordvenue(B, K), haswordauthor(L, K) )
%   | | | then return -0.05200396032018615;  // std dev = 1.660, 37.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=3 */
%   | | | else return 0.014207723456336077;  // std dev = 9.613, 658.000 (wgt'ed) examples reached here.  /* #neg=546 #pos=112 */
WILL Produced-Tree #9
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, B) )
%   | | | then return 0.04504222759504671;  // std dev = 36.673, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.040454436468952956;  // std dev = 8.217, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(B, G), haswordtitle(H, G) )
%   | | | then return 0.024621004465972925;  // std dev = 4.639, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.09483781074317822;  // std dev = 4.564, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(A, I), haswordtitle(J, I) )
%   | | then if ( haswordauthor(K, I) )
%   | | | then return -0.05071723285057893;  // std dev = 1.656, 36.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=3 */
%   | | | else return 0.017762905471188927;  // std dev = 8.033, 446.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=79 */
%   | | else if ( haswordvenue(B, L), haswordtitle(M, L) )
%   | | | then return -0.003579134584332624;  // std dev = 5.531, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.09655447461940231;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #10
% FOR samevenue(A, B):
%   if ( sameauthor(A, C), sameauthor(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( haswordvenue(A, D), haswordvenue(B, D) )
%   | then if ( haswordtitle(E, D) )
%   | | then if ( title(F, E), venue(F, A) )
%   | | | then return 0.035101122668890955;  // std dev = 36.672, 5,780.000 (wgt'ed) examples reached here.  /* #neg=3,641 #pos=2,139 */
%   | | | else return 0.03141407964529361;  // std dev = 8.218, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
%   | | else if ( haswordvenue(A, G), haswordtitle(H, G) )
%   | | | then return 0.017105390328798716;  // std dev = 4.635, 88.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=45 */
%   | | | else return 0.07310826733652415;  // std dev = 4.567, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( haswordvenue(B, I), haswordtitle(J, I) )
%   | | then if ( haswordtitle(J, K), haswordauthor(L, K) )
%   | | | then return 4.124329302509948E-4;  // std dev = 7.194, 395.000 (wgt'ed) examples reached here.  /* #neg=333 #pos=62 */
%   | | | else return 0.0627492477774678;  // std dev = 3.916, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | | else if ( haswordvenue(A, M), haswordtitle(N, M) )
%   | | | then return -0.004702422957368371;  // std dev = 5.533, 242.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=36 */
%   | | | else return -0.0884537161175388;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning 1.7155563831329346
Refined model CLL: -0.636005


******************************************
Best model found
******************************************
Results 

CLL : -0.751023 

AUC ROC : 0.639878 

AUC PR : 0.633304 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1103.5741980075836 

Total Inference Time : 28.109434366226196 

Total revision time: 1138.1927270889282
Best scored revision CLL: -0.636005


Results 

CLL : -0.751023 

AUC ROC : 0.639878 

AUC PR : 0.633304 

Precision : 0.870968 

Recall : 0.049091 

F1 : 0.092943 

Total Learning Time : 1138.2096223831177 

Total Inference Time : 28.109434366226196 

